/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self['webpackChunk_deriv_wallets'] = self['webpackChunk_deriv_wallets'] || []).push([
    ['vendors-node_modules_react-joyride_dist_index_mjs'],
    {
        /***/ '../../node_modules/deepmerge/dist/cjs.js':
            /*!************************************************!*\
  !*** ../../node_modules/deepmerge/dist/cjs.js ***!
  \************************************************/
            /***/ module => {
                'use strict';
                eval(
                    "\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn Object.propertyIsEnumerable.call(target, symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL2RlZXBtZXJnZS9kaXN0L2Nqcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi93YWxsZXRzLy4uLy4uL25vZGVfbW9kdWxlcy9kZWVwbWVyZ2UvZGlzdC9janMuanM/NWFkMSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBpc01lcmdlYWJsZU9iamVjdCA9IGZ1bmN0aW9uIGlzTWVyZ2VhYmxlT2JqZWN0KHZhbHVlKSB7XG5cdHJldHVybiBpc05vbk51bGxPYmplY3QodmFsdWUpXG5cdFx0JiYgIWlzU3BlY2lhbCh2YWx1ZSlcbn07XG5cbmZ1bmN0aW9uIGlzTm9uTnVsbE9iamVjdCh2YWx1ZSkge1xuXHRyZXR1cm4gISF2YWx1ZSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnXG59XG5cbmZ1bmN0aW9uIGlzU3BlY2lhbCh2YWx1ZSkge1xuXHR2YXIgc3RyaW5nVmFsdWUgPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodmFsdWUpO1xuXG5cdHJldHVybiBzdHJpbmdWYWx1ZSA9PT0gJ1tvYmplY3QgUmVnRXhwXSdcblx0XHR8fCBzdHJpbmdWYWx1ZSA9PT0gJ1tvYmplY3QgRGF0ZV0nXG5cdFx0fHwgaXNSZWFjdEVsZW1lbnQodmFsdWUpXG59XG5cbi8vIHNlZSBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svcmVhY3QvYmxvYi9iNWFjOTYzZmI3OTFkMTI5OGU3ZjM5NjIzNjM4M2JjOTU1ZjkxNmMxL3NyYy9pc29tb3JwaGljL2NsYXNzaWMvZWxlbWVudC9SZWFjdEVsZW1lbnQuanMjTDIxLUwyNVxudmFyIGNhblVzZVN5bWJvbCA9IHR5cGVvZiBTeW1ib2wgPT09ICdmdW5jdGlvbicgJiYgU3ltYm9sLmZvcjtcbnZhciBSRUFDVF9FTEVNRU5UX1RZUEUgPSBjYW5Vc2VTeW1ib2wgPyBTeW1ib2wuZm9yKCdyZWFjdC5lbGVtZW50JykgOiAweGVhYzc7XG5cbmZ1bmN0aW9uIGlzUmVhY3RFbGVtZW50KHZhbHVlKSB7XG5cdHJldHVybiB2YWx1ZS4kJHR5cGVvZiA9PT0gUkVBQ1RfRUxFTUVOVF9UWVBFXG59XG5cbmZ1bmN0aW9uIGVtcHR5VGFyZ2V0KHZhbCkge1xuXHRyZXR1cm4gQXJyYXkuaXNBcnJheSh2YWwpID8gW10gOiB7fVxufVxuXG5mdW5jdGlvbiBjbG9uZVVubGVzc090aGVyd2lzZVNwZWNpZmllZCh2YWx1ZSwgb3B0aW9ucykge1xuXHRyZXR1cm4gKG9wdGlvbnMuY2xvbmUgIT09IGZhbHNlICYmIG9wdGlvbnMuaXNNZXJnZWFibGVPYmplY3QodmFsdWUpKVxuXHRcdD8gZGVlcG1lcmdlKGVtcHR5VGFyZ2V0KHZhbHVlKSwgdmFsdWUsIG9wdGlvbnMpXG5cdFx0OiB2YWx1ZVxufVxuXG5mdW5jdGlvbiBkZWZhdWx0QXJyYXlNZXJnZSh0YXJnZXQsIHNvdXJjZSwgb3B0aW9ucykge1xuXHRyZXR1cm4gdGFyZ2V0LmNvbmNhdChzb3VyY2UpLm1hcChmdW5jdGlvbihlbGVtZW50KSB7XG5cdFx0cmV0dXJuIGNsb25lVW5sZXNzT3RoZXJ3aXNlU3BlY2lmaWVkKGVsZW1lbnQsIG9wdGlvbnMpXG5cdH0pXG59XG5cbmZ1bmN0aW9uIGdldE1lcmdlRnVuY3Rpb24oa2V5LCBvcHRpb25zKSB7XG5cdGlmICghb3B0aW9ucy5jdXN0b21NZXJnZSkge1xuXHRcdHJldHVybiBkZWVwbWVyZ2Vcblx0fVxuXHR2YXIgY3VzdG9tTWVyZ2UgPSBvcHRpb25zLmN1c3RvbU1lcmdlKGtleSk7XG5cdHJldHVybiB0eXBlb2YgY3VzdG9tTWVyZ2UgPT09ICdmdW5jdGlvbicgPyBjdXN0b21NZXJnZSA6IGRlZXBtZXJnZVxufVxuXG5mdW5jdGlvbiBnZXRFbnVtZXJhYmxlT3duUHJvcGVydHlTeW1ib2xzKHRhcmdldCkge1xuXHRyZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9sc1xuXHRcdD8gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyh0YXJnZXQpLmZpbHRlcihmdW5jdGlvbihzeW1ib2wpIHtcblx0XHRcdHJldHVybiBPYmplY3QucHJvcGVydHlJc0VudW1lcmFibGUuY2FsbCh0YXJnZXQsIHN5bWJvbClcblx0XHR9KVxuXHRcdDogW11cbn1cblxuZnVuY3Rpb24gZ2V0S2V5cyh0YXJnZXQpIHtcblx0cmV0dXJuIE9iamVjdC5rZXlzKHRhcmdldCkuY29uY2F0KGdldEVudW1lcmFibGVPd25Qcm9wZXJ0eVN5bWJvbHModGFyZ2V0KSlcbn1cblxuZnVuY3Rpb24gcHJvcGVydHlJc09uT2JqZWN0KG9iamVjdCwgcHJvcGVydHkpIHtcblx0dHJ5IHtcblx0XHRyZXR1cm4gcHJvcGVydHkgaW4gb2JqZWN0XG5cdH0gY2F0Y2goXykge1xuXHRcdHJldHVybiBmYWxzZVxuXHR9XG59XG5cbi8vIFByb3RlY3RzIGZyb20gcHJvdG90eXBlIHBvaXNvbmluZyBhbmQgdW5leHBlY3RlZCBtZXJnaW5nIHVwIHRoZSBwcm90b3R5cGUgY2hhaW4uXG5mdW5jdGlvbiBwcm9wZXJ0eUlzVW5zYWZlKHRhcmdldCwga2V5KSB7XG5cdHJldHVybiBwcm9wZXJ0eUlzT25PYmplY3QodGFyZ2V0LCBrZXkpIC8vIFByb3BlcnRpZXMgYXJlIHNhZmUgdG8gbWVyZ2UgaWYgdGhleSBkb24ndCBleGlzdCBpbiB0aGUgdGFyZ2V0IHlldCxcblx0XHQmJiAhKE9iamVjdC5oYXNPd25Qcm9wZXJ0eS5jYWxsKHRhcmdldCwga2V5KSAvLyB1bnNhZmUgaWYgdGhleSBleGlzdCB1cCB0aGUgcHJvdG90eXBlIGNoYWluLFxuXHRcdFx0JiYgT2JqZWN0LnByb3BlcnR5SXNFbnVtZXJhYmxlLmNhbGwodGFyZ2V0LCBrZXkpKSAvLyBhbmQgYWxzbyB1bnNhZmUgaWYgdGhleSdyZSBub25lbnVtZXJhYmxlLlxufVxuXG5mdW5jdGlvbiBtZXJnZU9iamVjdCh0YXJnZXQsIHNvdXJjZSwgb3B0aW9ucykge1xuXHR2YXIgZGVzdGluYXRpb24gPSB7fTtcblx0aWYgKG9wdGlvbnMuaXNNZXJnZWFibGVPYmplY3QodGFyZ2V0KSkge1xuXHRcdGdldEtleXModGFyZ2V0KS5mb3JFYWNoKGZ1bmN0aW9uKGtleSkge1xuXHRcdFx0ZGVzdGluYXRpb25ba2V5XSA9IGNsb25lVW5sZXNzT3RoZXJ3aXNlU3BlY2lmaWVkKHRhcmdldFtrZXldLCBvcHRpb25zKTtcblx0XHR9KTtcblx0fVxuXHRnZXRLZXlzKHNvdXJjZSkuZm9yRWFjaChmdW5jdGlvbihrZXkpIHtcblx0XHRpZiAocHJvcGVydHlJc1Vuc2FmZSh0YXJnZXQsIGtleSkpIHtcblx0XHRcdHJldHVyblxuXHRcdH1cblxuXHRcdGlmIChwcm9wZXJ0eUlzT25PYmplY3QodGFyZ2V0LCBrZXkpICYmIG9wdGlvbnMuaXNNZXJnZWFibGVPYmplY3Qoc291cmNlW2tleV0pKSB7XG5cdFx0XHRkZXN0aW5hdGlvbltrZXldID0gZ2V0TWVyZ2VGdW5jdGlvbihrZXksIG9wdGlvbnMpKHRhcmdldFtrZXldLCBzb3VyY2Vba2V5XSwgb3B0aW9ucyk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdGRlc3RpbmF0aW9uW2tleV0gPSBjbG9uZVVubGVzc090aGVyd2lzZVNwZWNpZmllZChzb3VyY2Vba2V5XSwgb3B0aW9ucyk7XG5cdFx0fVxuXHR9KTtcblx0cmV0dXJuIGRlc3RpbmF0aW9uXG59XG5cbmZ1bmN0aW9uIGRlZXBtZXJnZSh0YXJnZXQsIHNvdXJjZSwgb3B0aW9ucykge1xuXHRvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcblx0b3B0aW9ucy5hcnJheU1lcmdlID0gb3B0aW9ucy5hcnJheU1lcmdlIHx8IGRlZmF1bHRBcnJheU1lcmdlO1xuXHRvcHRpb25zLmlzTWVyZ2VhYmxlT2JqZWN0ID0gb3B0aW9ucy5pc01lcmdlYWJsZU9iamVjdCB8fCBpc01lcmdlYWJsZU9iamVjdDtcblx0Ly8gY2xvbmVVbmxlc3NPdGhlcndpc2VTcGVjaWZpZWQgaXMgYWRkZWQgdG8gYG9wdGlvbnNgIHNvIHRoYXQgY3VzdG9tIGFycmF5TWVyZ2UoKVxuXHQvLyBpbXBsZW1lbnRhdGlvbnMgY2FuIHVzZSBpdC4gVGhlIGNhbGxlciBtYXkgbm90IHJlcGxhY2UgaXQuXG5cdG9wdGlvbnMuY2xvbmVVbmxlc3NPdGhlcndpc2VTcGVjaWZpZWQgPSBjbG9uZVVubGVzc090aGVyd2lzZVNwZWNpZmllZDtcblxuXHR2YXIgc291cmNlSXNBcnJheSA9IEFycmF5LmlzQXJyYXkoc291cmNlKTtcblx0dmFyIHRhcmdldElzQXJyYXkgPSBBcnJheS5pc0FycmF5KHRhcmdldCk7XG5cdHZhciBzb3VyY2VBbmRUYXJnZXRUeXBlc01hdGNoID0gc291cmNlSXNBcnJheSA9PT0gdGFyZ2V0SXNBcnJheTtcblxuXHRpZiAoIXNvdXJjZUFuZFRhcmdldFR5cGVzTWF0Y2gpIHtcblx0XHRyZXR1cm4gY2xvbmVVbmxlc3NPdGhlcndpc2VTcGVjaWZpZWQoc291cmNlLCBvcHRpb25zKVxuXHR9IGVsc2UgaWYgKHNvdXJjZUlzQXJyYXkpIHtcblx0XHRyZXR1cm4gb3B0aW9ucy5hcnJheU1lcmdlKHRhcmdldCwgc291cmNlLCBvcHRpb25zKVxuXHR9IGVsc2Uge1xuXHRcdHJldHVybiBtZXJnZU9iamVjdCh0YXJnZXQsIHNvdXJjZSwgb3B0aW9ucylcblx0fVxufVxuXG5kZWVwbWVyZ2UuYWxsID0gZnVuY3Rpb24gZGVlcG1lcmdlQWxsKGFycmF5LCBvcHRpb25zKSB7XG5cdGlmICghQXJyYXkuaXNBcnJheShhcnJheSkpIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoJ2ZpcnN0IGFyZ3VtZW50IHNob3VsZCBiZSBhbiBhcnJheScpXG5cdH1cblxuXHRyZXR1cm4gYXJyYXkucmVkdWNlKGZ1bmN0aW9uKHByZXYsIG5leHQpIHtcblx0XHRyZXR1cm4gZGVlcG1lcmdlKHByZXYsIG5leHQsIG9wdGlvbnMpXG5cdH0sIHt9KVxufTtcblxudmFyIGRlZXBtZXJnZV8xID0gZGVlcG1lcmdlO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGRlZXBtZXJnZV8xO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/deepmerge/dist/cjs.js\n"
                );

                /***/
            },

        /***/ '../../node_modules/popper.js/dist/esm/popper.js':
            /*!*******************************************************!*\
  !*** ../../node_modules/popper.js/dist/esm/popper.js ***!
  \*******************************************************/
            /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    "__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**!\n * @fileOverview Kickass library to create and place poppers near their reference elements.\n * @version 1.16.1\n * @license\n * Copyright (c) 2016 Federico Zivolo and contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && typeof navigator !== 'undefined';\n\nvar timeoutDuration = function () {\n  var longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\n  for (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n    if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n      return 1;\n    }\n  }\n  return 0;\n}();\n\nfunction microtaskDebounce(fn) {\n  var called = false;\n  return function () {\n    if (called) {\n      return;\n    }\n    called = true;\n    window.Promise.resolve().then(function () {\n      called = false;\n      fn();\n    });\n  };\n}\n\nfunction taskDebounce(fn) {\n  var scheduled = false;\n  return function () {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(function () {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\nvar supportsMicroTasks = isBrowser && window.Promise;\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nvar debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;\n\n/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nfunction isFunction(functionToCheck) {\n  var getType = {};\n  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n}\n\n/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nfunction getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  var window = element.ownerDocument.defaultView;\n  var css = window.getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n\n/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nfunction getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nfunction getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body;\n  }\n\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body;\n    case '#document':\n      return element.body;\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n\n  var _getStyleComputedProp = getStyleComputedProperty(element),\n      overflow = _getStyleComputedProp.overflow,\n      overflowX = _getStyleComputedProp.overflowX,\n      overflowY = _getStyleComputedProp.overflowY;\n\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n\n/**\n * Returns the reference node of the reference object, or the reference object itself.\n * @method\n * @memberof Popper.Utils\n * @param {Element|Object} reference - the reference element (the popper will be relative to this)\n * @returns {Element} parent\n */\nfunction getReferenceNode(reference) {\n  return reference && reference.referenceNode ? reference.referenceNode : reference;\n}\n\nvar isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\nvar isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\n\n/**\n * Determines if the browser is Internet Explorer\n * @method\n * @memberof Popper.Utils\n * @param {Number} version to check\n * @returns {Boolean} isIE\n */\nfunction isIE(version) {\n  if (version === 11) {\n    return isIE11;\n  }\n  if (version === 10) {\n    return isIE10;\n  }\n  return isIE11 || isIE10;\n}\n\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nfunction getOffsetParent(element) {\n  if (!element) {\n    return document.documentElement;\n  }\n\n  var noOffsetParent = isIE(10) ? document.body : null;\n\n  // NOTE: 1 DOM access here\n  var offsetParent = element.offsetParent || null;\n  // Skip hidden elements which don't have an offsetParent\n  while (offsetParent === noOffsetParent && element.nextElementSibling) {\n    offsetParent = (element = element.nextElementSibling).offsetParent;\n  }\n\n  var nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return element ? element.ownerDocument.documentElement : document.documentElement;\n  }\n\n  // .offsetParent will return the closest TH, TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n  if (['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n\nfunction isOffsetContainer(element) {\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;\n}\n\n/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nfunction getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nfunction findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;\n  var start = order ? element1 : element2;\n  var end = order ? element2 : element1;\n\n  // Get common ancestor container\n  var range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  var commonAncestorContainer = range.commonAncestorContainer;\n\n  // Both nodes are inside #document\n\n  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  var element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n\n/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nfunction getScroll(element) {\n  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';\n\n  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    var html = element.ownerDocument.documentElement;\n    var scrollingElement = element.ownerDocument.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nfunction includeScroll(rect, element) {\n  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var scrollTop = getScroll(element, 'top');\n  var scrollLeft = getScroll(element, 'left');\n  var modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n\n/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nfunction getBordersSize(styles, axis) {\n  var sideA = axis === 'x' ? 'Left' : 'Top';\n  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return parseFloat(styles['border' + sideA + 'Width']) + parseFloat(styles['border' + sideB + 'Width']);\n}\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? parseInt(html['offset' + axis]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')]) : 0);\n}\n\nfunction getWindowSizes(document) {\n  var body = document.body;\n  var html = document.documentElement;\n  var computedStyle = isIE(10) && getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle)\n  };\n}\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\nvar defineProperty = function (obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nfunction getClientRect(offsets) {\n  return _extends({}, offsets, {\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height\n  });\n}\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nfunction getBoundingClientRect(element) {\n  var rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  try {\n    if (isIE(10)) {\n      rect = element.getBoundingClientRect();\n      var scrollTop = getScroll(element, 'top');\n      var scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    } else {\n      rect = element.getBoundingClientRect();\n    }\n  } catch (e) {}\n\n  var result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top\n  };\n\n  // subtract scrollbar size from sizes\n  var sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};\n  var width = sizes.width || element.clientWidth || result.width;\n  var height = sizes.height || element.clientHeight || result.height;\n\n  var horizScrollbar = element.offsetWidth - width;\n  var vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    var styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n\nfunction getOffsetRectRelativeToArbitraryNode(children, parent) {\n  var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var isIE10 = isIE(10);\n  var isHTML = parent.nodeName === 'HTML';\n  var childrenRect = getBoundingClientRect(children);\n  var parentRect = getBoundingClientRect(parent);\n  var scrollParent = getScrollParent(children);\n\n  var styles = getStyleComputedProperty(parent);\n  var borderTopWidth = parseFloat(styles.borderTopWidth);\n  var borderLeftWidth = parseFloat(styles.borderLeftWidth);\n\n  // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n  if (fixedPosition && isHTML) {\n    parentRect.top = Math.max(parentRect.top, 0);\n    parentRect.left = Math.max(parentRect.left, 0);\n  }\n  var offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    var marginTop = parseFloat(styles.marginTop);\n    var marginLeft = parseFloat(styles.marginLeft);\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n\nfunction getViewportOffsetRectRelativeToArtbitraryNode(element) {\n  var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var html = element.ownerDocument.documentElement;\n  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  var width = Math.max(html.clientWidth, window.innerWidth || 0);\n  var height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  var scrollTop = !excludeScroll ? getScroll(html) : 0;\n  var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n\n  var offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width: width,\n    height: height\n  };\n\n  return getClientRect(offset);\n}\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nfunction isFixed(element) {\n  var nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  var parentNode = getParentNode(element);\n  if (!parentNode) {\n    return false;\n  }\n  return isFixed(parentNode);\n}\n\n/**\n * Finds the first parent of an element that has a transformed property defined\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} first transformed parent or documentElement\n */\n\nfunction getFixedPositionOffsetParent(element) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element || !element.parentElement || isIE()) {\n    return document.documentElement;\n  }\n  var el = element.parentElement;\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n    el = el.parentElement;\n  }\n  return el || document.documentElement;\n}\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @param {Boolean} fixedPosition - Is in fixed position mode\n * @returns {Object} Coordinates of the boundaries\n */\nfunction getBoundaries(popper, reference, padding, boundariesElement) {\n  var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n  // NOTE: 1 DOM access here\n\n  var boundaries = { top: 0, left: 0 };\n  var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport') {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  } else {\n    // Handle other cases based on DOM element used as boundaries\n    var boundariesNode = void 0;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(reference));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = popper.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition);\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      var _getWindowSizes = getWindowSizes(popper.ownerDocument),\n          height = _getWindowSizes.height,\n          width = _getWindowSizes.width;\n\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  padding = padding || 0;\n  var isPaddingNumber = typeof padding === 'number';\n  boundaries.left += isPaddingNumber ? padding : padding.left || 0;\n  boundaries.top += isPaddingNumber ? padding : padding.top || 0;\n  boundaries.right -= isPaddingNumber ? padding : padding.right || 0;\n  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0;\n\n  return boundaries;\n}\n\nfunction getArea(_ref) {\n  var width = _ref.width,\n      height = _ref.height;\n\n  return width * height;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {\n  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);\n\n  var rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height\n    }\n  };\n\n  var sortedAreas = Object.keys(rects).map(function (key) {\n    return _extends({\n      key: key\n    }, rects[key], {\n      area: getArea(rects[key])\n    });\n  }).sort(function (a, b) {\n    return b.area - a.area;\n  });\n\n  var filteredAreas = sortedAreas.filter(function (_ref2) {\n    var width = _ref2.width,\n        height = _ref2.height;\n    return width >= popper.clientWidth && height >= popper.clientHeight;\n  });\n\n  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;\n\n  var variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? '-' + variation : '');\n}\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @param {Element} fixedPosition - is in fixed position mode\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nfunction getReferenceOffsets(state, popper, reference) {\n  var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n  var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n}\n\n/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nfunction getOuterSizes(element) {\n  var window = element.ownerDocument.defaultView;\n  var styles = window.getComputedStyle(element);\n  var x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);\n  var y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);\n  var result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x\n  };\n  return result;\n}\n\n/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nfunction getOppositePlacement(placement) {\n  var hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\n    return hash[matched];\n  });\n}\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nfunction getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  var popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  var popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  var mainSide = isHoriz ? 'top' : 'left';\n  var secondarySide = isHoriz ? 'left' : 'top';\n  var measurement = isHoriz ? 'height' : 'width';\n  var secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n\n/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(function (cur) {\n      return cur[prop] === value;\n    });\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  var match = find(arr, function (obj) {\n    return obj[prop] === value;\n  });\n  return arr.indexOf(match);\n}\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nfunction runModifiers(modifiers, data, ends) {\n  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(function (modifier) {\n    if (modifier['function']) {\n      // eslint-disable-line dot-notation\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n\n      data = fn(data, modifier);\n    }\n  });\n\n  return data;\n}\n\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\nfunction update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  var data = {\n    instance: this,\n    styles: {},\n    arrowStyles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {}\n  };\n\n  // compute reference element offsets\n  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);\n\n  // store the computed placement inside `originalPlacement`\n  data.originalPlacement = data.placement;\n\n  data.positionFixed = this.options.positionFixed;\n\n  // compute the popper offsets\n  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);\n\n  data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute';\n\n  // run the modifiers\n  data = runModifiers(this.modifiers, data);\n\n  // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n\n/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nfunction isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(function (_ref) {\n    var name = _ref.name,\n        enabled = _ref.enabled;\n    return enabled && name === modifierName;\n  });\n}\n\n/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\nfunction getSupportedPropertyName(property) {\n  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (var i = 0; i < prefixes.length; i++) {\n    var prefix = prefixes[i];\n    var toCheck = prefix ? '' + prefix + upperProp : property;\n    if (typeof document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n\n/**\n * Destroys the popper.\n * @method\n * @memberof Popper\n */\nfunction destroy() {\n  this.state.isDestroyed = true;\n\n  // touch DOM only if `applyStyle` modifier is enabled\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style.left = '';\n    this.popper.style.right = '';\n    this.popper.style.bottom = '';\n    this.popper.style.willChange = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners();\n\n  // remove the popper if user explicitly asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n  return this;\n}\n\n/**\n * Get the window associated with the element\n * @argument {Element} element\n * @returns {Window}\n */\nfunction getWindow(element) {\n  var ownerDocument = element.ownerDocument;\n  return ownerDocument ? ownerDocument.defaultView : window;\n}\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  var isBody = scrollParent.nodeName === 'BODY';\n  var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction setupEventListeners(reference, options, state, updateBound) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  var scrollElement = getScrollParent(reference);\n  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\nfunction enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);\n  }\n}\n\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  getWindow(reference).removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(function (target) {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger `onUpdate` callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nfunction disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n\n/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nfunction isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setStyles(element, styles) {\n  Object.keys(styles).forEach(function (prop) {\n    var unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n\n/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function (prop) {\n    var value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nfunction applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles);\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, data.attributes);\n\n  // if arrowElement is defined and arrowStyles has some properties\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n    setStyles(data.arrowElement, data.arrowStyles);\n  }\n\n  return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper\n * @param {Object} options - Popper.js options\n */\nfunction applyStyleOnLoad(reference, popper, options, modifierOptions, state) {\n  // compute reference element offsets\n  var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);\n\n  popper.setAttribute('x-placement', placement);\n\n  // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });\n\n  return options;\n}\n\n/**\n * @function\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Boolean} shouldRound - If the offsets should be rounded at all\n * @returns {Object} The popper's position offsets rounded\n *\n * The tale of pixel-perfect positioning. It's still not 100% perfect, but as\n * good as it can be within reason.\n * Discussion here: https://github.com/FezVrasta/popper.js/pull/715\n *\n * Low DPI screens cause a popper to be blurry if not using full pixels (Safari\n * as well on High DPI screens).\n *\n * Firefox prefers no rounding for positioning and does not have blurriness on\n * high DPI screens.\n *\n * Only horizontal placement and left/right values need to be considered.\n */\nfunction getRoundedOffsets(data, shouldRound) {\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n  var round = Math.round,\n      floor = Math.floor;\n\n  var noRound = function noRound(v) {\n    return v;\n  };\n\n  var referenceWidth = round(reference.width);\n  var popperWidth = round(popper.width);\n\n  var isVertical = ['left', 'right'].indexOf(data.placement) !== -1;\n  var isVariation = data.placement.indexOf('-') !== -1;\n  var sameWidthParity = referenceWidth % 2 === popperWidth % 2;\n  var bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;\n\n  var horizontalToInteger = !shouldRound ? noRound : isVertical || isVariation || sameWidthParity ? round : floor;\n  var verticalToInteger = !shouldRound ? noRound : round;\n\n  return {\n    left: horizontalToInteger(bothOddWidth && !isVariation && shouldRound ? popper.left - 1 : popper.left),\n    top: verticalToInteger(popper.top),\n    bottom: verticalToInteger(popper.bottom),\n    right: horizontalToInteger(popper.right)\n  };\n}\n\nvar isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeStyle(data, options) {\n  var x = options.x,\n      y = options.y;\n  var popper = data.offsets.popper;\n\n  // Remove this legacy support in Popper.js v2\n\n  var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'applyStyle';\n  }).gpuAcceleration;\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');\n  }\n  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;\n\n  var offsetParent = getOffsetParent(data.instance.popper);\n  var offsetParentRect = getBoundingClientRect(offsetParent);\n\n  // Styles\n  var styles = {\n    position: popper.position\n  };\n\n  var offsets = getRoundedOffsets(data, window.devicePixelRatio < 2 || !isFirefox);\n\n  var sideA = x === 'bottom' ? 'top' : 'bottom';\n  var sideB = y === 'right' ? 'left' : 'right';\n\n  // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  var prefixedProperty = getSupportedPropertyName('transform');\n\n  // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n  var left = void 0,\n      top = void 0;\n  if (sideA === 'bottom') {\n    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)\n    // and not the bottom of the html element\n    if (offsetParent.nodeName === 'HTML') {\n      top = -offsetParent.clientHeight + offsets.bottom;\n    } else {\n      top = -offsetParentRect.height + offsets.bottom;\n    }\n  } else {\n    top = offsets.top;\n  }\n  if (sideB === 'right') {\n    if (offsetParent.nodeName === 'HTML') {\n      left = -offsetParent.clientWidth + offsets.right;\n    } else {\n      left = -offsetParentRect.width + offsets.right;\n    }\n  } else {\n    left = offsets.left;\n  }\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    var invertTop = sideA === 'bottom' ? -1 : 1;\n    var invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = sideA + ', ' + sideB;\n  }\n\n  // Attributes\n  var attributes = {\n    'x-placement': data.placement\n  };\n\n  // Update `data` attributes, styles and arrowStyles\n  data.attributes = _extends({}, attributes, data.attributes);\n  data.styles = _extends({}, styles, data.styles);\n  data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);\n\n  return data;\n}\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nfunction isModifierRequired(modifiers, requestingName, requestedName) {\n  var requesting = find(modifiers, function (_ref) {\n    var name = _ref.name;\n    return name === requestingName;\n  });\n\n  var isRequired = !!requesting && modifiers.some(function (modifier) {\n    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;\n  });\n\n  if (!isRequired) {\n    var _requesting = '`' + requestingName + '`';\n    var requested = '`' + requestedName + '`';\n    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');\n  }\n  return isRequired;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction arrow(data, options) {\n  var _data$offsets$arrow;\n\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  var arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn('WARNING: `arrow.element` must be child of its popper element!');\n      return data;\n    }\n  }\n\n  var placement = data.placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n  var len = isVertical ? 'height' : 'width';\n  var sideCapitalized = isVertical ? 'Top' : 'Left';\n  var side = sideCapitalized.toLowerCase();\n  var altSide = isVertical ? 'left' : 'top';\n  var opSide = isVertical ? 'bottom' : 'right';\n  var arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its\n  // reference have enough pixels in conjunction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];\n  }\n  data.offsets.popper = getClientRect(data.offsets.popper);\n\n  // compute center of the popper\n  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  // take popper margin in account because we don't have this info available\n  var css = getStyleComputedProperty(data.instance.popper);\n  var popperMarginSide = parseFloat(css['margin' + sideCapitalized]);\n  var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width']);\n  var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);\n\n  return data;\n}\n\n/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nfunction getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n  return variation;\n}\n\n/**\n * List of accepted placements to use as values of the `placement` option.<br />\n * Valid placements are:\n * - `auto`\n * - `top`\n * - `right`\n * - `bottom`\n * - `left`\n *\n * Each placement can have a variation from this list:\n * - `-start`\n * - `-end`\n *\n * Variations are interpreted easily if you think of them as the left to right\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n * is right.<br />\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n *\n * Some valid examples are:\n * - `top-end` (on top of reference, right aligned)\n * - `right-start` (on right of reference, top aligned)\n * - `bottom` (on bottom, centered)\n * - `auto-end` (on the side with more space available, alignment depends by placement)\n *\n * @static\n * @type {Array}\n * @enum {String}\n * @readonly\n * @method placements\n * @memberof Popper\n */\nvar placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];\n\n// Get rid of `auto` `auto-start` and `auto-end`\nvar validPlacements = placements.slice(3);\n\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\nfunction clockwise(placement) {\n  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var index = validPlacements.indexOf(placement);\n  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n\nvar BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise'\n};\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);\n\n  var placement = data.placement.split('-')[0];\n  var placementOpposite = getOppositePlacement(placement);\n  var variation = data.placement.split('-')[1] || '';\n\n  var flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach(function (step, index) {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n\n    var popperOffsets = data.offsets.popper;\n    var refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    var floor = Math.floor;\n    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);\n\n    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;\n\n    // flip the variation if required\n    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n\n    // flips variation if reference element overflows boundaries\n    var flippedVariationByRef = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);\n\n    // flips variation if popper content overflows boundaries\n    var flippedVariationByContent = !!options.flipVariationsByContent && (isVertical && variation === 'start' && overflowsRight || isVertical && variation === 'end' && overflowsLeft || !isVertical && variation === 'start' && overflowsBottom || !isVertical && variation === 'end' && overflowsTop);\n\n    var flippedVariation = flippedVariationByRef || flippedVariationByContent;\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : '');\n\n      // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n      data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));\n\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction keepTogether(data) {\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var placement = data.placement.split('-')[0];\n  var floor = Math.floor;\n  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  var side = isVertical ? 'right' : 'bottom';\n  var opSide = isVertical ? 'left' : 'top';\n  var measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];\n  }\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\nfunction toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  var split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  var value = +split[1];\n  var unit = split[2];\n\n  // If it's not a number it's an operator, I guess\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    var element = void 0;\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    var rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    var size = void 0;\n    if (unit === 'vh') {\n      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n    } else {\n      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n    }\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\nfunction parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {\n  var offsets = [0, 0];\n\n  // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n  // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n  var fragments = offset.split(/(\\+|\\-)/).map(function (frag) {\n    return frag.trim();\n  });\n\n  // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n  var divider = fragments.indexOf(find(fragments, function (frag) {\n    return frag.search(/,|\\s/) !== -1;\n  }));\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');\n  }\n\n  // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n  var splitRegex = /\\s*,\\s*|\\s+/;\n  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];\n\n  // Convert the values with units to absolute pixels to allow our computations\n  ops = ops.map(function (op, index) {\n    // Most of the units rely on the orientation of the popper\n    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';\n    var mergeWithPrevious = false;\n    return op\n    // This aggregates any `+` or `-` sign that aren't considered operators\n    // e.g.: 10 + +5 => [10, +, +5]\n    .reduce(function (a, b) {\n      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n        a[a.length - 1] = b;\n        mergeWithPrevious = true;\n        return a;\n      } else if (mergeWithPrevious) {\n        a[a.length - 1] += b;\n        mergeWithPrevious = false;\n        return a;\n      } else {\n        return a.concat(b);\n      }\n    }, [])\n    // Here we convert the string values into number values (in px)\n    .map(function (str) {\n      return toValue(str, measurement, popperOffsets, referenceOffsets);\n    });\n  });\n\n  // Loop trough the offsets arrays and execute the operations\n  ops.forEach(function (op, index) {\n    op.forEach(function (frag, index2) {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\nfunction offset(data, _ref) {\n  var offset = _ref.offset;\n  var placement = data.placement,\n      _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var basePlacement = placement.split('-')[0];\n\n  var offsets = void 0;\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction preventOverflow(data, options) {\n  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);\n\n  // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  }\n\n  // NOTE: DOM access here\n  // resets the popper's position so that the document size can be calculated excluding\n  // the size of the popper element itself\n  var transformProp = getSupportedPropertyName('transform');\n  var popperStyles = data.instance.popper.style; // assignment to help minification\n  var top = popperStyles.top,\n      left = popperStyles.left,\n      transform = popperStyles[transformProp];\n\n  popperStyles.top = '';\n  popperStyles.left = '';\n  popperStyles[transformProp] = '';\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed);\n\n  // NOTE: DOM access here\n  // restores the original style properties after the offsets have been computed\n  popperStyles.top = top;\n  popperStyles.left = left;\n  popperStyles[transformProp] = transform;\n\n  options.boundaries = boundaries;\n\n  var order = options.priority;\n  var popper = data.offsets.popper;\n\n  var check = {\n    primary: function primary(placement) {\n      var value = popper[placement];\n      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n      return defineProperty({}, placement, value);\n    },\n    secondary: function secondary(placement) {\n      var mainSide = placement === 'right' ? 'left' : 'top';\n      var value = popper[mainSide];\n      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {\n        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));\n      }\n      return defineProperty({}, mainSide, value);\n    }\n  };\n\n  order.forEach(function (placement) {\n    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n    popper = _extends({}, popper, check[side](placement));\n  });\n\n  data.offsets.popper = popper;\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction shift(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) {\n    var _data$offsets = data.offsets,\n        reference = _data$offsets.reference,\n        popper = _data$offsets.popper;\n\n    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    var side = isVertical ? 'left' : 'top';\n    var measurement = isVertical ? 'width' : 'height';\n\n    var shiftOffsets = {\n      start: defineProperty({}, side, reference[side]),\n      end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])\n    };\n\n    data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);\n  }\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  var refRect = data.offsets.reference;\n  var bound = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'preventOverflow';\n  }).boundaries;\n\n  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction inner(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n  popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n\n  return data;\n}\n\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\nvar modifiers = {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: shift\n  },\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unit-less, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the `height`.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: offset,\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0\n  },\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * A scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n    /**\n     * @prop {Array} [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper. This makes sure the popper always has a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier. Can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent'\n  },\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near each other\n   * without leaving any gap between the two. Especially useful when the arrow is\n   * enabled and you want to ensure that it points to its reference element.\n   * It cares only about the first axis. You can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: keepTogether\n  },\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjunction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: arrow,\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]'\n  },\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: flip,\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations)\n     */\n    behavior: 'flip',\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position.\n     * The popper will never be placed outside of the defined boundaries\n     * (except if `keepTogether` is enabled)\n     */\n    boundariesElement: 'viewport',\n    /**\n     * @prop {Boolean} flipVariations=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the reference element overlaps its boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariations: false,\n    /**\n     * @prop {Boolean} flipVariationsByContent=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the popper element overlaps its reference boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariationsByContent: false\n  },\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n    /** @prop {ModifierFn} */\n    fn: inner\n  },\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: hide\n  },\n\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: {\n    /** @prop {number} order=850 - Index used to define the order of execution */\n    order: 850,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: computeStyle,\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: true,\n    /**\n     * @prop {string} [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n    /**\n     * @prop {string} [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right'\n  },\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define your own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: undefined\n  }\n};\n\n/**\n * The `dataObject` is an object containing all the information used by Popper.js.\n * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overridden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass an object with the same\n * structure of the `options` object, as the 3rd argument. For example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\nvar Defaults = {\n  /**\n   * Popper's placement.\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Set this to true if you want popper to position it self in 'fixed' mode\n   * @prop {Boolean} positionFixed=false\n   */\n  positionFixed: false,\n\n  /**\n   * Whether events (resize, scroll) are initially enabled.\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: function onCreate() {},\n\n  /**\n   * Callback called when the popper is updated. This callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: function onUpdate() {},\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js.\n   * @prop {modifiers}\n   */\n  modifiers: modifiers\n};\n\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n\n// Utils\n// Methods\nvar Popper = function () {\n  /**\n   * Creates a new Popper.js instance.\n   * @class Popper\n   * @param {Element|referenceObject} reference - The reference element used to position the popper\n   * @param {Element} popper - The HTML / XML element used as the popper\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  function Popper(reference, popper) {\n    var _this = this;\n\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    classCallCheck(this, Popper);\n\n    this.scheduleUpdate = function () {\n      return requestAnimationFrame(_this.update);\n    };\n\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with {} we create a new object with the options inside it\n    this.options = _extends({}, Popper.Defaults, options);\n\n    // init state\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: []\n    };\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference && reference.jquery ? reference[0] : reference;\n    this.popper = popper && popper.jquery ? popper[0] : popper;\n\n    // Deep merge modifiers options\n    this.options.modifiers = {};\n    Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {\n      _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});\n    });\n\n    // Refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {\n      return _extends({\n        name: name\n      }, _this.options.modifiers[name]);\n    })\n    // sort the modifiers by order\n    .sort(function (a, b) {\n      return a.order - b.order;\n    });\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(function (modifierOptions) {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);\n      }\n    });\n\n    // fire the first update to position the popper in the right place\n    this.update();\n\n    var eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  }\n\n  // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n\n\n  createClass(Popper, [{\n    key: 'update',\n    value: function update$$1() {\n      return update.call(this);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy$$1() {\n      return destroy.call(this);\n    }\n  }, {\n    key: 'enableEventListeners',\n    value: function enableEventListeners$$1() {\n      return enableEventListeners.call(this);\n    }\n  }, {\n    key: 'disableEventListeners',\n    value: function disableEventListeners$$1() {\n      return disableEventListeners.call(this);\n    }\n\n    /**\n     * Schedules an update. It will run on the next UI update available.\n     * @method scheduleUpdate\n     * @memberof Popper\n     */\n\n\n    /**\n     * Collection of utilities useful when writing custom modifiers.\n     * Starting from version 1.7, this method is available only if you\n     * include `popper-utils.js` before `popper.js`.\n     *\n     * **DEPRECATION**: This way to access PopperUtils is deprecated\n     * and will be removed in v2! Use the PopperUtils module directly instead.\n     * Due to the high instability of the methods contained in Utils, we can't\n     * guarantee them to follow semver. Use them at your own risk!\n     * @static\n     * @private\n     * @type {Object}\n     * @deprecated since version 1.8\n     * @member Utils\n     * @memberof Popper\n     */\n\n  }]);\n  return Popper;\n}();\n\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10.\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n\n\nPopper.Utils = (typeof window !== 'undefined' ? window : __webpack_require__.g).PopperUtils;\nPopper.placements = placements;\nPopper.Defaults = Defaults;\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Popper);\n//# sourceMappingURL=popper.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/popper.js/dist/esm/popper.js\n"
                );

                /***/
            },

        /***/ '../../node_modules/react-floater/es/index.js':
            /*!****************************************************!*\
  !*** ../../node_modules/react-floater/es/index.js ***!
  \****************************************************/
            /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ ReactFloater)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! prop-types */ "../../node_modules/prop-types/index.js");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var popper_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! popper.js */ "../../node_modules/popper.js/dist/esm/popper.js");\n/* harmony import */ var deepmerge__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! deepmerge */ "../../node_modules/deepmerge/dist/cjs.js");\n/* harmony import */ var deepmerge__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(deepmerge__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var is_lite__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! is-lite */ "../../node_modules/react-floater/node_modules/is-lite/esm/index.js");\n/* harmony import */ var tree_changes__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tree-changes */ "../../node_modules/react-floater/node_modules/tree-changes/esm/index.js");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-dom */ "react-dom");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\n\n\n\n\n\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError("Cannot call a class as a function");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if ("value" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, "prototype", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== "function" && superClass !== null) {\n    throw new TypeError("Super expression must either be null or a function");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, "prototype", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === "undefined" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === "function") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called");\n  }\n  return self;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === "object" || typeof call === "function")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError("Derived constructors may only return object or undefined");\n  }\n  return _assertThisInitialized(self);\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== "object" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || "default");\n    if (typeof res !== "object") return res;\n    throw new TypeError("@@toPrimitive must return a primitive value.");\n  }\n  return (hint === "string" ? String : Number)(input);\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, "string");\n  return typeof key === "symbol" ? key : String(key);\n}\n\nvar DEFAULTS = {flip:{padding:20},preventOverflow:{padding:10}};\n\nvar VALIDATOR_ARG_ERROR_MESSAGE=\'The typeValidator argument must be a function \'+\'with the signature function(props, propName, componentName).\';var MESSAGE_ARG_ERROR_MESSAGE=\'The error message is optional, but must be a string if provided.\';function propIsRequired(condition,props,propName,componentName){if(typeof condition===\'boolean\'){return condition;}if(typeof condition===\'function\'){return condition(props,propName,componentName);}if(Boolean(condition)===true){return Boolean(condition);}return false;}function propExists(props,propName){return Object.hasOwnProperty.call(props,propName);}function missingPropError(props,propName,componentName,message){if(message){return new Error(message);}return new Error("Required ".concat(props[propName]," `").concat(propName,"` was not specified in `").concat(componentName,"`."));}function guardAgainstInvalidArgTypes(typeValidator,message){if(typeof typeValidator!==\'function\'){throw new TypeError(VALIDATOR_ARG_ERROR_MESSAGE);}if(Boolean(message)&&typeof message!==\'string\'){throw new TypeError(MESSAGE_ARG_ERROR_MESSAGE);}}function isRequiredIf(typeValidator,condition,message){guardAgainstInvalidArgTypes(typeValidator,message);return function(props,propName,componentName){for(var _len=arguments.length,rest=new Array(_len>3?_len-3:0),_key=3;_key<_len;_key++){rest[_key-3]=arguments[_key];}if(propIsRequired(condition,props,propName,componentName)){if(propExists(props,propName)){return typeValidator.apply(void 0,[props,propName,componentName].concat(rest));}return missingPropError(props,propName,componentName,message);}// Is not required, so just run typeValidator.\nreturn typeValidator.apply(void 0,[props,propName,componentName].concat(rest));};}\n\nvar STATUS = {INIT:\'init\',IDLE:\'idle\',OPENING:\'opening\',OPEN:\'open\',CLOSING:\'closing\',ERROR:\'error\'};\n\nvar isReact16=(react_dom__WEBPACK_IMPORTED_MODULE_2___default().createPortal)!==undefined;function canUseDOM(){return !!(typeof window!==\'undefined\'&&window.document&&window.document.createElement);}function isMobile(){return \'ontouchstart\'in window&&/Mobi/.test(navigator.userAgent);}/**\n * Log method calls if debug is enabled\n *\n * @private\n * @param {Object}       arg\n * @param {string}       arg.title    - The title the logger was called from\n * @param {Object|Array} [arg.data]   - The data to be logged\n * @param {boolean}      [arg.warn]  - If true, the message will be a warning\n * @param {boolean}      [arg.debug] - Nothing will be logged unless debug is true\n */function log(_ref){var title=_ref.title,data=_ref.data,_ref$warn=_ref.warn,warn=_ref$warn===void 0?false:_ref$warn,_ref$debug=_ref.debug,debug=_ref$debug===void 0?false:_ref$debug;/* eslint-disable no-console */var logFn=warn?console.warn||console.error:console.log;if(debug&&title&&data){console.groupCollapsed("%creact-floater: ".concat(title),\'color: #9b00ff; font-weight: bold; font-size: 12px;\');if(Array.isArray(data)){data.forEach(function(d){if(is_lite__WEBPACK_IMPORTED_MODULE_3__["default"].plainObject(d)&&d.key){logFn.apply(console,[d.key,d.value]);}else {logFn.apply(console,[d]);}});}else {logFn.apply(console,[data]);}console.groupEnd();}/* eslint-enable */}function on(element,event,cb){var capture=arguments.length>3&&arguments[3]!==undefined?arguments[3]:false;element.addEventListener(event,cb,capture);}function off(element,event,cb){var capture=arguments.length>3&&arguments[3]!==undefined?arguments[3]:false;element.removeEventListener(event,cb,capture);}function once(element,event,cb){var capture=arguments.length>3&&arguments[3]!==undefined?arguments[3]:false;var _nextCB;// eslint-disable-next-line prefer-const\n_nextCB=function nextCB(e){cb(e);off(element,event,_nextCB);};on(element,event,_nextCB,capture);}function noop(){}\n\nvar ReactFloaterPortal=/*#__PURE__*/function(_React$Component){_inherits(ReactFloaterPortal,_React$Component);var _super=_createSuper(ReactFloaterPortal);function ReactFloaterPortal(){_classCallCheck(this,ReactFloaterPortal);return _super.apply(this,arguments);}_createClass(ReactFloaterPortal,[{key:"componentDidMount",value:function componentDidMount(){if(!canUseDOM())return;if(!this.node){this.appendNode();}if(!isReact16){this.renderPortal();}}},{key:"componentDidUpdate",value:function componentDidUpdate(){if(!canUseDOM())return;if(!isReact16){this.renderPortal();}}},{key:"componentWillUnmount",value:function componentWillUnmount(){if(!canUseDOM()||!this.node)return;if(!isReact16){react_dom__WEBPACK_IMPORTED_MODULE_2___default().unmountComponentAtNode(this.node);}if(this.node&&this.node.parentNode===document.body){document.body.removeChild(this.node);this.node=undefined;}}},{key:"appendNode",value:function appendNode(){var _this$props=this.props,id=_this$props.id,zIndex=_this$props.zIndex;if(!this.node){this.node=document.createElement(\'div\');/* istanbul ignore else */if(id){this.node.id=id;}if(zIndex){this.node.style.zIndex=zIndex;}document.body.appendChild(this.node);}}},{key:"renderPortal",value:function renderPortal(){if(!canUseDOM())return null;var _this$props2=this.props,children=_this$props2.children,setRef=_this$props2.setRef;if(!this.node){this.appendNode();}/* istanbul ignore else */if(isReact16){return/*#__PURE__*/react_dom__WEBPACK_IMPORTED_MODULE_2___default().createPortal(children,this.node);}var portal=react_dom__WEBPACK_IMPORTED_MODULE_2___default().unstable_renderSubtreeIntoContainer(this,children.length>1?/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div",null,children):children[0],this.node);setRef(portal);return null;}},{key:"renderReact16",value:function renderReact16(){var _this$props3=this.props,hasChildren=_this$props3.hasChildren,placement=_this$props3.placement,target=_this$props3.target;if(!hasChildren){if(target||placement===\'center\'){return this.renderPortal();}return null;}return this.renderPortal();}},{key:"render",value:function render(){if(!isReact16){return null;}return this.renderReact16();}}]);return ReactFloaterPortal;}((react__WEBPACK_IMPORTED_MODULE_0___default().Component));_defineProperty(ReactFloaterPortal,"propTypes",{children:prop_types__WEBPACK_IMPORTED_MODULE_4___default().oneOfType([(prop_types__WEBPACK_IMPORTED_MODULE_4___default().element),(prop_types__WEBPACK_IMPORTED_MODULE_4___default().array)]),hasChildren:(prop_types__WEBPACK_IMPORTED_MODULE_4___default().bool),id:prop_types__WEBPACK_IMPORTED_MODULE_4___default().oneOfType([(prop_types__WEBPACK_IMPORTED_MODULE_4___default().string),(prop_types__WEBPACK_IMPORTED_MODULE_4___default().number)]),placement:(prop_types__WEBPACK_IMPORTED_MODULE_4___default().string),setRef:(prop_types__WEBPACK_IMPORTED_MODULE_4___default().func).isRequired,target:prop_types__WEBPACK_IMPORTED_MODULE_4___default().oneOfType([(prop_types__WEBPACK_IMPORTED_MODULE_4___default().object),(prop_types__WEBPACK_IMPORTED_MODULE_4___default().string)]),zIndex:(prop_types__WEBPACK_IMPORTED_MODULE_4___default().number)});\n\nvar FloaterArrow=/*#__PURE__*/function(_React$Component){_inherits(FloaterArrow,_React$Component);var _super=_createSuper(FloaterArrow);function FloaterArrow(){_classCallCheck(this,FloaterArrow);return _super.apply(this,arguments);}_createClass(FloaterArrow,[{key:"parentStyle",get:function get(){var _this$props=this.props,placement=_this$props.placement,styles=_this$props.styles;var length=styles.arrow.length;var arrow={pointerEvents:\'none\',position:\'absolute\',width:\'100%\'};/* istanbul ignore else */if(placement.startsWith(\'top\')){arrow.bottom=0;arrow.left=0;arrow.right=0;arrow.height=length;}else if(placement.startsWith(\'bottom\')){arrow.left=0;arrow.right=0;arrow.top=0;arrow.height=length;}else if(placement.startsWith(\'left\')){arrow.right=0;arrow.top=0;arrow.bottom=0;}else if(placement.startsWith(\'right\')){arrow.left=0;arrow.top=0;}return arrow;}},{key:"render",value:function render(){var _this$props2=this.props,placement=_this$props2.placement,setArrowRef=_this$props2.setArrowRef,styles=_this$props2.styles;var _styles$arrow=styles.arrow,color=_styles$arrow.color,display=_styles$arrow.display,length=_styles$arrow.length,margin=_styles$arrow.margin,position=_styles$arrow.position,spread=_styles$arrow.spread;var arrowStyles={display:display,position:position};var points;var x=spread;var y=length;/* istanbul ignore else */if(placement.startsWith(\'top\')){points="0,0 ".concat(x/2,",").concat(y," ").concat(x,",0");arrowStyles.bottom=0;arrowStyles.marginLeft=margin;arrowStyles.marginRight=margin;}else if(placement.startsWith(\'bottom\')){points="".concat(x,",").concat(y," ").concat(x/2,",0 0,").concat(y);arrowStyles.top=0;arrowStyles.marginLeft=margin;arrowStyles.marginRight=margin;}else if(placement.startsWith(\'left\')){y=spread;x=length;points="0,0 ".concat(x,",").concat(y/2," 0,").concat(y);arrowStyles.right=0;arrowStyles.marginTop=margin;arrowStyles.marginBottom=margin;}else if(placement.startsWith(\'right\')){y=spread;x=length;points="".concat(x,",").concat(y," ").concat(x,",0 0,").concat(y/2);arrowStyles.left=0;arrowStyles.marginTop=margin;arrowStyles.marginBottom=margin;}return/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div",{className:"__floater__arrow",style:this.parentStyle},/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span",{ref:setArrowRef,style:arrowStyles},/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg",{width:x,height:y,version:"1.1",xmlns:"http://www.w3.org/2000/svg"},/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("polygon",{points:points,fill:color}))));}}]);return FloaterArrow;}((react__WEBPACK_IMPORTED_MODULE_0___default().Component));_defineProperty(FloaterArrow,"propTypes",{placement:(prop_types__WEBPACK_IMPORTED_MODULE_4___default().string).isRequired,setArrowRef:(prop_types__WEBPACK_IMPORTED_MODULE_4___default().func).isRequired,styles:(prop_types__WEBPACK_IMPORTED_MODULE_4___default().object).isRequired});\n\nvar _excluded$1=["color","height","width"];function FloaterCloseBtn(_ref){var handleClick=_ref.handleClick,styles=_ref.styles;var color=styles.color,height=styles.height,width=styles.width,style=_objectWithoutProperties(styles,_excluded$1);return/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("button",{"aria-label":"close",onClick:handleClick,style:style,type:"button"},/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg",{width:"".concat(width,"px"),height:"".concat(height,"px"),viewBox:"0 0 18 18",version:"1.1",xmlns:"http://www.w3.org/2000/svg",preserveAspectRatio:"xMidYMid"},/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("g",null,/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path",{d:"M8.13911129,9.00268191 L0.171521827,17.0258467 C-0.0498027049,17.248715 -0.0498027049,17.6098394 0.171521827,17.8327545 C0.28204354,17.9443526 0.427188206,17.9998706 0.572051765,17.9998706 C0.71714958,17.9998706 0.862013139,17.9443526 0.972581703,17.8327545 L9.0000937,9.74924618 L17.0276057,17.8327545 C17.1384085,17.9443526 17.2832721,17.9998706 17.4281356,17.9998706 C17.5729992,17.9998706 17.718097,17.9443526 17.8286656,17.8327545 C18.0499901,17.6098862 18.0499901,17.2487618 17.8286656,17.0258467 L9.86135722,9.00268191 L17.8340066,0.973848225 C18.0553311,0.750979934 18.0553311,0.389855532 17.8340066,0.16694039 C17.6126821,-0.0556467968 17.254037,-0.0556467968 17.0329467,0.16694039 L9.00042166,8.25611765 L0.967006424,0.167268345 C0.745681892,-0.0553188426 0.387317931,-0.0553188426 0.165993399,0.167268345 C-0.0553311331,0.390136635 -0.0553311331,0.751261038 0.165993399,0.974176179 L8.13920499,9.00268191 L8.13911129,9.00268191 Z",fill:color}))));}FloaterCloseBtn.propTypes={handleClick:(prop_types__WEBPACK_IMPORTED_MODULE_4___default().func).isRequired,styles:(prop_types__WEBPACK_IMPORTED_MODULE_4___default().object).isRequired};\n\nfunction FloaterContainer(_ref){var content=_ref.content,footer=_ref.footer,handleClick=_ref.handleClick,open=_ref.open,positionWrapper=_ref.positionWrapper,showCloseButton=_ref.showCloseButton,title=_ref.title,styles=_ref.styles;var output={content:/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().isValidElement(content)?content:/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div",{className:"__floater__content",style:styles.content},content)};if(title){output.title=/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().isValidElement(title)?title:/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div",{className:"__floater__title",style:styles.title},title);}if(footer){output.footer=/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().isValidElement(footer)?footer:/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div",{className:"__floater__footer",style:styles.footer},footer);}if((showCloseButton||positionWrapper)&&!is_lite__WEBPACK_IMPORTED_MODULE_3__["default"]["boolean"](open)){output.close=/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(FloaterCloseBtn,{styles:styles.close,handleClick:handleClick});}return/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div",{className:"__floater__container",style:styles.container},output.close,output.title,output.content,output.footer);}FloaterContainer.propTypes={content:(prop_types__WEBPACK_IMPORTED_MODULE_4___default().node).isRequired,footer:(prop_types__WEBPACK_IMPORTED_MODULE_4___default().node),handleClick:(prop_types__WEBPACK_IMPORTED_MODULE_4___default().func).isRequired,open:(prop_types__WEBPACK_IMPORTED_MODULE_4___default().bool),positionWrapper:(prop_types__WEBPACK_IMPORTED_MODULE_4___default().bool).isRequired,showCloseButton:(prop_types__WEBPACK_IMPORTED_MODULE_4___default().bool).isRequired,styles:(prop_types__WEBPACK_IMPORTED_MODULE_4___default().object).isRequired,title:(prop_types__WEBPACK_IMPORTED_MODULE_4___default().node)};\n\nvar Floater=/*#__PURE__*/function(_React$Component){_inherits(Floater,_React$Component);var _super=_createSuper(Floater);function Floater(){_classCallCheck(this,Floater);return _super.apply(this,arguments);}_createClass(Floater,[{key:"style",get:function get(){var _this$props=this.props,disableAnimation=_this$props.disableAnimation,component=_this$props.component,placement=_this$props.placement,hideArrow=_this$props.hideArrow,status=_this$props.status,styles=_this$props.styles;var length=styles.arrow.length,floater=styles.floater,floaterCentered=styles.floaterCentered,floaterClosing=styles.floaterClosing,floaterOpening=styles.floaterOpening,floaterWithAnimation=styles.floaterWithAnimation,floaterWithComponent=styles.floaterWithComponent;var element={};if(!hideArrow){if(placement.startsWith(\'top\')){element.padding="0 0 ".concat(length,"px");}else if(placement.startsWith(\'bottom\')){element.padding="".concat(length,"px 0 0");}else if(placement.startsWith(\'left\')){element.padding="0 ".concat(length,"px 0 0");}else if(placement.startsWith(\'right\')){element.padding="0 0 0 ".concat(length,"px");}}if([STATUS.OPENING,STATUS.OPEN].indexOf(status)!==-1){element=_objectSpread2(_objectSpread2({},element),floaterOpening);}if(status===STATUS.CLOSING){element=_objectSpread2(_objectSpread2({},element),floaterClosing);}if(status===STATUS.OPEN&&!disableAnimation){element=_objectSpread2(_objectSpread2({},element),floaterWithAnimation);}if(placement===\'center\'){element=_objectSpread2(_objectSpread2({},element),floaterCentered);}if(component){element=_objectSpread2(_objectSpread2({},element),floaterWithComponent);}return _objectSpread2(_objectSpread2({},floater),element);}},{key:"render",value:function render(){var _this$props2=this.props,component=_this$props2.component,closeFn=_this$props2.handleClick,hideArrow=_this$props2.hideArrow,setFloaterRef=_this$props2.setFloaterRef,status=_this$props2.status;var output={};var classes=[\'__floater\'];if(component){if(/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().isValidElement(component)){output.content=/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().cloneElement(component,{closeFn:closeFn});}else {output.content=component({closeFn:closeFn});}}else {output.content=/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(FloaterContainer,this.props);}if(status===STATUS.OPEN){classes.push(\'__floater__open\');}if(!hideArrow){output.arrow=/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(FloaterArrow,this.props);}return/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div",{ref:setFloaterRef,className:classes.join(\' \'),style:this.style},/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div",{className:"__floater__body"},output.content,output.arrow));}}]);return Floater;}((react__WEBPACK_IMPORTED_MODULE_0___default().Component));_defineProperty(Floater,"propTypes",{component:prop_types__WEBPACK_IMPORTED_MODULE_4___default().oneOfType([(prop_types__WEBPACK_IMPORTED_MODULE_4___default().func),(prop_types__WEBPACK_IMPORTED_MODULE_4___default().element)]),content:(prop_types__WEBPACK_IMPORTED_MODULE_4___default().node),disableAnimation:(prop_types__WEBPACK_IMPORTED_MODULE_4___default().bool).isRequired,footer:(prop_types__WEBPACK_IMPORTED_MODULE_4___default().node),handleClick:(prop_types__WEBPACK_IMPORTED_MODULE_4___default().func).isRequired,hideArrow:(prop_types__WEBPACK_IMPORTED_MODULE_4___default().bool).isRequired,open:(prop_types__WEBPACK_IMPORTED_MODULE_4___default().bool),placement:(prop_types__WEBPACK_IMPORTED_MODULE_4___default().string).isRequired,positionWrapper:(prop_types__WEBPACK_IMPORTED_MODULE_4___default().bool).isRequired,setArrowRef:(prop_types__WEBPACK_IMPORTED_MODULE_4___default().func).isRequired,setFloaterRef:(prop_types__WEBPACK_IMPORTED_MODULE_4___default().func).isRequired,showCloseButton:(prop_types__WEBPACK_IMPORTED_MODULE_4___default().bool),status:(prop_types__WEBPACK_IMPORTED_MODULE_4___default().string).isRequired,styles:(prop_types__WEBPACK_IMPORTED_MODULE_4___default().object).isRequired,title:(prop_types__WEBPACK_IMPORTED_MODULE_4___default().node)});\n\nvar ReactFloaterWrapper=/*#__PURE__*/function(_React$Component){_inherits(ReactFloaterWrapper,_React$Component);var _super=_createSuper(ReactFloaterWrapper);function ReactFloaterWrapper(){_classCallCheck(this,ReactFloaterWrapper);return _super.apply(this,arguments);}_createClass(ReactFloaterWrapper,[{key:"render",value:function render(){var _this$props=this.props,children=_this$props.children,handleClick=_this$props.handleClick,handleMouseEnter=_this$props.handleMouseEnter,handleMouseLeave=_this$props.handleMouseLeave,setChildRef=_this$props.setChildRef,setWrapperRef=_this$props.setWrapperRef,style=_this$props.style,styles=_this$props.styles;var element;/* istanbul ignore else */if(children){if(react__WEBPACK_IMPORTED_MODULE_0___default().Children.count(children)===1){if(!/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().isValidElement(children)){element=/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span",null,children);}else {var refProp=is_lite__WEBPACK_IMPORTED_MODULE_3__["default"]["function"](children.type)?\'innerRef\':\'ref\';element=/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().cloneElement(react__WEBPACK_IMPORTED_MODULE_0___default().Children.only(children),_defineProperty({},refProp,setChildRef));}}else {element=children;}}if(!element){return null;}return/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span",{ref:setWrapperRef,style:_objectSpread2(_objectSpread2({},styles),style),onClick:handleClick,onMouseEnter:handleMouseEnter,onMouseLeave:handleMouseLeave},element);}}]);return ReactFloaterWrapper;}((react__WEBPACK_IMPORTED_MODULE_0___default().Component));_defineProperty(ReactFloaterWrapper,"propTypes",{children:(prop_types__WEBPACK_IMPORTED_MODULE_4___default().node),handleClick:(prop_types__WEBPACK_IMPORTED_MODULE_4___default().func).isRequired,handleMouseEnter:(prop_types__WEBPACK_IMPORTED_MODULE_4___default().func).isRequired,handleMouseLeave:(prop_types__WEBPACK_IMPORTED_MODULE_4___default().func).isRequired,setChildRef:(prop_types__WEBPACK_IMPORTED_MODULE_4___default().func).isRequired,setWrapperRef:(prop_types__WEBPACK_IMPORTED_MODULE_4___default().func).isRequired,style:(prop_types__WEBPACK_IMPORTED_MODULE_4___default().object),styles:(prop_types__WEBPACK_IMPORTED_MODULE_4___default().object).isRequired});\n\nvar defaultOptions={zIndex:100};function getStyles(styles){var options=deepmerge__WEBPACK_IMPORTED_MODULE_1___default()(defaultOptions,styles.options||{});return {wrapper:{cursor:\'help\',display:\'inline-flex\',flexDirection:\'column\',zIndex:options.zIndex},wrapperPosition:{left:-1000,position:\'absolute\',top:-1000,visibility:\'hidden\'},floater:{display:\'inline-block\',filter:\'drop-shadow(0 0 3px rgba(0, 0, 0, 0.3))\',maxWidth:300,opacity:0,position:\'relative\',transition:\'opacity 0.3s\',visibility:\'hidden\',zIndex:options.zIndex},floaterOpening:{opacity:1,visibility:\'visible\'},floaterWithAnimation:{opacity:1,transition:\'opacity 0.3s, transform 0.2s\',visibility:\'visible\'},floaterWithComponent:{maxWidth:\'100%\'},floaterClosing:{opacity:0,visibility:\'visible\'},floaterCentered:{left:\'50%\',position:\'fixed\',top:\'50%\',transform:\'translate(-50%, -50%)\'},container:{backgroundColor:\'#fff\',color:\'#666\',minHeight:60,minWidth:200,padding:20,position:\'relative\',zIndex:10},title:{borderBottom:\'1px solid #555\',color:\'#555\',fontSize:18,marginBottom:5,paddingBottom:6,paddingRight:18},content:{fontSize:15},close:{backgroundColor:\'transparent\',border:0,borderRadius:0,color:\'#555\',fontSize:0,height:15,outline:\'none\',padding:10,position:\'absolute\',right:0,top:0,width:15,WebkitAppearance:\'none\'},footer:{borderTop:\'1px solid #ccc\',fontSize:13,marginTop:10,paddingTop:5},arrow:{color:\'#fff\',display:\'inline-flex\',length:16,margin:8,position:\'absolute\',spread:32},options:options};}\n\nvar _excluded=["arrow","flip","offset"];var POSITIONING_PROPS=[\'position\',\'top\',\'right\',\'bottom\',\'left\'];var ReactFloater=/*#__PURE__*/function(_React$Component){_inherits(ReactFloater,_React$Component);var _super=_createSuper(ReactFloater);function ReactFloater(props){var _this;_classCallCheck(this,ReactFloater);_this=_super.call(this,props);/* istanbul ignore else */_defineProperty(_assertThisInitialized(_this),"setArrowRef",function(ref){_this.arrowRef=ref;});_defineProperty(_assertThisInitialized(_this),"setChildRef",function(ref){_this.childRef=ref;});_defineProperty(_assertThisInitialized(_this),"setFloaterRef",function(ref){_this.floaterRef=ref;});_defineProperty(_assertThisInitialized(_this),"setWrapperRef",function(ref){_this.wrapperRef=ref;});_defineProperty(_assertThisInitialized(_this),"handleTransitionEnd",function(){var status=_this.state.status;var callback=_this.props.callback;/* istanbul ignore else */if(_this.wrapperPopper){_this.wrapperPopper.instance.update();}_this.setState({status:status===STATUS.OPENING?STATUS.OPEN:STATUS.IDLE},function(){var newStatus=_this.state.status;callback(newStatus===STATUS.OPEN?\'open\':\'close\',_this.props);});});_defineProperty(_assertThisInitialized(_this),"handleClick",function(){var _this$props=_this.props,event=_this$props.event,open=_this$props.open;if(is_lite__WEBPACK_IMPORTED_MODULE_3__["default"]["boolean"](open))return;var _this$state=_this.state,positionWrapper=_this$state.positionWrapper,status=_this$state.status;/* istanbul ignore else */if(_this.event===\'click\'||_this.event===\'hover\'&&positionWrapper){log({title:\'click\',data:[{event:event,status:status===STATUS.OPEN?\'closing\':\'opening\'}],debug:_this.debug});_this.toggle();}});_defineProperty(_assertThisInitialized(_this),"handleMouseEnter",function(){var _this$props2=_this.props,event=_this$props2.event,open=_this$props2.open;if(is_lite__WEBPACK_IMPORTED_MODULE_3__["default"]["boolean"](open)||isMobile())return;var status=_this.state.status;/* istanbul ignore else */if(_this.event===\'hover\'&&status===STATUS.IDLE){log({title:\'mouseEnter\',data:[{key:\'originalEvent\',value:event}],debug:_this.debug});clearTimeout(_this.eventDelayTimeout);_this.toggle();}});_defineProperty(_assertThisInitialized(_this),"handleMouseLeave",function(){var _this$props3=_this.props,event=_this$props3.event,eventDelay=_this$props3.eventDelay,open=_this$props3.open;if(is_lite__WEBPACK_IMPORTED_MODULE_3__["default"]["boolean"](open)||isMobile())return;var _this$state2=_this.state,status=_this$state2.status,positionWrapper=_this$state2.positionWrapper;/* istanbul ignore else */if(_this.event===\'hover\'){log({title:\'mouseLeave\',data:[{key:\'originalEvent\',value:event}],debug:_this.debug});if(!eventDelay){_this.toggle(STATUS.IDLE);}else if([STATUS.OPENING,STATUS.OPEN].indexOf(status)!==-1&&!positionWrapper&&!_this.eventDelayTimeout){_this.eventDelayTimeout=setTimeout(function(){delete _this.eventDelayTimeout;_this.toggle();},eventDelay*1000);}}});_this.state={currentPlacement:props.placement,needsUpdate:false,positionWrapper:props.wrapperOptions.position&&!!props.target,status:STATUS.INIT,statusWrapper:STATUS.INIT};_this._isMounted=false;_this.hasMounted=false;if(canUseDOM()){window.addEventListener(\'load\',function(){if(_this.popper){_this.popper.instance.update();}if(_this.wrapperPopper){_this.wrapperPopper.instance.update();}});}return _this;}_createClass(ReactFloater,[{key:"componentDidMount",value:function componentDidMount(){if(!canUseDOM())return;var positionWrapper=this.state.positionWrapper;var _this$props5=this.props,children=_this$props5.children,open=_this$props5.open,target=_this$props5.target;this._isMounted=true;log({title:\'init\',data:{hasChildren:!!children,hasTarget:!!target,isControlled:is_lite__WEBPACK_IMPORTED_MODULE_3__["default"]["boolean"](open),positionWrapper:positionWrapper,target:this.target,floater:this.floaterRef},debug:this.debug});if(!this.hasMounted){this.initPopper();this.hasMounted=true;}if(!children&&target&&!is_lite__WEBPACK_IMPORTED_MODULE_3__["default"]["boolean"](open));}},{key:"componentDidUpdate",value:function componentDidUpdate(prevProps,prevState){if(!canUseDOM())return;var _this$props6=this.props,autoOpen=_this$props6.autoOpen,open=_this$props6.open,target=_this$props6.target,wrapperOptions=_this$props6.wrapperOptions;var _treeChanges=(0,tree_changes__WEBPACK_IMPORTED_MODULE_5__["default"])(prevState,this.state),changedFrom=_treeChanges.changedFrom,changed=_treeChanges.changed;if(prevProps.open!==open){var forceStatus;// always follow `open` in controlled mode\nif(is_lite__WEBPACK_IMPORTED_MODULE_3__["default"]["boolean"](open)){forceStatus=open?STATUS.OPENING:STATUS.CLOSING;}this.toggle(forceStatus);}if(prevProps.wrapperOptions.position!==wrapperOptions.position||prevProps.target!==target){this.changeWrapperPosition(this.props);}if(changed(\'status\',STATUS.IDLE)&&open){this.toggle(STATUS.OPEN);}else if(changedFrom(\'status\',STATUS.INIT,STATUS.IDLE)&&autoOpen){this.toggle(STATUS.OPEN);}if(this.popper&&changed(\'status\',STATUS.OPENING)){this.popper.instance.update();}if(this.floaterRef&&(changed(\'status\',STATUS.OPENING)||changed(\'status\',STATUS.CLOSING))){once(this.floaterRef,\'transitionend\',this.handleTransitionEnd);}if(changed(\'needsUpdate\',true)){this.rebuildPopper();}}},{key:"componentWillUnmount",value:function componentWillUnmount(){if(!canUseDOM())return;this._isMounted=false;if(this.popper){this.popper.instance.destroy();}if(this.wrapperPopper){this.wrapperPopper.instance.destroy();}}},{key:"initPopper",value:function initPopper(){var _this2=this;var target=arguments.length>0&&arguments[0]!==undefined?arguments[0]:this.target;var positionWrapper=this.state.positionWrapper;var _this$props7=this.props,disableFlip=_this$props7.disableFlip,getPopper=_this$props7.getPopper,hideArrow=_this$props7.hideArrow,offset=_this$props7.offset,placement=_this$props7.placement,wrapperOptions=_this$props7.wrapperOptions;var flipBehavior=placement===\'top\'||placement===\'bottom\'?\'flip\':[\'right\',\'bottom-end\',\'top-end\',\'left\',\'top-start\',\'bottom-start\'];/* istanbul ignore else */if(placement===\'center\'){this.setState({status:STATUS.IDLE});}else if(target&&this.floaterRef){var _this$options=this.options,arrow=_this$options.arrow,flip=_this$options.flip,offsetOptions=_this$options.offset,rest=_objectWithoutProperties(_this$options,_excluded);new popper_js__WEBPACK_IMPORTED_MODULE_6__["default"](target,this.floaterRef,{placement:placement,modifiers:_objectSpread2({arrow:_objectSpread2({enabled:!hideArrow,element:this.arrowRef},arrow),flip:_objectSpread2({enabled:!disableFlip,behavior:flipBehavior},flip),offset:_objectSpread2({offset:"0, ".concat(offset,"px")},offsetOptions)},rest),onCreate:function onCreate(data){var _this2$floaterRef;_this2.popper=data;if(!((_this2$floaterRef=_this2.floaterRef)!==null&&_this2$floaterRef!==void 0&&_this2$floaterRef.isConnected)){_this2.setState({needsUpdate:true});return;}getPopper(data,\'floater\');if(_this2._isMounted){_this2.setState({currentPlacement:data.placement,status:STATUS.IDLE});}if(placement!==data.placement){setTimeout(function(){data.instance.update();},1);}},onUpdate:function onUpdate(data){_this2.popper=data;var currentPlacement=_this2.state.currentPlacement;if(_this2._isMounted&&data.placement!==currentPlacement){_this2.setState({currentPlacement:data.placement});}}});}if(positionWrapper){var wrapperOffset=!is_lite__WEBPACK_IMPORTED_MODULE_3__["default"].undefined(wrapperOptions.offset)?wrapperOptions.offset:0;new popper_js__WEBPACK_IMPORTED_MODULE_6__["default"](this.target,this.wrapperRef,{placement:wrapperOptions.placement||placement,modifiers:{arrow:{enabled:false},offset:{offset:"0, ".concat(wrapperOffset,"px")},flip:{enabled:false}},onCreate:function onCreate(data){_this2.wrapperPopper=data;if(_this2._isMounted){_this2.setState({statusWrapper:STATUS.IDLE});}getPopper(data,\'wrapper\');if(placement!==data.placement){setTimeout(function(){data.instance.update();},1);}}});}}},{key:"rebuildPopper",value:function rebuildPopper(){var _this3=this;this.floaterRefInterval=setInterval(function(){var _this3$floaterRef;if((_this3$floaterRef=_this3.floaterRef)!==null&&_this3$floaterRef!==void 0&&_this3$floaterRef.isConnected){clearInterval(_this3.floaterRefInterval);_this3.setState({needsUpdate:false});_this3.initPopper();}},50);}},{key:"changeWrapperPosition",value:function changeWrapperPosition(_ref){var target=_ref.target,wrapperOptions=_ref.wrapperOptions;this.setState({positionWrapper:wrapperOptions.position&&!!target});}},{key:"toggle",value:function toggle(forceStatus){var status=this.state.status;var nextStatus=status===STATUS.OPEN?STATUS.CLOSING:STATUS.OPENING;if(!is_lite__WEBPACK_IMPORTED_MODULE_3__["default"].undefined(forceStatus)){nextStatus=forceStatus;}this.setState({status:nextStatus});}},{key:"debug",get:function get(){var debug=this.props.debug;return debug||canUseDOM()&&\'ReactFloaterDebug\'in window&&!!window.ReactFloaterDebug;}},{key:"event",get:function get(){var _this$props8=this.props,disableHoverToClick=_this$props8.disableHoverToClick,event=_this$props8.event;if(event===\'hover\'&&isMobile()&&!disableHoverToClick){return \'click\';}return event;}},{key:"options",get:function get(){var options=this.props.options;return deepmerge__WEBPACK_IMPORTED_MODULE_1___default()(DEFAULTS,options||{});}},{key:"styles",get:function get(){var _this4=this;var _this$state3=this.state,status=_this$state3.status,positionWrapper=_this$state3.positionWrapper,statusWrapper=_this$state3.statusWrapper;var styles=this.props.styles;var nextStyles=deepmerge__WEBPACK_IMPORTED_MODULE_1___default()(getStyles(styles),styles);if(positionWrapper){var wrapperStyles;if(!([STATUS.IDLE].indexOf(status)!==-1)||!([STATUS.IDLE].indexOf(statusWrapper)!==-1)){wrapperStyles=nextStyles.wrapperPosition;}else {wrapperStyles=this.wrapperPopper.styles;}nextStyles.wrapper=_objectSpread2(_objectSpread2({},nextStyles.wrapper),wrapperStyles);}/* istanbul ignore else */if(this.target){var targetStyles=window.getComputedStyle(this.target);/* istanbul ignore else */if(this.wrapperStyles){nextStyles.wrapper=_objectSpread2(_objectSpread2({},nextStyles.wrapper),this.wrapperStyles);}else if(!([\'relative\',\'static\'].indexOf(targetStyles.position)!==-1)){this.wrapperStyles={};if(!positionWrapper){POSITIONING_PROPS.forEach(function(d){_this4.wrapperStyles[d]=targetStyles[d];});nextStyles.wrapper=_objectSpread2(_objectSpread2({},nextStyles.wrapper),this.wrapperStyles);this.target.style.position=\'relative\';this.target.style.top=\'auto\';this.target.style.right=\'auto\';this.target.style.bottom=\'auto\';this.target.style.left=\'auto\';}}}return nextStyles;}},{key:"target",get:function get(){if(!canUseDOM())return null;var target=this.props.target;if(target){if(is_lite__WEBPACK_IMPORTED_MODULE_3__["default"].domElement(target)){return target;}return document.querySelector(target);}return this.childRef||this.wrapperRef;}},{key:"render",value:function render(){var _this$state4=this.state,currentPlacement=_this$state4.currentPlacement,positionWrapper=_this$state4.positionWrapper,status=_this$state4.status;var _this$props9=this.props,children=_this$props9.children,component=_this$props9.component,content=_this$props9.content,disableAnimation=_this$props9.disableAnimation,footer=_this$props9.footer,hideArrow=_this$props9.hideArrow,id=_this$props9.id,open=_this$props9.open,showCloseButton=_this$props9.showCloseButton,style=_this$props9.style,target=_this$props9.target,title=_this$props9.title;var wrapper=/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(ReactFloaterWrapper,{handleClick:this.handleClick,handleMouseEnter:this.handleMouseEnter,handleMouseLeave:this.handleMouseLeave,setChildRef:this.setChildRef,setWrapperRef:this.setWrapperRef,style:style,styles:this.styles.wrapper},children);var output={};if(positionWrapper){output.wrapperInPortal=wrapper;}else {output.wrapperAsChildren=wrapper;}return/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span",null,/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(ReactFloaterPortal,{hasChildren:!!children,id:id,placement:currentPlacement,setRef:this.setFloaterRef,target:target,zIndex:this.styles.options.zIndex},/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Floater,{component:component,content:content,disableAnimation:disableAnimation,footer:footer,handleClick:this.handleClick,hideArrow:hideArrow||currentPlacement===\'center\',open:open,placement:currentPlacement,positionWrapper:positionWrapper,setArrowRef:this.setArrowRef,setFloaterRef:this.setFloaterRef,showCloseButton:showCloseButton,status:status,styles:this.styles,title:title}),output.wrapperInPortal),output.wrapperAsChildren);}}]);return ReactFloater;}((react__WEBPACK_IMPORTED_MODULE_0___default().Component));_defineProperty(ReactFloater,"propTypes",{autoOpen:(prop_types__WEBPACK_IMPORTED_MODULE_4___default().bool),callback:(prop_types__WEBPACK_IMPORTED_MODULE_4___default().func),children:(prop_types__WEBPACK_IMPORTED_MODULE_4___default().node),component:isRequiredIf(prop_types__WEBPACK_IMPORTED_MODULE_4___default().oneOfType([(prop_types__WEBPACK_IMPORTED_MODULE_4___default().func),(prop_types__WEBPACK_IMPORTED_MODULE_4___default().element)]),function(props){return !props.content;}),content:isRequiredIf((prop_types__WEBPACK_IMPORTED_MODULE_4___default().node),function(props){return !props.component;}),debug:(prop_types__WEBPACK_IMPORTED_MODULE_4___default().bool),disableAnimation:(prop_types__WEBPACK_IMPORTED_MODULE_4___default().bool),disableFlip:(prop_types__WEBPACK_IMPORTED_MODULE_4___default().bool),disableHoverToClick:(prop_types__WEBPACK_IMPORTED_MODULE_4___default().bool),event:prop_types__WEBPACK_IMPORTED_MODULE_4___default().oneOf([\'hover\',\'click\']),eventDelay:(prop_types__WEBPACK_IMPORTED_MODULE_4___default().number),footer:(prop_types__WEBPACK_IMPORTED_MODULE_4___default().node),getPopper:(prop_types__WEBPACK_IMPORTED_MODULE_4___default().func),hideArrow:(prop_types__WEBPACK_IMPORTED_MODULE_4___default().bool),id:prop_types__WEBPACK_IMPORTED_MODULE_4___default().oneOfType([(prop_types__WEBPACK_IMPORTED_MODULE_4___default().string),(prop_types__WEBPACK_IMPORTED_MODULE_4___default().number)]),offset:(prop_types__WEBPACK_IMPORTED_MODULE_4___default().number),open:(prop_types__WEBPACK_IMPORTED_MODULE_4___default().bool),options:(prop_types__WEBPACK_IMPORTED_MODULE_4___default().object),placement:prop_types__WEBPACK_IMPORTED_MODULE_4___default().oneOf([\'top\',\'top-start\',\'top-end\',\'bottom\',\'bottom-start\',\'bottom-end\',\'left\',\'left-start\',\'left-end\',\'right\',\'right-start\',\'right-end\',\'auto\',\'center\']),showCloseButton:(prop_types__WEBPACK_IMPORTED_MODULE_4___default().bool),style:(prop_types__WEBPACK_IMPORTED_MODULE_4___default().object),styles:(prop_types__WEBPACK_IMPORTED_MODULE_4___default().object),target:prop_types__WEBPACK_IMPORTED_MODULE_4___default().oneOfType([(prop_types__WEBPACK_IMPORTED_MODULE_4___default().object),(prop_types__WEBPACK_IMPORTED_MODULE_4___default().string)]),title:(prop_types__WEBPACK_IMPORTED_MODULE_4___default().node),wrapperOptions:prop_types__WEBPACK_IMPORTED_MODULE_4___default().shape({offset:(prop_types__WEBPACK_IMPORTED_MODULE_4___default().number),placement:prop_types__WEBPACK_IMPORTED_MODULE_4___default().oneOf([\'top\',\'top-start\',\'top-end\',\'bottom\',\'bottom-start\',\'bottom-end\',\'left\',\'left-start\',\'left-end\',\'right\',\'right-start\',\'right-end\',\'auto\']),position:(prop_types__WEBPACK_IMPORTED_MODULE_4___default().bool)})});_defineProperty(ReactFloater,"defaultProps",{autoOpen:false,callback:noop,debug:false,disableAnimation:false,disableFlip:false,disableHoverToClick:false,event:\'click\',eventDelay:0.4,getPopper:noop,hideArrow:false,offset:15,placement:\'bottom\',showCloseButton:false,styles:{},target:null,wrapperOptions:{position:false}});\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/react-floater/es/index.js\n'
                );

                /***/
            },

        /***/ '../../node_modules/react-floater/node_modules/@gilbarbara/deep-equal/esm/helpers.js':
            /*!*******************************************************************************************!*\
  !*** ../../node_modules/react-floater/node_modules/@gilbarbara/deep-equal/esm/helpers.js ***!
  \*******************************************************************************************/
            /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    "__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isFunction: () => (/* binding */ isFunction),\n/* harmony export */   isNull: () => (/* binding */ isNull),\n/* harmony export */   isObject: () => (/* binding */ isObject),\n/* harmony export */   isRegex: () => (/* binding */ isRegex),\n/* harmony export */   isUndefined: () => (/* binding */ isUndefined)\n/* harmony export */ });\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction isOfType(type) {\n    return function (value) { return typeof value === type; };\n}\n// eslint-disable-next-line @typescript-eslint/ban-types\nvar isFunction = isOfType('function');\nvar isNull = function (value) {\n    return value === null;\n};\nvar isRegex = function (value) {\n    return Object.prototype.toString.call(value).slice(8, -1) === 'RegExp';\n};\nvar isObject = function (value) {\n    return !isUndefined(value) && !isNull(value) && (isFunction(value) || typeof value === 'object');\n};\nvar isUndefined = isOfType('undefined');\n//# sourceMappingURL=helpers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL3JlYWN0LWZsb2F0ZXIvbm9kZV9tb2R1bGVzL0BnaWxiYXJiYXJhL2RlZXAtZXF1YWwvZXNtL2hlbHBlcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlcml2L3dhbGxldHMvLi4vLi4vbm9kZV9tb2R1bGVzL3JlYWN0LWZsb2F0ZXIvbm9kZV9tb2R1bGVzL0BnaWxiYXJiYXJhL2RlZXAtZXF1YWwvZXNtL2hlbHBlcnMuanM/MDE1NCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L2Jhbi10eXBlc1xuZnVuY3Rpb24gaXNPZlR5cGUodHlwZSkge1xuICAgIHJldHVybiBmdW5jdGlvbiAodmFsdWUpIHsgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gdHlwZTsgfTtcbn1cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvYmFuLXR5cGVzXG5leHBvcnQgdmFyIGlzRnVuY3Rpb24gPSBpc09mVHlwZSgnZnVuY3Rpb24nKTtcbmV4cG9ydCB2YXIgaXNOdWxsID0gZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlID09PSBudWxsO1xufTtcbmV4cG9ydCB2YXIgaXNSZWdleCA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgIHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodmFsdWUpLnNsaWNlKDgsIC0xKSA9PT0gJ1JlZ0V4cCc7XG59O1xuZXhwb3J0IHZhciBpc09iamVjdCA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgIHJldHVybiAhaXNVbmRlZmluZWQodmFsdWUpICYmICFpc051bGwodmFsdWUpICYmIChpc0Z1bmN0aW9uKHZhbHVlKSB8fCB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnKTtcbn07XG5leHBvcnQgdmFyIGlzVW5kZWZpbmVkID0gaXNPZlR5cGUoJ3VuZGVmaW5lZCcpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aGVscGVycy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/react-floater/node_modules/@gilbarbara/deep-equal/esm/helpers.js\n"
                );

                /***/
            },

        /***/ '../../node_modules/react-floater/node_modules/@gilbarbara/deep-equal/esm/index.js':
            /*!*****************************************************************************************!*\
  !*** ../../node_modules/react-floater/node_modules/@gilbarbara/deep-equal/esm/index.js ***!
  \*****************************************************************************************/
            /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ equal)\n/* harmony export */ });\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers */ "../../node_modules/react-floater/node_modules/@gilbarbara/deep-equal/esm/helpers.js");\nvar __values = (undefined && undefined.__values) || function(o) {\n    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === "number") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");\n};\n\nfunction equalArray(left, right) {\n    var length = left.length;\n    if (length !== right.length) {\n        return false;\n    }\n    for (var index = length; index-- !== 0;) {\n        if (!equal(left[index], right[index])) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction equalArrayBuffer(left, right) {\n    if (left.byteLength !== right.byteLength) {\n        return false;\n    }\n    var view1 = new DataView(left.buffer);\n    var view2 = new DataView(right.buffer);\n    var index = left.byteLength;\n    while (index--) {\n        if (view1.getUint8(index) !== view2.getUint8(index)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction equalMap(left, right) {\n    var e_1, _a, e_2, _b;\n    if (left.size !== right.size) {\n        return false;\n    }\n    try {\n        for (var _c = __values(left.entries()), _d = _c.next(); !_d.done; _d = _c.next()) {\n            var index = _d.value;\n            if (!right.has(index[0])) {\n                return false;\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    try {\n        for (var _e = __values(left.entries()), _f = _e.next(); !_f.done; _f = _e.next()) {\n            var index = _f.value;\n            if (!equal(index[1], right.get(index[0]))) {\n                return false;\n            }\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    return true;\n}\nfunction equalSet(left, right) {\n    var e_3, _a;\n    if (left.size !== right.size) {\n        return false;\n    }\n    try {\n        for (var _b = __values(left.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var index = _c.value;\n            if (!right.has(index[0])) {\n                return false;\n            }\n        }\n    }\n    catch (e_3_1) { e_3 = { error: e_3_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_3) throw e_3.error; }\n    }\n    return true;\n}\nfunction equal(left, right) {\n    if (left === right) {\n        return true;\n    }\n    if (left && (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.isObject)(left) && right && (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.isObject)(right)) {\n        if (left.constructor !== right.constructor) {\n            return false;\n        }\n        if (Array.isArray(left) && Array.isArray(right)) {\n            return equalArray(left, right);\n        }\n        if (left instanceof Map && right instanceof Map) {\n            return equalMap(left, right);\n        }\n        if (left instanceof Set && right instanceof Set) {\n            return equalSet(left, right);\n        }\n        if (ArrayBuffer.isView(left) && ArrayBuffer.isView(right)) {\n            return equalArrayBuffer(left, right);\n        }\n        if ((0,_helpers__WEBPACK_IMPORTED_MODULE_0__.isRegex)(left) && (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.isRegex)(right)) {\n            return left.source === right.source && left.flags === right.flags;\n        }\n        if (left.valueOf !== Object.prototype.valueOf) {\n            return left.valueOf() === right.valueOf();\n        }\n        if (left.toString !== Object.prototype.toString) {\n            return left.toString() === right.toString();\n        }\n        var leftKeys = Object.keys(left);\n        var rightKeys = Object.keys(right);\n        if (leftKeys.length !== rightKeys.length) {\n            return false;\n        }\n        for (var index = leftKeys.length; index-- !== 0;) {\n            if (!Object.prototype.hasOwnProperty.call(right, leftKeys[index])) {\n                return false;\n            }\n        }\n        for (var index = leftKeys.length; index-- !== 0;) {\n            var key = leftKeys[index];\n            if (key === \'_owner\' && left.$$typeof) {\n                // React-specific: avoid traversing React elements\' _owner.\n                //  _owner contains circular references\n                // and is not needed when comparing the actual elements (and not their owners)\n                // eslint-disable-next-line no-continue\n                continue;\n            }\n            if (!equal(left[key], right[key])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    if (Number.isNaN(left) && Number.isNaN(right)) {\n        return true;\n    }\n    return left === right;\n}\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/react-floater/node_modules/@gilbarbara/deep-equal/esm/index.js\n'
                );

                /***/
            },

        /***/ '../../node_modules/react-floater/node_modules/is-lite/esm/index.js':
            /*!**************************************************************************!*\
  !*** ../../node_modules/react-floater/node_modules/is-lite/esm/index.js ***!
  \**************************************************************************/
            /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    "__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   getObjectType: () => (/* binding */ getObjectType)\n/* harmony export */ });\nvar DOM_PROPERTIES_TO_CHECK = [\n    'innerHTML',\n    'ownerDocument',\n    'style',\n    'attributes',\n    'nodeValue',\n];\nvar objectTypes = [\n    'Array',\n    'ArrayBuffer',\n    'AsyncFunction',\n    'AsyncGenerator',\n    'AsyncGeneratorFunction',\n    'Date',\n    'Error',\n    'Function',\n    'Generator',\n    'GeneratorFunction',\n    'HTMLElement',\n    'Map',\n    'Object',\n    'Promise',\n    'RegExp',\n    'Set',\n    'WeakMap',\n    'WeakSet',\n];\nvar primitiveTypes = [\n    'bigint',\n    'boolean',\n    'null',\n    'number',\n    'string',\n    'symbol',\n    'undefined',\n];\nfunction getObjectType(value) {\n    var objectTypeName = Object.prototype.toString.call(value).slice(8, -1);\n    if (/HTML\\w+Element/.test(objectTypeName)) {\n        return 'HTMLElement';\n    }\n    if (isObjectType(objectTypeName)) {\n        return objectTypeName;\n    }\n    return undefined;\n}\nfunction isObjectOfType(type) {\n    return function (value) { return getObjectType(value) === type; };\n}\nfunction isObjectType(name) {\n    return objectTypes.includes(name);\n}\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction isOfType(type) {\n    return function (value) { return typeof value === type; };\n}\nfunction isPrimitiveType(name) {\n    return primitiveTypes.includes(name);\n}\nfunction is(value) {\n    if (value === null) {\n        return 'null';\n    }\n    switch (typeof value) {\n        case 'bigint':\n            return 'bigint';\n        case 'boolean':\n            return 'boolean';\n        case 'number':\n            return 'number';\n        case 'string':\n            return 'string';\n        case 'symbol':\n            return 'symbol';\n        case 'undefined':\n            return 'undefined';\n        default:\n    }\n    if (is.array(value)) {\n        return 'Array';\n    }\n    if (is.plainFunction(value)) {\n        return 'Function';\n    }\n    var tagType = getObjectType(value);\n    /* istanbul ignore else */\n    if (tagType) {\n        return tagType;\n    }\n    /* istanbul ignore next */\n    return 'Object';\n}\nis.array = Array.isArray;\nis.arrayOf = function (target, predicate) {\n    if (!is.array(target) && !is.function(predicate)) {\n        return false;\n    }\n    return target.every(function (d) { return predicate(d); });\n};\nis.asyncGeneratorFunction = function (value) {\n    return getObjectType(value) === 'AsyncGeneratorFunction';\n};\n// eslint-disable-next-line @typescript-eslint/ban-types\nis.asyncFunction = isObjectOfType('AsyncFunction');\nis.bigint = isOfType('bigint');\nis.boolean = function (value) {\n    return value === true || value === false;\n};\nis.date = isObjectOfType('Date');\nis.defined = function (value) { return !is.undefined(value); };\nis.domElement = function (value) {\n    return (is.object(value) &&\n        !is.plainObject(value) &&\n        value.nodeType === 1 &&\n        is.string(value.nodeName) &&\n        DOM_PROPERTIES_TO_CHECK.every(function (property) { return property in value; }));\n};\nis.empty = function (value) {\n    return ((is.string(value) && value.length === 0) ||\n        (is.array(value) && value.length === 0) ||\n        (is.object(value) && !is.map(value) && !is.set(value) && Object.keys(value).length === 0) ||\n        (is.set(value) && value.size === 0) ||\n        (is.map(value) && value.size === 0));\n};\nis.error = isObjectOfType('Error');\n// eslint-disable-next-line @typescript-eslint/ban-types\nis.function = isOfType('function');\nis.generator = function (value) {\n    return (is.iterable(value) &&\n        is.function(value.next) &&\n        is.function(value.throw));\n};\nis.generatorFunction = isObjectOfType('GeneratorFunction');\nis.instanceOf = function (instance, class_) {\n    if (!instance || !class_) {\n        return false;\n    }\n    return Object.getPrototypeOf(instance) === class_.prototype;\n};\nis.iterable = function (value) {\n    return (!is.nullOrUndefined(value) && is.function(value[Symbol.iterator]));\n};\nis.map = isObjectOfType('Map');\nis.nan = function (value) {\n    return Number.isNaN(value);\n};\nis.null = function (value) {\n    return value === null;\n};\nis.nullOrUndefined = function (value) {\n    return is.null(value) || is.undefined(value);\n};\nis.number = function (value) {\n    return isOfType('number')(value) && !is.nan(value);\n};\nis.numericString = function (value) {\n    return is.string(value) && value.length > 0 && !Number.isNaN(Number(value));\n};\n// eslint-disable-next-line @typescript-eslint/ban-types\nis.object = function (value) {\n    return !is.nullOrUndefined(value) && (is.function(value) || typeof value === 'object');\n};\nis.oneOf = function (target, value) {\n    if (!is.array(target)) {\n        return false;\n    }\n    // eslint-disable-next-line unicorn/prefer-includes\n    return target.indexOf(value) > -1;\n};\n// eslint-disable-next-line @typescript-eslint/ban-types\nis.plainFunction = isObjectOfType('Function');\nis.plainObject = function (value) {\n    if (getObjectType(value) !== 'Object') {\n        return false;\n    }\n    var prototype = Object.getPrototypeOf(value);\n    return prototype === null || prototype === Object.getPrototypeOf({});\n};\nis.primitive = function (value) {\n    return is.null(value) || isPrimitiveType(typeof value);\n};\nis.promise = isObjectOfType('Promise');\nis.propertyOf = function (target, key, predicate) {\n    if (!is.object(target) || !key) {\n        return false;\n    }\n    var value = target[key];\n    if (is.function(predicate)) {\n        return predicate(value);\n    }\n    return is.defined(value);\n};\nis.regexp = isObjectOfType('RegExp');\nis.set = isObjectOfType('Set');\nis.string = isOfType('string');\nis.symbol = isOfType('symbol');\nis.undefined = isOfType('undefined');\nis.weakMap = isObjectOfType('WeakMap');\nis.weakSet = isObjectOfType('WeakSet');\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (is);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/react-floater/node_modules/is-lite/esm/index.js\n"
                );

                /***/
            },

        /***/ '../../node_modules/react-floater/node_modules/tree-changes/esm/helpers.js':
            /*!*********************************************************************************!*\
  !*** ../../node_modules/react-floater/node_modules/tree-changes/esm/helpers.js ***!
  \*********************************************************************************/
            /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   canHaveLength: () => (/* binding */ canHaveLength),\n/* harmony export */   checkEquality: () => (/* binding */ checkEquality),\n/* harmony export */   compareNumbers: () => (/* binding */ compareNumbers),\n/* harmony export */   compareValues: () => (/* binding */ compareValues),\n/* harmony export */   getIterables: () => (/* binding */ getIterables),\n/* harmony export */   hasEntry: () => (/* binding */ hasEntry),\n/* harmony export */   hasExtraKeys: () => (/* binding */ hasExtraKeys),\n/* harmony export */   hasValue: () => (/* binding */ hasValue),\n/* harmony export */   includesOrEqualsTo: () => (/* binding */ includesOrEqualsTo),\n/* harmony export */   isEqualPredicate: () => (/* binding */ isEqualPredicate),\n/* harmony export */   isSameType: () => (/* binding */ isSameType),\n/* harmony export */   nested: () => (/* binding */ nested)\n/* harmony export */ });\n/* harmony import */ var _gilbarbara_deep_equal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @gilbarbara/deep-equal */ "../../node_modules/react-floater/node_modules/@gilbarbara/deep-equal/esm/index.js");\n/* harmony import */ var is_lite__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! is-lite */ "../../node_modules/react-floater/node_modules/is-lite/esm/index.js");\n\n\nfunction canHaveLength() {\n    var arguments_ = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        arguments_[_i] = arguments[_i];\n    }\n    return arguments_.every(function (d) { return is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].string(d) || is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].array(d) || is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].plainObject(d); });\n}\nfunction checkEquality(left, right, value) {\n    if (!isSameType(left, right)) {\n        return false;\n    }\n    if ([left, right].every(is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].array)) {\n        return !left.some(hasValue(value)) && right.some(hasValue(value));\n    }\n    /* istanbul ignore else */\n    if ([left, right].every(is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].plainObject)) {\n        return (!Object.entries(left).some(hasEntry(value)) && Object.entries(right).some(hasEntry(value)));\n    }\n    return right === value;\n}\nfunction compareNumbers(previousData, data, options) {\n    var actual = options.actual, key = options.key, previous = options.previous, type = options.type;\n    var left = nested(previousData, key);\n    var right = nested(data, key);\n    var changed = [left, right].every(is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].number) && (type === \'increased\' ? left < right : left > right);\n    if (!is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].undefined(actual)) {\n        changed = changed && right === actual;\n    }\n    if (!is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].undefined(previous)) {\n        changed = changed && left === previous;\n    }\n    return changed;\n}\nfunction compareValues(previousData, data, options) {\n    var key = options.key, type = options.type, value = options.value;\n    var left = nested(previousData, key);\n    var right = nested(data, key);\n    var primary = type === \'added\' ? left : right;\n    var secondary = type === \'added\' ? right : left;\n    // console.log({ primary, secondary });\n    if (!is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].nullOrUndefined(value)) {\n        if (is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].defined(primary)) {\n            // check if nested data matches\n            if (is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].array(primary) || is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].plainObject(primary)) {\n                return checkEquality(primary, secondary, value);\n            }\n        }\n        else {\n            return (0,_gilbarbara_deep_equal__WEBPACK_IMPORTED_MODULE_1__["default"])(secondary, value);\n        }\n        return false;\n    }\n    if ([left, right].every(is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].array)) {\n        return !secondary.every(isEqualPredicate(primary));\n    }\n    if ([left, right].every(is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].plainObject)) {\n        return hasExtraKeys(Object.keys(primary), Object.keys(secondary));\n    }\n    return (![left, right].every(function (d) { return is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].primitive(d) && is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].defined(d); }) &&\n        (type === \'added\'\n            ? !is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].defined(left) && is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].defined(right)\n            : is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].defined(left) && !is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].defined(right)));\n}\nfunction getIterables(previousData, data, _a) {\n    var _b = _a === void 0 ? {} : _a, key = _b.key;\n    var left = nested(previousData, key);\n    var right = nested(data, key);\n    if (!isSameType(left, right)) {\n        throw new TypeError(\'Inputs have different types\');\n    }\n    if (!canHaveLength(left, right)) {\n        throw new TypeError("Inputs don\'t have length");\n    }\n    if ([left, right].every(is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].plainObject)) {\n        left = Object.keys(left);\n        right = Object.keys(right);\n    }\n    return [left, right];\n}\nfunction hasEntry(input) {\n    return function (_a) {\n        var key = _a[0], value = _a[1];\n        if (is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].array(input)) {\n            return ((0,_gilbarbara_deep_equal__WEBPACK_IMPORTED_MODULE_1__["default"])(input, value) ||\n                input.some(function (d) { return (0,_gilbarbara_deep_equal__WEBPACK_IMPORTED_MODULE_1__["default"])(d, value) || (is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].array(value) && isEqualPredicate(value)(d)); }));\n        }\n        /* istanbul ignore else */\n        if (is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].plainObject(input) && input[key]) {\n            return !!input[key] && (0,_gilbarbara_deep_equal__WEBPACK_IMPORTED_MODULE_1__["default"])(input[key], value);\n        }\n        return (0,_gilbarbara_deep_equal__WEBPACK_IMPORTED_MODULE_1__["default"])(input, value);\n    };\n}\nfunction hasExtraKeys(left, right) {\n    return right.some(function (d) { return !left.includes(d); });\n}\nfunction hasValue(input) {\n    return function (value) {\n        if (is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].array(input)) {\n            return input.some(function (d) { return (0,_gilbarbara_deep_equal__WEBPACK_IMPORTED_MODULE_1__["default"])(d, value) || (is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].array(value) && isEqualPredicate(value)(d)); });\n        }\n        return (0,_gilbarbara_deep_equal__WEBPACK_IMPORTED_MODULE_1__["default"])(input, value);\n    };\n}\nfunction includesOrEqualsTo(previousValue, value) {\n    return is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].array(previousValue)\n        ? previousValue.some(function (d) { return (0,_gilbarbara_deep_equal__WEBPACK_IMPORTED_MODULE_1__["default"])(d, value); })\n        : (0,_gilbarbara_deep_equal__WEBPACK_IMPORTED_MODULE_1__["default"])(previousValue, value);\n}\nfunction isEqualPredicate(data) {\n    return function (value) { return data.some(function (d) { return (0,_gilbarbara_deep_equal__WEBPACK_IMPORTED_MODULE_1__["default"])(d, value); }); };\n}\nfunction isSameType() {\n    var arguments_ = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        arguments_[_i] = arguments[_i];\n    }\n    return (arguments_.every(is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].array) ||\n        arguments_.every(is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].number) ||\n        arguments_.every(is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].plainObject) ||\n        arguments_.every(is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].string));\n}\nfunction nested(data, property) {\n    /* istanbul ignore else */\n    if (is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].plainObject(data) || is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].array(data)) {\n        /* istanbul ignore else */\n        if (is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].string(property)) {\n            var props = property.split(\'.\');\n            return props.reduce(function (acc, d) { return acc && acc[d]; }, data);\n        }\n        /* istanbul ignore else */\n        if (is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].number(property)) {\n            return data[property];\n        }\n        return data;\n    }\n    return data;\n}\n//# sourceMappingURL=helpers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/react-floater/node_modules/tree-changes/esm/helpers.js\n'
                );

                /***/
            },

        /***/ '../../node_modules/react-floater/node_modules/tree-changes/esm/index.js':
            /*!*******************************************************************************!*\
  !*** ../../node_modules/react-floater/node_modules/tree-changes/esm/index.js ***!
  \*******************************************************************************/
            /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ treeChanges)\n/* harmony export */ });\n/* harmony import */ var _gilbarbara_deep_equal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @gilbarbara/deep-equal */ "../../node_modules/react-floater/node_modules/@gilbarbara/deep-equal/esm/index.js");\n/* harmony import */ var is_lite__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! is-lite */ "../../node_modules/react-floater/node_modules/is-lite/esm/index.js");\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helpers */ "../../node_modules/react-floater/node_modules/tree-changes/esm/helpers.js");\n\n\n\nfunction treeChanges(previousData, data) {\n    if ([previousData, data].some(is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].nullOrUndefined)) {\n        throw new Error(\'Missing required parameters\');\n    }\n    if (![previousData, data].every(function (d) { return is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].plainObject(d) || is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].array(d); })) {\n        throw new Error(\'Expected plain objects or array\');\n    }\n    var added = function (key, value) {\n        try {\n            return (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.compareValues)(previousData, data, { key: key, type: \'added\', value: value });\n        }\n        catch (_a) {\n            /* istanbul ignore next */\n            return false;\n        }\n    };\n    var changed = function (key, actual, previous) {\n        try {\n            var left = (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.nested)(previousData, key);\n            var right = (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.nested)(data, key);\n            var hasActual = is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].defined(actual);\n            var hasPrevious = is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].defined(previous);\n            if (hasActual || hasPrevious) {\n                var leftComparator = hasPrevious\n                    ? (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.includesOrEqualsTo)(previous, left)\n                    : !(0,_helpers__WEBPACK_IMPORTED_MODULE_1__.includesOrEqualsTo)(actual, left);\n                var rightComparator = (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.includesOrEqualsTo)(actual, right);\n                return leftComparator && rightComparator;\n            }\n            if ([left, right].every(is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].array) || [left, right].every(is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].plainObject)) {\n                return !(0,_gilbarbara_deep_equal__WEBPACK_IMPORTED_MODULE_2__["default"])(left, right);\n            }\n            return left !== right;\n        }\n        catch (_a) {\n            /* istanbul ignore next */\n            return false;\n        }\n    };\n    var changedFrom = function (key, previous, actual) {\n        if (!is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].defined(key)) {\n            return false;\n        }\n        try {\n            var left = (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.nested)(previousData, key);\n            var right = (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.nested)(data, key);\n            var hasActual = is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].defined(actual);\n            return ((0,_helpers__WEBPACK_IMPORTED_MODULE_1__.includesOrEqualsTo)(previous, left) &&\n                (hasActual ? (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.includesOrEqualsTo)(actual, right) : !hasActual));\n        }\n        catch (_a) {\n            /* istanbul ignore next */\n            return false;\n        }\n    };\n    /**\n     * @deprecated\n     * Use "changed" instead\n     */\n    var changedTo = function (key, actual) {\n        if (!is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].defined(key)) {\n            return false;\n        }\n        /* istanbul ignore next */\n        if (true) {\n            // eslint-disable-next-line no-console\n            console.warn(\'`changedTo` is deprecated! Replace it with `change`\');\n        }\n        return changed(key, actual);\n    };\n    var decreased = function (key, actual, previous) {\n        if (!is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].defined(key)) {\n            return false;\n        }\n        try {\n            return (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.compareNumbers)(previousData, data, { key: key, actual: actual, previous: previous, type: \'decreased\' });\n        }\n        catch (_a) {\n            /* istanbul ignore next */\n            return false;\n        }\n    };\n    var emptied = function (key) {\n        try {\n            var _a = (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.getIterables)(previousData, data, { key: key }), left = _a[0], right = _a[1];\n            return !!left.length && !right.length;\n        }\n        catch (_b) {\n            /* istanbul ignore next */\n            return false;\n        }\n    };\n    var filled = function (key) {\n        try {\n            var _a = (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.getIterables)(previousData, data, { key: key }), left = _a[0], right = _a[1];\n            return !left.length && !!right.length;\n        }\n        catch (_b) {\n            /* istanbul ignore next */\n            return false;\n        }\n    };\n    var increased = function (key, actual, previous) {\n        if (!is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].defined(key)) {\n            return false;\n        }\n        try {\n            return (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.compareNumbers)(previousData, data, { key: key, actual: actual, previous: previous, type: \'increased\' });\n        }\n        catch (_a) {\n            /* istanbul ignore next */\n            return false;\n        }\n    };\n    var removed = function (key, value) {\n        try {\n            return (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.compareValues)(previousData, data, { key: key, type: \'removed\', value: value });\n        }\n        catch (_a) {\n            /* istanbul ignore next */\n            return false;\n        }\n    };\n    return { added: added, changed: changed, changedFrom: changedFrom, changedTo: changedTo, decreased: decreased, emptied: emptied, filled: filled, increased: increased, removed: removed };\n}\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL3JlYWN0LWZsb2F0ZXIvbm9kZV9tb2R1bGVzL3RyZWUtY2hhbmdlcy9lc20vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlcml2L3dhbGxldHMvLi4vLi4vbm9kZV9tb2R1bGVzL3JlYWN0LWZsb2F0ZXIvbm9kZV9tb2R1bGVzL3RyZWUtY2hhbmdlcy9lc20vaW5kZXguanM/OTRmNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXF1YWwgZnJvbSAnQGdpbGJhcmJhcmEvZGVlcC1lcXVhbCc7XG5pbXBvcnQgaXMgZnJvbSAnaXMtbGl0ZSc7XG5pbXBvcnQgeyBjb21wYXJlTnVtYmVycywgY29tcGFyZVZhbHVlcywgZ2V0SXRlcmFibGVzLCBpbmNsdWRlc09yRXF1YWxzVG8sIG5lc3RlZCB9IGZyb20gJy4vaGVscGVycyc7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB0cmVlQ2hhbmdlcyhwcmV2aW91c0RhdGEsIGRhdGEpIHtcbiAgICBpZiAoW3ByZXZpb3VzRGF0YSwgZGF0YV0uc29tZShpcy5udWxsT3JVbmRlZmluZWQpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignTWlzc2luZyByZXF1aXJlZCBwYXJhbWV0ZXJzJyk7XG4gICAgfVxuICAgIGlmICghW3ByZXZpb3VzRGF0YSwgZGF0YV0uZXZlcnkoZnVuY3Rpb24gKGQpIHsgcmV0dXJuIGlzLnBsYWluT2JqZWN0KGQpIHx8IGlzLmFycmF5KGQpOyB9KSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0V4cGVjdGVkIHBsYWluIG9iamVjdHMgb3IgYXJyYXknKTtcbiAgICB9XG4gICAgdmFyIGFkZGVkID0gZnVuY3Rpb24gKGtleSwgdmFsdWUpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldHVybiBjb21wYXJlVmFsdWVzKHByZXZpb3VzRGF0YSwgZGF0YSwgeyBrZXk6IGtleSwgdHlwZTogJ2FkZGVkJywgdmFsdWU6IHZhbHVlIH0pO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChfYSkge1xuICAgICAgICAgICAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgdmFyIGNoYW5nZWQgPSBmdW5jdGlvbiAoa2V5LCBhY3R1YWwsIHByZXZpb3VzKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICB2YXIgbGVmdCA9IG5lc3RlZChwcmV2aW91c0RhdGEsIGtleSk7XG4gICAgICAgICAgICB2YXIgcmlnaHQgPSBuZXN0ZWQoZGF0YSwga2V5KTtcbiAgICAgICAgICAgIHZhciBoYXNBY3R1YWwgPSBpcy5kZWZpbmVkKGFjdHVhbCk7XG4gICAgICAgICAgICB2YXIgaGFzUHJldmlvdXMgPSBpcy5kZWZpbmVkKHByZXZpb3VzKTtcbiAgICAgICAgICAgIGlmIChoYXNBY3R1YWwgfHwgaGFzUHJldmlvdXMpIHtcbiAgICAgICAgICAgICAgICB2YXIgbGVmdENvbXBhcmF0b3IgPSBoYXNQcmV2aW91c1xuICAgICAgICAgICAgICAgICAgICA/IGluY2x1ZGVzT3JFcXVhbHNUbyhwcmV2aW91cywgbGVmdClcbiAgICAgICAgICAgICAgICAgICAgOiAhaW5jbHVkZXNPckVxdWFsc1RvKGFjdHVhbCwgbGVmdCk7XG4gICAgICAgICAgICAgICAgdmFyIHJpZ2h0Q29tcGFyYXRvciA9IGluY2x1ZGVzT3JFcXVhbHNUbyhhY3R1YWwsIHJpZ2h0KTtcbiAgICAgICAgICAgICAgICByZXR1cm4gbGVmdENvbXBhcmF0b3IgJiYgcmlnaHRDb21wYXJhdG9yO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKFtsZWZ0LCByaWdodF0uZXZlcnkoaXMuYXJyYXkpIHx8IFtsZWZ0LCByaWdodF0uZXZlcnkoaXMucGxhaW5PYmplY3QpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuICFlcXVhbChsZWZ0LCByaWdodCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gbGVmdCAhPT0gcmlnaHQ7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKF9hKSB7XG4gICAgICAgICAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfTtcbiAgICB2YXIgY2hhbmdlZEZyb20gPSBmdW5jdGlvbiAoa2V5LCBwcmV2aW91cywgYWN0dWFsKSB7XG4gICAgICAgIGlmICghaXMuZGVmaW5lZChrZXkpKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHZhciBsZWZ0ID0gbmVzdGVkKHByZXZpb3VzRGF0YSwga2V5KTtcbiAgICAgICAgICAgIHZhciByaWdodCA9IG5lc3RlZChkYXRhLCBrZXkpO1xuICAgICAgICAgICAgdmFyIGhhc0FjdHVhbCA9IGlzLmRlZmluZWQoYWN0dWFsKTtcbiAgICAgICAgICAgIHJldHVybiAoaW5jbHVkZXNPckVxdWFsc1RvKHByZXZpb3VzLCBsZWZ0KSAmJlxuICAgICAgICAgICAgICAgIChoYXNBY3R1YWwgPyBpbmNsdWRlc09yRXF1YWxzVG8oYWN0dWFsLCByaWdodCkgOiAhaGFzQWN0dWFsKSk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKF9hKSB7XG4gICAgICAgICAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBAZGVwcmVjYXRlZFxuICAgICAqIFVzZSBcImNoYW5nZWRcIiBpbnN0ZWFkXG4gICAgICovXG4gICAgdmFyIGNoYW5nZWRUbyA9IGZ1bmN0aW9uIChrZXksIGFjdHVhbCkge1xuICAgICAgICBpZiAoIWlzLmRlZmluZWQoa2V5KSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG4gICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ2RldmVsb3BtZW50Jykge1xuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICAgICAgICAgIGNvbnNvbGUud2FybignYGNoYW5nZWRUb2AgaXMgZGVwcmVjYXRlZCEgUmVwbGFjZSBpdCB3aXRoIGBjaGFuZ2VgJyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGNoYW5nZWQoa2V5LCBhY3R1YWwpO1xuICAgIH07XG4gICAgdmFyIGRlY3JlYXNlZCA9IGZ1bmN0aW9uIChrZXksIGFjdHVhbCwgcHJldmlvdXMpIHtcbiAgICAgICAgaWYgKCFpcy5kZWZpbmVkKGtleSkpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmV0dXJuIGNvbXBhcmVOdW1iZXJzKHByZXZpb3VzRGF0YSwgZGF0YSwgeyBrZXk6IGtleSwgYWN0dWFsOiBhY3R1YWwsIHByZXZpb3VzOiBwcmV2aW91cywgdHlwZTogJ2RlY3JlYXNlZCcgfSk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKF9hKSB7XG4gICAgICAgICAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfTtcbiAgICB2YXIgZW1wdGllZCA9IGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHZhciBfYSA9IGdldEl0ZXJhYmxlcyhwcmV2aW91c0RhdGEsIGRhdGEsIHsga2V5OiBrZXkgfSksIGxlZnQgPSBfYVswXSwgcmlnaHQgPSBfYVsxXTtcbiAgICAgICAgICAgIHJldHVybiAhIWxlZnQubGVuZ3RoICYmICFyaWdodC5sZW5ndGg7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKF9iKSB7XG4gICAgICAgICAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfTtcbiAgICB2YXIgZmlsbGVkID0gZnVuY3Rpb24gKGtleSkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgdmFyIF9hID0gZ2V0SXRlcmFibGVzKHByZXZpb3VzRGF0YSwgZGF0YSwgeyBrZXk6IGtleSB9KSwgbGVmdCA9IF9hWzBdLCByaWdodCA9IF9hWzFdO1xuICAgICAgICAgICAgcmV0dXJuICFsZWZ0Lmxlbmd0aCAmJiAhIXJpZ2h0Lmxlbmd0aDtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoX2IpIHtcbiAgICAgICAgICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHZhciBpbmNyZWFzZWQgPSBmdW5jdGlvbiAoa2V5LCBhY3R1YWwsIHByZXZpb3VzKSB7XG4gICAgICAgIGlmICghaXMuZGVmaW5lZChrZXkpKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldHVybiBjb21wYXJlTnVtYmVycyhwcmV2aW91c0RhdGEsIGRhdGEsIHsga2V5OiBrZXksIGFjdHVhbDogYWN0dWFsLCBwcmV2aW91czogcHJldmlvdXMsIHR5cGU6ICdpbmNyZWFzZWQnIH0pO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChfYSkge1xuICAgICAgICAgICAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgdmFyIHJlbW92ZWQgPSBmdW5jdGlvbiAoa2V5LCB2YWx1ZSkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmV0dXJuIGNvbXBhcmVWYWx1ZXMocHJldmlvdXNEYXRhLCBkYXRhLCB7IGtleToga2V5LCB0eXBlOiAncmVtb3ZlZCcsIHZhbHVlOiB2YWx1ZSB9KTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoX2EpIHtcbiAgICAgICAgICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiB7IGFkZGVkOiBhZGRlZCwgY2hhbmdlZDogY2hhbmdlZCwgY2hhbmdlZEZyb206IGNoYW5nZWRGcm9tLCBjaGFuZ2VkVG86IGNoYW5nZWRUbywgZGVjcmVhc2VkOiBkZWNyZWFzZWQsIGVtcHRpZWQ6IGVtcHRpZWQsIGZpbGxlZDogZmlsbGVkLCBpbmNyZWFzZWQ6IGluY3JlYXNlZCwgcmVtb3ZlZDogcmVtb3ZlZCB9O1xufVxuZXhwb3J0ICogZnJvbSAnLi90eXBlcyc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/react-floater/node_modules/tree-changes/esm/index.js\n'
                );

                /***/
            },

        /***/ '../../node_modules/react-innertext/index.js':
            /*!***************************************************!*\
  !*** ../../node_modules/react-innertext/index.js ***!
  \***************************************************/
            /***/ module => {
                'use strict';
                eval(
                    "\nvar hasProps = function (jsx) {\n    return Object.prototype.hasOwnProperty.call(jsx, 'props');\n};\nvar reduceJsxToString = function (previous, current) {\n    return previous + innerText(current);\n};\nvar innerText = function (jsx) {\n    if (jsx === null ||\n        typeof jsx === 'boolean' ||\n        typeof jsx === 'undefined') {\n        return '';\n    }\n    if (typeof jsx === 'number') {\n        return jsx.toString();\n    }\n    if (typeof jsx === 'string') {\n        return jsx;\n    }\n    if (Array.isArray(jsx)) {\n        return jsx.reduce(reduceJsxToString, '');\n    }\n    if (hasProps(jsx) &&\n        Object.prototype.hasOwnProperty.call(jsx.props, 'children')) {\n        return innerText(jsx.props.children);\n    }\n    return '';\n};\ninnerText.default = innerText;\nmodule.exports = innerText;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL3JlYWN0LWlubmVydGV4dC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvd2FsbGV0cy8uLi8uLi9ub2RlX21vZHVsZXMvcmVhY3QtaW5uZXJ0ZXh0L2luZGV4LmpzP2FlNjkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgaGFzUHJvcHMgPSBmdW5jdGlvbiAoanN4KSB7XG4gICAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChqc3gsICdwcm9wcycpO1xufTtcbnZhciByZWR1Y2VKc3hUb1N0cmluZyA9IGZ1bmN0aW9uIChwcmV2aW91cywgY3VycmVudCkge1xuICAgIHJldHVybiBwcmV2aW91cyArIGlubmVyVGV4dChjdXJyZW50KTtcbn07XG52YXIgaW5uZXJUZXh0ID0gZnVuY3Rpb24gKGpzeCkge1xuICAgIGlmIChqc3ggPT09IG51bGwgfHxcbiAgICAgICAgdHlwZW9mIGpzeCA9PT0gJ2Jvb2xlYW4nIHx8XG4gICAgICAgIHR5cGVvZiBqc3ggPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHJldHVybiAnJztcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBqc3ggPT09ICdudW1iZXInKSB7XG4gICAgICAgIHJldHVybiBqc3gudG9TdHJpbmcoKTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBqc3ggPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHJldHVybiBqc3g7XG4gICAgfVxuICAgIGlmIChBcnJheS5pc0FycmF5KGpzeCkpIHtcbiAgICAgICAgcmV0dXJuIGpzeC5yZWR1Y2UocmVkdWNlSnN4VG9TdHJpbmcsICcnKTtcbiAgICB9XG4gICAgaWYgKGhhc1Byb3BzKGpzeCkgJiZcbiAgICAgICAgT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGpzeC5wcm9wcywgJ2NoaWxkcmVuJykpIHtcbiAgICAgICAgcmV0dXJuIGlubmVyVGV4dChqc3gucHJvcHMuY2hpbGRyZW4pO1xuICAgIH1cbiAgICByZXR1cm4gJyc7XG59O1xuaW5uZXJUZXh0LmRlZmF1bHQgPSBpbm5lclRleHQ7XG5tb2R1bGUuZXhwb3J0cyA9IGlubmVyVGV4dDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/react-innertext/index.js\n"
                );

                /***/
            },

        /***/ '../../node_modules/scroll/index.js':
            /*!******************************************!*\
  !*** ../../node_modules/scroll/index.js ***!
  \******************************************/
            /***/ module => {
                eval(
                    "var E_NOSCROLL = new Error('Element already at target scroll position')\nvar E_CANCELLED = new Error('Scroll cancelled')\nvar min = Math.min\nvar ms = Date.now\n\nmodule.exports = {\n  left: make('scrollLeft'),\n  top: make('scrollTop')\n}\n\nfunction make (prop) {\n  return function scroll (el, to, opts, cb) {\n    opts = opts || {}\n\n    if (typeof opts == 'function') cb = opts, opts = {}\n    if (typeof cb != 'function') cb = noop\n\n    var start = ms()\n    var from = el[prop]\n    var ease = opts.ease || inOutSine\n    var duration = !isNaN(opts.duration) ? +opts.duration : 350\n    var cancelled = false\n\n    return from === to ?\n      cb(E_NOSCROLL, el[prop]) :\n      requestAnimationFrame(animate), cancel\n\n    function cancel () {\n      cancelled = true\n    }\n\n    function animate (timestamp) {\n      if (cancelled) return cb(E_CANCELLED, el[prop])\n\n      var now = ms()\n      var time = min(1, ((now - start) / duration))\n      var eased = ease(time)\n\n      el[prop] = (eased * (to - from)) + from\n\n      time < 1 ?\n        requestAnimationFrame(animate) :\n        requestAnimationFrame(function () {\n          cb(null, el[prop])\n        })\n    }\n  }\n}\n\nfunction inOutSine (n) {\n  return 0.5 * (1 - Math.cos(Math.PI * n))\n}\n\nfunction noop () {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL3Njcm9sbC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvd2FsbGV0cy8uLi8uLi9ub2RlX21vZHVsZXMvc2Nyb2xsL2luZGV4LmpzPzkyNDQiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIEVfTk9TQ1JPTEwgPSBuZXcgRXJyb3IoJ0VsZW1lbnQgYWxyZWFkeSBhdCB0YXJnZXQgc2Nyb2xsIHBvc2l0aW9uJylcbnZhciBFX0NBTkNFTExFRCA9IG5ldyBFcnJvcignU2Nyb2xsIGNhbmNlbGxlZCcpXG52YXIgbWluID0gTWF0aC5taW5cbnZhciBtcyA9IERhdGUubm93XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBsZWZ0OiBtYWtlKCdzY3JvbGxMZWZ0JyksXG4gIHRvcDogbWFrZSgnc2Nyb2xsVG9wJylcbn1cblxuZnVuY3Rpb24gbWFrZSAocHJvcCkge1xuICByZXR1cm4gZnVuY3Rpb24gc2Nyb2xsIChlbCwgdG8sIG9wdHMsIGNiKSB7XG4gICAgb3B0cyA9IG9wdHMgfHwge31cblxuICAgIGlmICh0eXBlb2Ygb3B0cyA9PSAnZnVuY3Rpb24nKSBjYiA9IG9wdHMsIG9wdHMgPSB7fVxuICAgIGlmICh0eXBlb2YgY2IgIT0gJ2Z1bmN0aW9uJykgY2IgPSBub29wXG5cbiAgICB2YXIgc3RhcnQgPSBtcygpXG4gICAgdmFyIGZyb20gPSBlbFtwcm9wXVxuICAgIHZhciBlYXNlID0gb3B0cy5lYXNlIHx8IGluT3V0U2luZVxuICAgIHZhciBkdXJhdGlvbiA9ICFpc05hTihvcHRzLmR1cmF0aW9uKSA/ICtvcHRzLmR1cmF0aW9uIDogMzUwXG4gICAgdmFyIGNhbmNlbGxlZCA9IGZhbHNlXG5cbiAgICByZXR1cm4gZnJvbSA9PT0gdG8gP1xuICAgICAgY2IoRV9OT1NDUk9MTCwgZWxbcHJvcF0pIDpcbiAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZShhbmltYXRlKSwgY2FuY2VsXG5cbiAgICBmdW5jdGlvbiBjYW5jZWwgKCkge1xuICAgICAgY2FuY2VsbGVkID0gdHJ1ZVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGFuaW1hdGUgKHRpbWVzdGFtcCkge1xuICAgICAgaWYgKGNhbmNlbGxlZCkgcmV0dXJuIGNiKEVfQ0FOQ0VMTEVELCBlbFtwcm9wXSlcblxuICAgICAgdmFyIG5vdyA9IG1zKClcbiAgICAgIHZhciB0aW1lID0gbWluKDEsICgobm93IC0gc3RhcnQpIC8gZHVyYXRpb24pKVxuICAgICAgdmFyIGVhc2VkID0gZWFzZSh0aW1lKVxuXG4gICAgICBlbFtwcm9wXSA9IChlYXNlZCAqICh0byAtIGZyb20pKSArIGZyb21cblxuICAgICAgdGltZSA8IDEgP1xuICAgICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoYW5pbWF0ZSkgOlxuICAgICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoZnVuY3Rpb24gKCkge1xuICAgICAgICAgIGNiKG51bGwsIGVsW3Byb3BdKVxuICAgICAgICB9KVxuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBpbk91dFNpbmUgKG4pIHtcbiAgcmV0dXJuIDAuNSAqICgxIC0gTWF0aC5jb3MoTWF0aC5QSSAqIG4pKVxufVxuXG5mdW5jdGlvbiBub29wICgpIHt9XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/scroll/index.js\n"
                );

                /***/
            },

        /***/ '../../node_modules/scrollparent/scrollparent.js':
            /*!*******************************************************!*\
  !*** ../../node_modules/scrollparent/scrollparent.js ***!
  \*******************************************************/
            /***/ function (module, exports) {
                eval(
                    'var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n}(this, function () {\n  function isScrolling(node) {\n    var overflow = getComputedStyle(node, null).getPropertyValue("overflow");\n\n    return overflow.indexOf("scroll") > -1 || overflow.indexOf("auto") > - 1;\n  }\n\n  function scrollParent(node) {\n    if (!(node instanceof HTMLElement || node instanceof SVGElement)) {\n      return undefined;\n    }\n\n    var current = node.parentNode;\n    while (current.parentNode) {\n      if (isScrolling(current)) {\n        return current;\n      }\n\n      current = current.parentNode;\n    }\n\n    return document.scrollingElement || document.documentElement;\n  }\n\n  return scrollParent;\n}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL3Njcm9sbHBhcmVudC9zY3JvbGxwYXJlbnQuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlcml2L3dhbGxldHMvLi4vLi4vbm9kZV9tb2R1bGVzL3Njcm9sbHBhcmVudC9zY3JvbGxwYXJlbnQuanM/MjgxOCJdLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gKHJvb3QsIGZhY3RvcnkpIHtcbiAgaWYgKHR5cGVvZiBkZWZpbmUgPT09IFwiZnVuY3Rpb25cIiAmJiBkZWZpbmUuYW1kKSB7XG4gICAgZGVmaW5lKFtdLCBmYWN0b3J5KTtcbiAgfSBlbHNlIGlmICh0eXBlb2YgbW9kdWxlID09PSBcIm9iamVjdFwiICYmIG1vZHVsZS5leHBvcnRzKSB7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KCk7XG4gIH0gZWxzZSB7XG4gICAgcm9vdC5TY3JvbGxwYXJlbnQgPSBmYWN0b3J5KCk7XG4gIH1cbn0odGhpcywgZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBpc1Njcm9sbGluZyhub2RlKSB7XG4gICAgdmFyIG92ZXJmbG93ID0gZ2V0Q29tcHV0ZWRTdHlsZShub2RlLCBudWxsKS5nZXRQcm9wZXJ0eVZhbHVlKFwib3ZlcmZsb3dcIik7XG5cbiAgICByZXR1cm4gb3ZlcmZsb3cuaW5kZXhPZihcInNjcm9sbFwiKSA+IC0xIHx8IG92ZXJmbG93LmluZGV4T2YoXCJhdXRvXCIpID4gLSAxO1xuICB9XG5cbiAgZnVuY3Rpb24gc2Nyb2xsUGFyZW50KG5vZGUpIHtcbiAgICBpZiAoIShub2RlIGluc3RhbmNlb2YgSFRNTEVsZW1lbnQgfHwgbm9kZSBpbnN0YW5jZW9mIFNWR0VsZW1lbnQpKSB7XG4gICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cblxuICAgIHZhciBjdXJyZW50ID0gbm9kZS5wYXJlbnROb2RlO1xuICAgIHdoaWxlIChjdXJyZW50LnBhcmVudE5vZGUpIHtcbiAgICAgIGlmIChpc1Njcm9sbGluZyhjdXJyZW50KSkge1xuICAgICAgICByZXR1cm4gY3VycmVudDtcbiAgICAgIH1cblxuICAgICAgY3VycmVudCA9IGN1cnJlbnQucGFyZW50Tm9kZTtcbiAgICB9XG5cbiAgICByZXR1cm4gZG9jdW1lbnQuc2Nyb2xsaW5nRWxlbWVudCB8fCBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7XG4gIH1cblxuICByZXR1cm4gc2Nyb2xsUGFyZW50O1xufSkpOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/scrollparent/scrollparent.js\n'
                );

                /***/
            },

        /***/ '../../node_modules/@gilbarbara/deep-equal/dist/index.mjs':
            /*!****************************************************************!*\
  !*** ../../node_modules/@gilbarbara/deep-equal/dist/index.mjs ***!
  \****************************************************************/
            /***/ (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ equal)\n/* harmony export */ });\n// src/helpers.ts\nfunction isOfType(type) {\n  return (value) => typeof value === type;\n}\nvar isFunction = isOfType("function");\nvar isNull = (value) => {\n  return value === null;\n};\nvar isRegex = (value) => {\n  return Object.prototype.toString.call(value).slice(8, -1) === "RegExp";\n};\nvar isObject = (value) => {\n  return !isUndefined(value) && !isNull(value) && (isFunction(value) || typeof value === "object");\n};\nvar isUndefined = isOfType("undefined");\n\n// src/index.ts\nfunction equalArray(left, right) {\n  const { length } = left;\n  if (length !== right.length) {\n    return false;\n  }\n  for (let index = length; index-- !== 0; ) {\n    if (!equal(left[index], right[index])) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction equalArrayBuffer(left, right) {\n  if (left.byteLength !== right.byteLength) {\n    return false;\n  }\n  const view1 = new DataView(left.buffer);\n  const view2 = new DataView(right.buffer);\n  let index = left.byteLength;\n  while (index--) {\n    if (view1.getUint8(index) !== view2.getUint8(index)) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction equalMap(left, right) {\n  if (left.size !== right.size) {\n    return false;\n  }\n  for (const index of left.entries()) {\n    if (!right.has(index[0])) {\n      return false;\n    }\n  }\n  for (const index of left.entries()) {\n    if (!equal(index[1], right.get(index[0]))) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction equalSet(left, right) {\n  if (left.size !== right.size) {\n    return false;\n  }\n  for (const index of left.entries()) {\n    if (!right.has(index[0])) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction equal(left, right) {\n  if (left === right) {\n    return true;\n  }\n  if (left && isObject(left) && right && isObject(right)) {\n    if (left.constructor !== right.constructor) {\n      return false;\n    }\n    if (Array.isArray(left) && Array.isArray(right)) {\n      return equalArray(left, right);\n    }\n    if (left instanceof Map && right instanceof Map) {\n      return equalMap(left, right);\n    }\n    if (left instanceof Set && right instanceof Set) {\n      return equalSet(left, right);\n    }\n    if (ArrayBuffer.isView(left) && ArrayBuffer.isView(right)) {\n      return equalArrayBuffer(left, right);\n    }\n    if (isRegex(left) && isRegex(right)) {\n      return left.source === right.source && left.flags === right.flags;\n    }\n    if (left.valueOf !== Object.prototype.valueOf) {\n      return left.valueOf() === right.valueOf();\n    }\n    if (left.toString !== Object.prototype.toString) {\n      return left.toString() === right.toString();\n    }\n    const leftKeys = Object.keys(left);\n    const rightKeys = Object.keys(right);\n    if (leftKeys.length !== rightKeys.length) {\n      return false;\n    }\n    for (let index = leftKeys.length; index-- !== 0; ) {\n      if (!Object.prototype.hasOwnProperty.call(right, leftKeys[index])) {\n        return false;\n      }\n    }\n    for (let index = leftKeys.length; index-- !== 0; ) {\n      const key = leftKeys[index];\n      if (key === "_owner" && left.$$typeof) {\n        continue;\n      }\n      if (!equal(left[key], right[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  if (Number.isNaN(left) && Number.isNaN(right)) {\n    return true;\n  }\n  return left === right;\n}\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL0BnaWxiYXJiYXJhL2RlZXAtZXF1YWwvZGlzdC9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlcml2L3dhbGxldHMvLi4vLi4vbm9kZV9tb2R1bGVzL0BnaWxiYXJiYXJhL2RlZXAtZXF1YWwvZGlzdC9pbmRleC5tanM/YTg4ZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvaGVscGVycy50c1xuZnVuY3Rpb24gaXNPZlR5cGUodHlwZSkge1xuICByZXR1cm4gKHZhbHVlKSA9PiB0eXBlb2YgdmFsdWUgPT09IHR5cGU7XG59XG52YXIgaXNGdW5jdGlvbiA9IGlzT2ZUeXBlKFwiZnVuY3Rpb25cIik7XG52YXIgaXNOdWxsID0gKHZhbHVlKSA9PiB7XG4gIHJldHVybiB2YWx1ZSA9PT0gbnVsbDtcbn07XG52YXIgaXNSZWdleCA9ICh2YWx1ZSkgPT4ge1xuICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHZhbHVlKS5zbGljZSg4LCAtMSkgPT09IFwiUmVnRXhwXCI7XG59O1xudmFyIGlzT2JqZWN0ID0gKHZhbHVlKSA9PiB7XG4gIHJldHVybiAhaXNVbmRlZmluZWQodmFsdWUpICYmICFpc051bGwodmFsdWUpICYmIChpc0Z1bmN0aW9uKHZhbHVlKSB8fCB0eXBlb2YgdmFsdWUgPT09IFwib2JqZWN0XCIpO1xufTtcbnZhciBpc1VuZGVmaW5lZCA9IGlzT2ZUeXBlKFwidW5kZWZpbmVkXCIpO1xuXG4vLyBzcmMvaW5kZXgudHNcbmZ1bmN0aW9uIGVxdWFsQXJyYXkobGVmdCwgcmlnaHQpIHtcbiAgY29uc3QgeyBsZW5ndGggfSA9IGxlZnQ7XG4gIGlmIChsZW5ndGggIT09IHJpZ2h0Lmxlbmd0aCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBmb3IgKGxldCBpbmRleCA9IGxlbmd0aDsgaW5kZXgtLSAhPT0gMDsgKSB7XG4gICAgaWYgKCFlcXVhbChsZWZ0W2luZGV4XSwgcmlnaHRbaW5kZXhdKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuICByZXR1cm4gdHJ1ZTtcbn1cbmZ1bmN0aW9uIGVxdWFsQXJyYXlCdWZmZXIobGVmdCwgcmlnaHQpIHtcbiAgaWYgKGxlZnQuYnl0ZUxlbmd0aCAhPT0gcmlnaHQuYnl0ZUxlbmd0aCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBjb25zdCB2aWV3MSA9IG5ldyBEYXRhVmlldyhsZWZ0LmJ1ZmZlcik7XG4gIGNvbnN0IHZpZXcyID0gbmV3IERhdGFWaWV3KHJpZ2h0LmJ1ZmZlcik7XG4gIGxldCBpbmRleCA9IGxlZnQuYnl0ZUxlbmd0aDtcbiAgd2hpbGUgKGluZGV4LS0pIHtcbiAgICBpZiAodmlldzEuZ2V0VWludDgoaW5kZXgpICE9PSB2aWV3Mi5nZXRVaW50OChpbmRleCkpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHRydWU7XG59XG5mdW5jdGlvbiBlcXVhbE1hcChsZWZ0LCByaWdodCkge1xuICBpZiAobGVmdC5zaXplICE9PSByaWdodC5zaXplKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIGZvciAoY29uc3QgaW5kZXggb2YgbGVmdC5lbnRyaWVzKCkpIHtcbiAgICBpZiAoIXJpZ2h0LmhhcyhpbmRleFswXSkpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cbiAgZm9yIChjb25zdCBpbmRleCBvZiBsZWZ0LmVudHJpZXMoKSkge1xuICAgIGlmICghZXF1YWwoaW5kZXhbMV0sIHJpZ2h0LmdldChpbmRleFswXSkpKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG4gIHJldHVybiB0cnVlO1xufVxuZnVuY3Rpb24gZXF1YWxTZXQobGVmdCwgcmlnaHQpIHtcbiAgaWYgKGxlZnQuc2l6ZSAhPT0gcmlnaHQuc2l6ZSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBmb3IgKGNvbnN0IGluZGV4IG9mIGxlZnQuZW50cmllcygpKSB7XG4gICAgaWYgKCFyaWdodC5oYXMoaW5kZXhbMF0pKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG4gIHJldHVybiB0cnVlO1xufVxuZnVuY3Rpb24gZXF1YWwobGVmdCwgcmlnaHQpIHtcbiAgaWYgKGxlZnQgPT09IHJpZ2h0KSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbiAgaWYgKGxlZnQgJiYgaXNPYmplY3QobGVmdCkgJiYgcmlnaHQgJiYgaXNPYmplY3QocmlnaHQpKSB7XG4gICAgaWYgKGxlZnQuY29uc3RydWN0b3IgIT09IHJpZ2h0LmNvbnN0cnVjdG9yKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGlmIChBcnJheS5pc0FycmF5KGxlZnQpICYmIEFycmF5LmlzQXJyYXkocmlnaHQpKSB7XG4gICAgICByZXR1cm4gZXF1YWxBcnJheShsZWZ0LCByaWdodCk7XG4gICAgfVxuICAgIGlmIChsZWZ0IGluc3RhbmNlb2YgTWFwICYmIHJpZ2h0IGluc3RhbmNlb2YgTWFwKSB7XG4gICAgICByZXR1cm4gZXF1YWxNYXAobGVmdCwgcmlnaHQpO1xuICAgIH1cbiAgICBpZiAobGVmdCBpbnN0YW5jZW9mIFNldCAmJiByaWdodCBpbnN0YW5jZW9mIFNldCkge1xuICAgICAgcmV0dXJuIGVxdWFsU2V0KGxlZnQsIHJpZ2h0KTtcbiAgICB9XG4gICAgaWYgKEFycmF5QnVmZmVyLmlzVmlldyhsZWZ0KSAmJiBBcnJheUJ1ZmZlci5pc1ZpZXcocmlnaHQpKSB7XG4gICAgICByZXR1cm4gZXF1YWxBcnJheUJ1ZmZlcihsZWZ0LCByaWdodCk7XG4gICAgfVxuICAgIGlmIChpc1JlZ2V4KGxlZnQpICYmIGlzUmVnZXgocmlnaHQpKSB7XG4gICAgICByZXR1cm4gbGVmdC5zb3VyY2UgPT09IHJpZ2h0LnNvdXJjZSAmJiBsZWZ0LmZsYWdzID09PSByaWdodC5mbGFncztcbiAgICB9XG4gICAgaWYgKGxlZnQudmFsdWVPZiAhPT0gT2JqZWN0LnByb3RvdHlwZS52YWx1ZU9mKSB7XG4gICAgICByZXR1cm4gbGVmdC52YWx1ZU9mKCkgPT09IHJpZ2h0LnZhbHVlT2YoKTtcbiAgICB9XG4gICAgaWYgKGxlZnQudG9TdHJpbmcgIT09IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcpIHtcbiAgICAgIHJldHVybiBsZWZ0LnRvU3RyaW5nKCkgPT09IHJpZ2h0LnRvU3RyaW5nKCk7XG4gICAgfVxuICAgIGNvbnN0IGxlZnRLZXlzID0gT2JqZWN0LmtleXMobGVmdCk7XG4gICAgY29uc3QgcmlnaHRLZXlzID0gT2JqZWN0LmtleXMocmlnaHQpO1xuICAgIGlmIChsZWZ0S2V5cy5sZW5ndGggIT09IHJpZ2h0S2V5cy5sZW5ndGgpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgZm9yIChsZXQgaW5kZXggPSBsZWZ0S2V5cy5sZW5ndGg7IGluZGV4LS0gIT09IDA7ICkge1xuICAgICAgaWYgKCFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocmlnaHQsIGxlZnRLZXlzW2luZGV4XSkpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgIH1cbiAgICBmb3IgKGxldCBpbmRleCA9IGxlZnRLZXlzLmxlbmd0aDsgaW5kZXgtLSAhPT0gMDsgKSB7XG4gICAgICBjb25zdCBrZXkgPSBsZWZ0S2V5c1tpbmRleF07XG4gICAgICBpZiAoa2V5ID09PSBcIl9vd25lclwiICYmIGxlZnQuJCR0eXBlb2YpIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICBpZiAoIWVxdWFsKGxlZnRba2V5XSwgcmlnaHRba2V5XSkpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuICBpZiAoTnVtYmVyLmlzTmFOKGxlZnQpICYmIE51bWJlci5pc05hTihyaWdodCkpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuICByZXR1cm4gbGVmdCA9PT0gcmlnaHQ7XG59XG5leHBvcnQge1xuICBlcXVhbCBhcyBkZWZhdWx0XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXgubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/@gilbarbara/deep-equal/dist/index.mjs\n'
                );

                /***/
            },

        /***/ '../../node_modules/is-lite/dist/index.mjs':
            /*!*************************************************!*\
  !*** ../../node_modules/is-lite/dist/index.mjs ***!
  \*************************************************/
            /***/ (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ src_default)\n/* harmony export */ });\n// src/helpers.ts\nvar objectTypes = [\n  "Array",\n  "ArrayBuffer",\n  "AsyncFunction",\n  "AsyncGenerator",\n  "AsyncGeneratorFunction",\n  "Date",\n  "Error",\n  "Function",\n  "Generator",\n  "GeneratorFunction",\n  "HTMLElement",\n  "Map",\n  "Object",\n  "Promise",\n  "RegExp",\n  "Set",\n  "WeakMap",\n  "WeakSet"\n];\nvar primitiveTypes = [\n  "bigint",\n  "boolean",\n  "null",\n  "number",\n  "string",\n  "symbol",\n  "undefined"\n];\nfunction getObjectType(value) {\n  const objectTypeName = Object.prototype.toString.call(value).slice(8, -1);\n  if (/HTML\\w+Element/.test(objectTypeName)) {\n    return "HTMLElement";\n  }\n  if (isObjectType(objectTypeName)) {\n    return objectTypeName;\n  }\n  return void 0;\n}\nfunction isObjectOfType(type) {\n  return (value) => getObjectType(value) === type;\n}\nfunction isObjectType(name) {\n  return objectTypes.includes(name);\n}\nfunction isOfType(type) {\n  return (value) => typeof value === type;\n}\nfunction isPrimitiveType(name) {\n  return primitiveTypes.includes(name);\n}\n\n// src/index.ts\nvar DOM_PROPERTIES_TO_CHECK = [\n  "innerHTML",\n  "ownerDocument",\n  "style",\n  "attributes",\n  "nodeValue"\n];\nfunction is(value) {\n  if (value === null) {\n    return "null";\n  }\n  switch (typeof value) {\n    case "bigint":\n      return "bigint";\n    case "boolean":\n      return "boolean";\n    case "number":\n      return "number";\n    case "string":\n      return "string";\n    case "symbol":\n      return "symbol";\n    case "undefined":\n      return "undefined";\n    default:\n  }\n  if (is.array(value)) {\n    return "Array";\n  }\n  if (is.plainFunction(value)) {\n    return "Function";\n  }\n  const tagType = getObjectType(value);\n  if (tagType) {\n    return tagType;\n  }\n  return "Object";\n}\nis.array = Array.isArray;\nis.arrayOf = (target, predicate) => {\n  if (!is.array(target) && !is.function(predicate)) {\n    return false;\n  }\n  return target.every((d) => predicate(d));\n};\nis.asyncGeneratorFunction = (value) => getObjectType(value) === "AsyncGeneratorFunction";\nis.asyncFunction = isObjectOfType("AsyncFunction");\nis.bigint = isOfType("bigint");\nis.boolean = (value) => {\n  return value === true || value === false;\n};\nis.date = isObjectOfType("Date");\nis.defined = (value) => !is.undefined(value);\nis.domElement = (value) => {\n  return is.object(value) && !is.plainObject(value) && value.nodeType === 1 && is.string(value.nodeName) && DOM_PROPERTIES_TO_CHECK.every((property) => property in value);\n};\nis.empty = (value) => {\n  return is.string(value) && value.length === 0 || is.array(value) && value.length === 0 || is.object(value) && !is.map(value) && !is.set(value) && Object.keys(value).length === 0 || is.set(value) && value.size === 0 || is.map(value) && value.size === 0;\n};\nis.error = isObjectOfType("Error");\nis.function = isOfType("function");\nis.generator = (value) => {\n  return is.iterable(value) && is.function(value.next) && is.function(value.throw);\n};\nis.generatorFunction = isObjectOfType("GeneratorFunction");\nis.instanceOf = (instance, class_) => {\n  if (!instance || !class_) {\n    return false;\n  }\n  return Object.getPrototypeOf(instance) === class_.prototype;\n};\nis.iterable = (value) => {\n  return !is.nullOrUndefined(value) && is.function(value[Symbol.iterator]);\n};\nis.map = isObjectOfType("Map");\nis.nan = (value) => {\n  return Number.isNaN(value);\n};\nis.null = (value) => {\n  return value === null;\n};\nis.nullOrUndefined = (value) => {\n  return is.null(value) || is.undefined(value);\n};\nis.number = (value) => {\n  return isOfType("number")(value) && !is.nan(value);\n};\nis.numericString = (value) => {\n  return is.string(value) && value.length > 0 && !Number.isNaN(Number(value));\n};\nis.object = (value) => {\n  return !is.nullOrUndefined(value) && (is.function(value) || typeof value === "object");\n};\nis.oneOf = (target, value) => {\n  if (!is.array(target)) {\n    return false;\n  }\n  return target.indexOf(value) > -1;\n};\nis.plainFunction = isObjectOfType("Function");\nis.plainObject = (value) => {\n  if (getObjectType(value) !== "Object") {\n    return false;\n  }\n  const prototype = Object.getPrototypeOf(value);\n  return prototype === null || prototype === Object.getPrototypeOf({});\n};\nis.primitive = (value) => is.null(value) || isPrimitiveType(typeof value);\nis.promise = isObjectOfType("Promise");\nis.propertyOf = (target, key, predicate) => {\n  if (!is.object(target) || !key) {\n    return false;\n  }\n  const value = target[key];\n  if (is.function(predicate)) {\n    return predicate(value);\n  }\n  return is.defined(value);\n};\nis.regexp = isObjectOfType("RegExp");\nis.set = isObjectOfType("Set");\nis.string = isOfType("string");\nis.symbol = isOfType("symbol");\nis.undefined = isOfType("undefined");\nis.weakMap = isObjectOfType("WeakMap");\nis.weakSet = isObjectOfType("WeakSet");\nvar src_default = is;\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/is-lite/dist/index.mjs\n'
                );

                /***/
            },

        /***/ '../../node_modules/react-joyride/dist/index.mjs':
            /*!*******************************************************!*\
  !*** ../../node_modules/react-joyride/dist/index.mjs ***!
  \*******************************************************/
            /***/ (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ACTIONS: () => (/* binding */ ACTIONS),\n/* harmony export */   EVENTS: () => (/* binding */ EVENTS),\n/* harmony export */   LIFECYCLE: () => (/* binding */ LIFECYCLE),\n/* harmony export */   ORIGIN: () => (/* binding */ ORIGIN),\n/* harmony export */   STATUS: () => (/* binding */ STATUS),\n/* harmony export */   "default": () => (/* binding */ components_default)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");\n/* harmony import */ var _gilbarbara_deep_equal__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @gilbarbara/deep-equal */ "../../node_modules/@gilbarbara/deep-equal/dist/index.mjs");\n/* harmony import */ var is_lite__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! is-lite */ "../../node_modules/is-lite/dist/index.mjs");\n/* harmony import */ var tree_changes__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tree-changes */ "../../node_modules/tree-changes/dist/index.mjs");\n/* harmony import */ var scroll__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! scroll */ "../../node_modules/scroll/index.js");\n/* harmony import */ var scrollparent__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! scrollparent */ "../../node_modules/scrollparent/scrollparent.js");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-dom */ "react-dom");\n/* harmony import */ var deepmerge__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! deepmerge */ "../../node_modules/deepmerge/dist/cjs.js");\n/* harmony import */ var react_floater__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! react-floater */ "../../node_modules/react-floater/es/index.js");\n/* harmony import */ var react_innertext__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! react-innertext */ "../../node_modules/react-innertext/index.js");\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);\n\n// src/literals/index.ts\nvar ACTIONS = {\n  INIT: "init",\n  START: "start",\n  STOP: "stop",\n  RESET: "reset",\n  PREV: "prev",\n  NEXT: "next",\n  GO: "go",\n  CLOSE: "close",\n  SKIP: "skip",\n  UPDATE: "update"\n};\nvar EVENTS = {\n  TOUR_START: "tour:start",\n  STEP_BEFORE: "step:before",\n  BEACON: "beacon",\n  TOOLTIP: "tooltip",\n  STEP_AFTER: "step:after",\n  TOUR_END: "tour:end",\n  TOUR_STATUS: "tour:status",\n  TARGET_NOT_FOUND: "error:target_not_found",\n  ERROR: "error"\n};\nvar LIFECYCLE = {\n  INIT: "init",\n  READY: "ready",\n  BEACON: "beacon",\n  TOOLTIP: "tooltip",\n  COMPLETE: "complete",\n  ERROR: "error"\n};\nvar ORIGIN = {\n  BUTTON_CLOSE: "button_close",\n  BUTTON_PRIMARY: "button_primary",\n  KEYBOARD: "keyboard",\n  OVERLAY: "overlay"\n};\nvar STATUS = {\n  IDLE: "idle",\n  READY: "ready",\n  WAITING: "waiting",\n  RUNNING: "running",\n  PAUSED: "paused",\n  SKIPPED: "skipped",\n  FINISHED: "finished",\n  ERROR: "error"\n};\n\n// src/components/index.tsx\n\n\n\n\n\n// src/modules/dom.ts\n\n\nfunction canUseDOM() {\n  var _a;\n  return !!(typeof window !== "undefined" && ((_a = window.document) == null ? void 0 : _a.createElement));\n}\nfunction getClientRect(element) {\n  if (!element) {\n    return null;\n  }\n  return element.getBoundingClientRect();\n}\nfunction getDocumentHeight(median = false) {\n  const { body, documentElement } = document;\n  if (!body || !documentElement) {\n    return 0;\n  }\n  if (median) {\n    const heights = [\n      body.scrollHeight,\n      body.offsetHeight,\n      documentElement.clientHeight,\n      documentElement.scrollHeight,\n      documentElement.offsetHeight\n    ].sort((a, b) => a - b);\n    const middle = Math.floor(heights.length / 2);\n    if (heights.length % 2 === 0) {\n      return (heights[middle - 1] + heights[middle]) / 2;\n    }\n    return heights[middle];\n  }\n  return Math.max(\n    body.scrollHeight,\n    body.offsetHeight,\n    documentElement.clientHeight,\n    documentElement.scrollHeight,\n    documentElement.offsetHeight\n  );\n}\nfunction getElement(element) {\n  if (typeof element === "string") {\n    try {\n      return document.querySelector(element);\n    } catch (error) {\n      if (true) {\n        console.error(error);\n      }\n      return null;\n    }\n  }\n  return element;\n}\nfunction getStyleComputedProperty(el) {\n  if (!el || el.nodeType !== 1) {\n    return null;\n  }\n  return getComputedStyle(el);\n}\nfunction getScrollParent(element, skipFix, forListener) {\n  if (!element) {\n    return scrollDocument();\n  }\n  const parent = scrollparent__WEBPACK_IMPORTED_MODULE_2__(element);\n  if (parent) {\n    if (parent.isSameNode(scrollDocument())) {\n      if (forListener) {\n        return document;\n      }\n      return scrollDocument();\n    }\n    const hasScrolling = parent.scrollHeight > parent.offsetHeight;\n    if (!hasScrolling && !skipFix) {\n      parent.style.overflow = "initial";\n      return scrollDocument();\n    }\n  }\n  return parent;\n}\nfunction hasCustomScrollParent(element, skipFix) {\n  if (!element) {\n    return false;\n  }\n  const parent = getScrollParent(element, skipFix);\n  return parent ? !parent.isSameNode(scrollDocument()) : false;\n}\nfunction hasCustomOffsetParent(element) {\n  return element.offsetParent !== document.body;\n}\nfunction hasPosition(el, type = "fixed") {\n  if (!el || !(el instanceof HTMLElement)) {\n    return false;\n  }\n  const { nodeName } = el;\n  const styles = getStyleComputedProperty(el);\n  if (nodeName === "BODY" || nodeName === "HTML") {\n    return false;\n  }\n  if (styles && styles.position === type) {\n    return true;\n  }\n  if (!el.parentNode) {\n    return false;\n  }\n  return hasPosition(el.parentNode, type);\n}\nfunction isElementVisible(element) {\n  var _a;\n  if (!element) {\n    return false;\n  }\n  let parentElement = element;\n  while (parentElement) {\n    if (parentElement === document.body) {\n      break;\n    }\n    if (parentElement instanceof HTMLElement) {\n      const { display, visibility } = getComputedStyle(parentElement);\n      if (display === "none" || visibility === "hidden") {\n        return false;\n      }\n    }\n    parentElement = (_a = parentElement.parentElement) != null ? _a : null;\n  }\n  return true;\n}\nfunction getElementPosition(element, offset, skipFix) {\n  var _a;\n  const elementRect = getClientRect(element);\n  const parent = getScrollParent(element, skipFix);\n  const hasScrollParent = hasCustomScrollParent(element, skipFix);\n  let parentTop = 0;\n  let top = (_a = elementRect == null ? void 0 : elementRect.top) != null ? _a : 0;\n  if (parent instanceof HTMLElement) {\n    parentTop = parent.scrollTop;\n    if (!hasScrollParent && !hasPosition(element)) {\n      top += parentTop;\n    }\n    if (!parent.isSameNode(scrollDocument())) {\n      top += scrollDocument().scrollTop;\n    }\n  }\n  return Math.floor(top - offset);\n}\nfunction getScrollTo(element, offset, skipFix) {\n  var _a;\n  if (!element) {\n    return 0;\n  }\n  const { offsetTop = 0, scrollTop = 0 } = (_a = scrollparent__WEBPACK_IMPORTED_MODULE_2__(element)) != null ? _a : {};\n  let top = element.getBoundingClientRect().top + scrollTop;\n  if (!!offsetTop && (hasCustomScrollParent(element, skipFix) || hasCustomOffsetParent(element))) {\n    top -= offsetTop;\n  }\n  const output = Math.floor(top - offset);\n  return output < 0 ? 0 : output;\n}\nfunction scrollDocument() {\n  var _a;\n  return (_a = document.scrollingElement) != null ? _a : document.documentElement;\n}\nfunction scrollTo(value, options) {\n  const { duration, element } = options;\n  return new Promise((resolve, reject) => {\n    const { scrollTop } = element;\n    const limit = value > scrollTop ? value - scrollTop : scrollTop - value;\n    scroll__WEBPACK_IMPORTED_MODULE_1__.top(element, value, { duration: limit < 100 ? 50 : duration }, (error) => {\n      if (error && error.message !== "Element already at target scroll position") {\n        return reject(error);\n      }\n      return resolve();\n    });\n  });\n}\n\n// src/modules/helpers.ts\n\n\n\nvar isReact16 = react_dom__WEBPACK_IMPORTED_MODULE_3__.createPortal !== void 0;\nfunction getBrowser(userAgent = navigator.userAgent) {\n  let browser = userAgent;\n  if (typeof window === "undefined") {\n    browser = "node";\n  } else if (document.documentMode) {\n    browser = "ie";\n  } else if (/Edge/.test(userAgent)) {\n    browser = "edge";\n  } else if (Boolean(window.opera) || userAgent.includes(" OPR/")) {\n    browser = "opera";\n  } else if (typeof window.InstallTrigger !== "undefined") {\n    browser = "firefox";\n  } else if (window.chrome) {\n    browser = "chrome";\n  } else if (/(Version\\/([\\d._]+).*Safari|CriOS|FxiOS| Mobile\\/)/.test(userAgent)) {\n    browser = "safari";\n  }\n  return browser;\n}\nfunction getText(root) {\n  const content = [];\n  const recurse = (child) => {\n    if (typeof child === "string" || typeof child === "number") {\n      content.push(child);\n    } else if (Array.isArray(child)) {\n      child.forEach((c) => recurse(c));\n    } else if ((0,react__WEBPACK_IMPORTED_MODULE_0__.isValidElement)(child)) {\n      const { children } = child.props;\n      if (Array.isArray(children)) {\n        children.forEach((c) => recurse(c));\n      } else {\n        recurse(children);\n      }\n    }\n  };\n  recurse(root);\n  return content.join(" ").trim();\n}\nfunction hasValidKeys(object, keys) {\n  if (!is_lite__WEBPACK_IMPORTED_MODULE_4__["default"].plainObject(object) || !is_lite__WEBPACK_IMPORTED_MODULE_4__["default"].array(keys)) {\n    return false;\n  }\n  return Object.keys(object).every((d) => keys.includes(d));\n}\nfunction hexToRGB(hex) {\n  const shorthandRegex = /^#?([\\da-f])([\\da-f])([\\da-f])$/i;\n  const properHex = hex.replace(shorthandRegex, (_m, r, g, b) => r + r + g + g + b + b);\n  const result = /^#?([\\da-f]{2})([\\da-f]{2})([\\da-f]{2})$/i.exec(properHex);\n  return result ? [parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)] : [];\n}\nfunction hideBeacon(step) {\n  return step.disableBeacon || step.placement === "center";\n}\nfunction isLegacy() {\n  return !["chrome", "safari", "firefox", "opera"].includes(getBrowser());\n}\nfunction log({ data, debug = false, title, warn = false }) {\n  const logFn = warn ? console.warn || console.error : console.log;\n  if (debug) {\n    if (title && data) {\n      console.groupCollapsed(\n        `%creact-joyride: ${title}`,\n        "color: #ff0044; font-weight: bold; font-size: 12px;"\n      );\n      if (Array.isArray(data)) {\n        data.forEach((d) => {\n          if (is_lite__WEBPACK_IMPORTED_MODULE_4__["default"].plainObject(d) && d.key) {\n            logFn.apply(console, [d.key, d.value]);\n          } else {\n            logFn.apply(console, [d]);\n          }\n        });\n      } else {\n        logFn.apply(console, [data]);\n      }\n      console.groupEnd();\n    } else {\n      console.error("Missing title or data props");\n    }\n  }\n}\nfunction noop() {\n  return void 0;\n}\nfunction objectKeys(input) {\n  return Object.keys(input);\n}\nfunction omit(input, ...filter) {\n  if (!is_lite__WEBPACK_IMPORTED_MODULE_4__["default"].plainObject(input)) {\n    throw new TypeError("Expected an object");\n  }\n  const output = {};\n  for (const key in input) {\n    if ({}.hasOwnProperty.call(input, key)) {\n      if (!filter.includes(key)) {\n        output[key] = input[key];\n      }\n    }\n  }\n  return output;\n}\nfunction pick(input, ...filter) {\n  if (!is_lite__WEBPACK_IMPORTED_MODULE_4__["default"].plainObject(input)) {\n    throw new TypeError("Expected an object");\n  }\n  if (!filter.length) {\n    return input;\n  }\n  const output = {};\n  for (const key in input) {\n    if ({}.hasOwnProperty.call(input, key)) {\n      if (filter.includes(key)) {\n        output[key] = input[key];\n      }\n    }\n  }\n  return output;\n}\nfunction shouldScroll(options) {\n  const { isFirstStep, lifecycle, previousLifecycle, scrollToFirstStep, step, target } = options;\n  return !step.disableScrolling && (!isFirstStep || scrollToFirstStep || lifecycle === LIFECYCLE.TOOLTIP) && step.placement !== "center" && (!step.isFixed || !hasPosition(target)) && // fixed steps don\'t need to scroll\n  previousLifecycle !== lifecycle && [LIFECYCLE.BEACON, LIFECYCLE.TOOLTIP].includes(lifecycle);\n}\n\n// src/modules/step.ts\n\n\n\n// src/defaults.ts\nvar defaultFloaterProps = {\n  options: {\n    preventOverflow: {\n      boundariesElement: "scrollParent"\n    }\n  },\n  wrapperOptions: {\n    offset: -18,\n    position: true\n  }\n};\nvar defaultLocale = {\n  back: "Back",\n  close: "Close",\n  last: "Last",\n  next: "Next",\n  nextLabelWithProgress: "Next (Step {step} of {steps})",\n  open: "Open the dialog",\n  skip: "Skip"\n};\nvar defaultStep = {\n  event: "click",\n  placement: "bottom",\n  offset: 10,\n  disableBeacon: false,\n  disableCloseOnEsc: false,\n  disableOverlay: false,\n  disableOverlayClose: false,\n  disableScrollParentFix: false,\n  disableScrolling: false,\n  hideBackButton: false,\n  hideCloseButton: false,\n  hideFooter: false,\n  isFixed: false,\n  locale: defaultLocale,\n  showProgress: false,\n  showSkipButton: false,\n  spotlightClicks: false,\n  spotlightPadding: 10\n};\nvar defaultProps = {\n  continuous: false,\n  debug: false,\n  disableCloseOnEsc: false,\n  disableOverlay: false,\n  disableOverlayClose: false,\n  disableScrolling: false,\n  disableScrollParentFix: false,\n  getHelpers: noop(),\n  hideBackButton: false,\n  run: true,\n  scrollOffset: 20,\n  scrollDuration: 300,\n  scrollToFirstStep: false,\n  showSkipButton: false,\n  showProgress: false,\n  spotlightClicks: false,\n  spotlightPadding: 10,\n  steps: []\n};\n\n// src/styles.ts\n\nvar defaultOptions = {\n  arrowColor: "#fff",\n  backgroundColor: "#fff",\n  beaconSize: 36,\n  overlayColor: "rgba(0, 0, 0, 0.5)",\n  primaryColor: "#f04",\n  spotlightShadow: "0 0 15px rgba(0, 0, 0, 0.5)",\n  textColor: "#333",\n  width: 380,\n  zIndex: 100\n};\nvar buttonBase = {\n  backgroundColor: "transparent",\n  border: 0,\n  borderRadius: 0,\n  color: "#555",\n  cursor: "pointer",\n  fontSize: 16,\n  lineHeight: 1,\n  padding: 8,\n  WebkitAppearance: "none"\n};\nvar spotlight = {\n  borderRadius: 4,\n  position: "absolute"\n};\nfunction getStyles(props, step) {\n  var _a, _b, _c, _d, _e;\n  const { floaterProps, styles } = props;\n  const mergedFloaterProps = deepmerge__WEBPACK_IMPORTED_MODULE_5__((_a = step.floaterProps) != null ? _a : {}, floaterProps != null ? floaterProps : {});\n  const mergedStyles = deepmerge__WEBPACK_IMPORTED_MODULE_5__(styles != null ? styles : {}, (_b = step.styles) != null ? _b : {});\n  const options = deepmerge__WEBPACK_IMPORTED_MODULE_5__(defaultOptions, mergedStyles.options || {});\n  const hideBeacon2 = step.placement === "center" || step.disableBeacon;\n  let { width } = options;\n  if (window.innerWidth > 480) {\n    width = 380;\n  }\n  if ("width" in options) {\n    width = typeof options.width === "number" && window.innerWidth < options.width ? window.innerWidth - 30 : options.width;\n  }\n  const overlay = {\n    bottom: 0,\n    left: 0,\n    overflow: "hidden",\n    position: "absolute",\n    right: 0,\n    top: 0,\n    zIndex: options.zIndex\n  };\n  const defaultStyles = {\n    beacon: {\n      ...buttonBase,\n      display: hideBeacon2 ? "none" : "inline-block",\n      height: options.beaconSize,\n      position: "relative",\n      width: options.beaconSize,\n      zIndex: options.zIndex\n    },\n    beaconInner: {\n      animation: "joyride-beacon-inner 1.2s infinite ease-in-out",\n      backgroundColor: options.primaryColor,\n      borderRadius: "50%",\n      display: "block",\n      height: "50%",\n      left: "50%",\n      opacity: 0.7,\n      position: "absolute",\n      top: "50%",\n      transform: "translate(-50%, -50%)",\n      width: "50%"\n    },\n    beaconOuter: {\n      animation: "joyride-beacon-outer 1.2s infinite ease-in-out",\n      backgroundColor: `rgba(${hexToRGB(options.primaryColor).join(",")}, 0.2)`,\n      border: `2px solid ${options.primaryColor}`,\n      borderRadius: "50%",\n      boxSizing: "border-box",\n      display: "block",\n      height: "100%",\n      left: 0,\n      opacity: 0.9,\n      position: "absolute",\n      top: 0,\n      transformOrigin: "center",\n      width: "100%"\n    },\n    tooltip: {\n      backgroundColor: options.backgroundColor,\n      borderRadius: 5,\n      boxSizing: "border-box",\n      color: options.textColor,\n      fontSize: 16,\n      maxWidth: "100%",\n      padding: 15,\n      position: "relative",\n      width\n    },\n    tooltipContainer: {\n      lineHeight: 1.4,\n      textAlign: "center"\n    },\n    tooltipTitle: {\n      fontSize: 18,\n      margin: 0\n    },\n    tooltipContent: {\n      padding: "20px 10px"\n    },\n    tooltipFooter: {\n      alignItems: "center",\n      display: "flex",\n      justifyContent: "flex-end",\n      marginTop: 15\n    },\n    tooltipFooterSpacer: {\n      flex: 1\n    },\n    buttonNext: {\n      ...buttonBase,\n      backgroundColor: options.primaryColor,\n      borderRadius: 4,\n      color: "#fff"\n    },\n    buttonBack: {\n      ...buttonBase,\n      color: options.primaryColor,\n      marginLeft: "auto",\n      marginRight: 5\n    },\n    buttonClose: {\n      ...buttonBase,\n      color: options.textColor,\n      height: 14,\n      padding: 15,\n      position: "absolute",\n      right: 0,\n      top: 0,\n      width: 14\n    },\n    buttonSkip: {\n      ...buttonBase,\n      color: options.textColor,\n      fontSize: 14\n    },\n    overlay: {\n      ...overlay,\n      backgroundColor: options.overlayColor,\n      mixBlendMode: "hard-light"\n    },\n    overlayLegacy: {\n      ...overlay\n    },\n    overlayLegacyCenter: {\n      ...overlay,\n      backgroundColor: options.overlayColor\n    },\n    spotlight: {\n      ...spotlight,\n      backgroundColor: "gray"\n    },\n    spotlightLegacy: {\n      ...spotlight,\n      boxShadow: `0 0 0 9999px ${options.overlayColor}, ${options.spotlightShadow}`\n    },\n    floaterStyles: {\n      arrow: {\n        color: (_e = (_d = (_c = mergedFloaterProps == null ? void 0 : mergedFloaterProps.styles) == null ? void 0 : _c.arrow) == null ? void 0 : _d.color) != null ? _e : options.arrowColor\n      },\n      options: {\n        zIndex: options.zIndex + 100\n      }\n    },\n    options\n  };\n  return deepmerge__WEBPACK_IMPORTED_MODULE_5__(defaultStyles, mergedStyles);\n}\n\n// src/modules/step.ts\nfunction getTourProps(props) {\n  return pick(\n    props,\n    "beaconComponent",\n    "disableCloseOnEsc",\n    "disableOverlay",\n    "disableOverlayClose",\n    "disableScrolling",\n    "disableScrollParentFix",\n    "floaterProps",\n    "hideBackButton",\n    "hideCloseButton",\n    "locale",\n    "showProgress",\n    "showSkipButton",\n    "spotlightClicks",\n    "spotlightPadding",\n    "styles",\n    "tooltipComponent"\n  );\n}\nfunction getMergedStep(props, currentStep) {\n  var _a, _b, _c, _d, _e, _f;\n  const step = currentStep != null ? currentStep : {};\n  const mergedStep = deepmerge__WEBPACK_IMPORTED_MODULE_5__.all([defaultStep, getTourProps(props), step], {\n    isMergeableObject: is_lite__WEBPACK_IMPORTED_MODULE_4__["default"].plainObject\n  });\n  const mergedStyles = getStyles(props, mergedStep);\n  const scrollParent2 = hasCustomScrollParent(\n    getElement(mergedStep.target),\n    mergedStep.disableScrollParentFix\n  );\n  const floaterProps = deepmerge__WEBPACK_IMPORTED_MODULE_5__.all([\n    defaultFloaterProps,\n    (_a = props.floaterProps) != null ? _a : {},\n    (_b = mergedStep.floaterProps) != null ? _b : {}\n  ]);\n  floaterProps.offset = mergedStep.offset;\n  floaterProps.styles = deepmerge__WEBPACK_IMPORTED_MODULE_5__((_c = floaterProps.styles) != null ? _c : {}, mergedStyles.floaterStyles);\n  floaterProps.offset += (_e = (_d = props.spotlightPadding) != null ? _d : mergedStep.spotlightPadding) != null ? _e : 0;\n  if (mergedStep.placementBeacon && floaterProps.wrapperOptions) {\n    floaterProps.wrapperOptions.placement = mergedStep.placementBeacon;\n  }\n  if (scrollParent2 && floaterProps.options.preventOverflow) {\n    floaterProps.options.preventOverflow.boundariesElement = "window";\n  }\n  return {\n    ...mergedStep,\n    locale: deepmerge__WEBPACK_IMPORTED_MODULE_5__.all([defaultLocale, (_f = props.locale) != null ? _f : {}, mergedStep.locale || {}]),\n    floaterProps,\n    styles: omit(mergedStyles, "floaterStyles")\n  };\n}\nfunction validateStep(step, debug = false) {\n  if (!is_lite__WEBPACK_IMPORTED_MODULE_4__["default"].plainObject(step)) {\n    log({\n      title: "validateStep",\n      data: "step must be an object",\n      warn: true,\n      debug\n    });\n    return false;\n  }\n  if (!step.target) {\n    log({\n      title: "validateStep",\n      data: "target is missing from the step",\n      warn: true,\n      debug\n    });\n    return false;\n  }\n  return true;\n}\nfunction validateSteps(steps, debug = false) {\n  if (!is_lite__WEBPACK_IMPORTED_MODULE_4__["default"].array(steps)) {\n    log({\n      title: "validateSteps",\n      data: "steps must be an array",\n      warn: true,\n      debug\n    });\n    return false;\n  }\n  return steps.every((d) => validateStep(d, debug));\n}\n\n// src/modules/store.ts\n\nvar defaultState = {\n  action: "init",\n  controlled: false,\n  index: 0,\n  lifecycle: LIFECYCLE.INIT,\n  origin: null,\n  size: 0,\n  status: STATUS.IDLE\n};\nvar validKeys = objectKeys(omit(defaultState, "controlled", "size"));\nvar Store = class {\n  constructor(options) {\n    __publicField(this, "beaconPopper");\n    __publicField(this, "tooltipPopper");\n    __publicField(this, "data", /* @__PURE__ */ new Map());\n    __publicField(this, "listener");\n    __publicField(this, "store", /* @__PURE__ */ new Map());\n    __publicField(this, "addListener", (listener) => {\n      this.listener = listener;\n    });\n    __publicField(this, "setSteps", (steps) => {\n      const { size, status } = this.getState();\n      const state = {\n        size: steps.length,\n        status\n      };\n      this.data.set("steps", steps);\n      if (status === STATUS.WAITING && !size && steps.length) {\n        state.status = STATUS.RUNNING;\n      }\n      this.setState(state);\n    });\n    __publicField(this, "getPopper", (name) => {\n      if (name === "beacon") {\n        return this.beaconPopper;\n      }\n      return this.tooltipPopper;\n    });\n    __publicField(this, "setPopper", (name, popper) => {\n      if (name === "beacon") {\n        this.beaconPopper = popper;\n      } else {\n        this.tooltipPopper = popper;\n      }\n    });\n    __publicField(this, "cleanupPoppers", () => {\n      this.beaconPopper = null;\n      this.tooltipPopper = null;\n    });\n    __publicField(this, "close", (origin = null) => {\n      const { index, status } = this.getState();\n      if (status !== STATUS.RUNNING) {\n        return;\n      }\n      this.setState({\n        ...this.getNextState({ action: ACTIONS.CLOSE, index: index + 1, origin })\n      });\n    });\n    __publicField(this, "go", (nextIndex) => {\n      const { controlled, status } = this.getState();\n      if (controlled || status !== STATUS.RUNNING) {\n        return;\n      }\n      const step = this.getSteps()[nextIndex];\n      this.setState({\n        ...this.getNextState({ action: ACTIONS.GO, index: nextIndex }),\n        status: step ? status : STATUS.FINISHED\n      });\n    });\n    __publicField(this, "info", () => this.getState());\n    __publicField(this, "next", () => {\n      const { index, status } = this.getState();\n      if (status !== STATUS.RUNNING) {\n        return;\n      }\n      this.setState(this.getNextState({ action: ACTIONS.NEXT, index: index + 1 }));\n    });\n    __publicField(this, "open", () => {\n      const { status } = this.getState();\n      if (status !== STATUS.RUNNING) {\n        return;\n      }\n      this.setState({\n        ...this.getNextState({ action: ACTIONS.UPDATE, lifecycle: LIFECYCLE.TOOLTIP })\n      });\n    });\n    __publicField(this, "prev", () => {\n      const { index, status } = this.getState();\n      if (status !== STATUS.RUNNING) {\n        return;\n      }\n      this.setState({\n        ...this.getNextState({ action: ACTIONS.PREV, index: index - 1 })\n      });\n    });\n    __publicField(this, "reset", (restart = false) => {\n      const { controlled } = this.getState();\n      if (controlled) {\n        return;\n      }\n      this.setState({\n        ...this.getNextState({ action: ACTIONS.RESET, index: 0 }),\n        status: restart ? STATUS.RUNNING : STATUS.READY\n      });\n    });\n    __publicField(this, "skip", () => {\n      const { status } = this.getState();\n      if (status !== STATUS.RUNNING) {\n        return;\n      }\n      this.setState({\n        action: ACTIONS.SKIP,\n        lifecycle: LIFECYCLE.INIT,\n        status: STATUS.SKIPPED\n      });\n    });\n    __publicField(this, "start", (nextIndex) => {\n      const { index, size } = this.getState();\n      this.setState({\n        ...this.getNextState(\n          {\n            action: ACTIONS.START,\n            index: is_lite__WEBPACK_IMPORTED_MODULE_4__["default"].number(nextIndex) ? nextIndex : index\n          },\n          true\n        ),\n        status: size ? STATUS.RUNNING : STATUS.WAITING\n      });\n    });\n    __publicField(this, "stop", (advance = false) => {\n      const { index, status } = this.getState();\n      if ([STATUS.FINISHED, STATUS.SKIPPED].includes(status)) {\n        return;\n      }\n      this.setState({\n        ...this.getNextState({ action: ACTIONS.STOP, index: index + (advance ? 1 : 0) }),\n        status: STATUS.PAUSED\n      });\n    });\n    __publicField(this, "update", (state) => {\n      var _a, _b;\n      if (!hasValidKeys(state, validKeys)) {\n        throw new Error(`State is not valid. Valid keys: ${validKeys.join(", ")}`);\n      }\n      this.setState({\n        ...this.getNextState(\n          {\n            ...this.getState(),\n            ...state,\n            action: (_a = state.action) != null ? _a : ACTIONS.UPDATE,\n            origin: (_b = state.origin) != null ? _b : null\n          },\n          true\n        )\n      });\n    });\n    const { continuous = false, stepIndex, steps = [] } = options != null ? options : {};\n    this.setState(\n      {\n        action: ACTIONS.INIT,\n        controlled: is_lite__WEBPACK_IMPORTED_MODULE_4__["default"].number(stepIndex),\n        continuous,\n        index: is_lite__WEBPACK_IMPORTED_MODULE_4__["default"].number(stepIndex) ? stepIndex : 0,\n        lifecycle: LIFECYCLE.INIT,\n        origin: null,\n        status: steps.length ? STATUS.READY : STATUS.IDLE\n      },\n      true\n    );\n    this.beaconPopper = null;\n    this.tooltipPopper = null;\n    this.listener = null;\n    this.setSteps(steps);\n  }\n  getState() {\n    if (!this.store.size) {\n      return { ...defaultState };\n    }\n    return {\n      action: this.store.get("action") || "",\n      controlled: this.store.get("controlled") || false,\n      index: parseInt(this.store.get("index"), 10),\n      lifecycle: this.store.get("lifecycle") || "",\n      origin: this.store.get("origin") || null,\n      size: this.store.get("size") || 0,\n      status: this.store.get("status") || ""\n    };\n  }\n  getNextState(state, force = false) {\n    var _a, _b, _c, _d, _e;\n    const { action, controlled, index, size, status } = this.getState();\n    const newIndex = is_lite__WEBPACK_IMPORTED_MODULE_4__["default"].number(state.index) ? state.index : index;\n    const nextIndex = controlled && !force ? index : Math.min(Math.max(newIndex, 0), size);\n    return {\n      action: (_a = state.action) != null ? _a : action,\n      controlled,\n      index: nextIndex,\n      lifecycle: (_b = state.lifecycle) != null ? _b : LIFECYCLE.INIT,\n      origin: (_c = state.origin) != null ? _c : null,\n      size: (_d = state.size) != null ? _d : size,\n      status: nextIndex === size ? STATUS.FINISHED : (_e = state.status) != null ? _e : status\n    };\n  }\n  getSteps() {\n    const steps = this.data.get("steps");\n    return Array.isArray(steps) ? steps : [];\n  }\n  hasUpdatedState(oldState) {\n    const before = JSON.stringify(oldState);\n    const after = JSON.stringify(this.getState());\n    return before !== after;\n  }\n  setState(nextState, initial = false) {\n    const state = this.getState();\n    const {\n      action,\n      index,\n      lifecycle,\n      origin = null,\n      size,\n      status\n    } = {\n      ...state,\n      ...nextState\n    };\n    this.store.set("action", action);\n    this.store.set("index", index);\n    this.store.set("lifecycle", lifecycle);\n    this.store.set("origin", origin);\n    this.store.set("size", size);\n    this.store.set("status", status);\n    if (initial) {\n      this.store.set("controlled", nextState.controlled);\n      this.store.set("continuous", nextState.continuous);\n    }\n    if (this.listener && this.hasUpdatedState(state)) {\n      this.listener(this.getState());\n    }\n  }\n  getHelpers() {\n    return {\n      close: this.close,\n      go: this.go,\n      info: this.info,\n      next: this.next,\n      open: this.open,\n      prev: this.prev,\n      reset: this.reset,\n      skip: this.skip\n    };\n  }\n};\nfunction createStore(options) {\n  return new Store(options);\n}\n\n// src/components/Overlay.tsx\n\n\n\n// src/components/Spotlight.tsx\n\nfunction JoyrideSpotlight({ styles }) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    "div",\n    {\n      key: "JoyrideSpotlight",\n      className: "react-joyride__spotlight",\n      "data-test-id": "spotlight",\n      style: styles\n    }\n  );\n}\nvar Spotlight_default = JoyrideSpotlight;\n\n// src/components/Overlay.tsx\nvar JoyrideOverlay = class extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n  constructor() {\n    super(...arguments);\n    __publicField(this, "isActive", false);\n    __publicField(this, "resizeTimeout");\n    __publicField(this, "scrollTimeout");\n    __publicField(this, "scrollParent");\n    __publicField(this, "state", {\n      isScrolling: false,\n      mouseOverSpotlight: false,\n      showSpotlight: true\n    });\n    __publicField(this, "hideSpotlight", () => {\n      const { continuous, disableOverlay, lifecycle } = this.props;\n      const hiddenLifecycles = [\n        LIFECYCLE.INIT,\n        LIFECYCLE.BEACON,\n        LIFECYCLE.COMPLETE,\n        LIFECYCLE.ERROR\n      ];\n      return disableOverlay || (continuous ? hiddenLifecycles.includes(lifecycle) : lifecycle !== LIFECYCLE.TOOLTIP);\n    });\n    __publicField(this, "handleMouseMove", (event) => {\n      const { mouseOverSpotlight } = this.state;\n      const { height, left, position, top, width } = this.spotlightStyles;\n      const offsetY = position === "fixed" ? event.clientY : event.pageY;\n      const offsetX = position === "fixed" ? event.clientX : event.pageX;\n      const inSpotlightHeight = offsetY >= top && offsetY <= top + height;\n      const inSpotlightWidth = offsetX >= left && offsetX <= left + width;\n      const inSpotlight = inSpotlightWidth && inSpotlightHeight;\n      if (inSpotlight !== mouseOverSpotlight) {\n        this.updateState({ mouseOverSpotlight: inSpotlight });\n      }\n    });\n    __publicField(this, "handleScroll", () => {\n      const { target } = this.props;\n      const element = getElement(target);\n      if (this.scrollParent !== document) {\n        const { isScrolling } = this.state;\n        if (!isScrolling) {\n          this.updateState({ isScrolling: true, showSpotlight: false });\n        }\n        clearTimeout(this.scrollTimeout);\n        this.scrollTimeout = window.setTimeout(() => {\n          this.updateState({ isScrolling: false, showSpotlight: true });\n        }, 50);\n      } else if (hasPosition(element, "sticky")) {\n        this.updateState({});\n      }\n    });\n    __publicField(this, "handleResize", () => {\n      clearTimeout(this.resizeTimeout);\n      this.resizeTimeout = window.setTimeout(() => {\n        if (!this.isActive) {\n          return;\n        }\n        this.forceUpdate();\n      }, 100);\n    });\n  }\n  componentDidMount() {\n    const { debug, disableScrolling, disableScrollParentFix = false, target } = this.props;\n    const element = getElement(target);\n    this.scrollParent = getScrollParent(element != null ? element : document.body, disableScrollParentFix, true);\n    this.isActive = true;\n    if (true) {\n      if (!disableScrolling && hasCustomScrollParent(element, true)) {\n        log({\n          title: "step has a custom scroll parent and can cause trouble with scrolling",\n          data: [{ key: "parent", value: this.scrollParent }],\n          debug\n        });\n      }\n    }\n    window.addEventListener("resize", this.handleResize);\n  }\n  componentDidUpdate(previousProps) {\n    var _a;\n    const { lifecycle, spotlightClicks } = this.props;\n    const { changed } = (0,tree_changes__WEBPACK_IMPORTED_MODULE_6__["default"])(previousProps, this.props);\n    if (changed("lifecycle", LIFECYCLE.TOOLTIP)) {\n      (_a = this.scrollParent) == null ? void 0 : _a.addEventListener("scroll", this.handleScroll, { passive: true });\n      setTimeout(() => {\n        const { isScrolling } = this.state;\n        if (!isScrolling) {\n          this.updateState({ showSpotlight: true });\n        }\n      }, 100);\n    }\n    if (changed("spotlightClicks") || changed("disableOverlay") || changed("lifecycle")) {\n      if (spotlightClicks && lifecycle === LIFECYCLE.TOOLTIP) {\n        window.addEventListener("mousemove", this.handleMouseMove, false);\n      } else if (lifecycle !== LIFECYCLE.TOOLTIP) {\n        window.removeEventListener("mousemove", this.handleMouseMove);\n      }\n    }\n  }\n  componentWillUnmount() {\n    var _a;\n    this.isActive = false;\n    window.removeEventListener("mousemove", this.handleMouseMove);\n    window.removeEventListener("resize", this.handleResize);\n    clearTimeout(this.resizeTimeout);\n    clearTimeout(this.scrollTimeout);\n    (_a = this.scrollParent) == null ? void 0 : _a.removeEventListener("scroll", this.handleScroll);\n  }\n  get overlayStyles() {\n    const { mouseOverSpotlight } = this.state;\n    const { disableOverlayClose, placement, styles } = this.props;\n    let baseStyles = styles.overlay;\n    if (isLegacy()) {\n      baseStyles = placement === "center" ? styles.overlayLegacyCenter : styles.overlayLegacy;\n    }\n    return {\n      cursor: disableOverlayClose ? "default" : "pointer",\n      height: getDocumentHeight(),\n      pointerEvents: mouseOverSpotlight ? "none" : "auto",\n      ...baseStyles\n    };\n  }\n  get spotlightStyles() {\n    var _a, _b, _c;\n    const { showSpotlight } = this.state;\n    const {\n      disableScrollParentFix = false,\n      spotlightClicks,\n      spotlightPadding = 0,\n      styles,\n      target\n    } = this.props;\n    const element = getElement(target);\n    const elementRect = getClientRect(element);\n    const isFixedTarget = hasPosition(element);\n    const top = getElementPosition(element, spotlightPadding, disableScrollParentFix);\n    return {\n      ...isLegacy() ? styles.spotlightLegacy : styles.spotlight,\n      height: Math.round(((_a = elementRect == null ? void 0 : elementRect.height) != null ? _a : 0) + spotlightPadding * 2),\n      left: Math.round(((_b = elementRect == null ? void 0 : elementRect.left) != null ? _b : 0) - spotlightPadding),\n      opacity: showSpotlight ? 1 : 0,\n      pointerEvents: spotlightClicks ? "none" : "auto",\n      position: isFixedTarget ? "fixed" : "absolute",\n      top,\n      transition: "opacity 0.2s",\n      width: Math.round(((_c = elementRect == null ? void 0 : elementRect.width) != null ? _c : 0) + spotlightPadding * 2)\n    };\n  }\n  updateState(state) {\n    if (!this.isActive) {\n      return;\n    }\n    this.setState((previousState) => ({ ...previousState, ...state }));\n  }\n  render() {\n    const { showSpotlight } = this.state;\n    const { onClickOverlay, placement } = this.props;\n    const { hideSpotlight, overlayStyles, spotlightStyles } = this;\n    if (hideSpotlight()) {\n      return null;\n    }\n    let spotlight2 = placement !== "center" && showSpotlight && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Spotlight_default, { styles: spotlightStyles });\n    if (getBrowser() === "safari") {\n      const { mixBlendMode, zIndex, ...safariOverlay } = overlayStyles;\n      spotlight2 = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", { style: { ...safariOverlay } }, spotlight2);\n      delete overlayStyles.backgroundColor;\n    }\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n      "div",\n      {\n        className: "react-joyride__overlay",\n        "data-test-id": "overlay",\n        onClick: onClickOverlay,\n        role: "presentation",\n        style: overlayStyles\n      },\n      spotlight2\n    );\n  }\n};\n\n// src/components/Portal.tsx\n\n\nvar JoyridePortal = class extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n  constructor() {\n    super(...arguments);\n    __publicField(this, "node", null);\n  }\n  componentDidMount() {\n    const { id } = this.props;\n    if (!canUseDOM()) {\n      return;\n    }\n    this.node = document.createElement("div");\n    this.node.id = id;\n    document.body.appendChild(this.node);\n    if (!isReact16) {\n      this.renderReact15();\n    }\n  }\n  componentDidUpdate() {\n    if (!canUseDOM()) {\n      return;\n    }\n    if (!isReact16) {\n      this.renderReact15();\n    }\n  }\n  componentWillUnmount() {\n    if (!canUseDOM() || !this.node) {\n      return;\n    }\n    if (!isReact16) {\n      react_dom__WEBPACK_IMPORTED_MODULE_3__.unmountComponentAtNode(this.node);\n    }\n    if (this.node.parentNode === document.body) {\n      document.body.removeChild(this.node);\n      this.node = null;\n    }\n  }\n  renderReact15() {\n    if (!canUseDOM()) {\n      return;\n    }\n    const { children } = this.props;\n    if (this.node) {\n      react_dom__WEBPACK_IMPORTED_MODULE_3__.unstable_renderSubtreeIntoContainer(this, children, this.node);\n    }\n  }\n  renderReact16() {\n    if (!canUseDOM() || !isReact16) {\n      return null;\n    }\n    const { children } = this.props;\n    if (!this.node) {\n      return null;\n    }\n    return react_dom__WEBPACK_IMPORTED_MODULE_3__.createPortal(children, this.node);\n  }\n  render() {\n    if (!isReact16) {\n      return null;\n    }\n    return this.renderReact16();\n  }\n};\n\n// src/components/Step.tsx\n\n\n\n\n\n// src/modules/scope.ts\nvar Scope = class {\n  constructor(element, options) {\n    __publicField(this, "element");\n    __publicField(this, "options");\n    __publicField(this, "canBeTabbed", (element) => {\n      const { tabIndex } = element;\n      if (tabIndex === null || tabIndex < 0) {\n        return false;\n      }\n      return this.canHaveFocus(element);\n    });\n    __publicField(this, "canHaveFocus", (element) => {\n      const validTabNodes = /input|select|textarea|button|object/;\n      const nodeName = element.nodeName.toLowerCase();\n      const isValid = validTabNodes.test(nodeName) && !element.getAttribute("disabled") || nodeName === "a" && !!element.getAttribute("href");\n      return isValid && this.isVisible(element);\n    });\n    __publicField(this, "findValidTabElements", () => [].slice.call(this.element.querySelectorAll("*"), 0).filter(this.canBeTabbed));\n    __publicField(this, "handleKeyDown", (event) => {\n      const { code = "Tab" } = this.options;\n      if (event.code === code) {\n        this.interceptTab(event);\n      }\n    });\n    __publicField(this, "interceptTab", (event) => {\n      event.preventDefault();\n      const elements = this.findValidTabElements();\n      const { shiftKey } = event;\n      if (!elements.length) {\n        return;\n      }\n      let x = document.activeElement ? elements.indexOf(document.activeElement) : 0;\n      if (x === -1 || !shiftKey && x + 1 === elements.length) {\n        x = 0;\n      } else if (shiftKey && x === 0) {\n        x = elements.length - 1;\n      } else {\n        x += shiftKey ? -1 : 1;\n      }\n      elements[x].focus();\n    });\n    // eslint-disable-next-line class-methods-use-this\n    __publicField(this, "isHidden", (element) => {\n      const noSize = element.offsetWidth <= 0 && element.offsetHeight <= 0;\n      const style = window.getComputedStyle(element);\n      if (noSize && !element.innerHTML) {\n        return true;\n      }\n      return noSize && style.getPropertyValue("overflow") !== "visible" || style.getPropertyValue("display") === "none";\n    });\n    __publicField(this, "isVisible", (element) => {\n      let parentElement = element;\n      while (parentElement) {\n        if (parentElement instanceof HTMLElement) {\n          if (parentElement === document.body) {\n            break;\n          }\n          if (this.isHidden(parentElement)) {\n            return false;\n          }\n          parentElement = parentElement.parentNode;\n        }\n      }\n      return true;\n    });\n    __publicField(this, "removeScope", () => {\n      window.removeEventListener("keydown", this.handleKeyDown);\n    });\n    __publicField(this, "checkFocus", (target) => {\n      if (document.activeElement !== target) {\n        target.focus();\n        window.requestAnimationFrame(() => this.checkFocus(target));\n      }\n    });\n    __publicField(this, "setFocus", () => {\n      const { selector } = this.options;\n      if (!selector) {\n        return;\n      }\n      const target = this.element.querySelector(selector);\n      if (target) {\n        window.requestAnimationFrame(() => this.checkFocus(target));\n      }\n    });\n    if (!(element instanceof HTMLElement)) {\n      throw new TypeError("Invalid parameter: element must be an HTMLElement");\n    }\n    this.element = element;\n    this.options = options;\n    window.addEventListener("keydown", this.handleKeyDown, false);\n    this.setFocus();\n  }\n};\n\n// src/components/Beacon.tsx\n\n\n\nvar JoyrideBeacon = class extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n  constructor(props) {\n    super(props);\n    __publicField(this, "beacon", null);\n    __publicField(this, "setBeaconRef", (c) => {\n      this.beacon = c;\n    });\n    if (props.beaconComponent) {\n      return;\n    }\n    const head = document.head || document.getElementsByTagName("head")[0];\n    const style = document.createElement("style");\n    style.id = "joyride-beacon-animation";\n    if (props.nonce) {\n      style.setAttribute("nonce", props.nonce);\n    }\n    const css = `\n        @keyframes joyride-beacon-inner {\n          20% {\n            opacity: 0.9;\n          }\n        \n          90% {\n            opacity: 0.7;\n          }\n        }\n        \n        @keyframes joyride-beacon-outer {\n          0% {\n            transform: scale(1);\n          }\n        \n          45% {\n            opacity: 0.7;\n            transform: scale(0.75);\n          }\n        \n          100% {\n            opacity: 0.9;\n            transform: scale(1);\n          }\n        }\n      `;\n    style.appendChild(document.createTextNode(css));\n    head.appendChild(style);\n  }\n  componentDidMount() {\n    const { shouldFocus } = this.props;\n    if (true) {\n      if (!is_lite__WEBPACK_IMPORTED_MODULE_4__["default"].domElement(this.beacon)) {\n        console.warn("beacon is not a valid DOM element");\n      }\n    }\n    setTimeout(() => {\n      if (is_lite__WEBPACK_IMPORTED_MODULE_4__["default"].domElement(this.beacon) && shouldFocus) {\n        this.beacon.focus();\n      }\n    }, 0);\n  }\n  componentWillUnmount() {\n    const style = document.getElementById("joyride-beacon-animation");\n    if (style == null ? void 0 : style.parentNode) {\n      style.parentNode.removeChild(style);\n    }\n  }\n  render() {\n    const {\n      beaconComponent,\n      continuous,\n      index,\n      isLastStep,\n      locale,\n      onClickOrHover,\n      size,\n      step,\n      styles\n    } = this.props;\n    const title = is_lite__WEBPACK_IMPORTED_MODULE_4__["default"].string(locale.open) ? locale.open : react_innertext__WEBPACK_IMPORTED_MODULE_8__(locale.open);\n    const sharedProps = {\n      "aria-label": title,\n      onClick: onClickOrHover,\n      onMouseEnter: onClickOrHover,\n      ref: this.setBeaconRef,\n      title\n    };\n    let component;\n    if (beaconComponent) {\n      const BeaconComponent = beaconComponent;\n      component = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n        BeaconComponent,\n        {\n          continuous,\n          index,\n          isLastStep,\n          size,\n          step,\n          ...sharedProps\n        }\n      );\n    } else {\n      component = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n        "button",\n        {\n          key: "JoyrideBeacon",\n          className: "react-joyride__beacon",\n          "data-test-id": "button-beacon",\n          style: styles.beacon,\n          type: "button",\n          ...sharedProps\n        },\n        /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", { style: styles.beaconInner }),\n        /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", { style: styles.beaconOuter })\n      );\n    }\n    return component;\n  }\n};\n\n// src/components/Tooltip/index.tsx\n\n\n// src/components/Tooltip/Container.tsx\n\n\n// src/components/Tooltip/CloseButton.tsx\n\nfunction JoyrideTooltipCloseButton({ styles, ...props }) {\n  const { color, height, width, ...style } = styles;\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement("button", { style, type: "button", ...props }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    "svg",\n    {\n      height: typeof height === "number" ? `${height}px` : height,\n      preserveAspectRatio: "xMidYMid",\n      version: "1.1",\n      viewBox: "0 0 18 18",\n      width: typeof width === "number" ? `${width}px` : width,\n      xmlns: "http://www.w3.org/2000/svg"\n    },\n    /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n      "path",\n      {\n        d: "M8.13911129,9.00268191 L0.171521827,17.0258467 C-0.0498027049,17.248715 -0.0498027049,17.6098394 0.171521827,17.8327545 C0.28204354,17.9443526 0.427188206,17.9998706 0.572051765,17.9998706 C0.71714958,17.9998706 0.862013139,17.9443526 0.972581703,17.8327545 L9.0000937,9.74924618 L17.0276057,17.8327545 C17.1384085,17.9443526 17.2832721,17.9998706 17.4281356,17.9998706 C17.5729992,17.9998706 17.718097,17.9443526 17.8286656,17.8327545 C18.0499901,17.6098862 18.0499901,17.2487618 17.8286656,17.0258467 L9.86135722,9.00268191 L17.8340066,0.973848225 C18.0553311,0.750979934 18.0553311,0.389855532 17.8340066,0.16694039 C17.6126821,-0.0556467968 17.254037,-0.0556467968 17.0329467,0.16694039 L9.00042166,8.25611765 L0.967006424,0.167268345 C0.745681892,-0.0553188426 0.387317931,-0.0553188426 0.165993399,0.167268345 C-0.0553311331,0.390136635 -0.0553311331,0.751261038 0.165993399,0.974176179 L8.13920499,9.00268191 L8.13911129,9.00268191 Z",\n        fill: color\n      }\n    ))\n  ));\n}\nvar CloseButton_default = JoyrideTooltipCloseButton;\n\n// src/components/Tooltip/Container.tsx\nfunction JoyrideTooltipContainer(props) {\n  const { backProps, closeProps, index, isLastStep, primaryProps, skipProps, step, tooltipProps } = props;\n  const { content, hideBackButton, hideCloseButton, hideFooter, showSkipButton, styles, title } = step;\n  const output = {\n    primary: primaryProps.title\n  };\n  if (output.primary) {\n    output.primary = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n      "button",\n      {\n        "data-test-id": "button-primary",\n        style: styles.buttonNext,\n        type: "button",\n        ...primaryProps\n      },\n      output.primary\n    );\n  }\n  if (showSkipButton && !isLastStep) {\n    output.skip = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n      "button",\n      {\n        "aria-live": "off",\n        "data-test-id": "button-skip",\n        style: styles.buttonSkip,\n        type: "button",\n        ...skipProps\n      },\n      skipProps.title\n    );\n  }\n  if (!hideBackButton && index > 0) {\n    output.back = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement("button", { "data-test-id": "button-back", style: styles.buttonBack, type: "button", ...backProps }, backProps.title);\n  }\n  output.close = !hideCloseButton && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CloseButton_default, { "data-test-id": "button-close", styles: styles.buttonClose, ...closeProps });\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    "div",\n    {\n      key: "JoyrideTooltip",\n      "aria-label": getText(title) || getText(content),\n      className: "react-joyride__tooltip",\n      style: styles.tooltip,\n      ...tooltipProps\n    },\n    /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", { style: styles.tooltipContainer }, title && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement("h1", { "aria-label": getText(title), style: styles.tooltipTitle }, title), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", { style: styles.tooltipContent }, content)),\n    !hideFooter && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", { style: styles.tooltipFooter }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", { style: styles.tooltipFooterSpacer }, output.skip), output.back, output.primary),\n    output.close\n  );\n}\nvar Container_default = JoyrideTooltipContainer;\n\n// src/components/Tooltip/index.tsx\nvar JoyrideTooltip = class extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n  constructor() {\n    super(...arguments);\n    __publicField(this, "handleClickBack", (event) => {\n      event.preventDefault();\n      const { helpers } = this.props;\n      helpers.prev();\n    });\n    __publicField(this, "handleClickClose", (event) => {\n      event.preventDefault();\n      const { helpers } = this.props;\n      helpers.close("button_close");\n    });\n    __publicField(this, "handleClickPrimary", (event) => {\n      event.preventDefault();\n      const { continuous, helpers } = this.props;\n      if (!continuous) {\n        helpers.close("button_primary");\n        return;\n      }\n      helpers.next();\n    });\n    __publicField(this, "handleClickSkip", (event) => {\n      event.preventDefault();\n      const { helpers } = this.props;\n      helpers.skip();\n    });\n    __publicField(this, "getElementsProps", () => {\n      const { continuous, index, isLastStep, setTooltipRef, size, step } = this.props;\n      const back = getText(step.locale.back);\n      const close = getText(step.locale.close);\n      const last = getText(step.locale.last);\n      const next = getText(step.locale.next);\n      const skip = getText(step.locale.skip);\n      let primaryLabel = close;\n      let primaryText = close;\n      if (continuous) {\n        primaryLabel = next;\n        primaryText = next;\n        if (step.showProgress && !isLastStep) {\n          primaryLabel = getText(step.locale.nextLabelWithProgress).replace("{step}", String(index + 1)).replace("{steps}", String(size));\n          primaryText = `${next} (${index + 1}/${size})`;\n        }\n        if (isLastStep) {\n          primaryLabel = last;\n          primaryText = last;\n        }\n      }\n      return {\n        backProps: {\n          "aria-label": back,\n          "data-action": "back",\n          onClick: this.handleClickBack,\n          role: "button",\n          title: back\n        },\n        closeProps: {\n          "aria-label": close,\n          "data-action": "close",\n          onClick: this.handleClickClose,\n          role: "button",\n          title: close\n        },\n        primaryProps: {\n          "aria-label": primaryLabel,\n          "data-action": "primary",\n          onClick: this.handleClickPrimary,\n          role: "button",\n          title: primaryText\n        },\n        skipProps: {\n          "aria-label": skip,\n          "data-action": "skip",\n          onClick: this.handleClickSkip,\n          role: "button",\n          title: skip\n        },\n        tooltipProps: {\n          "aria-modal": true,\n          ref: setTooltipRef,\n          role: "alertdialog"\n        }\n      };\n    });\n  }\n  render() {\n    const { continuous, index, isLastStep, setTooltipRef, size, step } = this.props;\n    const { beaconComponent, tooltipComponent, ...cleanStep } = step;\n    let component;\n    if (tooltipComponent) {\n      const renderProps = {\n        ...this.getElementsProps(),\n        continuous,\n        index,\n        isLastStep,\n        size,\n        step: cleanStep,\n        setTooltipRef\n      };\n      const TooltipComponent = tooltipComponent;\n      component = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(TooltipComponent, { ...renderProps });\n    } else {\n      component = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n        Container_default,\n        {\n          ...this.getElementsProps(),\n          continuous,\n          index,\n          isLastStep,\n          size,\n          step\n        }\n      );\n    }\n    return component;\n  }\n};\n\n// src/components/Step.tsx\nvar JoyrideStep = class extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n  constructor() {\n    super(...arguments);\n    __publicField(this, "scope", null);\n    __publicField(this, "tooltip", null);\n    /**\n     * Beacon click/hover event listener\n     */\n    __publicField(this, "handleClickHoverBeacon", (event) => {\n      const { step, store } = this.props;\n      if (event.type === "mouseenter" && step.event !== "hover") {\n        return;\n      }\n      store.update({ lifecycle: LIFECYCLE.TOOLTIP });\n    });\n    __publicField(this, "setTooltipRef", (element) => {\n      this.tooltip = element;\n    });\n    __publicField(this, "setPopper", (popper, type) => {\n      var _a;\n      const { action, lifecycle, step, store } = this.props;\n      if (type === "wrapper") {\n        store.setPopper("beacon", popper);\n      } else {\n        store.setPopper("tooltip", popper);\n      }\n      if (store.getPopper("beacon") && (store.getPopper("tooltip") || step.placement === "center") && lifecycle === LIFECYCLE.INIT) {\n        store.update({\n          action,\n          lifecycle: LIFECYCLE.READY\n        });\n      }\n      if ((_a = step.floaterProps) == null ? void 0 : _a.getPopper) {\n        step.floaterProps.getPopper(popper, type);\n      }\n    });\n    __publicField(this, "renderTooltip", (renderProps) => {\n      const { continuous, helpers, index, size, step } = this.props;\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n        JoyrideTooltip,\n        {\n          continuous,\n          helpers,\n          index,\n          isLastStep: index + 1 === size,\n          setTooltipRef: this.setTooltipRef,\n          size,\n          step,\n          ...renderProps\n        }\n      );\n    });\n  }\n  componentDidMount() {\n    const { debug, index } = this.props;\n    log({\n      title: `step:${index}`,\n      data: [{ key: "props", value: this.props }],\n      debug\n    });\n  }\n  componentDidUpdate(previousProps) {\n    var _a;\n    const {\n      action,\n      callback,\n      continuous,\n      controlled,\n      debug,\n      helpers,\n      index,\n      lifecycle,\n      status,\n      step,\n      store\n    } = this.props;\n    const { changed, changedFrom } = (0,tree_changes__WEBPACK_IMPORTED_MODULE_6__["default"])(previousProps, this.props);\n    const state = helpers.info();\n    const skipBeacon = continuous && action !== ACTIONS.CLOSE && (index > 0 || action === ACTIONS.PREV);\n    const hasStoreChanged = changed("action") || changed("index") || changed("lifecycle") || changed("status");\n    const isInitial = changedFrom("lifecycle", [LIFECYCLE.TOOLTIP, LIFECYCLE.INIT], LIFECYCLE.INIT);\n    const isAfterAction = changed("action", [\n      ACTIONS.NEXT,\n      ACTIONS.PREV,\n      ACTIONS.SKIP,\n      ACTIONS.CLOSE\n    ]);\n    const isControlled = controlled && index === previousProps.index;\n    if (isAfterAction && (isInitial || isControlled)) {\n      callback({\n        ...state,\n        index: previousProps.index,\n        lifecycle: LIFECYCLE.COMPLETE,\n        step: previousProps.step,\n        type: EVENTS.STEP_AFTER\n      });\n    }\n    if (step.placement === "center" && status === STATUS.RUNNING && changed("index") && action !== ACTIONS.START && lifecycle === LIFECYCLE.INIT) {\n      store.update({ lifecycle: LIFECYCLE.READY });\n    }\n    if (hasStoreChanged) {\n      const element = getElement(step.target);\n      const elementExists = !!element;\n      const hasRenderedTarget = elementExists && isElementVisible(element);\n      if (hasRenderedTarget) {\n        if (changedFrom("status", STATUS.READY, STATUS.RUNNING) || changedFrom("lifecycle", LIFECYCLE.INIT, LIFECYCLE.READY)) {\n          callback({\n            ...state,\n            step,\n            type: EVENTS.STEP_BEFORE\n          });\n        }\n      } else {\n        console.warn(elementExists ? "Target not visible" : "Target not mounted", step);\n        callback({\n          ...state,\n          type: EVENTS.TARGET_NOT_FOUND,\n          step\n        });\n        if (!controlled) {\n          store.update({ index: index + (action === ACTIONS.PREV ? -1 : 1) });\n        }\n      }\n    }\n    if (changedFrom("lifecycle", LIFECYCLE.INIT, LIFECYCLE.READY)) {\n      store.update({\n        lifecycle: hideBeacon(step) || skipBeacon ? LIFECYCLE.TOOLTIP : LIFECYCLE.BEACON\n      });\n    }\n    if (changed("index")) {\n      log({\n        title: `step:${lifecycle}`,\n        data: [{ key: "props", value: this.props }],\n        debug\n      });\n    }\n    if (changed("lifecycle", LIFECYCLE.BEACON)) {\n      callback({\n        ...state,\n        step,\n        type: EVENTS.BEACON\n      });\n    }\n    if (changed("lifecycle", LIFECYCLE.TOOLTIP)) {\n      callback({\n        ...state,\n        step,\n        type: EVENTS.TOOLTIP\n      });\n      if (this.tooltip) {\n        this.scope = new Scope(this.tooltip, { selector: "[data-action=primary]" });\n        this.scope.setFocus();\n      }\n    }\n    if (changedFrom("lifecycle", [LIFECYCLE.TOOLTIP, LIFECYCLE.INIT], LIFECYCLE.INIT)) {\n      (_a = this.scope) == null ? void 0 : _a.removeScope();\n      store.cleanupPoppers();\n    }\n  }\n  componentWillUnmount() {\n    var _a;\n    (_a = this.scope) == null ? void 0 : _a.removeScope();\n  }\n  get open() {\n    const { lifecycle, step } = this.props;\n    return hideBeacon(step) || lifecycle === LIFECYCLE.TOOLTIP;\n  }\n  render() {\n    const { continuous, debug, index, nonce, shouldScroll: shouldScroll2, size, step } = this.props;\n    const target = getElement(step.target);\n    if (!validateStep(step) || !is_lite__WEBPACK_IMPORTED_MODULE_4__["default"].domElement(target)) {\n      return null;\n    }\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", { key: `JoyrideStep-${index}`, className: "react-joyride__step" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n      react_floater__WEBPACK_IMPORTED_MODULE_7__["default"],\n      {\n        ...step.floaterProps,\n        component: this.renderTooltip,\n        debug,\n        getPopper: this.setPopper,\n        id: `react-joyride-step-${index}`,\n        open: this.open,\n        placement: step.placement,\n        target: step.target\n      },\n      /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n        JoyrideBeacon,\n        {\n          beaconComponent: step.beaconComponent,\n          continuous,\n          index,\n          isLastStep: index + 1 === size,\n          locale: step.locale,\n          nonce,\n          onClickOrHover: this.handleClickHoverBeacon,\n          shouldFocus: shouldScroll2,\n          size,\n          step,\n          styles: step.styles\n        }\n      )\n    ));\n  }\n};\n\n// src/components/index.tsx\nvar Joyride = class extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n  constructor(props) {\n    super(props);\n    __publicField(this, "helpers");\n    __publicField(this, "store");\n    /**\n     * Trigger the callback.\n     */\n    __publicField(this, "callback", (data) => {\n      const { callback } = this.props;\n      if (is_lite__WEBPACK_IMPORTED_MODULE_4__["default"].function(callback)) {\n        callback(data);\n      }\n    });\n    /**\n     * Keydown event listener\n     */\n    __publicField(this, "handleKeyboard", (event) => {\n      const { index, lifecycle } = this.state;\n      const { steps } = this.props;\n      const step = steps[index];\n      if (lifecycle === LIFECYCLE.TOOLTIP) {\n        if (event.code === "Escape" && step && !step.disableCloseOnEsc) {\n          this.store.close("keyboard");\n        }\n      }\n    });\n    __publicField(this, "handleClickOverlay", () => {\n      const { index } = this.state;\n      const { steps } = this.props;\n      const step = getMergedStep(this.props, steps[index]);\n      if (!step.disableOverlayClose) {\n        this.helpers.close("overlay");\n      }\n    });\n    /**\n     * Sync the store with the component\'s state\n     */\n    __publicField(this, "syncState", (state) => {\n      this.setState(state);\n    });\n    const { debug, getHelpers, run = true, stepIndex } = props;\n    this.store = createStore({\n      ...props,\n      controlled: run && is_lite__WEBPACK_IMPORTED_MODULE_4__["default"].number(stepIndex)\n    });\n    this.helpers = this.store.getHelpers();\n    const { addListener } = this.store;\n    log({\n      title: "init",\n      data: [\n        { key: "props", value: this.props },\n        { key: "state", value: this.state }\n      ],\n      debug\n    });\n    addListener(this.syncState);\n    if (getHelpers) {\n      getHelpers(this.helpers);\n    }\n    this.state = this.store.getState();\n  }\n  componentDidMount() {\n    if (!canUseDOM()) {\n      return;\n    }\n    const { debug, disableCloseOnEsc, run, steps } = this.props;\n    const { start } = this.store;\n    if (validateSteps(steps, debug) && run) {\n      start();\n    }\n    if (!disableCloseOnEsc) {\n      document.body.addEventListener("keydown", this.handleKeyboard, { passive: true });\n    }\n  }\n  componentDidUpdate(previousProps, previousState) {\n    if (!canUseDOM()) {\n      return;\n    }\n    const { action, controlled, index, status } = this.state;\n    const { debug, run, stepIndex, steps } = this.props;\n    const { stepIndex: previousStepIndex, steps: previousSteps } = previousProps;\n    const { reset, setSteps, start, stop, update } = this.store;\n    const { changed: changedProps } = (0,tree_changes__WEBPACK_IMPORTED_MODULE_6__["default"])(previousProps, this.props);\n    const { changed, changedFrom } = (0,tree_changes__WEBPACK_IMPORTED_MODULE_6__["default"])(previousState, this.state);\n    const step = getMergedStep(this.props, steps[index]);\n    const stepsChanged = !(0,_gilbarbara_deep_equal__WEBPACK_IMPORTED_MODULE_9__["default"])(previousSteps, steps);\n    const stepIndexChanged = is_lite__WEBPACK_IMPORTED_MODULE_4__["default"].number(stepIndex) && changedProps("stepIndex");\n    const target = getElement(step.target);\n    if (stepsChanged) {\n      if (validateSteps(steps, debug)) {\n        setSteps(steps);\n      } else {\n        console.warn("Steps are not valid", steps);\n      }\n    }\n    if (changedProps("run")) {\n      if (run) {\n        start(stepIndex);\n      } else {\n        stop();\n      }\n    }\n    if (stepIndexChanged) {\n      let nextAction = is_lite__WEBPACK_IMPORTED_MODULE_4__["default"].number(previousStepIndex) && previousStepIndex < stepIndex ? ACTIONS.NEXT : ACTIONS.PREV;\n      if (action === ACTIONS.STOP) {\n        nextAction = ACTIONS.START;\n      }\n      if (![STATUS.FINISHED, STATUS.SKIPPED].includes(status)) {\n        update({\n          action: action === ACTIONS.CLOSE ? ACTIONS.CLOSE : nextAction,\n          index: stepIndex,\n          lifecycle: LIFECYCLE.INIT\n        });\n      }\n    }\n    if (!controlled && status === STATUS.RUNNING && index === 0 && !target) {\n      this.store.update({ index: index + 1 });\n      this.callback({\n        ...this.state,\n        type: EVENTS.TARGET_NOT_FOUND,\n        step\n      });\n    }\n    const callbackData = {\n      ...this.state,\n      index,\n      step\n    };\n    const isAfterAction = changed("action", [\n      ACTIONS.NEXT,\n      ACTIONS.PREV,\n      ACTIONS.SKIP,\n      ACTIONS.CLOSE\n    ]);\n    if (isAfterAction && changed("status", STATUS.PAUSED)) {\n      const previousStep = getMergedStep(this.props, steps[previousState.index]);\n      this.callback({\n        ...callbackData,\n        index: previousState.index,\n        lifecycle: LIFECYCLE.COMPLETE,\n        step: previousStep,\n        type: EVENTS.STEP_AFTER\n      });\n    }\n    if (changed("status", [STATUS.FINISHED, STATUS.SKIPPED])) {\n      const previousStep = getMergedStep(this.props, steps[previousState.index]);\n      if (!controlled) {\n        this.callback({\n          ...callbackData,\n          index: previousState.index,\n          lifecycle: LIFECYCLE.COMPLETE,\n          step: previousStep,\n          type: EVENTS.STEP_AFTER\n        });\n      }\n      this.callback({\n        ...callbackData,\n        type: EVENTS.TOUR_END,\n        // Return the last step when the tour is finished\n        step: previousStep,\n        index: previousState.index\n      });\n      reset();\n    } else if (changedFrom("status", [STATUS.IDLE, STATUS.READY], STATUS.RUNNING)) {\n      this.callback({\n        ...callbackData,\n        type: EVENTS.TOUR_START\n      });\n    } else if (changed("status") || changed("action", ACTIONS.RESET)) {\n      this.callback({\n        ...callbackData,\n        type: EVENTS.TOUR_STATUS\n      });\n    }\n    this.scrollToStep(previousState);\n  }\n  componentWillUnmount() {\n    const { disableCloseOnEsc } = this.props;\n    if (!disableCloseOnEsc) {\n      document.body.removeEventListener("keydown", this.handleKeyboard);\n    }\n  }\n  scrollToStep(previousState) {\n    const { index, lifecycle, status } = this.state;\n    const {\n      debug,\n      disableScrollParentFix = false,\n      scrollDuration,\n      scrollOffset = 20,\n      scrollToFirstStep = false,\n      steps\n    } = this.props;\n    const step = getMergedStep(this.props, steps[index]);\n    const target = getElement(step.target);\n    const shouldScrollToStep = shouldScroll({\n      isFirstStep: index === 0,\n      lifecycle,\n      previousLifecycle: previousState.lifecycle,\n      scrollToFirstStep,\n      step,\n      target\n    });\n    if (status === STATUS.RUNNING && shouldScrollToStep) {\n      const hasCustomScroll = hasCustomScrollParent(target, disableScrollParentFix);\n      const scrollParent2 = getScrollParent(target, disableScrollParentFix);\n      let scrollY = Math.floor(getScrollTo(target, scrollOffset, disableScrollParentFix)) || 0;\n      log({\n        title: "scrollToStep",\n        data: [\n          { key: "index", value: index },\n          { key: "lifecycle", value: lifecycle },\n          { key: "status", value: status }\n        ],\n        debug\n      });\n      const beaconPopper = this.store.getPopper("beacon");\n      const tooltipPopper = this.store.getPopper("tooltip");\n      if (lifecycle === LIFECYCLE.BEACON && beaconPopper) {\n        const { offsets, placement } = beaconPopper;\n        if (!["bottom"].includes(placement) && !hasCustomScroll) {\n          scrollY = Math.floor(offsets.popper.top - scrollOffset);\n        }\n      } else if (lifecycle === LIFECYCLE.TOOLTIP && tooltipPopper) {\n        const { flipped, offsets, placement } = tooltipPopper;\n        if (["top", "right", "left"].includes(placement) && !flipped && !hasCustomScroll) {\n          scrollY = Math.floor(offsets.popper.top - scrollOffset);\n        } else {\n          scrollY -= step.spotlightPadding;\n        }\n      }\n      scrollY = scrollY >= 0 ? scrollY : 0;\n      if (status === STATUS.RUNNING) {\n        scrollTo(scrollY, { element: scrollParent2, duration: scrollDuration }).then(\n          () => {\n            setTimeout(() => {\n              var _a;\n              (_a = this.store.getPopper("tooltip")) == null ? void 0 : _a.instance.update();\n            }, 10);\n          }\n        );\n      }\n    }\n  }\n  render() {\n    if (!canUseDOM()) {\n      return null;\n    }\n    const { index, lifecycle, status } = this.state;\n    const {\n      continuous = false,\n      debug = false,\n      nonce,\n      scrollToFirstStep = false,\n      steps\n    } = this.props;\n    const isRunning = status === STATUS.RUNNING;\n    const content = {};\n    if (isRunning && steps[index]) {\n      const step = getMergedStep(this.props, steps[index]);\n      content.step = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n        JoyrideStep,\n        {\n          ...this.state,\n          callback: this.callback,\n          continuous,\n          debug,\n          helpers: this.helpers,\n          nonce,\n          shouldScroll: !step.disableScrolling && (index !== 0 || scrollToFirstStep),\n          step,\n          store: this.store\n        }\n      );\n      content.overlay = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(JoyridePortal, { id: "react-joyride-portal" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n        JoyrideOverlay,\n        {\n          ...step,\n          continuous,\n          debug,\n          lifecycle,\n          onClickOverlay: this.handleClickOverlay\n        }\n      ));\n    }\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", { className: "react-joyride" }, content.step, content.overlay);\n  }\n};\n__publicField(Joyride, "defaultProps", defaultProps);\nvar components_default = Joyride;\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/react-joyride/dist/index.mjs\n'
                );

                /***/
            },

        /***/ '../../node_modules/tree-changes/dist/index.mjs':
            /*!******************************************************!*\
  !*** ../../node_modules/tree-changes/dist/index.mjs ***!
  \******************************************************/
            /***/ (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ treeChanges)\n/* harmony export */ });\n/* harmony import */ var _gilbarbara_deep_equal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @gilbarbara/deep-equal */ "../../node_modules/@gilbarbara/deep-equal/dist/index.mjs");\n/* harmony import */ var is_lite__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! is-lite */ "../../node_modules/is-lite/dist/index.mjs");\n// src/index.ts\n\n\n\n// src/helpers.ts\n\n\nfunction canHaveLength(...arguments_) {\n  return arguments_.every((d) => is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].string(d) || is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].array(d) || is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].plainObject(d));\n}\nfunction checkEquality(left, right, value) {\n  if (!isSameType(left, right)) {\n    return false;\n  }\n  if ([left, right].every(is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].array)) {\n    return !left.some(hasValue(value)) && right.some(hasValue(value));\n  }\n  if ([left, right].every(is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].plainObject)) {\n    return !Object.entries(left).some(hasEntry(value)) && Object.entries(right).some(hasEntry(value));\n  }\n  return right === value;\n}\nfunction compareNumbers(previousData, data, options) {\n  const { actual, key, previous, type } = options;\n  const left = nested(previousData, key);\n  const right = nested(data, key);\n  let changed = [left, right].every(is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].number) && (type === "increased" ? left < right : left > right);\n  if (!is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].undefined(actual)) {\n    changed = changed && right === actual;\n  }\n  if (!is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].undefined(previous)) {\n    changed = changed && left === previous;\n  }\n  return changed;\n}\nfunction compareValues(previousData, data, options) {\n  const { key, type, value } = options;\n  const left = nested(previousData, key);\n  const right = nested(data, key);\n  const primary = type === "added" ? left : right;\n  const secondary = type === "added" ? right : left;\n  if (!is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].nullOrUndefined(value)) {\n    if (is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].defined(primary)) {\n      if (is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].array(primary) || is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].plainObject(primary)) {\n        return checkEquality(primary, secondary, value);\n      }\n    } else {\n      return (0,_gilbarbara_deep_equal__WEBPACK_IMPORTED_MODULE_1__["default"])(secondary, value);\n    }\n    return false;\n  }\n  if ([left, right].every(is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].array)) {\n    return !secondary.every(isEqualPredicate(primary));\n  }\n  if ([left, right].every(is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].plainObject)) {\n    return hasExtraKeys(Object.keys(primary), Object.keys(secondary));\n  }\n  return ![left, right].every((d) => is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].primitive(d) && is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].defined(d)) && (type === "added" ? !is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].defined(left) && is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].defined(right) : is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].defined(left) && !is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].defined(right));\n}\nfunction getIterables(previousData, data, { key } = {}) {\n  let left = nested(previousData, key);\n  let right = nested(data, key);\n  if (!isSameType(left, right)) {\n    throw new TypeError("Inputs have different types");\n  }\n  if (!canHaveLength(left, right)) {\n    throw new TypeError("Inputs don\'t have length");\n  }\n  if ([left, right].every(is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].plainObject)) {\n    left = Object.keys(left);\n    right = Object.keys(right);\n  }\n  return [left, right];\n}\nfunction hasEntry(input) {\n  return ([key, value]) => {\n    if (is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].array(input)) {\n      return (0,_gilbarbara_deep_equal__WEBPACK_IMPORTED_MODULE_1__["default"])(input, value) || input.some((d) => (0,_gilbarbara_deep_equal__WEBPACK_IMPORTED_MODULE_1__["default"])(d, value) || is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].array(value) && isEqualPredicate(value)(d));\n    }\n    if (is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].plainObject(input) && input[key]) {\n      return !!input[key] && (0,_gilbarbara_deep_equal__WEBPACK_IMPORTED_MODULE_1__["default"])(input[key], value);\n    }\n    return (0,_gilbarbara_deep_equal__WEBPACK_IMPORTED_MODULE_1__["default"])(input, value);\n  };\n}\nfunction hasExtraKeys(left, right) {\n  return right.some((d) => !left.includes(d));\n}\nfunction hasValue(input) {\n  return (value) => {\n    if (is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].array(input)) {\n      return input.some((d) => (0,_gilbarbara_deep_equal__WEBPACK_IMPORTED_MODULE_1__["default"])(d, value) || is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].array(value) && isEqualPredicate(value)(d));\n    }\n    return (0,_gilbarbara_deep_equal__WEBPACK_IMPORTED_MODULE_1__["default"])(input, value);\n  };\n}\nfunction includesOrEqualsTo(previousValue, value) {\n  return is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].array(previousValue) ? previousValue.some((d) => (0,_gilbarbara_deep_equal__WEBPACK_IMPORTED_MODULE_1__["default"])(d, value)) : (0,_gilbarbara_deep_equal__WEBPACK_IMPORTED_MODULE_1__["default"])(previousValue, value);\n}\nfunction isEqualPredicate(data) {\n  return (value) => data.some((d) => (0,_gilbarbara_deep_equal__WEBPACK_IMPORTED_MODULE_1__["default"])(d, value));\n}\nfunction isSameType(...arguments_) {\n  return arguments_.every(is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].array) || arguments_.every(is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].number) || arguments_.every(is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].plainObject) || arguments_.every(is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].string);\n}\nfunction nested(data, property) {\n  if (is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].plainObject(data) || is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].array(data)) {\n    if (is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].string(property)) {\n      const props = property.split(".");\n      return props.reduce((acc, d) => acc && acc[d], data);\n    }\n    if (is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].number(property)) {\n      return data[property];\n    }\n    return data;\n  }\n  return data;\n}\n\n// src/index.ts\nfunction treeChanges(previousData, data) {\n  if ([previousData, data].some(is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].nullOrUndefined)) {\n    throw new Error("Missing required parameters");\n  }\n  if (![previousData, data].every((d) => is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].plainObject(d) || is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].array(d))) {\n    throw new Error("Expected plain objects or array");\n  }\n  const added = (key, value) => {\n    try {\n      return compareValues(previousData, data, { key, type: "added", value });\n    } catch {\n      return false;\n    }\n  };\n  const changed = (key, actual, previous) => {\n    try {\n      const left = nested(previousData, key);\n      const right = nested(data, key);\n      const hasActual = is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].defined(actual);\n      const hasPrevious = is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].defined(previous);\n      if (hasActual || hasPrevious) {\n        const leftComparator = hasPrevious ? includesOrEqualsTo(previous, left) : !includesOrEqualsTo(actual, left);\n        const rightComparator = includesOrEqualsTo(actual, right);\n        return leftComparator && rightComparator;\n      }\n      if ([left, right].every(is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].array) || [left, right].every(is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].plainObject)) {\n        return !(0,_gilbarbara_deep_equal__WEBPACK_IMPORTED_MODULE_1__["default"])(left, right);\n      }\n      return left !== right;\n    } catch {\n      return false;\n    }\n  };\n  const changedFrom = (key, previous, actual) => {\n    if (!is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].defined(key)) {\n      return false;\n    }\n    try {\n      const left = nested(previousData, key);\n      const right = nested(data, key);\n      const hasActual = is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].defined(actual);\n      return includesOrEqualsTo(previous, left) && (hasActual ? includesOrEqualsTo(actual, right) : !hasActual);\n    } catch {\n      return false;\n    }\n  };\n  const decreased = (key, actual, previous) => {\n    if (!is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].defined(key)) {\n      return false;\n    }\n    try {\n      return compareNumbers(previousData, data, { key, actual, previous, type: "decreased" });\n    } catch {\n      return false;\n    }\n  };\n  const emptied = (key) => {\n    try {\n      const [left, right] = getIterables(previousData, data, { key });\n      return !!left.length && !right.length;\n    } catch {\n      return false;\n    }\n  };\n  const filled = (key) => {\n    try {\n      const [left, right] = getIterables(previousData, data, { key });\n      return !left.length && !!right.length;\n    } catch {\n      return false;\n    }\n  };\n  const increased = (key, actual, previous) => {\n    if (!is_lite__WEBPACK_IMPORTED_MODULE_0__["default"].defined(key)) {\n      return false;\n    }\n    try {\n      return compareNumbers(previousData, data, { key, actual, previous, type: "increased" });\n    } catch {\n      return false;\n    }\n  };\n  const removed = (key, value) => {\n    try {\n      return compareValues(previousData, data, { key, type: "removed", value });\n    } catch {\n      return false;\n    }\n  };\n  return { added, changed, changedFrom, decreased, emptied, filled, increased, removed };\n}\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/tree-changes/dist/index.mjs\n'
                );

                /***/
            },
    },
]);
