/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/*RTL Language Mixin*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* status colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/* Wallet gradient background */
/* App Cards gradient background */
/* Wallets */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon-active;
        }
*/
/**
 * Define Breakpoints here.
 */
/** Need to add new breakpoints for mixins */
.da-inline-note-with-icon {
    margin-top: 0.8rem;
    padding: 0.8rem;
    display: flex;
    background: var(--status-alert-background);
    border-radius: 4px;
    gap: 0.8rem;
    line-height: 1.4rem;
}

.da-inline-note-with-icon .dc-icon {
    margin-top: 0.2rem;
}
/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/*RTL Language Mixin*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* status colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/* Wallet gradient background */
/* App Cards gradient background */
/* Wallets */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon-active;
        }
*/
/**
 * Define Breakpoints here.
 */
/** Need to add new breakpoints for mixins */
.dc-modal__container_real-account-signup-modal {
    display: flex;
    flex-direction: column;
    transition: all 0.3s ease-in-out;
    background-color: var(--general-main-1);
}

@media (min-width: 601px) and (max-width: 1279px) {
    .dc-modal__container_real-account-signup-modal {
        max-height: calc(100vh - 10.2rem) !important;
    }
}

.dc-modal__container_real-account-signup-modal .dc-modal-header__title {
    text-transform: none;
}

[dir='ltr'] .dc-modal__container_real-account-signup-modal .dc-modal-header__title {
    border-top-left-radius: 1rem;
}

[dir='rtl'] .dc-modal__container_real-account-signup-modal .dc-modal-header__title {
    border-top-right-radius: 1rem;
}

.dc-modal__container_real-account-signup-modal .dc-themed-scrollbars {
    height: 100%;
}

.dc-modal__container_center-risk-modal .dc-modal-header {
    border-bottom: 1px solid var(--general-section-1);
}

.dc-modal__container_center-risk-modal .dc-modal-body {
    text-align: center;
    padding: 2.4rem 2.4rem 0rem;
}

@media (max-width: 1279px) {
    .dc-modal__container_center-risk-modal .dc-modal-body {
        padding: 1.6rem 1.6rem 0rem;
    }
}

.dc-modal__container_center-risk-modal .dc-modal-body .risk-acceptance__text {
    margin-top: 2.4rem;
}

.dc-modal__container_center-risk-modal .dc-modal-body .verified-account__text {
    margin-top: 2.4rem;
}

.dc-modal__container_center-risk-modal .dc-modal-footer {
    justify-content: center;
}

.dc-modal-header--real-account-signup-modal {
    border-bottom: 1px solid var(--general-section-1);
}

.dc-mobile-dialog--enter-done .dc-mobile-dialog__content {
    transform: none;
}

.trading-assessment {
    display: flex;
    flex-direction: column;
}

.trading-assessment .dc-radio-group {
    flex-direction: column;
    align-items: flex-start;
}

@media (max-width: 1279px) {
    .trading-assessment {
        height: calc(100vh - 16rem);
        overflow: auto;
    }
}

@media (min-width: 1280px) {
    .trading-assessment--existing-user {
        margin-top: 9.2rem;
    }
}

@media (max-width: 1279px) {
    .trading-assessment--existing-user {
        height: calc(100vh - 12rem);
    }

    .trading-assessment--existing-user .trading-assessment__side-note {
        padding: 2.2rem 1.6rem;
    }
}

.trading-assessment__wrapper__dropdown--list--display {
    height: 4rem;
}

.trading-assessment__side-note {
    text-align: justify;
    padding: 0 10rem;
}

@media (max-width: 1279px) {
    .trading-assessment__side-note {
        padding: 0 1.6rem;
    }
}

[dir='ltr'] .trading-assessment__question-counter {
    padding-left: 12rem;
}

[dir='rtl'] .trading-assessment__question-counter {
    padding-right: 12rem;
}

.trading-assessment__question-counter {
    margin: 2.4rem 0 0;
}

@media (max-width: 1279px) {
    [dir='ltr'] .trading-assessment__question-counter {
        padding-left: 1.6rem;
    }
    [dir='rtl'] .trading-assessment__question-counter {
        padding-right: 1.6rem;
    }
}

.trading-assessment__form {
    margin-top: 1.6rem;
    display: grid;
    grid-template-rows: 4.7fr 1fr;
}

.trading-assessment__form--existing_user {
    grid-template-rows: 5.8fr 1fr;
}

.trading-assessment__form--layout {
    grid-template-rows: 35rem 1fr !important;
}

.trading-assessment__form--fields {
    display: flex;
    padding: 0 10rem;
}

@media (max-width: 1279px) {
    .trading-assessment__form--fields {
        padding: 0 1.6rem;
    }
}

.trading-assessment__form .dc-themed-scrollbars {
    width: 100%;
}

.trading-assessment__form .dc-dropdown__display .dc-dropdown__display-placeholder-text-limit-fit {
    max-width: none;
    max-width: initial;
    padding-bottom: 0.5rem;
}

@media (max-width: 1279px) {
    .trading-assessment__form .dc-dropdown__display .dc-dropdown__display-placeholder-text-limit-fit {
        width: 90%;
        white-space: normal;
    }
}

[dir='ltr'] .trading-assessment__wrapper__question .dc-field--error {
    padding-left: 0;
}

[dir='rtl'] .trading-assessment__wrapper__question .dc-field--error {
    padding-right: 0;
}

.trading-assessment__wrapper__question .dc-field--error {
    margin: 1.6rem 0;
}

@media (min-width: 1280px) {
    .trading-assessment__wrapper__question {
        padding: 0 2rem;
    }
}

.trading-assessment__wrapper__question .dc-radio-group {
    gap: 1.6rem;
}

@media (max-width: 1279px) {
    .trading-assessment__wrapper__question .dc-radio-group__circle {
        align-self: flex-start !important;
    }
}

.trading-assessment__wrapper__dropdown {
    gap: 2.4rem;
    display: flex;
    flex-direction: column;
    width: 100%;
}

@media (min-width: 1280px) {
    .trading-assessment__wrapper__dropdown {
        padding: 0 3rem;
    }
}

.trading-assessment .disable-pointer {
    cursor: not-allowed;
}

@media (max-width: 1279px) {
    .trading-assessment .dc-dropdown__display-placeholder {
        width: 100%;
    }

    .trading-assessment
        .dc-dropdown__display-placeholder
        .trading-assessment__form
        .dc-dropdown__display
        .dc-dropdown__display-placeholder-text-limit-fit {
        width: 90%;
    }

    .trading-assessment .dc-dropdown__display-placeholder--is-left-text.dc-dropdown__display-placeholder--is-title {
        white-space: normal !important;
    }

    .trading-assessment .dc-dropdown__display-placeholder--is-left-text.dc-dropdown__display-placeholder--is-title {
        line-height: 1.6rem;
    }
}

.trading-assessment__existing_btn {
    border-top: 2px solid var(--general-disabled);
    display: flex;
    justify-content: end;
    padding: 1rem 2rem;
    position: fixed;
    bottom: 0;
    width: 100%;
}

@media (max-width: 1279px) {
    .trading-assessment__btn-group {
        position: fixed;
        bottom: 0;
        padding: 1.6rem;
        border-top: 2px solid var(--general-disabled);
        width: 100%;
        display: flex;
        background: var(--general-main-1);
    }

    .trading-assessment__btn-group--btn {
        width: 100%;
    }
}
