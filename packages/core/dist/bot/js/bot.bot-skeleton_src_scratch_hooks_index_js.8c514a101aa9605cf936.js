/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self['webpackChunk_deriv_bot_web_ui'] = self['webpackChunk_deriv_bot_web_ui'] || []).push([
    ['bot-skeleton_src_scratch_hooks_index_js'],
    {
        /***/ '../bot-skeleton/src/scratch/hooks/block.js':
            /*!**************************************************!*\
  !*** ../bot-skeleton/src/scratch/hooks/block.js ***!
  \**************************************************/
            /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    "__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _constants_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../constants/config */ \"../bot-skeleton/src/constants/config.ts\");\n\n\n// Structure is { '<outerHtml />': { height: 1, width: 1 } }\nBlockly.Block.Dimensions = {};\nBlockly.Block.prototype.getDisplayName = function () {\n  if (this.meta) {\n    var block_meta = this.meta();\n    return block_meta && block_meta.display_name;\n  }\n  return this.type;\n};\nBlockly.Block.prototype.getSiblings = function () {\n  var _this = this;\n  var siblings = [this];\n  ['getPreviousBlock', 'getNextBlock'].forEach(function (functionName) {\n    var block = _this[functionName]();\n    while (block !== null) {\n      var parent = _this.getParent();\n      if (parent && parent.id === block.id) {\n        break;\n      }\n      siblings.push(block);\n      block = block[functionName]();\n    }\n  });\n  return siblings;\n};\nBlockly.Block.prototype.getChildByType = function (type) {\n  return this.getDescendants().find(function (child) {\n    return child.type === type;\n  });\n};\nBlockly.Block.prototype.getChildFieldValue = function (childType, childField) {\n  var childBlock = this.getChildByType(childType);\n  if (childBlock) {\n    var value = childBlock.getFieldValue(childField);\n    return value;\n  }\n  return null;\n};\nBlockly.Block.prototype.childValueToCode = function (childType, childField) {\n  var childBlock = this.getChildByType(childType);\n  return childBlock && Blockly.JavaScript.javascriptGenerator.valueToCode(childBlock, childField, Blockly.JavaScript.javascriptGenerator.ORDER_ATOMIC);\n};\nBlockly.Block.prototype.getBlocksInStatement = function (statementInputName) {\n  var blocksInStatement = [];\n  var firstBlock = this.getInputTargetBlock(statementInputName);\n  if (firstBlock) {\n    return firstBlock.getSiblings();\n  }\n  return blocksInStatement;\n};\nBlockly.Block.prototype.getLastConnectionInStatement = function (statement_input_name) {\n  var first_block_in_stack = this.getInputTargetBlock(statement_input_name);\n  if (first_block_in_stack) {\n    return first_block_in_stack.lastConnectionInStack();\n  }\n  var statement_input = this.getInput(statement_input_name);\n  return statement_input.connection;\n};\n\n/**\n * Get whether this block is enabled or not.\n * @return {boolean} True if enabled.\n */\nBlockly.Block.prototype.isEnabled = function () {\n  return !this.disabled;\n};\nBlockly.Block.prototype.isDescendantOf = function (type) {\n  var parentBlock = this.getParent();\n  while (parentBlock !== null) {\n    if (parentBlock.type === type) {\n      return true;\n    }\n    parentBlock = parentBlock.getParent();\n  }\n  return false;\n};\nBlockly.Block.prototype.getTopParent = function () {\n  var parent = this.getParent();\n  while (parent !== null) {\n    var nextParent = parent.getParent();\n    if (!nextParent) {\n      return parent;\n    }\n    parent = nextParent;\n  }\n  return null;\n};\nBlockly.Block.getDimensions = function (block_node) {\n  // Attempt to retrieve dimensions from memory rather than recalculating.\n  var existing_dimensions_key = Object.keys(Blockly.Block.Dimensions).find(function (outer_html) {\n    return block_node.outerHTML === outer_html;\n  });\n  if (existing_dimensions_key) {\n    return Blockly.Block.Dimensions[existing_dimensions_key];\n  }\n  var options = new Blockly.Options({\n    media: \"\".concat(__webpack_require__.p, \"media/\"),\n    renderer: 'zelos',\n    theme: Blockly.Themes.zelos_renderer\n  });\n  var el_injection_div = document.createElement('div');\n\n  // Create a headless workspace to calculate xmlList block dimensions\n  var workspace = Blockly.inject(el_injection_div, options);\n  var block = Blockly.Xml.domToBlock(block_node, workspace);\n  var block_hw = block.getHeightWidth();\n  workspace.dispose();\n  Blockly.Block.Dimensions[block_node.outerHTML] = block_hw;\n  return block_hw;\n};\nBlockly.Block.prototype.isMainBlock = function () {\n  return _constants_config__WEBPACK_IMPORTED_MODULE_0__.config.mainBlocks.includes(this.type);\n};\nBlockly.Block.prototype.isIndependentBlock = function () {\n  return _constants_config__WEBPACK_IMPORTED_MODULE_0__.config.INDEPEDENT_BLOCKS.includes(this.type);\n};\n\n/**\n * Return the parent block or null if this block is at the top level.\n * @return {Blockly.Block} The block that holds the current block.\n */\nBlockly.Block.prototype.getRootInputTargetBlock = function () {\n  var input_name;\n  var current_block = this.getParent();\n  while (current_block) {\n    var root_block = this.getRootBlock();\n    var current_input = root_block.getInputWithBlock(current_block);\n    if (current_input && current_input.name) {\n      input_name = current_input.name;\n    }\n    current_block = current_block.getParent();\n  }\n  return input_name;\n};\n\n/**\n * Returns whether the block has an error highlighted descendant.\n */\nBlockly.Block.prototype.hasErrorHighlightedDescendant = function () {\n  var _hasHighlightedDescendant = function hasHighlightedDescendant(child_blocks) {\n    return child_blocks.some(function (child_block) {\n      var is_self_highlighted = child_block.is_error_highlighted;\n      var is_descendant_highlighted = _hasHighlightedDescendant(child_block.getChildren());\n      return is_self_highlighted || is_descendant_highlighted;\n    });\n  };\n  return _hasHighlightedDescendant(this.getChildren());\n};\nBlockly.Block.isDynamic = function (block_type) {\n  return /^((procedures_)|(variables_)|(math_change$))/.test(block_type);\n};\n\n// TODO: Do not remove this\n// overwriting the doClassValidation_ method to handle\n// dropdown values\nBlockly.FieldDropdown.prototype.doClassValidation_ = function (newValue) {\n  var _this$selectedOption;\n  this.text_ = null;\n  var text = this === null || this === void 0 ? void 0 : (_this$selectedOption = this.selectedOption) === null || _this$selectedOption === void 0 ? void 0 : _this$selectedOption[0];\n  this.setText(text !== null && text !== void 0 ? text : '');\n  return newValue;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vYm90LXNrZWxldG9uL3NyYy9zY3JhdGNoL2hvb2tzL2Jsb2NrLmpzIiwibWFwcGluZ3MiOiI7O0FBQUE7O0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQVFBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBR0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUFBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi9ib3Qtd2ViLXVpLy4uL2JvdC1za2VsZXRvbi9zcmMvc2NyYXRjaC9ob29rcy9ibG9jay5qcz8zNWQwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNvbmZpZyB9IGZyb20gJy4uLy4uL2NvbnN0YW50cy9jb25maWcnO1xuXG4vLyBTdHJ1Y3R1cmUgaXMgeyAnPG91dGVySHRtbCAvPic6IHsgaGVpZ2h0OiAxLCB3aWR0aDogMSB9IH1cbkJsb2NrbHkuQmxvY2suRGltZW5zaW9ucyA9IHt9O1xuXG5CbG9ja2x5LkJsb2NrLnByb3RvdHlwZS5nZXREaXNwbGF5TmFtZSA9IGZ1bmN0aW9uICgpIHtcbiAgICBpZiAodGhpcy5tZXRhKSB7XG4gICAgICAgIGNvbnN0IGJsb2NrX21ldGEgPSB0aGlzLm1ldGEoKTtcbiAgICAgICAgcmV0dXJuIGJsb2NrX21ldGEgJiYgYmxvY2tfbWV0YS5kaXNwbGF5X25hbWU7XG4gICAgfVxuICAgIHJldHVybiB0aGlzLnR5cGU7XG59O1xuXG5CbG9ja2x5LkJsb2NrLnByb3RvdHlwZS5nZXRTaWJsaW5ncyA9IGZ1bmN0aW9uICgpIHtcbiAgICBjb25zdCBzaWJsaW5ncyA9IFt0aGlzXTtcbiAgICBbJ2dldFByZXZpb3VzQmxvY2snLCAnZ2V0TmV4dEJsb2NrJ10uZm9yRWFjaChmdW5jdGlvbk5hbWUgPT4ge1xuICAgICAgICBsZXQgYmxvY2sgPSB0aGlzW2Z1bmN0aW9uTmFtZV0oKTtcbiAgICAgICAgd2hpbGUgKGJsb2NrICE9PSBudWxsKSB7XG4gICAgICAgICAgICBjb25zdCBwYXJlbnQgPSB0aGlzLmdldFBhcmVudCgpO1xuICAgICAgICAgICAgaWYgKHBhcmVudCAmJiBwYXJlbnQuaWQgPT09IGJsb2NrLmlkKSB7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHNpYmxpbmdzLnB1c2goYmxvY2spO1xuICAgICAgICAgICAgYmxvY2sgPSBibG9ja1tmdW5jdGlvbk5hbWVdKCk7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gc2libGluZ3M7XG59O1xuXG5CbG9ja2x5LkJsb2NrLnByb3RvdHlwZS5nZXRDaGlsZEJ5VHlwZSA9IGZ1bmN0aW9uICh0eXBlKSB7XG4gICAgcmV0dXJuIHRoaXMuZ2V0RGVzY2VuZGFudHMoKS5maW5kKGNoaWxkID0+IGNoaWxkLnR5cGUgPT09IHR5cGUpO1xufTtcblxuQmxvY2tseS5CbG9jay5wcm90b3R5cGUuZ2V0Q2hpbGRGaWVsZFZhbHVlID0gZnVuY3Rpb24gKGNoaWxkVHlwZSwgY2hpbGRGaWVsZCkge1xuICAgIGNvbnN0IGNoaWxkQmxvY2sgPSB0aGlzLmdldENoaWxkQnlUeXBlKGNoaWxkVHlwZSk7XG4gICAgaWYgKGNoaWxkQmxvY2spIHtcbiAgICAgICAgY29uc3QgdmFsdWUgPSBjaGlsZEJsb2NrLmdldEZpZWxkVmFsdWUoY2hpbGRGaWVsZCk7XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG4gICAgcmV0dXJuIG51bGw7XG59O1xuXG5CbG9ja2x5LkJsb2NrLnByb3RvdHlwZS5jaGlsZFZhbHVlVG9Db2RlID0gZnVuY3Rpb24gKGNoaWxkVHlwZSwgY2hpbGRGaWVsZCkge1xuICAgIGNvbnN0IGNoaWxkQmxvY2sgPSB0aGlzLmdldENoaWxkQnlUeXBlKGNoaWxkVHlwZSk7XG4gICAgcmV0dXJuIChcbiAgICAgICAgY2hpbGRCbG9jayAmJlxuICAgICAgICBCbG9ja2x5LkphdmFTY3JpcHQuamF2YXNjcmlwdEdlbmVyYXRvci52YWx1ZVRvQ29kZShcbiAgICAgICAgICAgIGNoaWxkQmxvY2ssXG4gICAgICAgICAgICBjaGlsZEZpZWxkLFxuICAgICAgICAgICAgQmxvY2tseS5KYXZhU2NyaXB0LmphdmFzY3JpcHRHZW5lcmF0b3IuT1JERVJfQVRPTUlDXG4gICAgICAgIClcbiAgICApO1xufTtcblxuQmxvY2tseS5CbG9jay5wcm90b3R5cGUuZ2V0QmxvY2tzSW5TdGF0ZW1lbnQgPSBmdW5jdGlvbiAoc3RhdGVtZW50SW5wdXROYW1lKSB7XG4gICAgY29uc3QgYmxvY2tzSW5TdGF0ZW1lbnQgPSBbXTtcbiAgICBjb25zdCBmaXJzdEJsb2NrID0gdGhpcy5nZXRJbnB1dFRhcmdldEJsb2NrKHN0YXRlbWVudElucHV0TmFtZSk7XG5cbiAgICBpZiAoZmlyc3RCbG9jaykge1xuICAgICAgICByZXR1cm4gZmlyc3RCbG9jay5nZXRTaWJsaW5ncygpO1xuICAgIH1cbiAgICByZXR1cm4gYmxvY2tzSW5TdGF0ZW1lbnQ7XG59O1xuXG5CbG9ja2x5LkJsb2NrLnByb3RvdHlwZS5nZXRMYXN0Q29ubmVjdGlvbkluU3RhdGVtZW50ID0gZnVuY3Rpb24gKHN0YXRlbWVudF9pbnB1dF9uYW1lKSB7XG4gICAgY29uc3QgZmlyc3RfYmxvY2tfaW5fc3RhY2sgPSB0aGlzLmdldElucHV0VGFyZ2V0QmxvY2soc3RhdGVtZW50X2lucHV0X25hbWUpO1xuXG4gICAgaWYgKGZpcnN0X2Jsb2NrX2luX3N0YWNrKSB7XG4gICAgICAgIHJldHVybiBmaXJzdF9ibG9ja19pbl9zdGFjay5sYXN0Q29ubmVjdGlvbkluU3RhY2soKTtcbiAgICB9XG5cbiAgICBjb25zdCBzdGF0ZW1lbnRfaW5wdXQgPSB0aGlzLmdldElucHV0KHN0YXRlbWVudF9pbnB1dF9uYW1lKTtcbiAgICByZXR1cm4gc3RhdGVtZW50X2lucHV0LmNvbm5lY3Rpb247XG59O1xuXG4vKipcbiAqIEdldCB3aGV0aGVyIHRoaXMgYmxvY2sgaXMgZW5hYmxlZCBvciBub3QuXG4gKiBAcmV0dXJuIHtib29sZWFufSBUcnVlIGlmIGVuYWJsZWQuXG4gKi9cbkJsb2NrbHkuQmxvY2sucHJvdG90eXBlLmlzRW5hYmxlZCA9IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gIXRoaXMuZGlzYWJsZWQ7XG59O1xuXG5CbG9ja2x5LkJsb2NrLnByb3RvdHlwZS5pc0Rlc2NlbmRhbnRPZiA9IGZ1bmN0aW9uICh0eXBlKSB7XG4gICAgbGV0IHBhcmVudEJsb2NrID0gdGhpcy5nZXRQYXJlbnQoKTtcbiAgICB3aGlsZSAocGFyZW50QmxvY2sgIT09IG51bGwpIHtcbiAgICAgICAgaWYgKHBhcmVudEJsb2NrLnR5cGUgPT09IHR5cGUpIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIHBhcmVudEJsb2NrID0gcGFyZW50QmxvY2suZ2V0UGFyZW50KCk7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbn07XG5cbkJsb2NrbHkuQmxvY2sucHJvdG90eXBlLmdldFRvcFBhcmVudCA9IGZ1bmN0aW9uICgpIHtcbiAgICBsZXQgcGFyZW50ID0gdGhpcy5nZXRQYXJlbnQoKTtcbiAgICB3aGlsZSAocGFyZW50ICE9PSBudWxsKSB7XG4gICAgICAgIGNvbnN0IG5leHRQYXJlbnQgPSBwYXJlbnQuZ2V0UGFyZW50KCk7XG4gICAgICAgIGlmICghbmV4dFBhcmVudCkge1xuICAgICAgICAgICAgcmV0dXJuIHBhcmVudDtcbiAgICAgICAgfVxuICAgICAgICBwYXJlbnQgPSBuZXh0UGFyZW50O1xuICAgIH1cbiAgICByZXR1cm4gbnVsbDtcbn07XG5cbkJsb2NrbHkuQmxvY2suZ2V0RGltZW5zaW9ucyA9IGZ1bmN0aW9uIChibG9ja19ub2RlKSB7XG4gICAgLy8gQXR0ZW1wdCB0byByZXRyaWV2ZSBkaW1lbnNpb25zIGZyb20gbWVtb3J5IHJhdGhlciB0aGFuIHJlY2FsY3VsYXRpbmcuXG4gICAgY29uc3QgZXhpc3RpbmdfZGltZW5zaW9uc19rZXkgPSBPYmplY3Qua2V5cyhCbG9ja2x5LkJsb2NrLkRpbWVuc2lvbnMpLmZpbmQoXG4gICAgICAgIG91dGVyX2h0bWwgPT4gYmxvY2tfbm9kZS5vdXRlckhUTUwgPT09IG91dGVyX2h0bWxcbiAgICApO1xuXG4gICAgaWYgKGV4aXN0aW5nX2RpbWVuc2lvbnNfa2V5KSB7XG4gICAgICAgIHJldHVybiBCbG9ja2x5LkJsb2NrLkRpbWVuc2lvbnNbZXhpc3RpbmdfZGltZW5zaW9uc19rZXldO1xuICAgIH1cblxuICAgIGNvbnN0IG9wdGlvbnMgPSBuZXcgQmxvY2tseS5PcHRpb25zKHtcbiAgICAgICAgbWVkaWE6IGAke19fd2VicGFja19wdWJsaWNfcGF0aF9ffW1lZGlhL2AsXG4gICAgICAgIHJlbmRlcmVyOiAnemVsb3MnLFxuICAgICAgICB0aGVtZTogQmxvY2tseS5UaGVtZXMuemVsb3NfcmVuZGVyZXIsXG4gICAgfSk7XG4gICAgY29uc3QgZWxfaW5qZWN0aW9uX2RpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuXG4gICAgLy8gQ3JlYXRlIGEgaGVhZGxlc3Mgd29ya3NwYWNlIHRvIGNhbGN1bGF0ZSB4bWxMaXN0IGJsb2NrIGRpbWVuc2lvbnNcbiAgICBjb25zdCB3b3Jrc3BhY2UgPSBCbG9ja2x5LmluamVjdChlbF9pbmplY3Rpb25fZGl2LCBvcHRpb25zKTtcbiAgICBjb25zdCBibG9jayA9IEJsb2NrbHkuWG1sLmRvbVRvQmxvY2soYmxvY2tfbm9kZSwgd29ya3NwYWNlKTtcbiAgICBjb25zdCBibG9ja19odyA9IGJsb2NrLmdldEhlaWdodFdpZHRoKCk7XG5cbiAgICB3b3Jrc3BhY2UuZGlzcG9zZSgpO1xuICAgIEJsb2NrbHkuQmxvY2suRGltZW5zaW9uc1tibG9ja19ub2RlLm91dGVySFRNTF0gPSBibG9ja19odztcbiAgICByZXR1cm4gYmxvY2tfaHc7XG59O1xuXG5CbG9ja2x5LkJsb2NrLnByb3RvdHlwZS5pc01haW5CbG9jayA9IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gY29uZmlnLm1haW5CbG9ja3MuaW5jbHVkZXModGhpcy50eXBlKTtcbn07XG5cbkJsb2NrbHkuQmxvY2sucHJvdG90eXBlLmlzSW5kZXBlbmRlbnRCbG9jayA9IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gY29uZmlnLklOREVQRURFTlRfQkxPQ0tTLmluY2x1ZGVzKHRoaXMudHlwZSk7XG59O1xuXG4vKipcbiAqIFJldHVybiB0aGUgcGFyZW50IGJsb2NrIG9yIG51bGwgaWYgdGhpcyBibG9jayBpcyBhdCB0aGUgdG9wIGxldmVsLlxuICogQHJldHVybiB7QmxvY2tseS5CbG9ja30gVGhlIGJsb2NrIHRoYXQgaG9sZHMgdGhlIGN1cnJlbnQgYmxvY2suXG4gKi9cbkJsb2NrbHkuQmxvY2sucHJvdG90eXBlLmdldFJvb3RJbnB1dFRhcmdldEJsb2NrID0gZnVuY3Rpb24gKCkge1xuICAgIGxldCBpbnB1dF9uYW1lO1xuICAgIGxldCBjdXJyZW50X2Jsb2NrID0gdGhpcy5nZXRQYXJlbnQoKTtcblxuICAgIHdoaWxlIChjdXJyZW50X2Jsb2NrKSB7XG4gICAgICAgIGNvbnN0IHJvb3RfYmxvY2sgPSB0aGlzLmdldFJvb3RCbG9jaygpO1xuICAgICAgICBjb25zdCBjdXJyZW50X2lucHV0ID0gcm9vdF9ibG9jay5nZXRJbnB1dFdpdGhCbG9jayhjdXJyZW50X2Jsb2NrKTtcblxuICAgICAgICBpZiAoY3VycmVudF9pbnB1dCAmJiBjdXJyZW50X2lucHV0Lm5hbWUpIHtcbiAgICAgICAgICAgIGlucHV0X25hbWUgPSBjdXJyZW50X2lucHV0Lm5hbWU7XG4gICAgICAgIH1cblxuICAgICAgICBjdXJyZW50X2Jsb2NrID0gY3VycmVudF9ibG9jay5nZXRQYXJlbnQoKTtcbiAgICB9XG5cbiAgICByZXR1cm4gaW5wdXRfbmFtZTtcbn07XG5cbi8qKlxuICogUmV0dXJucyB3aGV0aGVyIHRoZSBibG9jayBoYXMgYW4gZXJyb3IgaGlnaGxpZ2h0ZWQgZGVzY2VuZGFudC5cbiAqL1xuQmxvY2tseS5CbG9jay5wcm90b3R5cGUuaGFzRXJyb3JIaWdobGlnaHRlZERlc2NlbmRhbnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgY29uc3QgaGFzSGlnaGxpZ2h0ZWREZXNjZW5kYW50ID0gY2hpbGRfYmxvY2tzID0+XG4gICAgICAgIGNoaWxkX2Jsb2Nrcy5zb21lKGNoaWxkX2Jsb2NrID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGlzX3NlbGZfaGlnaGxpZ2h0ZWQgPSBjaGlsZF9ibG9jay5pc19lcnJvcl9oaWdobGlnaHRlZDtcbiAgICAgICAgICAgIGNvbnN0IGlzX2Rlc2NlbmRhbnRfaGlnaGxpZ2h0ZWQgPSBoYXNIaWdobGlnaHRlZERlc2NlbmRhbnQoY2hpbGRfYmxvY2suZ2V0Q2hpbGRyZW4oKSk7XG5cbiAgICAgICAgICAgIHJldHVybiBpc19zZWxmX2hpZ2hsaWdodGVkIHx8IGlzX2Rlc2NlbmRhbnRfaGlnaGxpZ2h0ZWQ7XG4gICAgICAgIH0pO1xuXG4gICAgcmV0dXJuIGhhc0hpZ2hsaWdodGVkRGVzY2VuZGFudCh0aGlzLmdldENoaWxkcmVuKCkpO1xufTtcblxuQmxvY2tseS5CbG9jay5pc0R5bmFtaWMgPSBmdW5jdGlvbiAoYmxvY2tfdHlwZSkge1xuICAgIHJldHVybiAvXigocHJvY2VkdXJlc18pfCh2YXJpYWJsZXNfKXwobWF0aF9jaGFuZ2UkKSkvLnRlc3QoYmxvY2tfdHlwZSk7XG59O1xuXG4vLyBUT0RPOiBEbyBub3QgcmVtb3ZlIHRoaXNcbi8vIG92ZXJ3cml0aW5nIHRoZSBkb0NsYXNzVmFsaWRhdGlvbl8gbWV0aG9kIHRvIGhhbmRsZVxuLy8gZHJvcGRvd24gdmFsdWVzXG5CbG9ja2x5LkZpZWxkRHJvcGRvd24ucHJvdG90eXBlLmRvQ2xhc3NWYWxpZGF0aW9uXyA9IGZ1bmN0aW9uIChuZXdWYWx1ZSkge1xuICAgIHRoaXMudGV4dF8gPSBudWxsO1xuICAgIGNvbnN0IHRleHQgPSB0aGlzPy5zZWxlY3RlZE9wdGlvbj8uWzBdO1xuICAgIHRoaXMuc2V0VGV4dCh0ZXh0ID8/ICcnKTtcbiAgICByZXR1cm4gbmV3VmFsdWU7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../bot-skeleton/src/scratch/hooks/block.js\n"
                );

                /***/
            },

        /***/ '../bot-skeleton/src/scratch/hooks/block_svg.js':
            /*!******************************************************!*\
  !*** ../bot-skeleton/src/scratch/hooks/block_svg.js ***!
  \******************************************************/
            /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    '__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _deriv_translations__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @deriv/translations */ "@deriv/translations");\n/* harmony import */ var _deriv_translations__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_deriv_translations__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _dbot_store__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../dbot-store */ "../bot-skeleton/src/scratch/dbot-store.js");\n/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash.debounce */ "../../node_modules/lodash.debounce/index.js");\n/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_debounce__WEBPACK_IMPORTED_MODULE_2__);\nfunction _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a \'" + n + "\' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }\n\n\n\nBlockly.BlockSvg.prototype.addSelect = function () {\n  if (!Blockly.derivWorkspace.isFlyoutVisible) {\n    var flyout = _dbot_store__WEBPACK_IMPORTED_MODULE_1__["default"].instance.flyout;\n    if (flyout) {\n      flyout.setVisibility(false);\n    }\n    Blockly.utils.dom.addClass(/** @type {!Element} */this.svgGroup_, \'blocklySelected\');\n  }\n};\n\n/**\n * Set whether the block is disabled or not.\n * @param {boolean} disabled True if disabled.\n * @deriv/bot: Call updateDisabled() when setDisabled is called.\n */\nBlockly.BlockSvg.prototype.setDisabled = function (disabled) {\n  this.disabled = disabled;\n  this.updateDisabled();\n};\n\n/**\n * Set whether the block is error highlighted or not.\n * @param {boolean} highlighted True if highlighted for error.\n */\nBlockly.BlockSvg.prototype.setErrorHighlighted = function (should_be_error_highlighted) {\n  var error_message = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_0__.localize)(\'The block(s) highlighted in red are missing input values. Please update them and click "Run bot".\');\n  if (this.is_error_highlighted === should_be_error_highlighted) {\n    return;\n  }\n  var highlight_class = \'block--error-highlighted\';\n  if (should_be_error_highlighted) {\n    // Below function does its own checks to check if class already exists.\n    Blockly.utils.dom.addClass(this.svgGroup_, highlight_class);\n  } else {\n    Blockly.utils.dom.removeClass(this.svgGroup_, highlight_class);\n  }\n  this.is_error_highlighted = should_be_error_highlighted;\n  this.error_message = error_message;\n};\n\n// Highlight the block that is being executed\nBlockly.BlockSvg.prototype.highlightExecutedBlock = function () {\n  var _this = this;\n  var highlight_block_class = \'block--execution-highlighted\';\n  if (!Blockly.utils.dom.hasClass(this.svgGroup_, highlight_block_class)) {\n    Blockly.utils.dom.addClass(this.svgGroup_, highlight_block_class);\n    setTimeout(function () {\n      if (_this.svgGroup_) {\n        Blockly.utils.dom.removeClass(_this.svgGroup_, highlight_block_class);\n      }\n    }, 1505);\n  }\n};\n\n/**\n * Set block animation (Blink)\n */\n\nBlockly.BlockSvg.prototype.blink = function () {\n  var _this2 = this;\n  var blink_class = \'block--blink\';\n  Blockly.utils.dom.addClass(this.svgGroup_, blink_class);\n  setTimeout(function () {\n    Blockly.utils.dom.removeClass(_this2.svgGroup_, blink_class);\n  }, 2000);\n};\n\n/**\n * Set whether the block is collapsed or not.\n * @param {boolean} collapsed True if collapsed.\n */\n\n/**\n * Toggles the collapse state of the block after a short delay to prevent workspace freezing.\n * @param {boolean} collapsed - Whether to collapse the block.\n */\nBlockly.BlockSvg.prototype.toggleCollapseWithDelay = function (collapsed) {\n  var _this3 = this;\n  lodash_debounce__WEBPACK_IMPORTED_MODULE_2___default()(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _this3.setCollapsed(collapsed);\n        case 1:\n        case "end":\n          return _context.stop();\n      }\n    }, _callee);\n  })), 100)();\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vYm90LXNrZWxldG9uL3NyYy9zY3JhdGNoL2hvb2tzL2Jsb2NrX3N2Zy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQ0E7QUFBQTtBQUFBO0FBREE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFBQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvYm90LXdlYi11aS8uLi9ib3Qtc2tlbGV0b24vc3JjL3NjcmF0Y2gvaG9va3MvYmxvY2tfc3ZnLmpzP2M1NTciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbG9jYWxpemUgfSBmcm9tICdAZGVyaXYvdHJhbnNsYXRpb25zJztcbmltcG9ydCBEQm90U3RvcmUgZnJvbSAnLi4vZGJvdC1zdG9yZSc7XG5pbXBvcnQgZGVib3VuY2UgZnJvbSAnbG9kYXNoLmRlYm91bmNlJztcblxuQmxvY2tseS5CbG9ja1N2Zy5wcm90b3R5cGUuYWRkU2VsZWN0ID0gZnVuY3Rpb24gKCkge1xuICAgIGlmICghQmxvY2tseS5kZXJpdldvcmtzcGFjZS5pc0ZseW91dFZpc2libGUpIHtcbiAgICAgICAgY29uc3QgeyBmbHlvdXQgfSA9IERCb3RTdG9yZS5pbnN0YW5jZTtcbiAgICAgICAgaWYgKGZseW91dCkge1xuICAgICAgICAgICAgZmx5b3V0LnNldFZpc2liaWxpdHkoZmFsc2UpO1xuICAgICAgICB9XG5cbiAgICAgICAgQmxvY2tseS51dGlscy5kb20uYWRkQ2xhc3MoLyoqIEB0eXBlIHshRWxlbWVudH0gKi8gKHRoaXMuc3ZnR3JvdXBfKSwgJ2Jsb2NrbHlTZWxlY3RlZCcpO1xuICAgIH1cbn07XG5cbi8qKlxuICogU2V0IHdoZXRoZXIgdGhlIGJsb2NrIGlzIGRpc2FibGVkIG9yIG5vdC5cbiAqIEBwYXJhbSB7Ym9vbGVhbn0gZGlzYWJsZWQgVHJ1ZSBpZiBkaXNhYmxlZC5cbiAqIEBkZXJpdi9ib3Q6IENhbGwgdXBkYXRlRGlzYWJsZWQoKSB3aGVuIHNldERpc2FibGVkIGlzIGNhbGxlZC5cbiAqL1xuQmxvY2tseS5CbG9ja1N2Zy5wcm90b3R5cGUuc2V0RGlzYWJsZWQgPSBmdW5jdGlvbiAoZGlzYWJsZWQpIHtcbiAgICB0aGlzLmRpc2FibGVkID0gZGlzYWJsZWQ7XG4gICAgdGhpcy51cGRhdGVEaXNhYmxlZCgpO1xufTtcblxuLyoqXG4gKiBTZXQgd2hldGhlciB0aGUgYmxvY2sgaXMgZXJyb3IgaGlnaGxpZ2h0ZWQgb3Igbm90LlxuICogQHBhcmFtIHtib29sZWFufSBoaWdobGlnaHRlZCBUcnVlIGlmIGhpZ2hsaWdodGVkIGZvciBlcnJvci5cbiAqL1xuQmxvY2tseS5CbG9ja1N2Zy5wcm90b3R5cGUuc2V0RXJyb3JIaWdobGlnaHRlZCA9IGZ1bmN0aW9uIChcbiAgICBzaG91bGRfYmVfZXJyb3JfaGlnaGxpZ2h0ZWQsXG4gICAgZXJyb3JfbWVzc2FnZSA9IGxvY2FsaXplKFxuICAgICAgICAnVGhlIGJsb2NrKHMpIGhpZ2hsaWdodGVkIGluIHJlZCBhcmUgbWlzc2luZyBpbnB1dCB2YWx1ZXMuIFBsZWFzZSB1cGRhdGUgdGhlbSBhbmQgY2xpY2sgXCJSdW4gYm90XCIuJ1xuICAgIClcbikge1xuICAgIGlmICh0aGlzLmlzX2Vycm9yX2hpZ2hsaWdodGVkID09PSBzaG91bGRfYmVfZXJyb3JfaGlnaGxpZ2h0ZWQpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IGhpZ2hsaWdodF9jbGFzcyA9ICdibG9jay0tZXJyb3ItaGlnaGxpZ2h0ZWQnO1xuXG4gICAgaWYgKHNob3VsZF9iZV9lcnJvcl9oaWdobGlnaHRlZCkge1xuICAgICAgICAvLyBCZWxvdyBmdW5jdGlvbiBkb2VzIGl0cyBvd24gY2hlY2tzIHRvIGNoZWNrIGlmIGNsYXNzIGFscmVhZHkgZXhpc3RzLlxuICAgICAgICBCbG9ja2x5LnV0aWxzLmRvbS5hZGRDbGFzcyh0aGlzLnN2Z0dyb3VwXywgaGlnaGxpZ2h0X2NsYXNzKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBCbG9ja2x5LnV0aWxzLmRvbS5yZW1vdmVDbGFzcyh0aGlzLnN2Z0dyb3VwXywgaGlnaGxpZ2h0X2NsYXNzKTtcbiAgICB9XG5cbiAgICB0aGlzLmlzX2Vycm9yX2hpZ2hsaWdodGVkID0gc2hvdWxkX2JlX2Vycm9yX2hpZ2hsaWdodGVkO1xuICAgIHRoaXMuZXJyb3JfbWVzc2FnZSA9IGVycm9yX21lc3NhZ2U7XG59O1xuXG4vLyBIaWdobGlnaHQgdGhlIGJsb2NrIHRoYXQgaXMgYmVpbmcgZXhlY3V0ZWRcbkJsb2NrbHkuQmxvY2tTdmcucHJvdG90eXBlLmhpZ2hsaWdodEV4ZWN1dGVkQmxvY2sgPSBmdW5jdGlvbiAoKSB7XG4gICAgY29uc3QgaGlnaGxpZ2h0X2Jsb2NrX2NsYXNzID0gJ2Jsb2NrLS1leGVjdXRpb24taGlnaGxpZ2h0ZWQnO1xuICAgIGlmICghQmxvY2tseS51dGlscy5kb20uaGFzQ2xhc3ModGhpcy5zdmdHcm91cF8sIGhpZ2hsaWdodF9ibG9ja19jbGFzcykpIHtcbiAgICAgICAgQmxvY2tseS51dGlscy5kb20uYWRkQ2xhc3ModGhpcy5zdmdHcm91cF8sIGhpZ2hsaWdodF9ibG9ja19jbGFzcyk7XG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgaWYgKHRoaXMuc3ZnR3JvdXBfKSB7XG4gICAgICAgICAgICAgICAgQmxvY2tseS51dGlscy5kb20ucmVtb3ZlQ2xhc3ModGhpcy5zdmdHcm91cF8sIGhpZ2hsaWdodF9ibG9ja19jbGFzcyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sIDE1MDUpO1xuICAgIH1cbn07XG5cbi8qKlxuICogU2V0IGJsb2NrIGFuaW1hdGlvbiAoQmxpbmspXG4gKi9cblxuQmxvY2tseS5CbG9ja1N2Zy5wcm90b3R5cGUuYmxpbmsgPSBmdW5jdGlvbiAoKSB7XG4gICAgY29uc3QgYmxpbmtfY2xhc3MgPSAnYmxvY2stLWJsaW5rJztcbiAgICBCbG9ja2x5LnV0aWxzLmRvbS5hZGRDbGFzcyh0aGlzLnN2Z0dyb3VwXywgYmxpbmtfY2xhc3MpO1xuXG4gICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIEJsb2NrbHkudXRpbHMuZG9tLnJlbW92ZUNsYXNzKHRoaXMuc3ZnR3JvdXBfLCBibGlua19jbGFzcyk7XG4gICAgfSwgMjAwMCk7XG59O1xuXG4vKipcbiAqIFNldCB3aGV0aGVyIHRoZSBibG9jayBpcyBjb2xsYXBzZWQgb3Igbm90LlxuICogQHBhcmFtIHtib29sZWFufSBjb2xsYXBzZWQgVHJ1ZSBpZiBjb2xsYXBzZWQuXG4gKi9cblxuLyoqXG4gKiBUb2dnbGVzIHRoZSBjb2xsYXBzZSBzdGF0ZSBvZiB0aGUgYmxvY2sgYWZ0ZXIgYSBzaG9ydCBkZWxheSB0byBwcmV2ZW50IHdvcmtzcGFjZSBmcmVlemluZy5cbiAqIEBwYXJhbSB7Ym9vbGVhbn0gY29sbGFwc2VkIC0gV2hldGhlciB0byBjb2xsYXBzZSB0aGUgYmxvY2suXG4gKi9cbkJsb2NrbHkuQmxvY2tTdmcucHJvdG90eXBlLnRvZ2dsZUNvbGxhcHNlV2l0aERlbGF5ID0gZnVuY3Rpb24gKGNvbGxhcHNlZCkge1xuICAgIGRlYm91bmNlKGFzeW5jICgpID0+IHtcbiAgICAgICAgdGhpcy5zZXRDb2xsYXBzZWQoY29sbGFwc2VkKTtcbiAgICB9LCAxMDApKCk7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../bot-skeleton/src/scratch/hooks/block_svg.js\n'
                );

                /***/
            },

        /***/ '../bot-skeleton/src/scratch/hooks/constant.js':
            /*!*****************************************************!*\
  !*** ../bot-skeleton/src/scratch/hooks/constant.js ***!
  \*****************************************************/
            /***/ () => {
                eval(
                    "/**\n * ENUM for categories.\n * @const\n */\nBlockly.Categories = {\n  Trade_Definition: 'trade_parameters',\n  Before_Purchase: 'purchase_conditions',\n  During_Purchase: 'sell_conditions',\n  After_Purchase: 'trade_results',\n  Mathematical: 'math',\n  Logic: 'logic',\n  Text: 'text',\n  Variables: 'variables',\n  Functions: 'custom_functions',\n  List: 'lists',\n  Indicators: 'indicators',\n  Time: 'time',\n  Tick_Analysis: 'technical_analysis',\n  Candle: 'candle',\n  Miscellaneous: 'miscellaneous',\n  Loop: 'loops'\n};\nBlockly.OUTPUT_SHAPE_HEXAGONAL = 1;\nBlockly.OUTPUT_SHAPE_ROUND = 2;\nBlockly.isNumber = function (str) {\n  return /^\\s*-?\\d+(\\.\\d+)?\\s*$/.test(str);\n};\n/**\n * Number of pixels the mouse must move before a drag starts.\n */\nBlockly.DRAG_RADIUS = 3;\n\n/**\n * Number of pixels the mouse must move before a drag/scroll starts from the\n * flyout.  Because the drag-intention is determined when this is reached, it is\n * larger than Blockly.DRAG_RADIUS so that the drag-direction is clearer.\n */\nBlockly.FLYOUT_DRAG_RADIUS = 1;\nBlockly.BlockSvg.SEP_SPACE_X = 8;\n\n// @deriv/bot: Set the minimum width of a statement block to be wider than default.\nBlockly.BlockSvg.MIN_BLOCK_X_WITH_STATEMENT = 100 * Blockly.BlockSvg.GRID_UNIT;\n\n// @deriv/bot: Root block hat replaces with standard rounded corner\nBlockly.BlockSvg.START_HAT_PATH = \"m 0,\".concat(Blockly.BlockSvg.CORNER_RADIUS, \" A \").concat(Blockly.BlockSvg.CORNER_RADIUS, \", \").concat(Blockly.BlockSvg.CORNER_RADIUS, \" 0 0,1 \").concat(Blockly.BlockSvg.CORNER_RADIUS, \",0\");\n\n// @deriv/bot: Changed the height of a row in a statement block to be 10.\nBlockly.BlockSvg.EXTRA_STATEMENT_ROW_Y = 10 * Blockly.BlockSvg.GRID_UNIT;\n\n// @deriv/bot: visual improvement: changed editable field padding from 8 to 16\nBlockly.BlockSvg.EDITABLE_FIELD_PADDING = 16;\nBlockly.Field.prototype.setText = function (e) {\n  // eslint-disable-next-line no-param-reassign\n  e !== null && (e = String(e)) !== this.text_ && (this.text_ = e, this.forceRerender());\n};\nBlockly.FieldDropdown.prototype.isEmpty = function () {\n  return this.menuGenerator_.length === 0 || !this.menuGenerator_[0][1];\n};\nBlockly.Xml.NODE_BLOCK = 'BLOCK';\nBlockly.Xml.NODE_BUTTON = 'BUTTON';\nBlockly.Xml.NODE_LABEL = 'LABEL';\nBlockly.Xml.NODE_SHADOW = 'SHADOW';\nBlockly.Xml.NODE_INPUT = 'INPUT';//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vYm90LXNrZWxldG9uL3NyYy9zY3JhdGNoL2hvb2tzL2NvbnN0YW50LmpzIiwibmFtZXMiOlsiQmxvY2tseSIsIkNhdGVnb3JpZXMiLCJUcmFkZV9EZWZpbml0aW9uIiwiQmVmb3JlX1B1cmNoYXNlIiwiRHVyaW5nX1B1cmNoYXNlIiwiQWZ0ZXJfUHVyY2hhc2UiLCJNYXRoZW1hdGljYWwiLCJMb2dpYyIsIlRleHQiLCJWYXJpYWJsZXMiLCJGdW5jdGlvbnMiLCJMaXN0IiwiSW5kaWNhdG9ycyIsIlRpbWUiLCJUaWNrX0FuYWx5c2lzIiwiQ2FuZGxlIiwiTWlzY2VsbGFuZW91cyIsIkxvb3AiLCJPVVRQVVRfU0hBUEVfSEVYQUdPTkFMIiwiT1VUUFVUX1NIQVBFX1JPVU5EIiwiaXNOdW1iZXIiLCJzdHIiLCJ0ZXN0IiwiRFJBR19SQURJVVMiLCJGTFlPVVRfRFJBR19SQURJVVMiLCJCbG9ja1N2ZyIsIlNFUF9TUEFDRV9YIiwiTUlOX0JMT0NLX1hfV0lUSF9TVEFURU1FTlQiLCJHUklEX1VOSVQiLCJTVEFSVF9IQVRfUEFUSCIsImNvbmNhdCIsIkNPUk5FUl9SQURJVVMiLCJFWFRSQV9TVEFURU1FTlRfUk9XX1kiLCJFRElUQUJMRV9GSUVMRF9QQURESU5HIiwiRmllbGQiLCJwcm90b3R5cGUiLCJzZXRUZXh0IiwiZSIsIlN0cmluZyIsInRleHRfIiwiZm9yY2VSZXJlbmRlciIsIkZpZWxkRHJvcGRvd24iLCJpc0VtcHR5IiwibWVudUdlbmVyYXRvcl8iLCJsZW5ndGgiLCJYbWwiLCJOT0RFX0JMT0NLIiwiTk9ERV9CVVRUT04iLCJOT0RFX0xBQkVMIiwiTk9ERV9TSEFET1ciLCJOT0RFX0lOUFVUIl0sInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvYm90LXdlYi11aS8uLi9ib3Qtc2tlbGV0b24vc3JjL3NjcmF0Y2gvaG9va3MvY29uc3RhbnQuanM/NTQ2ZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEVOVU0gZm9yIGNhdGVnb3JpZXMuXG4gKiBAY29uc3RcbiAqL1xuQmxvY2tseS5DYXRlZ29yaWVzID0ge1xuICAgIFRyYWRlX0RlZmluaXRpb246ICd0cmFkZV9wYXJhbWV0ZXJzJyxcbiAgICBCZWZvcmVfUHVyY2hhc2U6ICdwdXJjaGFzZV9jb25kaXRpb25zJyxcbiAgICBEdXJpbmdfUHVyY2hhc2U6ICdzZWxsX2NvbmRpdGlvbnMnLFxuICAgIEFmdGVyX1B1cmNoYXNlOiAndHJhZGVfcmVzdWx0cycsXG4gICAgTWF0aGVtYXRpY2FsOiAnbWF0aCcsXG4gICAgTG9naWM6ICdsb2dpYycsXG4gICAgVGV4dDogJ3RleHQnLFxuICAgIFZhcmlhYmxlczogJ3ZhcmlhYmxlcycsXG4gICAgRnVuY3Rpb25zOiAnY3VzdG9tX2Z1bmN0aW9ucycsXG4gICAgTGlzdDogJ2xpc3RzJyxcbiAgICBJbmRpY2F0b3JzOiAnaW5kaWNhdG9ycycsXG4gICAgVGltZTogJ3RpbWUnLFxuICAgIFRpY2tfQW5hbHlzaXM6ICd0ZWNobmljYWxfYW5hbHlzaXMnLFxuICAgIENhbmRsZTogJ2NhbmRsZScsXG4gICAgTWlzY2VsbGFuZW91czogJ21pc2NlbGxhbmVvdXMnLFxuICAgIExvb3A6ICdsb29wcycsXG59O1xuQmxvY2tseS5PVVRQVVRfU0hBUEVfSEVYQUdPTkFMID0gMTtcbkJsb2NrbHkuT1VUUFVUX1NIQVBFX1JPVU5EID0gMjtcblxuQmxvY2tseS5pc051bWJlciA9IHN0ciA9PiB7XG4gICAgcmV0dXJuIC9eXFxzKi0/XFxkKyhcXC5cXGQrKT9cXHMqJC8udGVzdChzdHIpO1xufTtcbi8qKlxuICogTnVtYmVyIG9mIHBpeGVscyB0aGUgbW91c2UgbXVzdCBtb3ZlIGJlZm9yZSBhIGRyYWcgc3RhcnRzLlxuICovXG5CbG9ja2x5LkRSQUdfUkFESVVTID0gMztcblxuLyoqXG4gKiBOdW1iZXIgb2YgcGl4ZWxzIHRoZSBtb3VzZSBtdXN0IG1vdmUgYmVmb3JlIGEgZHJhZy9zY3JvbGwgc3RhcnRzIGZyb20gdGhlXG4gKiBmbHlvdXQuICBCZWNhdXNlIHRoZSBkcmFnLWludGVudGlvbiBpcyBkZXRlcm1pbmVkIHdoZW4gdGhpcyBpcyByZWFjaGVkLCBpdCBpc1xuICogbGFyZ2VyIHRoYW4gQmxvY2tseS5EUkFHX1JBRElVUyBzbyB0aGF0IHRoZSBkcmFnLWRpcmVjdGlvbiBpcyBjbGVhcmVyLlxuICovXG5CbG9ja2x5LkZMWU9VVF9EUkFHX1JBRElVUyA9IDE7XG5cbkJsb2NrbHkuQmxvY2tTdmcuU0VQX1NQQUNFX1ggPSA4O1xuXG4vLyBAZGVyaXYvYm90OiBTZXQgdGhlIG1pbmltdW0gd2lkdGggb2YgYSBzdGF0ZW1lbnQgYmxvY2sgdG8gYmUgd2lkZXIgdGhhbiBkZWZhdWx0LlxuQmxvY2tseS5CbG9ja1N2Zy5NSU5fQkxPQ0tfWF9XSVRIX1NUQVRFTUVOVCA9IDEwMCAqIEJsb2NrbHkuQmxvY2tTdmcuR1JJRF9VTklUO1xuXG4vLyBAZGVyaXYvYm90OiBSb290IGJsb2NrIGhhdCByZXBsYWNlcyB3aXRoIHN0YW5kYXJkIHJvdW5kZWQgY29ybmVyXG5CbG9ja2x5LkJsb2NrU3ZnLlNUQVJUX0hBVF9QQVRIID0gYG0gMCwke0Jsb2NrbHkuQmxvY2tTdmcuQ09STkVSX1JBRElVU30gQSAke0Jsb2NrbHkuQmxvY2tTdmcuQ09STkVSX1JBRElVU30sICR7QmxvY2tseS5CbG9ja1N2Zy5DT1JORVJfUkFESVVTfSAwIDAsMSAke0Jsb2NrbHkuQmxvY2tTdmcuQ09STkVSX1JBRElVU30sMGA7XG5cbi8vIEBkZXJpdi9ib3Q6IENoYW5nZWQgdGhlIGhlaWdodCBvZiBhIHJvdyBpbiBhIHN0YXRlbWVudCBibG9jayB0byBiZSAxMC5cbkJsb2NrbHkuQmxvY2tTdmcuRVhUUkFfU1RBVEVNRU5UX1JPV19ZID0gMTAgKiBCbG9ja2x5LkJsb2NrU3ZnLkdSSURfVU5JVDtcblxuLy8gQGRlcml2L2JvdDogdmlzdWFsIGltcHJvdmVtZW50OiBjaGFuZ2VkIGVkaXRhYmxlIGZpZWxkIHBhZGRpbmcgZnJvbSA4IHRvIDE2XG5CbG9ja2x5LkJsb2NrU3ZnLkVESVRBQkxFX0ZJRUxEX1BBRERJTkcgPSAxNjtcblxuQmxvY2tseS5GaWVsZC5wcm90b3R5cGUuc2V0VGV4dCA9IGZ1bmN0aW9uIChlKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gICAgZSAhPT0gbnVsbCAmJiAoZSA9IFN0cmluZyhlKSkgIT09IHRoaXMudGV4dF8gJiYgKCh0aGlzLnRleHRfID0gZSksIHRoaXMuZm9yY2VSZXJlbmRlcigpKTtcbn07XG5cbkJsb2NrbHkuRmllbGREcm9wZG93bi5wcm90b3R5cGUuaXNFbXB0eSA9IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gdGhpcy5tZW51R2VuZXJhdG9yXy5sZW5ndGggPT09IDAgfHwgIXRoaXMubWVudUdlbmVyYXRvcl9bMF1bMV07XG59O1xuXG5CbG9ja2x5LlhtbC5OT0RFX0JMT0NLID0gJ0JMT0NLJztcbkJsb2NrbHkuWG1sLk5PREVfQlVUVE9OID0gJ0JVVFRPTic7XG5CbG9ja2x5LlhtbC5OT0RFX0xBQkVMID0gJ0xBQkVMJztcbkJsb2NrbHkuWG1sLk5PREVfU0hBRE9XID0gJ1NIQURPVyc7XG5CbG9ja2x5LlhtbC5OT0RFX0lOUFVUID0gJ0lOUFVUJztcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQUEsT0FBTyxDQUFDQyxVQUFVLEdBQUc7RUFDakJDLGdCQUFnQixFQUFFLGtCQUFrQjtFQUNwQ0MsZUFBZSxFQUFFLHFCQUFxQjtFQUN0Q0MsZUFBZSxFQUFFLGlCQUFpQjtFQUNsQ0MsY0FBYyxFQUFFLGVBQWU7RUFDL0JDLFlBQVksRUFBRSxNQUFNO0VBQ3BCQyxLQUFLLEVBQUUsT0FBTztFQUNkQyxJQUFJLEVBQUUsTUFBTTtFQUNaQyxTQUFTLEVBQUUsV0FBVztFQUN0QkMsU0FBUyxFQUFFLGtCQUFrQjtFQUM3QkMsSUFBSSxFQUFFLE9BQU87RUFDYkMsVUFBVSxFQUFFLFlBQVk7RUFDeEJDLElBQUksRUFBRSxNQUFNO0VBQ1pDLGFBQWEsRUFBRSxvQkFBb0I7RUFDbkNDLE1BQU0sRUFBRSxRQUFRO0VBQ2hCQyxhQUFhLEVBQUUsZUFBZTtFQUM5QkMsSUFBSSxFQUFFO0FBQ1YsQ0FBQztBQUNEakIsT0FBTyxDQUFDa0Isc0JBQXNCLEdBQUcsQ0FBQztBQUNsQ2xCLE9BQU8sQ0FBQ21CLGtCQUFrQixHQUFHLENBQUM7QUFFOUJuQixPQUFPLENBQUNvQixRQUFRLEdBQUcsVUFBQUMsR0FBRyxFQUFJO0VBQ3RCLE9BQU8sdUJBQXVCLENBQUNDLElBQUksQ0FBQ0QsR0FBRyxDQUFDO0FBQzVDLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQXJCLE9BQU8sQ0FBQ3VCLFdBQVcsR0FBRyxDQUFDOztBQUV2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0F2QixPQUFPLENBQUN3QixrQkFBa0IsR0FBRyxDQUFDO0FBRTlCeEIsT0FBTyxDQUFDeUIsUUFBUSxDQUFDQyxXQUFXLEdBQUcsQ0FBQzs7QUFFaEM7QUFDQTFCLE9BQU8sQ0FBQ3lCLFFBQVEsQ0FBQ0UsMEJBQTBCLEdBQUcsR0FBRyxHQUFHM0IsT0FBTyxDQUFDeUIsUUFBUSxDQUFDRyxTQUFTOztBQUU5RTtBQUNBNUIsT0FBTyxDQUFDeUIsUUFBUSxDQUFDSSxjQUFjLFVBQUFDLE1BQUEsQ0FBVTlCLE9BQU8sQ0FBQ3lCLFFBQVEsQ0FBQ00sYUFBYSxTQUFBRCxNQUFBLENBQU05QixPQUFPLENBQUN5QixRQUFRLENBQUNNLGFBQWEsUUFBQUQsTUFBQSxDQUFLOUIsT0FBTyxDQUFDeUIsUUFBUSxDQUFDTSxhQUFhLGFBQUFELE1BQUEsQ0FBVTlCLE9BQU8sQ0FBQ3lCLFFBQVEsQ0FBQ00sYUFBYSxPQUFJOztBQUUxTDtBQUNBL0IsT0FBTyxDQUFDeUIsUUFBUSxDQUFDTyxxQkFBcUIsR0FBRyxFQUFFLEdBQUdoQyxPQUFPLENBQUN5QixRQUFRLENBQUNHLFNBQVM7O0FBRXhFO0FBQ0E1QixPQUFPLENBQUN5QixRQUFRLENBQUNRLHNCQUFzQixHQUFHLEVBQUU7QUFFNUNqQyxPQUFPLENBQUNrQyxLQUFLLENBQUNDLFNBQVMsQ0FBQ0MsT0FBTyxHQUFHLFVBQVVDLENBQUMsRUFBRTtFQUMzQztFQUNBQSxDQUFDLEtBQUssSUFBSSxJQUFJLENBQUNBLENBQUMsR0FBR0MsTUFBTSxDQUFDRCxDQUFDLENBQUMsTUFBTSxJQUFJLENBQUNFLEtBQUssS0FBTSxJQUFJLENBQUNBLEtBQUssR0FBR0YsQ0FBQyxFQUFHLElBQUksQ0FBQ0csYUFBYSxDQUFDLENBQUMsQ0FBQztBQUM1RixDQUFDO0FBRUR4QyxPQUFPLENBQUN5QyxhQUFhLENBQUNOLFNBQVMsQ0FBQ08sT0FBTyxHQUFHLFlBQVk7RUFDbEQsT0FBTyxJQUFJLENBQUNDLGNBQWMsQ0FBQ0MsTUFBTSxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQ0QsY0FBYyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN6RSxDQUFDO0FBRUQzQyxPQUFPLENBQUM2QyxHQUFHLENBQUNDLFVBQVUsR0FBRyxPQUFPO0FBQ2hDOUMsT0FBTyxDQUFDNkMsR0FBRyxDQUFDRSxXQUFXLEdBQUcsUUFBUTtBQUNsQy9DLE9BQU8sQ0FBQzZDLEdBQUcsQ0FBQ0csVUFBVSxHQUFHLE9BQU87QUFDaENoRCxPQUFPLENBQUM2QyxHQUFHLENBQUNJLFdBQVcsR0FBRyxRQUFRO0FBQ2xDakQsT0FBTyxDQUFDNkMsR0FBRyxDQUFDSyxVQUFVLEdBQUcsT0FBTyIsImlnbm9yZUxpc3QiOltdfQ==\n//# sourceURL=webpack-internal:///../bot-skeleton/src/scratch/hooks/constant.js\n"
                );

                /***/
            },

        /***/ '../bot-skeleton/src/scratch/hooks/data_category.js':
            /*!**********************************************************!*\
  !*** ../bot-skeleton/src/scratch/hooks/data_category.js ***!
  \**********************************************************/
            /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    "__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _deriv_translations__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @deriv/translations */ \"@deriv/translations\");\n/* harmony import */ var _deriv_translations__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_deriv_translations__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _dbot_store__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../dbot-store */ \"../bot-skeleton/src/scratch/dbot-store.js\");\n\n\n\n/**\n * Construct the blocks required by the flyout for the variable category.\n * @param {!Blockly.Workspace} workspace The workspace containing variables.\n * @return {!Array.<!Element>} Array of XML block elements.\n */\nBlockly.DataCategory = function (workspace) {\n  var variableModelList = workspace.getVariablesOfType('');\n  var xmlList = [];\n\n  // `Create Variable`-Section\n  Blockly.DataCategory.addCreateVariable(xmlList, workspace);\n  var block_types = ['variables_set', 'variables_get', 'math_change'];\n  xmlList = xmlList.concat(Blockly.DataCategory.search(variableModelList, block_types));\n  return xmlList;\n};\nBlockly.DataCategory.search = function (variableModelList) {\n  var xmlList = [];\n  if (variableModelList.length > 0) {\n    var generateVariableFieldXmlString = function generateVariableFieldXmlString(variableModel) {\n      // The variable name may be user input, so it may contain characters that\n      // need to be escaped to create valid XML.\n      var escapedText = \"<field name=\\\"VAR\\\" id=\\\"\".concat(variableModel.getId(), \"\\\" variabletype=\\\"\").concat(encodeURIComponent(variableModel.type), \"\\\">\").concat(encodeURIComponent(variableModel.name), \"</field>\");\n      return escapedText;\n    };\n    var firstVariable = variableModelList[0];\n\n    // Create 'Set `var` to'-block\n    if (Blockly.Blocks.variables_set) {\n      var gap = Blockly.Blocks.math_change ? 8 : 24;\n      var setBlockText = \"<xml><block type=\\\"variables_set\\\" gap=\\\"\".concat(gap, \"\\\">\").concat(generateVariableFieldXmlString(firstVariable), \"</block></xml>\");\n      var setBlock = Blockly.utils.xml.textToDom(setBlockText).firstChild;\n      xmlList.push(setBlock);\n    }\n\n    // Create 'Change `var` by `1`'-block\n    // if (Blockly.Blocks.math_change) {\n    //     const gap = Blockly.Blocks.variables_get ? 20 : 8;\n    //     const changeBlockText = `<xml><block type=\"math_change\" gap=\"${gap}\">${generateVariableFieldXmlString(\n    //         firstVariable\n    //     )}<value name=\"DELTA\"><shadow type=\"math_number\"><field name=\"NUM\">1</field></shadow></value></block></xml>`;\n    //     const changeBlock = Blockly.Xml.textToDom(changeBlockText).firstChild;\n    //     xmlList.push(changeBlock);\n    // }\n\n    // Create `variable_get` block for each variable\n    if (Blockly.Blocks.variables_get) {\n      // For adding sort base on the creation date\n      variableModelList.sort(function (first_variable, second_variable) {\n        return variableModelList.indexOf(second_variable) - variableModelList.indexOf(first_variable);\n      });\n      variableModelList.forEach(function (variable) {\n        var getBlockText = \"<xml><block type=\\\"variables_get\\\">\".concat(generateVariableFieldXmlString(variable), \"</block></xml>\");\n        var getBlock = Blockly.utils.xml.textToDom(getBlockText).firstChild;\n        xmlList.push(getBlock);\n      });\n    }\n  }\n  return xmlList;\n};\n\n/**\n * Construct a create variable section and push it to the xmlList.\n * @param {!Array.<!Element>} xmlList Array of XML block elements.\n * @param {Blockly.Workspace} workspace Workspace to register callback to.\n * @deriv/bot: We only use a single type of variable, so `type` arg was removed.\n */\nBlockly.DataCategory.addCreateVariable = function (xmlList, workspace) {\n  var el_button_xml = document.createElement('button');\n  var el_input_xml = document.createElement('input');\n\n  // Set default msg, callbackKey, and callback values for type 'VARIABLE'\n  var button_text = (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_0__.localize)('Create');\n  var callback_key = 'CREATE_VARIABLE';\n  var input_placeholder = (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_0__.localize)('New variable name');\n\n  // Set attributes for the button\n  el_button_xml.setAttribute('text', button_text);\n  el_button_xml.setAttribute('className', 'flyout__button-new');\n  el_button_xml.setAttribute('callbackKey', callback_key);\n\n  // Set attributes for the input field\n  el_input_xml.setAttribute('className', 'flyout__input');\n  el_input_xml.setAttribute('name', 'variable');\n  el_input_xml.setAttribute('type', 'text');\n  el_input_xml.setAttribute('placeholder', input_placeholder);\n  var callback = function callback(button) {\n    var el_input_container = document.querySelector('.flyout__input > .dc-input__container');\n    var el_input = el_input_container.firstChild;\n    var buttonWorkspace = button.getTargetWorkspace();\n    buttonWorkspace.createVariable(el_input.value, '');\n    el_input.value = '';\n    var flyout = _dbot_store__WEBPACK_IMPORTED_MODULE_1__[\"default\"].instance.flyout;\n    flyout.refreshCategory();\n  };\n  workspace.registerButtonCallback(callback_key, callback);\n  xmlList.push(el_input_xml);\n  xmlList.push(el_button_xml);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vYm90LXNrZWxldG9uL3NyYy9zY3JhdGNoL2hvb2tzL2RhdGFfY2F0ZWdvcnkuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvYm90LXdlYi11aS8uLi9ib3Qtc2tlbGV0b24vc3JjL3NjcmF0Y2gvaG9va3MvZGF0YV9jYXRlZ29yeS5qcz9iY2VlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGxvY2FsaXplIH0gZnJvbSAnQGRlcml2L3RyYW5zbGF0aW9ucyc7XG5pbXBvcnQgREJvdFN0b3JlIGZyb20gJy4uL2Rib3Qtc3RvcmUnO1xuXG4vKipcbiAqIENvbnN0cnVjdCB0aGUgYmxvY2tzIHJlcXVpcmVkIGJ5IHRoZSBmbHlvdXQgZm9yIHRoZSB2YXJpYWJsZSBjYXRlZ29yeS5cbiAqIEBwYXJhbSB7IUJsb2NrbHkuV29ya3NwYWNlfSB3b3Jrc3BhY2UgVGhlIHdvcmtzcGFjZSBjb250YWluaW5nIHZhcmlhYmxlcy5cbiAqIEByZXR1cm4geyFBcnJheS48IUVsZW1lbnQ+fSBBcnJheSBvZiBYTUwgYmxvY2sgZWxlbWVudHMuXG4gKi9cbkJsb2NrbHkuRGF0YUNhdGVnb3J5ID0gZnVuY3Rpb24gKHdvcmtzcGFjZSkge1xuICAgIGNvbnN0IHZhcmlhYmxlTW9kZWxMaXN0ID0gd29ya3NwYWNlLmdldFZhcmlhYmxlc09mVHlwZSgnJyk7XG4gICAgbGV0IHhtbExpc3QgPSBbXTtcblxuICAgIC8vIGBDcmVhdGUgVmFyaWFibGVgLVNlY3Rpb25cbiAgICBCbG9ja2x5LkRhdGFDYXRlZ29yeS5hZGRDcmVhdGVWYXJpYWJsZSh4bWxMaXN0LCB3b3Jrc3BhY2UpO1xuXG4gICAgY29uc3QgYmxvY2tfdHlwZXMgPSBbJ3ZhcmlhYmxlc19zZXQnLCAndmFyaWFibGVzX2dldCcsICdtYXRoX2NoYW5nZSddO1xuICAgIHhtbExpc3QgPSB4bWxMaXN0LmNvbmNhdChCbG9ja2x5LkRhdGFDYXRlZ29yeS5zZWFyY2godmFyaWFibGVNb2RlbExpc3QsIGJsb2NrX3R5cGVzKSk7XG5cbiAgICByZXR1cm4geG1sTGlzdDtcbn07XG5cbkJsb2NrbHkuRGF0YUNhdGVnb3J5LnNlYXJjaCA9IGZ1bmN0aW9uICh2YXJpYWJsZU1vZGVsTGlzdCkge1xuICAgIGNvbnN0IHhtbExpc3QgPSBbXTtcbiAgICBpZiAodmFyaWFibGVNb2RlbExpc3QubGVuZ3RoID4gMCkge1xuICAgICAgICBjb25zdCBnZW5lcmF0ZVZhcmlhYmxlRmllbGRYbWxTdHJpbmcgPSB2YXJpYWJsZU1vZGVsID0+IHtcbiAgICAgICAgICAgIC8vIFRoZSB2YXJpYWJsZSBuYW1lIG1heSBiZSB1c2VyIGlucHV0LCBzbyBpdCBtYXkgY29udGFpbiBjaGFyYWN0ZXJzIHRoYXRcbiAgICAgICAgICAgIC8vIG5lZWQgdG8gYmUgZXNjYXBlZCB0byBjcmVhdGUgdmFsaWQgWE1MLlxuICAgICAgICAgICAgY29uc3QgZXNjYXBlZFRleHQgPSBgPGZpZWxkIG5hbWU9XCJWQVJcIiBpZD1cIiR7dmFyaWFibGVNb2RlbC5nZXRJZCgpfVwiIHZhcmlhYmxldHlwZT1cIiR7ZW5jb2RlVVJJQ29tcG9uZW50KFxuICAgICAgICAgICAgICAgIHZhcmlhYmxlTW9kZWwudHlwZVxuICAgICAgICAgICAgKX1cIj4ke2VuY29kZVVSSUNvbXBvbmVudCh2YXJpYWJsZU1vZGVsLm5hbWUpfTwvZmllbGQ+YDtcbiAgICAgICAgICAgIHJldHVybiBlc2NhcGVkVGV4dDtcbiAgICAgICAgfTtcblxuICAgICAgICBjb25zdCBmaXJzdFZhcmlhYmxlID0gdmFyaWFibGVNb2RlbExpc3RbMF07XG5cbiAgICAgICAgLy8gQ3JlYXRlICdTZXQgYHZhcmAgdG8nLWJsb2NrXG4gICAgICAgIGlmIChCbG9ja2x5LkJsb2Nrcy52YXJpYWJsZXNfc2V0KSB7XG4gICAgICAgICAgICBjb25zdCBnYXAgPSBCbG9ja2x5LkJsb2Nrcy5tYXRoX2NoYW5nZSA/IDggOiAyNDtcbiAgICAgICAgICAgIGNvbnN0IHNldEJsb2NrVGV4dCA9IGA8eG1sPjxibG9jayB0eXBlPVwidmFyaWFibGVzX3NldFwiIGdhcD1cIiR7Z2FwfVwiPiR7Z2VuZXJhdGVWYXJpYWJsZUZpZWxkWG1sU3RyaW5nKFxuICAgICAgICAgICAgICAgIGZpcnN0VmFyaWFibGVcbiAgICAgICAgICAgICl9PC9ibG9jaz48L3htbD5gO1xuICAgICAgICAgICAgY29uc3Qgc2V0QmxvY2sgPSBCbG9ja2x5LnV0aWxzLnhtbC50ZXh0VG9Eb20oc2V0QmxvY2tUZXh0KS5maXJzdENoaWxkO1xuICAgICAgICAgICAgeG1sTGlzdC5wdXNoKHNldEJsb2NrKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIENyZWF0ZSAnQ2hhbmdlIGB2YXJgIGJ5IGAxYCctYmxvY2tcbiAgICAgICAgLy8gaWYgKEJsb2NrbHkuQmxvY2tzLm1hdGhfY2hhbmdlKSB7XG4gICAgICAgIC8vICAgICBjb25zdCBnYXAgPSBCbG9ja2x5LkJsb2Nrcy52YXJpYWJsZXNfZ2V0ID8gMjAgOiA4O1xuICAgICAgICAvLyAgICAgY29uc3QgY2hhbmdlQmxvY2tUZXh0ID0gYDx4bWw+PGJsb2NrIHR5cGU9XCJtYXRoX2NoYW5nZVwiIGdhcD1cIiR7Z2FwfVwiPiR7Z2VuZXJhdGVWYXJpYWJsZUZpZWxkWG1sU3RyaW5nKFxuICAgICAgICAvLyAgICAgICAgIGZpcnN0VmFyaWFibGVcbiAgICAgICAgLy8gICAgICl9PHZhbHVlIG5hbWU9XCJERUxUQVwiPjxzaGFkb3cgdHlwZT1cIm1hdGhfbnVtYmVyXCI+PGZpZWxkIG5hbWU9XCJOVU1cIj4xPC9maWVsZD48L3NoYWRvdz48L3ZhbHVlPjwvYmxvY2s+PC94bWw+YDtcbiAgICAgICAgLy8gICAgIGNvbnN0IGNoYW5nZUJsb2NrID0gQmxvY2tseS5YbWwudGV4dFRvRG9tKGNoYW5nZUJsb2NrVGV4dCkuZmlyc3RDaGlsZDtcbiAgICAgICAgLy8gICAgIHhtbExpc3QucHVzaChjaGFuZ2VCbG9jayk7XG4gICAgICAgIC8vIH1cblxuICAgICAgICAvLyBDcmVhdGUgYHZhcmlhYmxlX2dldGAgYmxvY2sgZm9yIGVhY2ggdmFyaWFibGVcbiAgICAgICAgaWYgKEJsb2NrbHkuQmxvY2tzLnZhcmlhYmxlc19nZXQpIHtcbiAgICAgICAgICAgIC8vIEZvciBhZGRpbmcgc29ydCBiYXNlIG9uIHRoZSBjcmVhdGlvbiBkYXRlXG4gICAgICAgICAgICB2YXJpYWJsZU1vZGVsTGlzdC5zb3J0KFxuICAgICAgICAgICAgICAgIChmaXJzdF92YXJpYWJsZSwgc2Vjb25kX3ZhcmlhYmxlKSA9PlxuICAgICAgICAgICAgICAgICAgICB2YXJpYWJsZU1vZGVsTGlzdC5pbmRleE9mKHNlY29uZF92YXJpYWJsZSkgLSB2YXJpYWJsZU1vZGVsTGlzdC5pbmRleE9mKGZpcnN0X3ZhcmlhYmxlKVxuICAgICAgICAgICAgKTtcblxuICAgICAgICAgICAgdmFyaWFibGVNb2RlbExpc3QuZm9yRWFjaCh2YXJpYWJsZSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgZ2V0QmxvY2tUZXh0ID0gYDx4bWw+PGJsb2NrIHR5cGU9XCJ2YXJpYWJsZXNfZ2V0XCI+JHtnZW5lcmF0ZVZhcmlhYmxlRmllbGRYbWxTdHJpbmcoXG4gICAgICAgICAgICAgICAgICAgIHZhcmlhYmxlXG4gICAgICAgICAgICAgICAgKX08L2Jsb2NrPjwveG1sPmA7XG4gICAgICAgICAgICAgICAgY29uc3QgZ2V0QmxvY2sgPSBCbG9ja2x5LnV0aWxzLnhtbC50ZXh0VG9Eb20oZ2V0QmxvY2tUZXh0KS5maXJzdENoaWxkO1xuICAgICAgICAgICAgICAgIHhtbExpc3QucHVzaChnZXRCbG9jayk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB4bWxMaXN0O1xufTtcblxuLyoqXG4gKiBDb25zdHJ1Y3QgYSBjcmVhdGUgdmFyaWFibGUgc2VjdGlvbiBhbmQgcHVzaCBpdCB0byB0aGUgeG1sTGlzdC5cbiAqIEBwYXJhbSB7IUFycmF5LjwhRWxlbWVudD59IHhtbExpc3QgQXJyYXkgb2YgWE1MIGJsb2NrIGVsZW1lbnRzLlxuICogQHBhcmFtIHtCbG9ja2x5LldvcmtzcGFjZX0gd29ya3NwYWNlIFdvcmtzcGFjZSB0byByZWdpc3RlciBjYWxsYmFjayB0by5cbiAqIEBkZXJpdi9ib3Q6IFdlIG9ubHkgdXNlIGEgc2luZ2xlIHR5cGUgb2YgdmFyaWFibGUsIHNvIGB0eXBlYCBhcmcgd2FzIHJlbW92ZWQuXG4gKi9cbkJsb2NrbHkuRGF0YUNhdGVnb3J5LmFkZENyZWF0ZVZhcmlhYmxlID0gZnVuY3Rpb24gKHhtbExpc3QsIHdvcmtzcGFjZSkge1xuICAgIGNvbnN0IGVsX2J1dHRvbl94bWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgICBjb25zdCBlbF9pbnB1dF94bWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuXG4gICAgLy8gU2V0IGRlZmF1bHQgbXNnLCBjYWxsYmFja0tleSwgYW5kIGNhbGxiYWNrIHZhbHVlcyBmb3IgdHlwZSAnVkFSSUFCTEUnXG4gICAgY29uc3QgYnV0dG9uX3RleHQgPSBsb2NhbGl6ZSgnQ3JlYXRlJyk7XG4gICAgY29uc3QgY2FsbGJhY2tfa2V5ID0gJ0NSRUFURV9WQVJJQUJMRSc7XG4gICAgY29uc3QgaW5wdXRfcGxhY2Vob2xkZXIgPSBsb2NhbGl6ZSgnTmV3IHZhcmlhYmxlIG5hbWUnKTtcblxuICAgIC8vIFNldCBhdHRyaWJ1dGVzIGZvciB0aGUgYnV0dG9uXG4gICAgZWxfYnV0dG9uX3htbC5zZXRBdHRyaWJ1dGUoJ3RleHQnLCBidXR0b25fdGV4dCk7XG4gICAgZWxfYnV0dG9uX3htbC5zZXRBdHRyaWJ1dGUoJ2NsYXNzTmFtZScsICdmbHlvdXRfX2J1dHRvbi1uZXcnKTtcbiAgICBlbF9idXR0b25feG1sLnNldEF0dHJpYnV0ZSgnY2FsbGJhY2tLZXknLCBjYWxsYmFja19rZXkpO1xuXG4gICAgLy8gU2V0IGF0dHJpYnV0ZXMgZm9yIHRoZSBpbnB1dCBmaWVsZFxuICAgIGVsX2lucHV0X3htbC5zZXRBdHRyaWJ1dGUoJ2NsYXNzTmFtZScsICdmbHlvdXRfX2lucHV0Jyk7XG4gICAgZWxfaW5wdXRfeG1sLnNldEF0dHJpYnV0ZSgnbmFtZScsICd2YXJpYWJsZScpO1xuICAgIGVsX2lucHV0X3htbC5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAndGV4dCcpO1xuICAgIGVsX2lucHV0X3htbC5zZXRBdHRyaWJ1dGUoJ3BsYWNlaG9sZGVyJywgaW5wdXRfcGxhY2Vob2xkZXIpO1xuXG4gICAgY29uc3QgY2FsbGJhY2sgPSBmdW5jdGlvbiAoYnV0dG9uKSB7XG4gICAgICAgIGNvbnN0IGVsX2lucHV0X2NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5mbHlvdXRfX2lucHV0ID4gLmRjLWlucHV0X19jb250YWluZXInKTtcbiAgICAgICAgY29uc3QgZWxfaW5wdXQgPSBlbF9pbnB1dF9jb250YWluZXIuZmlyc3RDaGlsZDtcblxuICAgICAgICBjb25zdCBidXR0b25Xb3Jrc3BhY2UgPSBidXR0b24uZ2V0VGFyZ2V0V29ya3NwYWNlKCk7XG4gICAgICAgIGJ1dHRvbldvcmtzcGFjZS5jcmVhdGVWYXJpYWJsZShlbF9pbnB1dC52YWx1ZSwgJycpO1xuICAgICAgICBlbF9pbnB1dC52YWx1ZSA9ICcnO1xuXG4gICAgICAgIGNvbnN0IHsgZmx5b3V0IH0gPSBEQm90U3RvcmUuaW5zdGFuY2U7XG4gICAgICAgIGZseW91dC5yZWZyZXNoQ2F0ZWdvcnkoKTtcbiAgICB9O1xuXG4gICAgd29ya3NwYWNlLnJlZ2lzdGVyQnV0dG9uQ2FsbGJhY2soY2FsbGJhY2tfa2V5LCBjYWxsYmFjayk7XG5cbiAgICB4bWxMaXN0LnB1c2goZWxfaW5wdXRfeG1sKTtcbiAgICB4bWxMaXN0LnB1c2goZWxfYnV0dG9uX3htbCk7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../bot-skeleton/src/scratch/hooks/data_category.js\n"
                );

                /***/
            },

        /***/ '../bot-skeleton/src/scratch/hooks/field.js':
            /*!**************************************************!*\
  !*** ../bot-skeleton/src/scratch/hooks/field.js ***!
  \**************************************************/
            /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    "__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils */ \"../bot-skeleton/src/scratch/utils/index.js\");\n\nBlockly.FieldDropdown.prototype.updateOptions = function (dropdown_options) {\n  var _this = this;\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (Blockly.DropDownDiv.isVisible()) {\n    Blockly.DropDownDiv.hideWithoutAnimation();\n  }\n  this.menuGenerator_ = dropdown_options;\n\n  // Blockly won't actually fire an event if the oldValue and newValue are the same. This prop\n  // sets the event's oldValue to an empty string so it's always executed.\n  var previous_value = this.getValue();\n  if (options.should_pretend_empty) {\n    previous_value = '';\n  }\n\n  // Set a flag indicating whether the default value passed to this function is available in the newly\n  // set dropdown options, if false the default option will be the first available one.\n  var has_default_value = dropdown_options.findIndex(function (item) {\n    return item[1] === options.default_value;\n  }) !== -1;\n  (0,_utils__WEBPACK_IMPORTED_MODULE_0__.runInvisibleEvents)(function () {\n    //kept this commented to remove console errors\n    //this.setValue('');\n\n    if (has_default_value) {\n      _this.setValue(options.default_value);\n    } else if (dropdown_options.length > 0) {\n      // Default to first if option isn't available.\n      _this.setValue(_this.menuGenerator_[0][1]);\n    } else {\n      _this.setValue(previous_value);\n    }\n  });\n\n  // If \"should_trigger_event\" prop is omitted or set to true, fire an event.\n  if (!options.should_trigger_event || options.should_trigger_event === true) {\n    var event = new Blockly.Events.BlockChange(this.sourceBlock_, 'field', this.name, previous_value, this.getValue());\n    event.recordUndo = false;\n    event.group = options.event_group;\n    Blockly.Events.fire(event);\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vYm90LXNrZWxldG9uL3NyYy9zY3JhdGNoL2hvb2tzL2ZpZWxkLmpzIiwibWFwcGluZ3MiOiI7O0FBQUE7QUFFQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBT0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi9ib3Qtd2ViLXVpLy4uL2JvdC1za2VsZXRvbi9zcmMvc2NyYXRjaC9ob29rcy9maWVsZC5qcz9mMGZhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJ1bkludmlzaWJsZUV2ZW50cyB9IGZyb20gJy4uL3V0aWxzJztcblxuQmxvY2tseS5GaWVsZERyb3Bkb3duLnByb3RvdHlwZS51cGRhdGVPcHRpb25zID0gZnVuY3Rpb24gKGRyb3Bkb3duX29wdGlvbnMsIG9wdGlvbnMgPSB7fSkge1xuICAgIGlmIChCbG9ja2x5LkRyb3BEb3duRGl2LmlzVmlzaWJsZSgpKSB7XG4gICAgICAgIEJsb2NrbHkuRHJvcERvd25EaXYuaGlkZVdpdGhvdXRBbmltYXRpb24oKTtcbiAgICB9XG5cbiAgICB0aGlzLm1lbnVHZW5lcmF0b3JfID0gZHJvcGRvd25fb3B0aW9ucztcblxuICAgIC8vIEJsb2NrbHkgd29uJ3QgYWN0dWFsbHkgZmlyZSBhbiBldmVudCBpZiB0aGUgb2xkVmFsdWUgYW5kIG5ld1ZhbHVlIGFyZSB0aGUgc2FtZS4gVGhpcyBwcm9wXG4gICAgLy8gc2V0cyB0aGUgZXZlbnQncyBvbGRWYWx1ZSB0byBhbiBlbXB0eSBzdHJpbmcgc28gaXQncyBhbHdheXMgZXhlY3V0ZWQuXG4gICAgbGV0IHByZXZpb3VzX3ZhbHVlID0gdGhpcy5nZXRWYWx1ZSgpO1xuXG4gICAgaWYgKG9wdGlvbnMuc2hvdWxkX3ByZXRlbmRfZW1wdHkpIHtcbiAgICAgICAgcHJldmlvdXNfdmFsdWUgPSAnJztcbiAgICB9XG5cbiAgICAvLyBTZXQgYSBmbGFnIGluZGljYXRpbmcgd2hldGhlciB0aGUgZGVmYXVsdCB2YWx1ZSBwYXNzZWQgdG8gdGhpcyBmdW5jdGlvbiBpcyBhdmFpbGFibGUgaW4gdGhlIG5ld2x5XG4gICAgLy8gc2V0IGRyb3Bkb3duIG9wdGlvbnMsIGlmIGZhbHNlIHRoZSBkZWZhdWx0IG9wdGlvbiB3aWxsIGJlIHRoZSBmaXJzdCBhdmFpbGFibGUgb25lLlxuICAgIGNvbnN0IGhhc19kZWZhdWx0X3ZhbHVlID0gZHJvcGRvd25fb3B0aW9ucy5maW5kSW5kZXgoaXRlbSA9PiBpdGVtWzFdID09PSBvcHRpb25zLmRlZmF1bHRfdmFsdWUpICE9PSAtMTtcblxuICAgIHJ1bkludmlzaWJsZUV2ZW50cygoKSA9PiB7XG4gICAgICAgIC8va2VwdCB0aGlzIGNvbW1lbnRlZCB0byByZW1vdmUgY29uc29sZSBlcnJvcnNcbiAgICAgICAgLy90aGlzLnNldFZhbHVlKCcnKTtcblxuICAgICAgICBpZiAoaGFzX2RlZmF1bHRfdmFsdWUpIHtcbiAgICAgICAgICAgIHRoaXMuc2V0VmFsdWUob3B0aW9ucy5kZWZhdWx0X3ZhbHVlKTtcbiAgICAgICAgfSBlbHNlIGlmIChkcm9wZG93bl9vcHRpb25zLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIC8vIERlZmF1bHQgdG8gZmlyc3QgaWYgb3B0aW9uIGlzbid0IGF2YWlsYWJsZS5cbiAgICAgICAgICAgIHRoaXMuc2V0VmFsdWUodGhpcy5tZW51R2VuZXJhdG9yX1swXVsxXSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnNldFZhbHVlKHByZXZpb3VzX3ZhbHVlKTtcbiAgICAgICAgfVxuICAgIH0pO1xuXG4gICAgLy8gSWYgXCJzaG91bGRfdHJpZ2dlcl9ldmVudFwiIHByb3AgaXMgb21pdHRlZCBvciBzZXQgdG8gdHJ1ZSwgZmlyZSBhbiBldmVudC5cbiAgICBpZiAoIW9wdGlvbnMuc2hvdWxkX3RyaWdnZXJfZXZlbnQgfHwgb3B0aW9ucy5zaG91bGRfdHJpZ2dlcl9ldmVudCA9PT0gdHJ1ZSkge1xuICAgICAgICBjb25zdCBldmVudCA9IG5ldyBCbG9ja2x5LkV2ZW50cy5CbG9ja0NoYW5nZShcbiAgICAgICAgICAgIHRoaXMuc291cmNlQmxvY2tfLFxuICAgICAgICAgICAgJ2ZpZWxkJyxcbiAgICAgICAgICAgIHRoaXMubmFtZSxcbiAgICAgICAgICAgIHByZXZpb3VzX3ZhbHVlLFxuICAgICAgICAgICAgdGhpcy5nZXRWYWx1ZSgpXG4gICAgICAgICk7XG4gICAgICAgIGV2ZW50LnJlY29yZFVuZG8gPSBmYWxzZTtcbiAgICAgICAgZXZlbnQuZ3JvdXAgPSBvcHRpb25zLmV2ZW50X2dyb3VwO1xuICAgICAgICBCbG9ja2x5LkV2ZW50cy5maXJlKGV2ZW50KTtcbiAgICB9XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../bot-skeleton/src/scratch/hooks/field.js\n"
                );

                /***/
            },

        /***/ '../bot-skeleton/src/scratch/hooks/flyout_base.js':
            /*!********************************************************!*\
  !*** ../bot-skeleton/src/scratch/hooks/flyout_base.js ***!
  \********************************************************/
            /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    '__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _constants_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../constants/config */ "../bot-skeleton/src/constants/config.ts");\n/* harmony import */ var _dbot_store__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../dbot-store */ "../bot-skeleton/src/scratch/dbot-store.js");\n\n\n\n/**\n * Create a copy of this block on the workspace.\n * @param {!Blockly.BlockSvg} original_block The block to copy from the flyout.\n * @return {Blockly.BlockSvg} The newly created block, or null if something\n *     went wrong with deserialization.\n * @package\n */\nBlockly.Flyout.prototype.createBlock = function (event, original_block) {\n  Blockly.Events.disable();\n  var main_workspace = this.targetWorkspace;\n  var variables_before_creation = main_workspace.getAllVariables();\n  main_workspace.setResizesEnabled(false);\n  var new_block = null;\n  try {\n    new_block = this.placeNewBlock_(event, original_block);\n    // Close the flyout.\n    Blockly.hideChaff();\n  } finally {\n    Blockly.Events.enable();\n  }\n  var new_variables = Blockly.Variables.getAddedVariables(main_workspace, variables_before_creation);\n  if (Blockly.Events.isEnabled()) {\n    Blockly.Events.setGroup(true);\n\n    // Delete blocks of which we can only have a single instance. Dispose emits a BlockDelete\n    // event that respects the current Blockly.Events group, this is required to maintain\n    // a working undo/redo stack.\n    if (_constants_config__WEBPACK_IMPORTED_MODULE_0__.config.single_instance_blocks.includes(new_block.type)) {\n      main_workspace.getAllBlocks().forEach(function (ws_block) {\n        if (ws_block.type === new_block.type && ws_block.id !== new_block.id) {\n          ws_block.dispose();\n        }\n      });\n    }\n\n    // Fire a VarCreate event for each (if any) new variable created.\n    new_variables.forEach(function (new_variable) {\n      Blockly.Events.fire(new Blockly.Events.VarCreate(new_variable));\n    });\n    Blockly.Events.fire(new Blockly.Events.BlockCreate(new_block));\n  }\n  if (this.autoClose) {\n    this.hide();\n  }\n  var flyout = _dbot_store__WEBPACK_IMPORTED_MODULE_1__["default"].instance.flyout;\n  flyout.setIsSearchFlyout(false);\n  flyout.setVisibility(false);\n  new_block.isInFlyout = false;\n  return new_block;\n};\n\n/**\n * Copy a block from the flyout to the workspace and position it correctly.\n * @param {MouseEvent} event MouseEvent with coordinates to position block. DBot only.\n * @param {!Blockly.Block} old_block The flyout block to copy.\n * @return {!Blockly.Block} The new block in the main workspace.\n * @private\n */\nBlockly.Flyout.prototype.placeNewBlock_ = function (event) {\n  var old_block = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Blockly.getSelected();\n  var main_workspace = this.targetWorkspace;\n  var svg_root_old = old_block.getSvgRoot();\n  if (!svg_root_old) {\n    throw new Error(\'old_block is not rendered.\');\n  }\n\n  // Create the new block by cloning the block in the flyout (via XML).\n  var xml = Blockly.Xml.blockToDom(old_block, true);\n\n  // The target workspace would normally resize during domToBlock, which will\n  // lead to weird jumps.  Save it for terminateDrag.\n  main_workspace.setResizesEnabled(false);\n\n  // Using domToBlock instead of domToWorkspace means that the new block will be\n  // placed at position (0, 0) in main workspace units.\n  var block = Blockly.Xml.domToBlock(xml, main_workspace);\n  var svg_root_new = block.getSvgRoot();\n  if (!svg_root_new) {\n    throw new Error(\'block is not rendered.\');\n  }\n\n  // event may be null i.e. when originating from flyout add button.\n  if (event) {\n    // The offset in pixels between the main workspace\'s origin and the upper left corner of the injection div.\n    var main_offset_pixels = main_workspace.getOriginOffsetInPixels();\n\n    // The position of the old block in pixels relative to the flyout workspace\'s origin.\n    var x_offset = 25;\n    var y_offset = 160;\n    var old_block_pos_pixels = new goog.math.Coordinate(event.clientX ? event.clientX - x_offset : 0, event.clientY ? event.clientY - y_offset : 0);\n    // The position of the old block in pixels relative to the origin of the main workspace.\n    var final_offset_pixels = goog.math.Coordinate.difference(old_block_pos_pixels, main_offset_pixels);\n\n    // The position of the old block in main workspace coordinates.\n    var final_offset_main_ws = final_offset_pixels.scale(1 / main_workspace.scale);\n    block.moveBy(final_offset_main_ws.x, final_offset_main_ws.y);\n  }\n  return block;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vYm90LXNrZWxldG9uL3NyYy9zY3JhdGNoL2hvb2tzL2ZseW91dF9iYXNlLmpzIiwibWFwcGluZ3MiOiI7OztBQUFBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUlBO0FBQ0E7O0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlcml2L2JvdC13ZWItdWkvLi4vYm90LXNrZWxldG9uL3NyYy9zY3JhdGNoL2hvb2tzL2ZseW91dF9iYXNlLmpzPzdiNDkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29uZmlnIH0gZnJvbSAnLi4vLi4vY29uc3RhbnRzL2NvbmZpZyc7XG5pbXBvcnQgREJvdFN0b3JlIGZyb20gJy4uL2Rib3Qtc3RvcmUnO1xuXG4vKipcbiAqIENyZWF0ZSBhIGNvcHkgb2YgdGhpcyBibG9jayBvbiB0aGUgd29ya3NwYWNlLlxuICogQHBhcmFtIHshQmxvY2tseS5CbG9ja1N2Z30gb3JpZ2luYWxfYmxvY2sgVGhlIGJsb2NrIHRvIGNvcHkgZnJvbSB0aGUgZmx5b3V0LlxuICogQHJldHVybiB7QmxvY2tseS5CbG9ja1N2Z30gVGhlIG5ld2x5IGNyZWF0ZWQgYmxvY2ssIG9yIG51bGwgaWYgc29tZXRoaW5nXG4gKiAgICAgd2VudCB3cm9uZyB3aXRoIGRlc2VyaWFsaXphdGlvbi5cbiAqIEBwYWNrYWdlXG4gKi9cbkJsb2NrbHkuRmx5b3V0LnByb3RvdHlwZS5jcmVhdGVCbG9jayA9IGZ1bmN0aW9uIChldmVudCwgb3JpZ2luYWxfYmxvY2spIHtcbiAgICBCbG9ja2x5LkV2ZW50cy5kaXNhYmxlKCk7XG5cbiAgICBjb25zdCBtYWluX3dvcmtzcGFjZSA9IHRoaXMudGFyZ2V0V29ya3NwYWNlO1xuICAgIGNvbnN0IHZhcmlhYmxlc19iZWZvcmVfY3JlYXRpb24gPSBtYWluX3dvcmtzcGFjZS5nZXRBbGxWYXJpYWJsZXMoKTtcblxuICAgIG1haW5fd29ya3NwYWNlLnNldFJlc2l6ZXNFbmFibGVkKGZhbHNlKTtcblxuICAgIGxldCBuZXdfYmxvY2sgPSBudWxsO1xuXG4gICAgdHJ5IHtcbiAgICAgICAgbmV3X2Jsb2NrID0gdGhpcy5wbGFjZU5ld0Jsb2NrXyhldmVudCwgb3JpZ2luYWxfYmxvY2spO1xuICAgICAgICAvLyBDbG9zZSB0aGUgZmx5b3V0LlxuICAgICAgICBCbG9ja2x5LmhpZGVDaGFmZigpO1xuICAgIH0gZmluYWxseSB7XG4gICAgICAgIEJsb2NrbHkuRXZlbnRzLmVuYWJsZSgpO1xuICAgIH1cblxuICAgIGNvbnN0IG5ld192YXJpYWJsZXMgPSBCbG9ja2x5LlZhcmlhYmxlcy5nZXRBZGRlZFZhcmlhYmxlcyhtYWluX3dvcmtzcGFjZSwgdmFyaWFibGVzX2JlZm9yZV9jcmVhdGlvbik7XG5cbiAgICBpZiAoQmxvY2tseS5FdmVudHMuaXNFbmFibGVkKCkpIHtcbiAgICAgICAgQmxvY2tseS5FdmVudHMuc2V0R3JvdXAodHJ1ZSk7XG5cbiAgICAgICAgLy8gRGVsZXRlIGJsb2NrcyBvZiB3aGljaCB3ZSBjYW4gb25seSBoYXZlIGEgc2luZ2xlIGluc3RhbmNlLiBEaXNwb3NlIGVtaXRzIGEgQmxvY2tEZWxldGVcbiAgICAgICAgLy8gZXZlbnQgdGhhdCByZXNwZWN0cyB0aGUgY3VycmVudCBCbG9ja2x5LkV2ZW50cyBncm91cCwgdGhpcyBpcyByZXF1aXJlZCB0byBtYWludGFpblxuICAgICAgICAvLyBhIHdvcmtpbmcgdW5kby9yZWRvIHN0YWNrLlxuICAgICAgICBpZiAoY29uZmlnLnNpbmdsZV9pbnN0YW5jZV9ibG9ja3MuaW5jbHVkZXMobmV3X2Jsb2NrLnR5cGUpKSB7XG4gICAgICAgICAgICBtYWluX3dvcmtzcGFjZS5nZXRBbGxCbG9ja3MoKS5mb3JFYWNoKHdzX2Jsb2NrID0+IHtcbiAgICAgICAgICAgICAgICBpZiAod3NfYmxvY2sudHlwZSA9PT0gbmV3X2Jsb2NrLnR5cGUgJiYgd3NfYmxvY2suaWQgIT09IG5ld19ibG9jay5pZCkge1xuICAgICAgICAgICAgICAgICAgICB3c19ibG9jay5kaXNwb3NlKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBGaXJlIGEgVmFyQ3JlYXRlIGV2ZW50IGZvciBlYWNoIChpZiBhbnkpIG5ldyB2YXJpYWJsZSBjcmVhdGVkLlxuICAgICAgICBuZXdfdmFyaWFibGVzLmZvckVhY2gobmV3X3ZhcmlhYmxlID0+IHtcbiAgICAgICAgICAgIEJsb2NrbHkuRXZlbnRzLmZpcmUobmV3IEJsb2NrbHkuRXZlbnRzLlZhckNyZWF0ZShuZXdfdmFyaWFibGUpKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgQmxvY2tseS5FdmVudHMuZmlyZShuZXcgQmxvY2tseS5FdmVudHMuQmxvY2tDcmVhdGUobmV3X2Jsb2NrKSk7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuYXV0b0Nsb3NlKSB7XG4gICAgICAgIHRoaXMuaGlkZSgpO1xuICAgIH1cblxuICAgIGNvbnN0IHsgZmx5b3V0IH0gPSBEQm90U3RvcmUuaW5zdGFuY2U7XG4gICAgZmx5b3V0LnNldElzU2VhcmNoRmx5b3V0KGZhbHNlKTtcbiAgICBmbHlvdXQuc2V0VmlzaWJpbGl0eShmYWxzZSk7XG5cbiAgICBuZXdfYmxvY2suaXNJbkZseW91dCA9IGZhbHNlO1xuXG4gICAgcmV0dXJuIG5ld19ibG9jaztcbn07XG5cbi8qKlxuICogQ29weSBhIGJsb2NrIGZyb20gdGhlIGZseW91dCB0byB0aGUgd29ya3NwYWNlIGFuZCBwb3NpdGlvbiBpdCBjb3JyZWN0bHkuXG4gKiBAcGFyYW0ge01vdXNlRXZlbnR9IGV2ZW50IE1vdXNlRXZlbnQgd2l0aCBjb29yZGluYXRlcyB0byBwb3NpdGlvbiBibG9jay4gREJvdCBvbmx5LlxuICogQHBhcmFtIHshQmxvY2tseS5CbG9ja30gb2xkX2Jsb2NrIFRoZSBmbHlvdXQgYmxvY2sgdG8gY29weS5cbiAqIEByZXR1cm4geyFCbG9ja2x5LkJsb2NrfSBUaGUgbmV3IGJsb2NrIGluIHRoZSBtYWluIHdvcmtzcGFjZS5cbiAqIEBwcml2YXRlXG4gKi9cbkJsb2NrbHkuRmx5b3V0LnByb3RvdHlwZS5wbGFjZU5ld0Jsb2NrXyA9IGZ1bmN0aW9uIChldmVudCwgb2xkX2Jsb2NrID0gQmxvY2tseS5nZXRTZWxlY3RlZCgpKSB7XG4gICAgY29uc3QgbWFpbl93b3Jrc3BhY2UgPSB0aGlzLnRhcmdldFdvcmtzcGFjZTtcbiAgICBjb25zdCBzdmdfcm9vdF9vbGQgPSBvbGRfYmxvY2suZ2V0U3ZnUm9vdCgpO1xuXG4gICAgaWYgKCFzdmdfcm9vdF9vbGQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdvbGRfYmxvY2sgaXMgbm90IHJlbmRlcmVkLicpO1xuICAgIH1cblxuICAgIC8vIENyZWF0ZSB0aGUgbmV3IGJsb2NrIGJ5IGNsb25pbmcgdGhlIGJsb2NrIGluIHRoZSBmbHlvdXQgKHZpYSBYTUwpLlxuICAgIGNvbnN0IHhtbCA9IEJsb2NrbHkuWG1sLmJsb2NrVG9Eb20ob2xkX2Jsb2NrLCB0cnVlKTtcblxuICAgIC8vIFRoZSB0YXJnZXQgd29ya3NwYWNlIHdvdWxkIG5vcm1hbGx5IHJlc2l6ZSBkdXJpbmcgZG9tVG9CbG9jaywgd2hpY2ggd2lsbFxuICAgIC8vIGxlYWQgdG8gd2VpcmQganVtcHMuICBTYXZlIGl0IGZvciB0ZXJtaW5hdGVEcmFnLlxuICAgIG1haW5fd29ya3NwYWNlLnNldFJlc2l6ZXNFbmFibGVkKGZhbHNlKTtcblxuICAgIC8vIFVzaW5nIGRvbVRvQmxvY2sgaW5zdGVhZCBvZiBkb21Ub1dvcmtzcGFjZSBtZWFucyB0aGF0IHRoZSBuZXcgYmxvY2sgd2lsbCBiZVxuICAgIC8vIHBsYWNlZCBhdCBwb3NpdGlvbiAoMCwgMCkgaW4gbWFpbiB3b3Jrc3BhY2UgdW5pdHMuXG4gICAgY29uc3QgYmxvY2sgPSBCbG9ja2x5LlhtbC5kb21Ub0Jsb2NrKHhtbCwgbWFpbl93b3Jrc3BhY2UpO1xuICAgIGNvbnN0IHN2Z19yb290X25ldyA9IGJsb2NrLmdldFN2Z1Jvb3QoKTtcblxuICAgIGlmICghc3ZnX3Jvb3RfbmV3KSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignYmxvY2sgaXMgbm90IHJlbmRlcmVkLicpO1xuICAgIH1cblxuICAgIC8vIGV2ZW50IG1heSBiZSBudWxsIGkuZS4gd2hlbiBvcmlnaW5hdGluZyBmcm9tIGZseW91dCBhZGQgYnV0dG9uLlxuICAgIGlmIChldmVudCkge1xuICAgICAgICAvLyBUaGUgb2Zmc2V0IGluIHBpeGVscyBiZXR3ZWVuIHRoZSBtYWluIHdvcmtzcGFjZSdzIG9yaWdpbiBhbmQgdGhlIHVwcGVyIGxlZnQgY29ybmVyIG9mIHRoZSBpbmplY3Rpb24gZGl2LlxuICAgICAgICBjb25zdCBtYWluX29mZnNldF9waXhlbHMgPSBtYWluX3dvcmtzcGFjZS5nZXRPcmlnaW5PZmZzZXRJblBpeGVscygpO1xuXG4gICAgICAgIC8vIFRoZSBwb3NpdGlvbiBvZiB0aGUgb2xkIGJsb2NrIGluIHBpeGVscyByZWxhdGl2ZSB0byB0aGUgZmx5b3V0IHdvcmtzcGFjZSdzIG9yaWdpbi5cbiAgICAgICAgY29uc3QgeF9vZmZzZXQgPSAyNTtcbiAgICAgICAgY29uc3QgeV9vZmZzZXQgPSAxNjA7XG4gICAgICAgIGNvbnN0IG9sZF9ibG9ja19wb3NfcGl4ZWxzID0gbmV3IGdvb2cubWF0aC5Db29yZGluYXRlKFxuICAgICAgICAgICAgZXZlbnQuY2xpZW50WCA/IGV2ZW50LmNsaWVudFggLSB4X29mZnNldCA6IDAsXG4gICAgICAgICAgICBldmVudC5jbGllbnRZID8gZXZlbnQuY2xpZW50WSAtIHlfb2Zmc2V0IDogMFxuICAgICAgICApO1xuICAgICAgICAvLyBUaGUgcG9zaXRpb24gb2YgdGhlIG9sZCBibG9jayBpbiBwaXhlbHMgcmVsYXRpdmUgdG8gdGhlIG9yaWdpbiBvZiB0aGUgbWFpbiB3b3Jrc3BhY2UuXG4gICAgICAgIGNvbnN0IGZpbmFsX29mZnNldF9waXhlbHMgPSBnb29nLm1hdGguQ29vcmRpbmF0ZS5kaWZmZXJlbmNlKG9sZF9ibG9ja19wb3NfcGl4ZWxzLCBtYWluX29mZnNldF9waXhlbHMpO1xuXG4gICAgICAgIC8vIFRoZSBwb3NpdGlvbiBvZiB0aGUgb2xkIGJsb2NrIGluIG1haW4gd29ya3NwYWNlIGNvb3JkaW5hdGVzLlxuICAgICAgICBjb25zdCBmaW5hbF9vZmZzZXRfbWFpbl93cyA9IGZpbmFsX29mZnNldF9waXhlbHMuc2NhbGUoMSAvIG1haW5fd29ya3NwYWNlLnNjYWxlKTtcblxuICAgICAgICBibG9jay5tb3ZlQnkoZmluYWxfb2Zmc2V0X21haW5fd3MueCwgZmluYWxfb2Zmc2V0X21haW5fd3MueSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGJsb2NrO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../bot-skeleton/src/scratch/hooks/flyout_base.js\n'
                );

                /***/
            },

        /***/ '../bot-skeleton/src/scratch/hooks/gesture.js':
            /*!****************************************************!*\
  !*** ../bot-skeleton/src/scratch/hooks/gesture.js ***!
  \****************************************************/
            /***/ () => {
                eval(
                    '/**\n * Update this gesture to record whether a block is being dragged from the\n * flyout. This function should be called on a mouse/touch move event the first time the\n * drag radius is exceeded.  It should be called no more than once per gesture.\n * If a block should be dragged from the flyout this function creates the new\n * block on the main workspace and updates targetBlock_ and startWorkspace_.\n * @return {boolean} True if a block is being dragged from the flyout.\n * @private\n */\nBlockly.Gesture.prototype.updateIsDraggingFromFlyout = function () {\n  // Disabled blocks may not be dragged from the flyout.\n  if (this.targetBlock.disabled) {\n    return false;\n  }\n  if (!this.flyout.isScrollable() || this.flyout.isDragTowardWorkspace(this.currentDragDeltaXY)) {\n    this.startWorkspace_ = this.flyout.targetWorkspace;\n    this.startWorkspace_.updateScreenCalculationsIfScrolled();\n\n    // Start the event group now, so that the same event group is used for block\n    // creation and block dragging.\n    if (!Blockly.Events.getGroup()) {\n      Blockly.Events.setGroup(true);\n    }\n\n    // This is done because when this flag is set to true inside Blockly,\n    // the handleMove function is called, which also triggers handleTouchMove\n    // if the flag is false. This method wont be called everything will be handled in handleMove.\n    var is_mobile = window.innerWidth < 768;\n    if (is_mobile) this.isMultiTouch_ = false;\n\n    // The start block is no longer relevant, because this is a drag.\n    this.startBlock.workspace.clearGesture();\n    this.startBlock = null;\n    this.targetBlock = this.flyout.createBlock(this.mostRecentEvent, this.targetBlock);\n    this.targetBlock.select();\n    return true;\n  }\n  return false;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vYm90LXNrZWxldG9uL3NyYy9zY3JhdGNoL2hvb2tzL2dlc3R1cmUuanMiLCJuYW1lcyI6WyJCbG9ja2x5IiwiR2VzdHVyZSIsInByb3RvdHlwZSIsInVwZGF0ZUlzRHJhZ2dpbmdGcm9tRmx5b3V0IiwidGFyZ2V0QmxvY2siLCJkaXNhYmxlZCIsImZseW91dCIsImlzU2Nyb2xsYWJsZSIsImlzRHJhZ1Rvd2FyZFdvcmtzcGFjZSIsImN1cnJlbnREcmFnRGVsdGFYWSIsInN0YXJ0V29ya3NwYWNlXyIsInRhcmdldFdvcmtzcGFjZSIsInVwZGF0ZVNjcmVlbkNhbGN1bGF0aW9uc0lmU2Nyb2xsZWQiLCJFdmVudHMiLCJnZXRHcm91cCIsInNldEdyb3VwIiwiaXNfbW9iaWxlIiwid2luZG93IiwiaW5uZXJXaWR0aCIsImlzTXVsdGlUb3VjaF8iLCJzdGFydEJsb2NrIiwid29ya3NwYWNlIiwiY2xlYXJHZXN0dXJlIiwiY3JlYXRlQmxvY2siLCJtb3N0UmVjZW50RXZlbnQiLCJzZWxlY3QiXSwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi9ib3Qtd2ViLXVpLy4uL2JvdC1za2VsZXRvbi9zcmMvc2NyYXRjaC9ob29rcy9nZXN0dXJlLmpzPzA0YmEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBVcGRhdGUgdGhpcyBnZXN0dXJlIHRvIHJlY29yZCB3aGV0aGVyIGEgYmxvY2sgaXMgYmVpbmcgZHJhZ2dlZCBmcm9tIHRoZVxuICogZmx5b3V0LiBUaGlzIGZ1bmN0aW9uIHNob3VsZCBiZSBjYWxsZWQgb24gYSBtb3VzZS90b3VjaCBtb3ZlIGV2ZW50IHRoZSBmaXJzdCB0aW1lIHRoZVxuICogZHJhZyByYWRpdXMgaXMgZXhjZWVkZWQuICBJdCBzaG91bGQgYmUgY2FsbGVkIG5vIG1vcmUgdGhhbiBvbmNlIHBlciBnZXN0dXJlLlxuICogSWYgYSBibG9jayBzaG91bGQgYmUgZHJhZ2dlZCBmcm9tIHRoZSBmbHlvdXQgdGhpcyBmdW5jdGlvbiBjcmVhdGVzIHRoZSBuZXdcbiAqIGJsb2NrIG9uIHRoZSBtYWluIHdvcmtzcGFjZSBhbmQgdXBkYXRlcyB0YXJnZXRCbG9ja18gYW5kIHN0YXJ0V29ya3NwYWNlXy5cbiAqIEByZXR1cm4ge2Jvb2xlYW59IFRydWUgaWYgYSBibG9jayBpcyBiZWluZyBkcmFnZ2VkIGZyb20gdGhlIGZseW91dC5cbiAqIEBwcml2YXRlXG4gKi9cbkJsb2NrbHkuR2VzdHVyZS5wcm90b3R5cGUudXBkYXRlSXNEcmFnZ2luZ0Zyb21GbHlvdXQgPSBmdW5jdGlvbiAoKSB7XG4gICAgLy8gRGlzYWJsZWQgYmxvY2tzIG1heSBub3QgYmUgZHJhZ2dlZCBmcm9tIHRoZSBmbHlvdXQuXG4gICAgaWYgKHRoaXMudGFyZ2V0QmxvY2suZGlzYWJsZWQpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIGlmICghdGhpcy5mbHlvdXQuaXNTY3JvbGxhYmxlKCkgfHwgdGhpcy5mbHlvdXQuaXNEcmFnVG93YXJkV29ya3NwYWNlKHRoaXMuY3VycmVudERyYWdEZWx0YVhZKSkge1xuICAgICAgICB0aGlzLnN0YXJ0V29ya3NwYWNlXyA9IHRoaXMuZmx5b3V0LnRhcmdldFdvcmtzcGFjZTtcbiAgICAgICAgdGhpcy5zdGFydFdvcmtzcGFjZV8udXBkYXRlU2NyZWVuQ2FsY3VsYXRpb25zSWZTY3JvbGxlZCgpO1xuXG4gICAgICAgIC8vIFN0YXJ0IHRoZSBldmVudCBncm91cCBub3csIHNvIHRoYXQgdGhlIHNhbWUgZXZlbnQgZ3JvdXAgaXMgdXNlZCBmb3IgYmxvY2tcbiAgICAgICAgLy8gY3JlYXRpb24gYW5kIGJsb2NrIGRyYWdnaW5nLlxuICAgICAgICBpZiAoIUJsb2NrbHkuRXZlbnRzLmdldEdyb3VwKCkpIHtcbiAgICAgICAgICAgIEJsb2NrbHkuRXZlbnRzLnNldEdyb3VwKHRydWUpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gVGhpcyBpcyBkb25lIGJlY2F1c2Ugd2hlbiB0aGlzIGZsYWcgaXMgc2V0IHRvIHRydWUgaW5zaWRlIEJsb2NrbHksXG4gICAgICAgIC8vIHRoZSBoYW5kbGVNb3ZlIGZ1bmN0aW9uIGlzIGNhbGxlZCwgd2hpY2ggYWxzbyB0cmlnZ2VycyBoYW5kbGVUb3VjaE1vdmVcbiAgICAgICAgLy8gaWYgdGhlIGZsYWcgaXMgZmFsc2UuIFRoaXMgbWV0aG9kIHdvbnQgYmUgY2FsbGVkIGV2ZXJ5dGhpbmcgd2lsbCBiZSBoYW5kbGVkIGluIGhhbmRsZU1vdmUuXG4gICAgICAgIGNvbnN0IGlzX21vYmlsZSA9IHdpbmRvdy5pbm5lcldpZHRoIDwgNzY4O1xuICAgICAgICBpZiAoaXNfbW9iaWxlKSB0aGlzLmlzTXVsdGlUb3VjaF8gPSBmYWxzZTtcblxuICAgICAgICAvLyBUaGUgc3RhcnQgYmxvY2sgaXMgbm8gbG9uZ2VyIHJlbGV2YW50LCBiZWNhdXNlIHRoaXMgaXMgYSBkcmFnLlxuICAgICAgICB0aGlzLnN0YXJ0QmxvY2sud29ya3NwYWNlLmNsZWFyR2VzdHVyZSgpO1xuICAgICAgICB0aGlzLnN0YXJ0QmxvY2sgPSBudWxsO1xuICAgICAgICB0aGlzLnRhcmdldEJsb2NrID0gdGhpcy5mbHlvdXQuY3JlYXRlQmxvY2sodGhpcy5tb3N0UmVjZW50RXZlbnQsIHRoaXMudGFyZ2V0QmxvY2spO1xuICAgICAgICB0aGlzLnRhcmdldEJsb2NrLnNlbGVjdCgpO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0FBLE9BQU8sQ0FBQ0MsT0FBTyxDQUFDQyxTQUFTLENBQUNDLDBCQUEwQixHQUFHLFlBQVk7RUFDL0Q7RUFDQSxJQUFJLElBQUksQ0FBQ0MsV0FBVyxDQUFDQyxRQUFRLEVBQUU7SUFDM0IsT0FBTyxLQUFLO0VBQ2hCO0VBRUEsSUFBSSxDQUFDLElBQUksQ0FBQ0MsTUFBTSxDQUFDQyxZQUFZLENBQUMsQ0FBQyxJQUFJLElBQUksQ0FBQ0QsTUFBTSxDQUFDRSxxQkFBcUIsQ0FBQyxJQUFJLENBQUNDLGtCQUFrQixDQUFDLEVBQUU7SUFDM0YsSUFBSSxDQUFDQyxlQUFlLEdBQUcsSUFBSSxDQUFDSixNQUFNLENBQUNLLGVBQWU7SUFDbEQsSUFBSSxDQUFDRCxlQUFlLENBQUNFLGtDQUFrQyxDQUFDLENBQUM7O0lBRXpEO0lBQ0E7SUFDQSxJQUFJLENBQUNaLE9BQU8sQ0FBQ2EsTUFBTSxDQUFDQyxRQUFRLENBQUMsQ0FBQyxFQUFFO01BQzVCZCxPQUFPLENBQUNhLE1BQU0sQ0FBQ0UsUUFBUSxDQUFDLElBQUksQ0FBQztJQUNqQzs7SUFFQTtJQUNBO0lBQ0E7SUFDQSxJQUFNQyxTQUFTLEdBQUdDLE1BQU0sQ0FBQ0MsVUFBVSxHQUFHLEdBQUc7SUFDekMsSUFBSUYsU0FBUyxFQUFFLElBQUksQ0FBQ0csYUFBYSxHQUFHLEtBQUs7O0lBRXpDO0lBQ0EsSUFBSSxDQUFDQyxVQUFVLENBQUNDLFNBQVMsQ0FBQ0MsWUFBWSxDQUFDLENBQUM7SUFDeEMsSUFBSSxDQUFDRixVQUFVLEdBQUcsSUFBSTtJQUN0QixJQUFJLENBQUNoQixXQUFXLEdBQUcsSUFBSSxDQUFDRSxNQUFNLENBQUNpQixXQUFXLENBQUMsSUFBSSxDQUFDQyxlQUFlLEVBQUUsSUFBSSxDQUFDcEIsV0FBVyxDQUFDO0lBQ2xGLElBQUksQ0FBQ0EsV0FBVyxDQUFDcUIsTUFBTSxDQUFDLENBQUM7SUFDekIsT0FBTyxJQUFJO0VBQ2Y7RUFDQSxPQUFPLEtBQUs7QUFDaEIsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==\n//# sourceURL=webpack-internal:///../bot-skeleton/src/scratch/hooks/gesture.js\n'
                );

                /***/
            },

        /***/ '../bot-skeleton/src/scratch/hooks/icon.js':
            /*!*************************************************!*\
  !*** ../bot-skeleton/src/scratch/hooks/icon.js ***!
  \*************************************************/
            /***/ () => {
                eval(
                    "/**\n * Render the icon.\n * @param {number} cursorX Horizontal offset at which to position the icon.\n * @return {number} Horizontal offset for next item to draw.\n */\n\nBlockly.Icon = new Blockly.icons.Icon();\nBlockly.Icon.renderIcon = function (cursorX) {\n  if (this.collapseHidden && this.block_.isCollapsed()) {\n    this.iconGroup_.setAttribute('display', 'none');\n    return cursorX;\n  }\n  this.iconGroup_.setAttribute('display', 'block');\n  var newCursorX = cursorX;\n  var TOP_MARGIN = 9;\n  var width = this.SIZE;\n  if (this.block_.RTL) {\n    newCursorX -= width;\n  }\n  this.iconGroup_.setAttribute('transform', \"localize(\".concat(newCursorX, \",\").concat(TOP_MARGIN, \")\"));\n  this.computeIconLocation();\n  if (this.block_.RTL) {\n    newCursorX -= Blockly.BlockSvg.SEP_SPACE_X;\n  } else {\n    newCursorX += width + Blockly.BlockSvg.SEP_SPACE_X;\n  }\n  return newCursorX;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vYm90LXNrZWxldG9uL3NyYy9zY3JhdGNoL2hvb2tzL2ljb24uanMiLCJuYW1lcyI6WyJCbG9ja2x5IiwiSWNvbiIsImljb25zIiwicmVuZGVySWNvbiIsImN1cnNvclgiLCJjb2xsYXBzZUhpZGRlbiIsImJsb2NrXyIsImlzQ29sbGFwc2VkIiwiaWNvbkdyb3VwXyIsInNldEF0dHJpYnV0ZSIsIm5ld0N1cnNvclgiLCJUT1BfTUFSR0lOIiwid2lkdGgiLCJTSVpFIiwiUlRMIiwiY29uY2F0IiwiY29tcHV0ZUljb25Mb2NhdGlvbiIsIkJsb2NrU3ZnIiwiU0VQX1NQQUNFX1giXSwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi9ib3Qtd2ViLXVpLy4uL2JvdC1za2VsZXRvbi9zcmMvc2NyYXRjaC9ob29rcy9pY29uLmpzPzljNmMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBSZW5kZXIgdGhlIGljb24uXG4gKiBAcGFyYW0ge251bWJlcn0gY3Vyc29yWCBIb3Jpem9udGFsIG9mZnNldCBhdCB3aGljaCB0byBwb3NpdGlvbiB0aGUgaWNvbi5cbiAqIEByZXR1cm4ge251bWJlcn0gSG9yaXpvbnRhbCBvZmZzZXQgZm9yIG5leHQgaXRlbSB0byBkcmF3LlxuICovXG5cbkJsb2NrbHkuSWNvbiA9IG5ldyBCbG9ja2x5Lmljb25zLkljb24oKTtcblxuQmxvY2tseS5JY29uLnJlbmRlckljb24gPSBmdW5jdGlvbiAoY3Vyc29yWCkge1xuICAgIGlmICh0aGlzLmNvbGxhcHNlSGlkZGVuICYmIHRoaXMuYmxvY2tfLmlzQ29sbGFwc2VkKCkpIHtcbiAgICAgICAgdGhpcy5pY29uR3JvdXBfLnNldEF0dHJpYnV0ZSgnZGlzcGxheScsICdub25lJyk7XG4gICAgICAgIHJldHVybiBjdXJzb3JYO1xuICAgIH1cbiAgICB0aGlzLmljb25Hcm91cF8uc2V0QXR0cmlidXRlKCdkaXNwbGF5JywgJ2Jsb2NrJyk7XG5cbiAgICBsZXQgbmV3Q3Vyc29yWCA9IGN1cnNvclg7XG5cbiAgICBjb25zdCBUT1BfTUFSR0lOID0gOTtcbiAgICBjb25zdCB3aWR0aCA9IHRoaXMuU0laRTtcblxuICAgIGlmICh0aGlzLmJsb2NrXy5SVEwpIHtcbiAgICAgICAgbmV3Q3Vyc29yWCAtPSB3aWR0aDtcbiAgICB9XG5cbiAgICB0aGlzLmljb25Hcm91cF8uc2V0QXR0cmlidXRlKCd0cmFuc2Zvcm0nLCBgbG9jYWxpemUoJHtuZXdDdXJzb3JYfSwke1RPUF9NQVJHSU59KWApO1xuICAgIHRoaXMuY29tcHV0ZUljb25Mb2NhdGlvbigpO1xuXG4gICAgaWYgKHRoaXMuYmxvY2tfLlJUTCkge1xuICAgICAgICBuZXdDdXJzb3JYIC09IEJsb2NrbHkuQmxvY2tTdmcuU0VQX1NQQUNFX1g7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgbmV3Q3Vyc29yWCArPSB3aWR0aCArIEJsb2NrbHkuQmxvY2tTdmcuU0VQX1NQQUNFX1g7XG4gICAgfVxuXG4gICAgcmV0dXJuIG5ld0N1cnNvclg7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBQSxPQUFPLENBQUNDLElBQUksR0FBRyxJQUFJRCxPQUFPLENBQUNFLEtBQUssQ0FBQ0QsSUFBSSxDQUFDLENBQUM7QUFFdkNELE9BQU8sQ0FBQ0MsSUFBSSxDQUFDRSxVQUFVLEdBQUcsVUFBVUMsT0FBTyxFQUFFO0VBQ3pDLElBQUksSUFBSSxDQUFDQyxjQUFjLElBQUksSUFBSSxDQUFDQyxNQUFNLENBQUNDLFdBQVcsQ0FBQyxDQUFDLEVBQUU7SUFDbEQsSUFBSSxDQUFDQyxVQUFVLENBQUNDLFlBQVksQ0FBQyxTQUFTLEVBQUUsTUFBTSxDQUFDO0lBQy9DLE9BQU9MLE9BQU87RUFDbEI7RUFDQSxJQUFJLENBQUNJLFVBQVUsQ0FBQ0MsWUFBWSxDQUFDLFNBQVMsRUFBRSxPQUFPLENBQUM7RUFFaEQsSUFBSUMsVUFBVSxHQUFHTixPQUFPO0VBRXhCLElBQU1PLFVBQVUsR0FBRyxDQUFDO0VBQ3BCLElBQU1DLEtBQUssR0FBRyxJQUFJLENBQUNDLElBQUk7RUFFdkIsSUFBSSxJQUFJLENBQUNQLE1BQU0sQ0FBQ1EsR0FBRyxFQUFFO0lBQ2pCSixVQUFVLElBQUlFLEtBQUs7RUFDdkI7RUFFQSxJQUFJLENBQUNKLFVBQVUsQ0FBQ0MsWUFBWSxDQUFDLFdBQVcsY0FBQU0sTUFBQSxDQUFjTCxVQUFVLE9BQUFLLE1BQUEsQ0FBSUosVUFBVSxNQUFHLENBQUM7RUFDbEYsSUFBSSxDQUFDSyxtQkFBbUIsQ0FBQyxDQUFDO0VBRTFCLElBQUksSUFBSSxDQUFDVixNQUFNLENBQUNRLEdBQUcsRUFBRTtJQUNqQkosVUFBVSxJQUFJVixPQUFPLENBQUNpQixRQUFRLENBQUNDLFdBQVc7RUFDOUMsQ0FBQyxNQUFNO0lBQ0hSLFVBQVUsSUFBSUUsS0FBSyxHQUFHWixPQUFPLENBQUNpQixRQUFRLENBQUNDLFdBQVc7RUFDdEQ7RUFFQSxPQUFPUixVQUFVO0FBQ3JCLENBQUMiLCJpZ25vcmVMaXN0IjpbXX0=\n//# sourceURL=webpack-internal:///../bot-skeleton/src/scratch/hooks/icon.js\n"
                );

                /***/
            },

        /***/ '../bot-skeleton/src/scratch/hooks/index.js':
            /*!**************************************************!*\
  !*** ../bot-skeleton/src/scratch/hooks/index.js ***!
  \**************************************************/
            /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    '__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _block__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./block */ "../bot-skeleton/src/scratch/hooks/block.js");\n/* harmony import */ var _block_svg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./block_svg */ "../bot-skeleton/src/scratch/hooks/block_svg.js");\n/* harmony import */ var _colours__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./colours */ "../bot-skeleton/src/scratch/hooks/colours.js");\n/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./constant */ "../bot-skeleton/src/scratch/hooks/constant.js");\n/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_constant__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _data_category__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./data_category */ "../bot-skeleton/src/scratch/hooks/data_category.js");\n/* harmony import */ var _field__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./field */ "../bot-skeleton/src/scratch/hooks/field.js");\n/* harmony import */ var _flyout_base__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./flyout_base */ "../bot-skeleton/src/scratch/hooks/flyout_base.js");\n/* harmony import */ var _gesture__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./gesture */ "../bot-skeleton/src/scratch/hooks/gesture.js");\n/* harmony import */ var _gesture__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_gesture__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var _icon__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./icon */ "../bot-skeleton/src/scratch/hooks/icon.js");\n/* harmony import */ var _icon__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_icon__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var _procedures__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./procedures */ "../bot-skeleton/src/scratch/hooks/procedures.js");\n/* harmony import */ var _trashcan__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./trashcan */ "../bot-skeleton/src/scratch/hooks/trashcan.js");\n/* harmony import */ var _trashcan__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_trashcan__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var _workspace__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./workspace */ "../bot-skeleton/src/scratch/hooks/workspace.js");\n/* harmony import */ var _workspace_svg__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./workspace_svg */ "../bot-skeleton/src/scratch/hooks/workspace_svg.js");\n/* harmony import */ var _scratch_block_comment__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./scratch_block_comment */ "../bot-skeleton/src/scratch/hooks/scratch_block_comment.js");\n/* harmony import */ var _scratch_block_comment__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(_scratch_block_comment__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var _tooltip__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./tooltip */ "../bot-skeleton/src/scratch/hooks/tooltip.js");\n/* harmony import */ var _variable__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./variable */ "../bot-skeleton/src/scratch/hooks/variable.js");\n/* harmony import */ var _variable__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(_variable__WEBPACK_IMPORTED_MODULE_15__);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vYm90LXNrZWxldG9uL3NyYy9zY3JhdGNoL2hvb2tzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlcml2L2JvdC13ZWItdWkvLi4vYm90LXNrZWxldG9uL3NyYy9zY3JhdGNoL2hvb2tzL2luZGV4LmpzPzU1MjEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICcuL2Jsb2NrJztcbmltcG9ydCAnLi9ibG9ja19zdmcnO1xuaW1wb3J0ICcuL2NvbG91cnMnO1xuaW1wb3J0ICcuL2NvbnN0YW50JztcbmltcG9ydCAnLi9kYXRhX2NhdGVnb3J5JztcbmltcG9ydCAnLi9maWVsZCc7XG5pbXBvcnQgJy4vZmx5b3V0X2Jhc2UnO1xuaW1wb3J0ICcuL2dlc3R1cmUnO1xuaW1wb3J0ICcuL2ljb24nO1xuaW1wb3J0ICcuL3Byb2NlZHVyZXMnO1xuaW1wb3J0ICcuL3RyYXNoY2FuJztcbmltcG9ydCAnLi93b3Jrc3BhY2UnO1xuaW1wb3J0ICcuL3dvcmtzcGFjZV9zdmcnO1xuaW1wb3J0ICcuL3NjcmF0Y2hfYmxvY2tfY29tbWVudCc7XG5pbXBvcnQgJy4vdG9vbHRpcCc7XG5pbXBvcnQgJy4vdmFyaWFibGUnO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../bot-skeleton/src/scratch/hooks/index.js\n'
                );

                /***/
            },

        /***/ '../bot-skeleton/src/scratch/hooks/procedures.js':
            /*!*******************************************************!*\
  !*** ../bot-skeleton/src/scratch/hooks/procedures.js ***!
  \*******************************************************/
            /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    "__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _deriv_translations__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @deriv/translations */ \"@deriv/translations\");\n/* harmony import */ var _deriv_translations__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_deriv_translations__WEBPACK_IMPORTED_MODULE_0__);\n\n\n/**\n * Construct the blocks required by the flyout for the procedure category.\n * @param {!Blockly.Workspace} workspace The workspace containing procedures.\n * @return {!Array.<!Element>} Array of XML block elements.\n */\n\nBlockly.Procedures.flyoutCategory = function (workspace) {\n  var xmlList = [];\n  if (Blockly.Blocks.procedures_defnoreturn) {\n    // <block type=\"procedures_defnoreturn\" gap=\"16\">\n    //     <field name=\"NAME\">do something</field>\n    // </block>\n    var block = document.createElement('block');\n    block.setAttribute('type', 'procedures_defnoreturn');\n    block.setAttribute('gap', 16);\n\n    // TEMP\n    var nameField = document.createElement('field');\n    nameField.setAttribute('name', 'NAME');\n    nameField.appendChild(document.createTextNode((0,_deriv_translations__WEBPACK_IMPORTED_MODULE_0__.localize)('do something')));\n    block.appendChild(nameField);\n    xmlList.push(block);\n  }\n  if (Blockly.Blocks.procedures_defreturn) {\n    // <block type=\"procedures_defreturn\" gap=\"16\">\n    //     <field name=\"NAME\">do something</field>\n    // </block>\n    var _block = document.createElement('block');\n    _block.setAttribute('type', 'procedures_defreturn');\n    _block.setAttribute('gap', 16);\n    var _nameField = document.createElement('field');\n    _nameField.setAttribute('name', 'NAME');\n    _nameField.appendChild(document.createTextNode((0,_deriv_translations__WEBPACK_IMPORTED_MODULE_0__.localize)('do something')));\n    _block.appendChild(_nameField);\n    xmlList.push(_block);\n  }\n  if (Blockly.Blocks.procedures_ifreturn) {\n    // <block type=\"procedures_ifreturn\" gap=\"16\"></block>\n    var _block2 = document.createElement('block');\n    _block2.setAttribute('type', 'procedures_ifreturn');\n    _block2.setAttribute('gap', 16);\n    xmlList.push(_block2);\n  }\n  if (xmlList.length) {\n    // Add slightly larger gap between system blocks and user calls.\n    xmlList[xmlList.length - 1].setAttribute('gap', 24);\n  }\n  var tuple = Blockly.Procedures.allProcedures(workspace);\n  xmlList = xmlList.concat(Blockly.Procedures.populateDynamicProcedures(tuple));\n  return xmlList;\n};\nBlockly.Procedures.populateDynamicProcedures = function (tuple) {\n  var xmlList = [];\n  var populateProcedures = function populateProcedures(procedureList, templateName) {\n    var xml = [];\n    if (!procedureList) {\n      return xml;\n    }\n    var _loop = function _loop() {\n      var name = procedureList[i][0];\n      var args = procedureList[i][1];\n\n      // <block type=\"procedures_callnoreturn\" gap=\"16\">\n      //   <mutation name=\"do something\">\n      //     <arg name=\"x\"></arg>\n      //   </mutation>\n      // </block>\n      var block = document.createElement('block');\n      block.setAttribute('type', templateName);\n      block.setAttribute('gap', 16);\n      var mutation = document.createElement('mutation');\n      mutation.setAttribute('name', name);\n      block.appendChild(mutation);\n      args.forEach(function (argumentName) {\n        var arg = document.createElement('arg');\n        arg.setAttribute('name', argumentName);\n        mutation.appendChild(arg);\n      });\n      xml.push(block);\n    };\n    for (var i = 0; i < procedureList.length; i++) {\n      _loop();\n    }\n    return xml;\n  };\n  xmlList = xmlList.concat(populateProcedures(tuple[0], 'procedures_callnoreturn'));\n  xmlList = xmlList.concat(populateProcedures(tuple[1], 'procedures_callreturn'));\n  return xmlList;\n};\n\n/**\n * Find the definition block for the named procedure.\n * @param {string} name Name of procedure.\n * @param {!Blockly.Workspace} workspace The workspace to search.\n * @return {Blockly.Block} The procedure definition block, or null not found.\n */\nBlockly.Procedures.getDefinition = function (name, workspace) {\n  // Assume that a procedure definition is a top block.\n  var blocks = workspace.getTopBlocks(false);\n  for (var i = 0; i < blocks.length; i++) {\n    if (blocks[i].getProcedureDef) {\n      var tuple = blocks[i].getProcedureDef();\n      if (tuple && Blockly.Names.equals(tuple[0], name)) {\n        return blocks[i];\n      }\n    }\n  }\n  return null;\n};\n\n// Scratch has a broken version where they return `false` if Blockly.Names.equals(procName[0], name).\n// https://github.com/LLK/scratch-blocks/pull/1930\nBlockly.Procedures.isNameUsed = function (name, workspace, optExclude) {\n  var blocks = workspace.getAllBlocks(false);\n  // Iterate through every block and check the name.\n  return blocks.some(function (block) {\n    if (block !== optExclude && block.getProcedureDef) {\n      var procName = block.getProcedureDef();\n      return Blockly.Names.equals(procName[0], name);\n    }\n    return false;\n  });\n};\n\n/**\n * Move the workspace based on the most recent mouse movements.\n * @param {!goog.math.Coordinate} currentDragDeltaXY How far the pointer has\n *     moved from the position at the start of the drag, in pixel coordinates.\n * @package\n *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../bot-skeleton/src/scratch/hooks/procedures.js\n"
                );

                /***/
            },

        /***/ '../bot-skeleton/src/scratch/hooks/scratch_block_comment.js':
            /*!******************************************************************!*\
  !*** ../bot-skeleton/src/scratch/hooks/scratch_block_comment.js ***!
  \******************************************************************/
            /***/ () => {
                eval(
                    '/**\n * Change the colour of the associated bubble to match its block.\n * deriv-bot: Use primary colour instead of tertiary. At time of writing\n * we use colour too similar to workspace background colour for tertiary (borders).\n * @package\n */\nBlockly.WorkspaceComment.prototype.updateColour = function () {\n  if (this.isVisible()) {\n    this.bubble_.setColour(this.block_.getColour());\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vYm90LXNrZWxldG9uL3NyYy9zY3JhdGNoL2hvb2tzL3NjcmF0Y2hfYmxvY2tfY29tbWVudC5qcyIsIm5hbWVzIjpbIkJsb2NrbHkiLCJXb3Jrc3BhY2VDb21tZW50IiwicHJvdG90eXBlIiwidXBkYXRlQ29sb3VyIiwiaXNWaXNpYmxlIiwiYnViYmxlXyIsInNldENvbG91ciIsImJsb2NrXyIsImdldENvbG91ciJdLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlcml2L2JvdC13ZWItdWkvLi4vYm90LXNrZWxldG9uL3NyYy9zY3JhdGNoL2hvb2tzL3NjcmF0Y2hfYmxvY2tfY29tbWVudC5qcz9mYTA1Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ2hhbmdlIHRoZSBjb2xvdXIgb2YgdGhlIGFzc29jaWF0ZWQgYnViYmxlIHRvIG1hdGNoIGl0cyBibG9jay5cbiAqIGRlcml2LWJvdDogVXNlIHByaW1hcnkgY29sb3VyIGluc3RlYWQgb2YgdGVydGlhcnkuIEF0IHRpbWUgb2Ygd3JpdGluZ1xuICogd2UgdXNlIGNvbG91ciB0b28gc2ltaWxhciB0byB3b3Jrc3BhY2UgYmFja2dyb3VuZCBjb2xvdXIgZm9yIHRlcnRpYXJ5IChib3JkZXJzKS5cbiAqIEBwYWNrYWdlXG4gKi9cbkJsb2NrbHkuV29ya3NwYWNlQ29tbWVudC5wcm90b3R5cGUudXBkYXRlQ29sb3VyID0gZnVuY3Rpb24gKCkge1xuICAgIGlmICh0aGlzLmlzVmlzaWJsZSgpKSB7XG4gICAgICAgIHRoaXMuYnViYmxlXy5zZXRDb2xvdXIodGhpcy5ibG9ja18uZ2V0Q29sb3VyKCkpO1xuICAgIH1cbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBQSxPQUFPLENBQUNDLGdCQUFnQixDQUFDQyxTQUFTLENBQUNDLFlBQVksR0FBRyxZQUFZO0VBQzFELElBQUksSUFBSSxDQUFDQyxTQUFTLENBQUMsQ0FBQyxFQUFFO0lBQ2xCLElBQUksQ0FBQ0MsT0FBTyxDQUFDQyxTQUFTLENBQUMsSUFBSSxDQUFDQyxNQUFNLENBQUNDLFNBQVMsQ0FBQyxDQUFDLENBQUM7RUFDbkQ7QUFDSixDQUFDIiwiaWdub3JlTGlzdCI6W119\n//# sourceURL=webpack-internal:///../bot-skeleton/src/scratch/hooks/scratch_block_comment.js\n'
                );

                /***/
            },

        /***/ '../bot-skeleton/src/scratch/hooks/tooltip.js':
            /*!****************************************************!*\
  !*** ../bot-skeleton/src/scratch/hooks/tooltip.js ***!
  \****************************************************/
            /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    "__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _blocks_images__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../blocks/images */ \"../bot-skeleton/src/scratch/blocks/images.js\");\n\nBlockly.Tooltip.HOVER_MS = 50;\nBlockly.Tooltip.show_ = function () {\n  var params;\n  Blockly.Tooltip.DIV = (Blockly.Tooltip.poisonedElement_ = Blockly.Tooltip.element_, Blockly.Tooltip.DIV);\n  if (!Blockly.Tooltip.blocked_) {\n    Blockly.Tooltip.DIV.innerHTML = '';\n    for (params = Blockly.Tooltip.element_.tooltip; typeof params === 'function';) params = params();\n    params = Blockly.utils.string.wrap(params, Blockly.Tooltip.LIMIT);\n    params = params.split('\\n');\n    params.forEach(function (param, index) {\n      var div = document.createElement('div');\n      var text_span = document.createElement('span');\n      text_span.appendChild(document.createTextNode(param));\n      text_span.style.verticalAlign = 'middle';\n      Blockly.Tooltip.DIV.appendChild(div);\n      if (!index) {\n        var img = document.createElement('img');\n        var img_span = document.createElement('span');\n        img.src = _blocks_images__WEBPACK_IMPORTED_MODULE_0__.blueInfo;\n        img.style.paddingRight = '8px';\n        img.style.verticalAlign = 'middle';\n        div.appendChild(img_span);\n        img_span.appendChild(img);\n      } else {\n        text_span.style.paddingLeft = '24px';\n      }\n      div.appendChild(text_span);\n    });\n    var direction = Blockly.Tooltip.element_.RTL;\n    var client_width = document.documentElement.clientWidth;\n    var client_height = document.documentElement.clientHeight;\n    if (Blockly.Tooltip.DIV) {\n      Blockly.Tooltip.DIV.style.direction = direction ? 'rtl' : 'ltr';\n    }\n    Blockly.Tooltip.DIV.style.display = 'block';\n    Blockly.Tooltip.visible = true;\n    var last_x = Blockly.Tooltip.lastX_;\n    last_x = direction ? last_x - (Blockly.Tooltip.OFFSET_X + Blockly.Tooltip.DIV.offsetWidth) : last_x + Blockly.Tooltip.OFFSET_X;\n    var last_y = Blockly.Tooltip.lastY_ + Blockly.Tooltip.OFFSET_Y;\n    if (last_y + Blockly.Tooltip.DIV.offsetHeight > client_height + window.scrollY) {\n      last_y -= Blockly.Tooltip.DIV.offsetHeight + 2 * Blockly.Tooltip.OFFSET_Y;\n    }\n    if (direction) {\n      last_x = Math.max(Blockly.Tooltip.MARGINS - window.scrollX, last_x);\n    }\n    if (last_x + Blockly.Tooltip.DIV.offsetWidth > client_width + window.scrollX - 2 * Blockly.Tooltip.MARGINS) {\n      last_x = client_width - Blockly.Tooltip.DIV.offsetWidth - 2 * Blockly.Tooltip.MARGINS;\n    }\n    Blockly.Tooltip.DIV.style.top = \"\".concat(last_y, \"px\");\n    Blockly.Tooltip.DIV.style.left = \"\".concat(last_x, \"px\");\n  }\n};\nBlockly.Tooltip.hide = function () {\n  var _Blockly$Tooltip$DIV;\n  if (Blockly.Tooltip.visible && Blockly.Tooltip.DIV) {\n    Blockly.Tooltip.visible = false;\n    setTimeout(function () {\n      return Blockly.Tooltip.DIV.style.display = 'none';\n    }, Blockly.Tooltip.HOVER_MS);\n  }\n  if (Blockly.Tooltip.showPid_) {\n    clearTimeout(Blockly.Tooltip.showPid_);\n  }\n\n  /// For hiding tooltip next to the platform name.\n  if (!((_Blockly$Tooltip$DIV = Blockly.Tooltip.DIV) !== null && _Blockly$Tooltip$DIV !== void 0 && _Blockly$Tooltip$DIV.style.direction)) {\n    Blockly.Tooltip.visible = false;\n    Blockly.Tooltip.DIV.style.display = 'none';\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vYm90LXNrZWxldG9uL3NyYy9zY3JhdGNoL2hvb2tzL3Rvb2x0aXAuanMiLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvYm90LXdlYi11aS8uLi9ib3Qtc2tlbGV0b24vc3JjL3NjcmF0Y2gvaG9va3MvdG9vbHRpcC5qcz8zZDQ5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGJsdWVJbmZvIH0gZnJvbSAnLi4vYmxvY2tzL2ltYWdlcyc7XG5cbkJsb2NrbHkuVG9vbHRpcC5IT1ZFUl9NUyA9IDUwO1xuXG5CbG9ja2x5LlRvb2x0aXAuc2hvd18gPSAoKSA9PiB7XG4gICAgbGV0IHBhcmFtcztcbiAgICBCbG9ja2x5LlRvb2x0aXAuRElWID0gKChCbG9ja2x5LlRvb2x0aXAucG9pc29uZWRFbGVtZW50XyA9IEJsb2NrbHkuVG9vbHRpcC5lbGVtZW50XyksIEJsb2NrbHkuVG9vbHRpcC5ESVYpO1xuICAgIGlmICghQmxvY2tseS5Ub29sdGlwLmJsb2NrZWRfKSB7XG4gICAgICAgIEJsb2NrbHkuVG9vbHRpcC5ESVYuaW5uZXJIVE1MID0gJyc7XG4gICAgICAgIGZvciAocGFyYW1zID0gQmxvY2tseS5Ub29sdGlwLmVsZW1lbnRfLnRvb2x0aXA7IHR5cGVvZiBwYXJhbXMgPT09ICdmdW5jdGlvbic7ICkgcGFyYW1zID0gcGFyYW1zKCk7XG4gICAgICAgIHBhcmFtcyA9IEJsb2NrbHkudXRpbHMuc3RyaW5nLndyYXAocGFyYW1zLCBCbG9ja2x5LlRvb2x0aXAuTElNSVQpO1xuICAgICAgICBwYXJhbXMgPSBwYXJhbXMuc3BsaXQoJ1xcbicpO1xuXG4gICAgICAgIHBhcmFtcy5mb3JFYWNoKChwYXJhbSwgaW5kZXgpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICAgICAgY29uc3QgdGV4dF9zcGFuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xuXG4gICAgICAgICAgICB0ZXh0X3NwYW4uYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUocGFyYW0pKTtcbiAgICAgICAgICAgIHRleHRfc3Bhbi5zdHlsZS52ZXJ0aWNhbEFsaWduID0gJ21pZGRsZSc7XG4gICAgICAgICAgICBCbG9ja2x5LlRvb2x0aXAuRElWLmFwcGVuZENoaWxkKGRpdik7XG5cbiAgICAgICAgICAgIGlmICghaW5kZXgpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBpbWcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbWcnKTtcbiAgICAgICAgICAgICAgICBjb25zdCBpbWdfc3BhbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcbiAgICAgICAgICAgICAgICBpbWcuc3JjID0gYmx1ZUluZm87XG4gICAgICAgICAgICAgICAgaW1nLnN0eWxlLnBhZGRpbmdSaWdodCA9ICc4cHgnO1xuICAgICAgICAgICAgICAgIGltZy5zdHlsZS52ZXJ0aWNhbEFsaWduID0gJ21pZGRsZSc7XG4gICAgICAgICAgICAgICAgZGl2LmFwcGVuZENoaWxkKGltZ19zcGFuKTtcbiAgICAgICAgICAgICAgICBpbWdfc3Bhbi5hcHBlbmRDaGlsZChpbWcpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0ZXh0X3NwYW4uc3R5bGUucGFkZGluZ0xlZnQgPSAnMjRweCc7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGRpdi5hcHBlbmRDaGlsZCh0ZXh0X3NwYW4pO1xuICAgICAgICB9KTtcblxuICAgICAgICBjb25zdCBkaXJlY3Rpb24gPSBCbG9ja2x5LlRvb2x0aXAuZWxlbWVudF8uUlRMO1xuICAgICAgICBjb25zdCBjbGllbnRfd2lkdGggPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50V2lkdGg7XG4gICAgICAgIGNvbnN0IGNsaWVudF9oZWlnaHQgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0O1xuICAgICAgICBpZiAoQmxvY2tseS5Ub29sdGlwLkRJVikge1xuICAgICAgICAgICAgQmxvY2tseS5Ub29sdGlwLkRJVi5zdHlsZS5kaXJlY3Rpb24gPSBkaXJlY3Rpb24gPyAncnRsJyA6ICdsdHInO1xuICAgICAgICB9XG4gICAgICAgIEJsb2NrbHkuVG9vbHRpcC5ESVYuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XG4gICAgICAgIEJsb2NrbHkuVG9vbHRpcC52aXNpYmxlID0gdHJ1ZTtcbiAgICAgICAgbGV0IGxhc3RfeCA9IEJsb2NrbHkuVG9vbHRpcC5sYXN0WF87XG4gICAgICAgIGxhc3RfeCA9IGRpcmVjdGlvblxuICAgICAgICAgICAgPyBsYXN0X3ggLSAoQmxvY2tseS5Ub29sdGlwLk9GRlNFVF9YICsgQmxvY2tseS5Ub29sdGlwLkRJVi5vZmZzZXRXaWR0aClcbiAgICAgICAgICAgIDogbGFzdF94ICsgQmxvY2tseS5Ub29sdGlwLk9GRlNFVF9YO1xuICAgICAgICBsZXQgbGFzdF95ID0gQmxvY2tseS5Ub29sdGlwLmxhc3RZXyArIEJsb2NrbHkuVG9vbHRpcC5PRkZTRVRfWTtcbiAgICAgICAgaWYgKGxhc3RfeSArIEJsb2NrbHkuVG9vbHRpcC5ESVYub2Zmc2V0SGVpZ2h0ID4gY2xpZW50X2hlaWdodCArIHdpbmRvdy5zY3JvbGxZKSB7XG4gICAgICAgICAgICBsYXN0X3kgLT0gQmxvY2tseS5Ub29sdGlwLkRJVi5vZmZzZXRIZWlnaHQgKyAyICogQmxvY2tseS5Ub29sdGlwLk9GRlNFVF9ZO1xuICAgICAgICB9XG4gICAgICAgIGlmIChkaXJlY3Rpb24pIHtcbiAgICAgICAgICAgIGxhc3RfeCA9IE1hdGgubWF4KEJsb2NrbHkuVG9vbHRpcC5NQVJHSU5TIC0gd2luZG93LnNjcm9sbFgsIGxhc3RfeCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGxhc3RfeCArIEJsb2NrbHkuVG9vbHRpcC5ESVYub2Zmc2V0V2lkdGggPiBjbGllbnRfd2lkdGggKyB3aW5kb3cuc2Nyb2xsWCAtIDIgKiBCbG9ja2x5LlRvb2x0aXAuTUFSR0lOUykge1xuICAgICAgICAgICAgbGFzdF94ID0gY2xpZW50X3dpZHRoIC0gQmxvY2tseS5Ub29sdGlwLkRJVi5vZmZzZXRXaWR0aCAtIDIgKiBCbG9ja2x5LlRvb2x0aXAuTUFSR0lOUztcbiAgICAgICAgfVxuICAgICAgICBCbG9ja2x5LlRvb2x0aXAuRElWLnN0eWxlLnRvcCA9IGAke2xhc3RfeX1weGA7XG4gICAgICAgIEJsb2NrbHkuVG9vbHRpcC5ESVYuc3R5bGUubGVmdCA9IGAke2xhc3RfeH1weGA7XG4gICAgfVxufTtcblxuQmxvY2tseS5Ub29sdGlwLmhpZGUgPSAoKSA9PiB7XG4gICAgaWYgKEJsb2NrbHkuVG9vbHRpcC52aXNpYmxlICYmIEJsb2NrbHkuVG9vbHRpcC5ESVYpIHtcbiAgICAgICAgQmxvY2tseS5Ub29sdGlwLnZpc2libGUgPSBmYWxzZTtcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiAoQmxvY2tseS5Ub29sdGlwLkRJVi5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnKSwgQmxvY2tseS5Ub29sdGlwLkhPVkVSX01TKTtcbiAgICB9XG4gICAgaWYgKEJsb2NrbHkuVG9vbHRpcC5zaG93UGlkXykge1xuICAgICAgICBjbGVhclRpbWVvdXQoQmxvY2tseS5Ub29sdGlwLnNob3dQaWRfKTtcbiAgICB9XG5cbiAgICAvLy8gRm9yIGhpZGluZyB0b29sdGlwIG5leHQgdG8gdGhlIHBsYXRmb3JtIG5hbWUuXG4gICAgaWYgKCFCbG9ja2x5LlRvb2x0aXAuRElWPy5zdHlsZS5kaXJlY3Rpb24pIHtcbiAgICAgICAgQmxvY2tseS5Ub29sdGlwLnZpc2libGUgPSBmYWxzZTtcbiAgICAgICAgQmxvY2tseS5Ub29sdGlwLkRJVi5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgIH1cbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../bot-skeleton/src/scratch/hooks/tooltip.js\n"
                );

                /***/
            },

        /***/ '../bot-skeleton/src/scratch/hooks/trashcan.js':
            /*!*****************************************************!*\
  !*** ../bot-skeleton/src/scratch/hooks/trashcan.js ***!
  \*****************************************************/
            /***/ () => {
                eval(
                    '/**\n * Inspect the contents of the trash.\n * @deriv/bot: Noop for us, restore original functionality when trashcan can be inspected.\n */\nBlockly.Trashcan.prototype.click = function () {};\nBlockly.Trashcan.prototype.setTrashcanPosition = function (position_right, position_top) {\n  var _Blockly$derivWorkspa, _Blockly$derivWorkspa2;\n  var trashcan_instance = (_Blockly$derivWorkspa = Blockly.derivWorkspace) === null || _Blockly$derivWorkspa === void 0 ? void 0 : (_Blockly$derivWorkspa2 = _Blockly$derivWorkspa.trashcan) === null || _Blockly$derivWorkspa2 === void 0 ? void 0 : _Blockly$derivWorkspa2.svgGroup;\n  trashcan_instance === null || trashcan_instance === void 0 ? void 0 : trashcan_instance.setAttribute(\'transform\', "translate(".concat(position_right, ", ").concat(position_top, ")"));\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vYm90LXNrZWxldG9uL3NyYy9zY3JhdGNoL2hvb2tzL3RyYXNoY2FuLmpzIiwibmFtZXMiOlsiQmxvY2tseSIsIlRyYXNoY2FuIiwicHJvdG90eXBlIiwiY2xpY2siLCJzZXRUcmFzaGNhblBvc2l0aW9uIiwicG9zaXRpb25fcmlnaHQiLCJwb3NpdGlvbl90b3AiLCJfQmxvY2tseSRkZXJpdldvcmtzcGEiLCJfQmxvY2tseSRkZXJpdldvcmtzcGEyIiwidHJhc2hjYW5faW5zdGFuY2UiLCJkZXJpdldvcmtzcGFjZSIsInRyYXNoY2FuIiwic3ZnR3JvdXAiLCJzZXRBdHRyaWJ1dGUiLCJjb25jYXQiXSwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi9ib3Qtd2ViLXVpLy4uL2JvdC1za2VsZXRvbi9zcmMvc2NyYXRjaC9ob29rcy90cmFzaGNhbi5qcz9kOGQ4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogSW5zcGVjdCB0aGUgY29udGVudHMgb2YgdGhlIHRyYXNoLlxuICogQGRlcml2L2JvdDogTm9vcCBmb3IgdXMsIHJlc3RvcmUgb3JpZ2luYWwgZnVuY3Rpb25hbGl0eSB3aGVuIHRyYXNoY2FuIGNhbiBiZSBpbnNwZWN0ZWQuXG4gKi9cbkJsb2NrbHkuVHJhc2hjYW4ucHJvdG90eXBlLmNsaWNrID0gZnVuY3Rpb24gKCkge307XG5cbkJsb2NrbHkuVHJhc2hjYW4ucHJvdG90eXBlLnNldFRyYXNoY2FuUG9zaXRpb24gPSAocG9zaXRpb25fcmlnaHQsIHBvc2l0aW9uX3RvcCkgPT4ge1xuICAgIGNvbnN0IHRyYXNoY2FuX2luc3RhbmNlID0gQmxvY2tseS5kZXJpdldvcmtzcGFjZT8udHJhc2hjYW4/LnN2Z0dyb3VwO1xuICAgIHRyYXNoY2FuX2luc3RhbmNlPy5zZXRBdHRyaWJ1dGUoJ3RyYW5zZm9ybScsIGB0cmFuc2xhdGUoJHtwb3NpdGlvbl9yaWdodH0sICR7cG9zaXRpb25fdG9wfSlgKTtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0FBLE9BQU8sQ0FBQ0MsUUFBUSxDQUFDQyxTQUFTLENBQUNDLEtBQUssR0FBRyxZQUFZLENBQUMsQ0FBQztBQUVqREgsT0FBTyxDQUFDQyxRQUFRLENBQUNDLFNBQVMsQ0FBQ0UsbUJBQW1CLEdBQUcsVUFBQ0MsY0FBYyxFQUFFQyxZQUFZLEVBQUs7RUFBQSxJQUFBQyxxQkFBQSxFQUFBQyxzQkFBQTtFQUMvRSxJQUFNQyxpQkFBaUIsSUFBQUYscUJBQUEsR0FBR1AsT0FBTyxDQUFDVSxjQUFjLGNBQUFILHFCQUFBLHdCQUFBQyxzQkFBQSxHQUF0QkQscUJBQUEsQ0FBd0JJLFFBQVEsY0FBQUgsc0JBQUEsdUJBQWhDQSxzQkFBQSxDQUFrQ0ksUUFBUTtFQUNwRUgsaUJBQWlCLGFBQWpCQSxpQkFBaUIsdUJBQWpCQSxpQkFBaUIsQ0FBRUksWUFBWSxDQUFDLFdBQVcsZUFBQUMsTUFBQSxDQUFlVCxjQUFjLFFBQUFTLE1BQUEsQ0FBS1IsWUFBWSxNQUFHLENBQUM7QUFDakcsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==\n//# sourceURL=webpack-internal:///../bot-skeleton/src/scratch/hooks/trashcan.js\n'
                );

                /***/
            },

        /***/ '../bot-skeleton/src/scratch/hooks/variable.js':
            /*!*****************************************************!*\
  !*** ../bot-skeleton/src/scratch/hooks/variable.js ***!
  \*****************************************************/
            /***/ () => {
                eval(
                    '/* This overrides the createVariable method of Blockly.VariableMap.prototype.createVariable.\nThis was done to allow for the creation of variables with the same name but different sentence case (ex: ema, EMA).\nThis was done because with the update of new blockly. It does not support variables with same names irrespective of the sentence case.\nIn Order to fix this issue we are avoid throwing error if the name is same but the sentence case is different and we are appending a _ in the duplicated variable. */\n\nBlockly.VariableMap.prototype.createVariable = function (name, opt_type, opt_id) {\n  var _variable;\n  var variable = this.getVariable(name, opt_type);\n  if (variable && ((_variable = variable) === null || _variable === void 0 ? void 0 : _variable.name) === name) {\n    if (opt_id && variable.getId() !== opt_id) {\n      throw Error("Variable \\"".concat(name, "\\" is already in use and its id is \\"").concat(variable.getId(), "\\" which conflicts with the passed in ") + "id, \\"".concat(opt_id, "\\"."));\n    }\n    // The variable already exists and has the same ID.\n    return variable;\n  }\n  if (opt_id && this.getVariableById(opt_id)) {\n    throw Error("Variable id, \\"".concat(opt_id, "\\", is already in use."));\n  }\n  var id = opt_id || Blockly.utils.idGenerator.genUid();\n  var type = opt_type || \'\';\n  variable = new Blockly.VariableModel(this.workspace, variable ? "".concat(name, "_") : name, type, id);\n  var variables = this.variableMap.get(type) || [];\n  variables.push(variable);\n  // Delete the list of variables of this type, and re-add it so that\n  // the most recent addition is at the end.\n  // This is used so the toolbox\'s set block is set to the most recent\n  // variable.\n  this.variableMap["delete"](type);\n  this.variableMap.set(type, variables);\n  Blockly.Events.fire(new (Blockly.Events.get(Blockly.Events.VAR_CREATE))(variable));\n  return variable;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vYm90LXNrZWxldG9uL3NyYy9zY3JhdGNoL2hvb2tzL3ZhcmlhYmxlLmpzIiwibmFtZXMiOlsiQmxvY2tseSIsIlZhcmlhYmxlTWFwIiwicHJvdG90eXBlIiwiY3JlYXRlVmFyaWFibGUiLCJuYW1lIiwib3B0X3R5cGUiLCJvcHRfaWQiLCJfdmFyaWFibGUiLCJ2YXJpYWJsZSIsImdldFZhcmlhYmxlIiwiZ2V0SWQiLCJFcnJvciIsImNvbmNhdCIsImdldFZhcmlhYmxlQnlJZCIsImlkIiwidXRpbHMiLCJpZEdlbmVyYXRvciIsImdlblVpZCIsInR5cGUiLCJWYXJpYWJsZU1vZGVsIiwid29ya3NwYWNlIiwidmFyaWFibGVzIiwidmFyaWFibGVNYXAiLCJnZXQiLCJwdXNoIiwic2V0IiwiRXZlbnRzIiwiZmlyZSIsIlZBUl9DUkVBVEUiXSwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi9ib3Qtd2ViLXVpLy4uL2JvdC1za2VsZXRvbi9zcmMvc2NyYXRjaC9ob29rcy92YXJpYWJsZS5qcz9hMmI5Il0sInNvdXJjZXNDb250ZW50IjpbIi8qIFRoaXMgb3ZlcnJpZGVzIHRoZSBjcmVhdGVWYXJpYWJsZSBtZXRob2Qgb2YgQmxvY2tseS5WYXJpYWJsZU1hcC5wcm90b3R5cGUuY3JlYXRlVmFyaWFibGUuXG5UaGlzIHdhcyBkb25lIHRvIGFsbG93IGZvciB0aGUgY3JlYXRpb24gb2YgdmFyaWFibGVzIHdpdGggdGhlIHNhbWUgbmFtZSBidXQgZGlmZmVyZW50IHNlbnRlbmNlIGNhc2UgKGV4OiBlbWEsIEVNQSkuXG5UaGlzIHdhcyBkb25lIGJlY2F1c2Ugd2l0aCB0aGUgdXBkYXRlIG9mIG5ldyBibG9ja2x5LiBJdCBkb2VzIG5vdCBzdXBwb3J0IHZhcmlhYmxlcyB3aXRoIHNhbWUgbmFtZXMgaXJyZXNwZWN0aXZlIG9mIHRoZSBzZW50ZW5jZSBjYXNlLlxuSW4gT3JkZXIgdG8gZml4IHRoaXMgaXNzdWUgd2UgYXJlIGF2b2lkIHRocm93aW5nIGVycm9yIGlmIHRoZSBuYW1lIGlzIHNhbWUgYnV0IHRoZSBzZW50ZW5jZSBjYXNlIGlzIGRpZmZlcmVudCBhbmQgd2UgYXJlIGFwcGVuZGluZyBhIF8gaW4gdGhlIGR1cGxpY2F0ZWQgdmFyaWFibGUuICovXG5cbkJsb2NrbHkuVmFyaWFibGVNYXAucHJvdG90eXBlLmNyZWF0ZVZhcmlhYmxlID0gZnVuY3Rpb24gKG5hbWUsIG9wdF90eXBlLCBvcHRfaWQpIHtcbiAgICBsZXQgdmFyaWFibGUgPSB0aGlzLmdldFZhcmlhYmxlKG5hbWUsIG9wdF90eXBlKTtcbiAgICBpZiAodmFyaWFibGUgJiYgdmFyaWFibGU/Lm5hbWUgPT09IG5hbWUpIHtcbiAgICAgICAgaWYgKG9wdF9pZCAmJiB2YXJpYWJsZS5nZXRJZCgpICE9PSBvcHRfaWQpIHtcbiAgICAgICAgICAgIHRocm93IEVycm9yKFxuICAgICAgICAgICAgICAgIGBWYXJpYWJsZSBcIiR7bmFtZX1cIiBpcyBhbHJlYWR5IGluIHVzZSBhbmQgaXRzIGlkIGlzIFwiJHt2YXJpYWJsZS5nZXRJZCgpfVwiIHdoaWNoIGNvbmZsaWN0cyB3aXRoIHRoZSBwYXNzZWQgaW4gYCArXG4gICAgICAgICAgICAgICAgICAgIGBpZCwgXCIke29wdF9pZH1cIi5gXG4gICAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgICAgIC8vIFRoZSB2YXJpYWJsZSBhbHJlYWR5IGV4aXN0cyBhbmQgaGFzIHRoZSBzYW1lIElELlxuICAgICAgICByZXR1cm4gdmFyaWFibGU7XG4gICAgfVxuICAgIGlmIChvcHRfaWQgJiYgdGhpcy5nZXRWYXJpYWJsZUJ5SWQob3B0X2lkKSkge1xuICAgICAgICB0aHJvdyBFcnJvcihgVmFyaWFibGUgaWQsIFwiJHtvcHRfaWR9XCIsIGlzIGFscmVhZHkgaW4gdXNlLmApO1xuICAgIH1cbiAgICBjb25zdCBpZCA9IG9wdF9pZCB8fCBCbG9ja2x5LnV0aWxzLmlkR2VuZXJhdG9yLmdlblVpZCgpO1xuICAgIGNvbnN0IHR5cGUgPSBvcHRfdHlwZSB8fCAnJztcbiAgICB2YXJpYWJsZSA9IG5ldyBCbG9ja2x5LlZhcmlhYmxlTW9kZWwodGhpcy53b3Jrc3BhY2UsIHZhcmlhYmxlID8gYCR7bmFtZX1fYCA6IG5hbWUsIHR5cGUsIGlkKTtcblxuICAgIGNvbnN0IHZhcmlhYmxlcyA9IHRoaXMudmFyaWFibGVNYXAuZ2V0KHR5cGUpIHx8IFtdO1xuICAgIHZhcmlhYmxlcy5wdXNoKHZhcmlhYmxlKTtcbiAgICAvLyBEZWxldGUgdGhlIGxpc3Qgb2YgdmFyaWFibGVzIG9mIHRoaXMgdHlwZSwgYW5kIHJlLWFkZCBpdCBzbyB0aGF0XG4gICAgLy8gdGhlIG1vc3QgcmVjZW50IGFkZGl0aW9uIGlzIGF0IHRoZSBlbmQuXG4gICAgLy8gVGhpcyBpcyB1c2VkIHNvIHRoZSB0b29sYm94J3Mgc2V0IGJsb2NrIGlzIHNldCB0byB0aGUgbW9zdCByZWNlbnRcbiAgICAvLyB2YXJpYWJsZS5cbiAgICB0aGlzLnZhcmlhYmxlTWFwLmRlbGV0ZSh0eXBlKTtcbiAgICB0aGlzLnZhcmlhYmxlTWFwLnNldCh0eXBlLCB2YXJpYWJsZXMpO1xuXG4gICAgQmxvY2tseS5FdmVudHMuZmlyZShuZXcgKEJsb2NrbHkuRXZlbnRzLmdldChCbG9ja2x5LkV2ZW50cy5WQVJfQ1JFQVRFKSkodmFyaWFibGUpKTtcblxuICAgIHJldHVybiB2YXJpYWJsZTtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUVBQSxPQUFPLENBQUNDLFdBQVcsQ0FBQ0MsU0FBUyxDQUFDQyxjQUFjLEdBQUcsVUFBVUMsSUFBSSxFQUFFQyxRQUFRLEVBQUVDLE1BQU0sRUFBRTtFQUFBLElBQUFDLFNBQUE7RUFDN0UsSUFBSUMsUUFBUSxHQUFHLElBQUksQ0FBQ0MsV0FBVyxDQUFDTCxJQUFJLEVBQUVDLFFBQVEsQ0FBQztFQUMvQyxJQUFJRyxRQUFRLElBQUksRUFBQUQsU0FBQSxHQUFBQyxRQUFRLGNBQUFELFNBQUEsdUJBQVJBLFNBQUEsQ0FBVUgsSUFBSSxNQUFLQSxJQUFJLEVBQUU7SUFDckMsSUFBSUUsTUFBTSxJQUFJRSxRQUFRLENBQUNFLEtBQUssQ0FBQyxDQUFDLEtBQUtKLE1BQU0sRUFBRTtNQUN2QyxNQUFNSyxLQUFLLENBQ1AsY0FBQUMsTUFBQSxDQUFhUixJQUFJLDJDQUFBUSxNQUFBLENBQXNDSixRQUFRLENBQUNFLEtBQUssQ0FBQyxDQUFDLHVEQUFBRSxNQUFBLENBQzNETixNQUFNLFFBQ3RCLENBQUM7SUFDTDtJQUNBO0lBQ0EsT0FBT0UsUUFBUTtFQUNuQjtFQUNBLElBQUlGLE1BQU0sSUFBSSxJQUFJLENBQUNPLGVBQWUsQ0FBQ1AsTUFBTSxDQUFDLEVBQUU7SUFDeEMsTUFBTUssS0FBSyxtQkFBQUMsTUFBQSxDQUFrQk4sTUFBTSwyQkFBdUIsQ0FBQztFQUMvRDtFQUNBLElBQU1RLEVBQUUsR0FBR1IsTUFBTSxJQUFJTixPQUFPLENBQUNlLEtBQUssQ0FBQ0MsV0FBVyxDQUFDQyxNQUFNLENBQUMsQ0FBQztFQUN2RCxJQUFNQyxJQUFJLEdBQUdiLFFBQVEsSUFBSSxFQUFFO0VBQzNCRyxRQUFRLEdBQUcsSUFBSVIsT0FBTyxDQUFDbUIsYUFBYSxDQUFDLElBQUksQ0FBQ0MsU0FBUyxFQUFFWixRQUFRLE1BQUFJLE1BQUEsQ0FBTVIsSUFBSSxTQUFNQSxJQUFJLEVBQUVjLElBQUksRUFBRUosRUFBRSxDQUFDO0VBRTVGLElBQU1PLFNBQVMsR0FBRyxJQUFJLENBQUNDLFdBQVcsQ0FBQ0MsR0FBRyxDQUFDTCxJQUFJLENBQUMsSUFBSSxFQUFFO0VBQ2xERyxTQUFTLENBQUNHLElBQUksQ0FBQ2hCLFFBQVEsQ0FBQztFQUN4QjtFQUNBO0VBQ0E7RUFDQTtFQUNBLElBQUksQ0FBQ2MsV0FBVyxVQUFPLENBQUNKLElBQUksQ0FBQztFQUM3QixJQUFJLENBQUNJLFdBQVcsQ0FBQ0csR0FBRyxDQUFDUCxJQUFJLEVBQUVHLFNBQVMsQ0FBQztFQUVyQ3JCLE9BQU8sQ0FBQzBCLE1BQU0sQ0FBQ0MsSUFBSSxDQUFDLEtBQUszQixPQUFPLENBQUMwQixNQUFNLENBQUNILEdBQUcsQ0FBQ3ZCLE9BQU8sQ0FBQzBCLE1BQU0sQ0FBQ0UsVUFBVSxDQUFDLEVBQUVwQixRQUFRLENBQUMsQ0FBQztFQUVsRixPQUFPQSxRQUFRO0FBQ25CLENBQUMiLCJpZ25vcmVMaXN0IjpbXX0=\n//# sourceURL=webpack-internal:///../bot-skeleton/src/scratch/hooks/variable.js\n'
                );

                /***/
            },

        /***/ '../bot-skeleton/src/scratch/hooks/workspace.js':
            /*!******************************************************!*\
  !*** ../bot-skeleton/src/scratch/hooks/workspace.js ***!
  \******************************************************/
            /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    '__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _dbot_store__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dbot-store */ "../bot-skeleton/src/scratch/dbot-store.js");\n/* harmony import */ var _utils_pending_promise__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/pending-promise */ "../bot-skeleton/src/utils/pending-promise.js");\nfunction _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }\nfunction _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\n\n\nBlockly.Workspace.prototype.wait_events = [];\n/**\n * Clear the undo/redo stacks.\n * deriv-bot: Sync undo/redo stack with our toolbar store.\n */\nBlockly.Workspace.prototype.clearUndo = function () {\n  this.undoStack_.length = 0;\n  this.redoStack_.length = 0;\n  var toolbar = _dbot_store__WEBPACK_IMPORTED_MODULE_0__["default"].instance.toolbar;\n  toolbar.setHasRedoStack();\n  toolbar.setHasUndoStack();\n\n  // Stop any events already in the firing queue from being undoable.\n  Blockly.Events.clearPendingUndo();\n};\n\n/**\n * Fire a change event.\n * deriv-bot: Sync undo/redo stack with our toolbar store.\n * @param {!Blockly.Events.Abstract} event Event to fire.\n */\nBlockly.Workspace.prototype.fireChangeListener = function (event) {\n  if (event.recordUndo) {\n    this.undoStack_.push(event);\n    this.redoStack_.length = 0;\n    if (this.undoStack_.length > this.MAX_UNDO) {\n      this.undoStack_.unshift();\n    }\n    var toolbar = _dbot_store__WEBPACK_IMPORTED_MODULE_0__["default"].instance.toolbar;\n    toolbar.setHasRedoStack();\n    toolbar.setHasUndoStack();\n  }\n\n  // Copy listeners in case a listener attaches/detaches itself.\n  var current_listeners = this.listeners.slice();\n  current_listeners.forEach(function (listener) {\n    listener(event);\n  });\n  /**\n   * Gets a trade definition block instance and returns it.\n   * @returns {Blockly.Block|null} The trade definition or null.\n   */\n};\nBlockly.Workspace.prototype.getTradeDefinitionBlock = function () {\n  return this.getAllBlocks(true).find(function (b) {\n    return b.type === \'trade_definition\';\n  });\n};\nBlockly.Workspace.prototype.waitForBlockEvent = function (block_id) {\n  var opt_event_type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var event_promise = new _utils_pending_promise__WEBPACK_IMPORTED_MODULE_1__["default"]();\n  if (!this.wait_events.some(function (event) {\n    return event.blockId === block_id && event.type === opt_event_type;\n  })) {\n    this.wait_events.push({\n      blockId: block_id,\n      promise: event_promise,\n      type: opt_event_type\n    });\n  }\n  return event_promise;\n};\nBlockly.Workspace.prototype.waitForBlockEvent = function (options) {\n  var block_type = options.block_type,\n    event_type = options.event_type,\n    timeout = options.timeout;\n  var promise = new _utils_pending_promise__WEBPACK_IMPORTED_MODULE_1__["default"]();\n  this.wait_events.push({\n    block_type: block_type,\n    event_type: event_type,\n    promise: promise\n  });\n  if (timeout) {\n    setTimeout(function () {\n      if (promise.isPending) {\n        promise.reject();\n      }\n    }, timeout);\n  }\n  return promise;\n};\nBlockly.Workspace.prototype.dispatchBlockEventEffects = function (event) {\n  var _this = this;\n  this.wait_events.forEach(function (wait_event, idx) {\n    if (!event.blockId) {\n      return;\n    }\n    var block = _this.getBlockById(event.blockId);\n    if (block) {\n      var is_same_block_type = wait_event.block_type === block.type;\n      var is_same_event_type = wait_event.event_type === null || wait_event.event_type === event.type;\n      if (is_same_block_type && is_same_event_type) {\n        setTimeout(function () {\n          wait_event.promise.resolve();\n          _this.wait_events.splice(idx, 1);\n        }, 500);\n      }\n    }\n  });\n};\nBlockly.Workspace.prototype.getAllFields = function (is_ordered) {\n  return this.getAllBlocks(is_ordered).reduce(function (fields, block) {\n    block.inputList.forEach(function (input) {\n      return fields.push.apply(fields, _toConsumableArray(input.fieldRow));\n    });\n    return fields;\n  }, []);\n};\n\n/* eslint-disble */\n/**\n * Create a main workspace and add it to the SVG.\n * @param {!Element} svg SVG element with pattern defined.\n * @param {!Blockly.Options} options Dictionary of options.\n * @param {!Blockly.BlockDragSurfaceSvg} blockDragSurface Drag surface SVG\n *     for the blocks.\n * @param {!Blockly.WorkspaceDragSurfaceSvg} workspaceDragSurface Drag surface\n *     SVG for the workspace.\n * @return {!Blockly.Workspace} Newly created main workspace.\n * @private\n */\n\nBlockly.createVirtualWorkspace_ = function (fragment, options, blockDragSurface, workspaceDragSurface) {\n  options.parentWorkspace = null;\n  var mainWorkspace = new Blockly.WorkspaceSvg(options, blockDragSurface, workspaceDragSurface);\n  mainWorkspace.scale = options.zoomOptions.startScale;\n  fragment.appendChild(mainWorkspace.createDom(\'blocklyMainBackground\'));\n  return mainWorkspace;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vYm90LXNrZWxldG9uL3NyYy9zY3JhdGNoL2hvb2tzL3dvcmtzcGFjZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFBQTtBQUNBO0FBRUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFFQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi9ib3Qtd2ViLXVpLy4uL2JvdC1za2VsZXRvbi9zcmMvc2NyYXRjaC9ob29rcy93b3Jrc3BhY2UuanM/ZTQzNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgREJvdFN0b3JlIGZyb20gJy4uL2Rib3Qtc3RvcmUnO1xuaW1wb3J0IFBlbmRpbmdQcm9taXNlIGZyb20gJy4uLy4uL3V0aWxzL3BlbmRpbmctcHJvbWlzZSc7XG5cbkJsb2NrbHkuV29ya3NwYWNlLnByb3RvdHlwZS53YWl0X2V2ZW50cyA9IFtdO1xuLyoqXG4gKiBDbGVhciB0aGUgdW5kby9yZWRvIHN0YWNrcy5cbiAqIGRlcml2LWJvdDogU3luYyB1bmRvL3JlZG8gc3RhY2sgd2l0aCBvdXIgdG9vbGJhciBzdG9yZS5cbiAqL1xuQmxvY2tseS5Xb3Jrc3BhY2UucHJvdG90eXBlLmNsZWFyVW5kbyA9IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLnVuZG9TdGFja18ubGVuZ3RoID0gMDtcbiAgICB0aGlzLnJlZG9TdGFja18ubGVuZ3RoID0gMDtcblxuICAgIGNvbnN0IHsgdG9vbGJhciB9ID0gREJvdFN0b3JlLmluc3RhbmNlO1xuXG4gICAgdG9vbGJhci5zZXRIYXNSZWRvU3RhY2soKTtcbiAgICB0b29sYmFyLnNldEhhc1VuZG9TdGFjaygpO1xuXG4gICAgLy8gU3RvcCBhbnkgZXZlbnRzIGFscmVhZHkgaW4gdGhlIGZpcmluZyBxdWV1ZSBmcm9tIGJlaW5nIHVuZG9hYmxlLlxuICAgIEJsb2NrbHkuRXZlbnRzLmNsZWFyUGVuZGluZ1VuZG8oKTtcbn07XG5cbi8qKlxuICogRmlyZSBhIGNoYW5nZSBldmVudC5cbiAqIGRlcml2LWJvdDogU3luYyB1bmRvL3JlZG8gc3RhY2sgd2l0aCBvdXIgdG9vbGJhciBzdG9yZS5cbiAqIEBwYXJhbSB7IUJsb2NrbHkuRXZlbnRzLkFic3RyYWN0fSBldmVudCBFdmVudCB0byBmaXJlLlxuICovXG5CbG9ja2x5LldvcmtzcGFjZS5wcm90b3R5cGUuZmlyZUNoYW5nZUxpc3RlbmVyID0gZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgaWYgKGV2ZW50LnJlY29yZFVuZG8pIHtcbiAgICAgICAgdGhpcy51bmRvU3RhY2tfLnB1c2goZXZlbnQpO1xuICAgICAgICB0aGlzLnJlZG9TdGFja18ubGVuZ3RoID0gMDtcblxuICAgICAgICBpZiAodGhpcy51bmRvU3RhY2tfLmxlbmd0aCA+IHRoaXMuTUFYX1VORE8pIHtcbiAgICAgICAgICAgIHRoaXMudW5kb1N0YWNrXy51bnNoaWZ0KCk7XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCB7IHRvb2xiYXIgfSA9IERCb3RTdG9yZS5pbnN0YW5jZTtcblxuICAgICAgICB0b29sYmFyLnNldEhhc1JlZG9TdGFjaygpO1xuICAgICAgICB0b29sYmFyLnNldEhhc1VuZG9TdGFjaygpO1xuICAgIH1cblxuICAgIC8vIENvcHkgbGlzdGVuZXJzIGluIGNhc2UgYSBsaXN0ZW5lciBhdHRhY2hlcy9kZXRhY2hlcyBpdHNlbGYuXG4gICAgY29uc3QgY3VycmVudF9saXN0ZW5lcnMgPSB0aGlzLmxpc3RlbmVycy5zbGljZSgpO1xuXG4gICAgY3VycmVudF9saXN0ZW5lcnMuZm9yRWFjaChsaXN0ZW5lciA9PiB7XG4gICAgICAgIGxpc3RlbmVyKGV2ZW50KTtcbiAgICB9KTtcbiAgICAvKipcbiAgICAgKiBHZXRzIGEgdHJhZGUgZGVmaW5pdGlvbiBibG9jayBpbnN0YW5jZSBhbmQgcmV0dXJucyBpdC5cbiAgICAgKiBAcmV0dXJucyB7QmxvY2tseS5CbG9ja3xudWxsfSBUaGUgdHJhZGUgZGVmaW5pdGlvbiBvciBudWxsLlxuICAgICAqL1xufTtcblxuQmxvY2tseS5Xb3Jrc3BhY2UucHJvdG90eXBlLmdldFRyYWRlRGVmaW5pdGlvbkJsb2NrID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB0aGlzLmdldEFsbEJsb2Nrcyh0cnVlKS5maW5kKGIgPT4gYi50eXBlID09PSAndHJhZGVfZGVmaW5pdGlvbicpO1xufTtcblxuQmxvY2tseS5Xb3Jrc3BhY2UucHJvdG90eXBlLndhaXRGb3JCbG9ja0V2ZW50ID0gZnVuY3Rpb24gKGJsb2NrX2lkLCBvcHRfZXZlbnRfdHlwZSA9IG51bGwpIHtcbiAgICBjb25zdCBldmVudF9wcm9taXNlID0gbmV3IFBlbmRpbmdQcm9taXNlKCk7XG5cbiAgICBpZiAoIXRoaXMud2FpdF9ldmVudHMuc29tZShldmVudCA9PiBldmVudC5ibG9ja0lkID09PSBibG9ja19pZCAmJiBldmVudC50eXBlID09PSBvcHRfZXZlbnRfdHlwZSkpIHtcbiAgICAgICAgdGhpcy53YWl0X2V2ZW50cy5wdXNoKHtcbiAgICAgICAgICAgIGJsb2NrSWQ6IGJsb2NrX2lkLFxuICAgICAgICAgICAgcHJvbWlzZTogZXZlbnRfcHJvbWlzZSxcbiAgICAgICAgICAgIHR5cGU6IG9wdF9ldmVudF90eXBlLFxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICByZXR1cm4gZXZlbnRfcHJvbWlzZTtcbn07XG5cbkJsb2NrbHkuV29ya3NwYWNlLnByb3RvdHlwZS53YWl0Rm9yQmxvY2tFdmVudCA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gICAgY29uc3QgeyBibG9ja190eXBlLCBldmVudF90eXBlLCB0aW1lb3V0IH0gPSBvcHRpb25zO1xuICAgIGNvbnN0IHByb21pc2UgPSBuZXcgUGVuZGluZ1Byb21pc2UoKTtcblxuICAgIHRoaXMud2FpdF9ldmVudHMucHVzaCh7IGJsb2NrX3R5cGUsIGV2ZW50X3R5cGUsIHByb21pc2UgfSk7XG5cbiAgICBpZiAodGltZW91dCkge1xuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgIGlmIChwcm9taXNlLmlzUGVuZGluZykge1xuICAgICAgICAgICAgICAgIHByb21pc2UucmVqZWN0KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sIHRpbWVvdXQpO1xuICAgIH1cblxuICAgIHJldHVybiBwcm9taXNlO1xufTtcblxuQmxvY2tseS5Xb3Jrc3BhY2UucHJvdG90eXBlLmRpc3BhdGNoQmxvY2tFdmVudEVmZmVjdHMgPSBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICB0aGlzLndhaXRfZXZlbnRzLmZvckVhY2goKHdhaXRfZXZlbnQsIGlkeCkgPT4ge1xuICAgICAgICBpZiAoIWV2ZW50LmJsb2NrSWQpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IGJsb2NrID0gdGhpcy5nZXRCbG9ja0J5SWQoZXZlbnQuYmxvY2tJZCk7XG5cbiAgICAgICAgaWYgKGJsb2NrKSB7XG4gICAgICAgICAgICBjb25zdCBpc19zYW1lX2Jsb2NrX3R5cGUgPSB3YWl0X2V2ZW50LmJsb2NrX3R5cGUgPT09IGJsb2NrLnR5cGU7XG4gICAgICAgICAgICBjb25zdCBpc19zYW1lX2V2ZW50X3R5cGUgPSB3YWl0X2V2ZW50LmV2ZW50X3R5cGUgPT09IG51bGwgfHwgd2FpdF9ldmVudC5ldmVudF90eXBlID09PSBldmVudC50eXBlO1xuXG4gICAgICAgICAgICBpZiAoaXNfc2FtZV9ibG9ja190eXBlICYmIGlzX3NhbWVfZXZlbnRfdHlwZSkge1xuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICB3YWl0X2V2ZW50LnByb21pc2UucmVzb2x2ZSgpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLndhaXRfZXZlbnRzLnNwbGljZShpZHgsIDEpO1xuICAgICAgICAgICAgICAgIH0sIDUwMCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9KTtcbn07XG5cbkJsb2NrbHkuV29ya3NwYWNlLnByb3RvdHlwZS5nZXRBbGxGaWVsZHMgPSBmdW5jdGlvbiAoaXNfb3JkZXJlZCkge1xuICAgIHJldHVybiB0aGlzLmdldEFsbEJsb2Nrcyhpc19vcmRlcmVkKS5yZWR1Y2UoKGZpZWxkcywgYmxvY2spID0+IHtcbiAgICAgICAgYmxvY2suaW5wdXRMaXN0LmZvckVhY2goaW5wdXQgPT4gZmllbGRzLnB1c2goLi4uaW5wdXQuZmllbGRSb3cpKTtcbiAgICAgICAgcmV0dXJuIGZpZWxkcztcbiAgICB9LCBbXSk7XG59O1xuXG4vKiBlc2xpbnQtZGlzYmxlICovXG4vKipcbiAqIENyZWF0ZSBhIG1haW4gd29ya3NwYWNlIGFuZCBhZGQgaXQgdG8gdGhlIFNWRy5cbiAqIEBwYXJhbSB7IUVsZW1lbnR9IHN2ZyBTVkcgZWxlbWVudCB3aXRoIHBhdHRlcm4gZGVmaW5lZC5cbiAqIEBwYXJhbSB7IUJsb2NrbHkuT3B0aW9uc30gb3B0aW9ucyBEaWN0aW9uYXJ5IG9mIG9wdGlvbnMuXG4gKiBAcGFyYW0geyFCbG9ja2x5LkJsb2NrRHJhZ1N1cmZhY2VTdmd9IGJsb2NrRHJhZ1N1cmZhY2UgRHJhZyBzdXJmYWNlIFNWR1xuICogICAgIGZvciB0aGUgYmxvY2tzLlxuICogQHBhcmFtIHshQmxvY2tseS5Xb3Jrc3BhY2VEcmFnU3VyZmFjZVN2Z30gd29ya3NwYWNlRHJhZ1N1cmZhY2UgRHJhZyBzdXJmYWNlXG4gKiAgICAgU1ZHIGZvciB0aGUgd29ya3NwYWNlLlxuICogQHJldHVybiB7IUJsb2NrbHkuV29ya3NwYWNlfSBOZXdseSBjcmVhdGVkIG1haW4gd29ya3NwYWNlLlxuICogQHByaXZhdGVcbiAqL1xuXG5CbG9ja2x5LmNyZWF0ZVZpcnR1YWxXb3Jrc3BhY2VfID0gZnVuY3Rpb24gKGZyYWdtZW50LCBvcHRpb25zLCBibG9ja0RyYWdTdXJmYWNlLCB3b3Jrc3BhY2VEcmFnU3VyZmFjZSkge1xuICAgIG9wdGlvbnMucGFyZW50V29ya3NwYWNlID0gbnVsbDtcbiAgICBjb25zdCBtYWluV29ya3NwYWNlID0gbmV3IEJsb2NrbHkuV29ya3NwYWNlU3ZnKG9wdGlvbnMsIGJsb2NrRHJhZ1N1cmZhY2UsIHdvcmtzcGFjZURyYWdTdXJmYWNlKTtcbiAgICBtYWluV29ya3NwYWNlLnNjYWxlID0gb3B0aW9ucy56b29tT3B0aW9ucy5zdGFydFNjYWxlO1xuICAgIGZyYWdtZW50LmFwcGVuZENoaWxkKG1haW5Xb3Jrc3BhY2UuY3JlYXRlRG9tKCdibG9ja2x5TWFpbkJhY2tncm91bmQnKSk7XG5cbiAgICByZXR1cm4gbWFpbldvcmtzcGFjZTtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../bot-skeleton/src/scratch/hooks/workspace.js\n'
                );

                /***/
            },

        /***/ '../bot-skeleton/src/scratch/hooks/workspace_svg.js':
            /*!**********************************************************!*\
  !*** ../bot-skeleton/src/scratch/hooks/workspace_svg.js ***!
  \**********************************************************/
            /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    '__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _constants_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../constants/config */ "../bot-skeleton/src/constants/config.ts");\n/* harmony import */ var _dbot_store__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../dbot-store */ "../bot-skeleton/src/scratch/dbot-store.js");\n\n\n\n/**\n * Handle a mouse-down on SVG drawing surface.\n * deriv-bot: We bubble the mousedown event for Core to be reactive.\n * @param {!Event} e Mouse down event.\n * @private\n */\n\n/**\n * Scroll the workspace to center on the given block.\n * @param {?string} id ID of block center on.\n * @public\n */\nBlockly.WorkspaceSvg.prototype.centerOnBlock = function (id) {\n  var _this$scrollbar;\n  var hideChaff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  if (!this.scrollbar) {\n    // eslint-disable-next-line no-console\n    console.warn(\'Tried to scroll a non-scrollable workspace.\');\n    return;\n  }\n  var block = this.getBlockById(id);\n  if (!block) {\n    return;\n  }\n\n  // XY is in workspace coordinates.\n  var xy = block.getRelativeToSurfaceXY();\n\n  // Height/width is in workspace units.\n  var heightWidth = block.getHeightWidth();\n\n  // Find the enter of the block in workspace units.\n  var blockCenterY = xy.y + heightWidth.height / 2;\n\n  // In RTL the block\'s position is the top right of the block, not top left.\n  var multiplier = this.RTL ? -1 : 1;\n  var blockCenterX = xy.x + multiplier * heightWidth.width / 2;\n\n  // Workspace scale, used to convert from workspace coordinates to pixels.\n  var scale = this.scale;\n\n  // Center in pixels.  0, 0 is at the workspace origin.  These numbers may\n  // be negative.\n  var pixelX = blockCenterX * scale;\n  var pixelY = blockCenterY * scale;\n  var metrics = this.getMetrics();\n\n  // Scrolling to here would put the block in the top-left corner of the\n  // visible workspace.\n  var scrollToBlockX = pixelX - metrics.contentLeft;\n  var scrollToBlockY = pixelY - metrics.contentTop;\n\n  // viewHeight and viewWidth are in pixels.\n  var halfViewWidth = metrics.viewWidth / 2;\n  var halfViewHeight = metrics.viewHeight / 2;\n\n  // Put the block in the center of the visible workspace instead.\n  var scrollToCenterX = scrollToBlockX - halfViewWidth;\n  var scrollToCenterY = scrollToBlockY - halfViewHeight;\n  if (hideChaff) {\n    Blockly.hideChaff();\n  }\n  this === null || this === void 0 ? void 0 : (_this$scrollbar = this.scrollbar) === null || _this$scrollbar === void 0 ? void 0 : _this$scrollbar.set(scrollToCenterX, scrollToCenterY);\n};\n\n/**\n * Creates a copy of passed block_node on main workspace and positions it\n * below the lowest block on the canvas.\n * @static\n * @param {Element} block_node\n * @public\n */\nBlockly.WorkspaceSvg.prototype.addBlockNode = function (block_node) {\n  var flyout = _dbot_store__WEBPACK_IMPORTED_MODULE_1__["default"].instance.flyout;\n  var block = Blockly.Xml.domToBlock(block_node, flyout.getFlyout().targetWorkspace);\n  var top_blocks = this.getTopBlocks(true);\n  if (_constants_config__WEBPACK_IMPORTED_MODULE_0__.config.single_instance_blocks.includes(block.type)) {\n    this.getAllBlocks().forEach(function (ws_block) {\n      if (ws_block.type === block.type && ws_block.id !== block.id) {\n        ws_block.dispose();\n      }\n    });\n  }\n  if (top_blocks.length) {\n    var last_block = top_blocks[top_blocks.length - 1];\n    var last_block_xy = last_block.getRelativeToSurfaceXY();\n    var extra_spacing = last_block.startHat_ ? Blockly.BlockSvg.START_HAT_HEIGHT : 0;\n    var y = last_block_xy.y + last_block.getHeightWidth().height + extra_spacing + 30;\n    block.moveBy(last_block_xy.x, y);\n  }\n  flyout.setIsSearchFlyout(false);\n  flyout.setVisibility(false);\n\n  // Call svgResize to avoid glitching workspace.\n  Blockly.svgResize(block.workspace);\n  // kept this commented since it is making a glitching issue,\n  // this.centerOnBlock(new_block.id, false);\n};\n\n/**\n * Clean up the workspace by ordering all the blocks in a column. For deriv-bot\n * root-blocks are sorted in columns first, then all other blocks are positioned below\n * the lowest hanging root-block.\n */\nBlockly.WorkspaceSvg.prototype.cleanUp = function () {\n  var _this = this;\n  var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var blocks_to_clean = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  this.setResizesEnabled(false);\n  Blockly.Events.setGroup(Blockly.Events.getGroup() || true);\n  var is_import = blocks_to_clean.length !== 0;\n  var top_blocks = is_import ? blocks_to_clean : this.getTopBlocks(true);\n  var root_blocks = top_blocks.filter(function (block) {\n    return block.isMainBlock();\n  }).sort(function (a, b) {\n    var blockIndex = function blockIndex(block) {\n      return _constants_config__WEBPACK_IMPORTED_MODULE_0__.config.mainBlocks.findIndex(function (main_block_type) {\n        return main_block_type === block.type;\n      });\n    };\n    return blockIndex(a) - blockIndex(b);\n  });\n  var column_count = 2;\n  var blocks_per_column = Math.ceil(root_blocks.length / column_count);\n  var original_cursor_y = y;\n  var MINIMUM_BLOCK_X_WIDTH = 650;\n  if (root_blocks.length) {\n    var column_index = 0;\n    root_blocks.forEach(function (block, index) {\n      var _block$svgGroup_;\n      block === null || block === void 0 ? void 0 : (_block$svgGroup_ = block.svgGroup_) === null || _block$svgGroup_ === void 0 ? void 0 : _block$svgGroup_.setAttribute(\'data-testid\', block === null || block === void 0 ? void 0 : block.type);\n      if (index === (column_index + 1) * blocks_per_column) {\n        original_cursor_y = y;\n        column_index++;\n      }\n      var xy = block.getRelativeToSurfaceXY();\n      var cursor_x = is_import ? x : -xy.x;\n      var cursor_y = original_cursor_y - (is_import ? 0 : xy.y) + (_dbot_store__WEBPACK_IMPORTED_MODULE_1__["default"].instance.is_mobile ? 50 : 0);\n      if (column_index === 0) {\n        block.moveBy(cursor_x, cursor_y);\n      } else {\n        var _root_blocks$slice;\n        var start = (column_index - 1) * blocks_per_column;\n        var _initialValue = {\n          getHeightWidth: function getHeightWidth() {\n            return {\n              width: 0\n            };\n          }\n        };\n        var fat_neighbour_block = (_root_blocks$slice = root_blocks.slice(start, start + blocks_per_column)) === null || _root_blocks$slice === void 0 ? void 0 : _root_blocks$slice.reduce(function (a, b) {\n          return a.getHeightWidth().width > b.getHeightWidth().width ? a : b;\n        }, _initialValue);\n        Blockly.BlockSvg.MIN_BLOCK_X = 64;\n        // let position_x = cursor_x + fat_neighbour_block.getHeightWidth().width + Blockly.BlockSvg.MIN_BLOCK_X;\n\n        var position_x = 0;\n        if (_this !== null && _this !== void 0 && _this.RTL) {\n          position_x = cursor_x - Math.max(MINIMUM_BLOCK_X_WIDTH, fat_neighbour_block.getHeightWidth().width) - Blockly.BlockSvg.MIN_BLOCK_X;\n          if (!is_import) position_x -= fat_neighbour_block.getRelativeToSurfaceXY().x;\n        } else {\n          position_x = cursor_x + Math.max(MINIMUM_BLOCK_X_WIDTH, fat_neighbour_block.getHeightWidth().width) + Blockly.BlockSvg.MIN_BLOCK_X;\n          if (!is_import) position_x += fat_neighbour_block.getRelativeToSurfaceXY().x;\n        }\n        block.moveBy(position_x, cursor_y);\n      }\n      block.snapToGrid();\n      Blockly.BlockSvg.MIN_BLOCK_Y = 48;\n      original_cursor_y = block.getRelativeToSurfaceXY().y + block.getHeightWidth().height + Blockly.BlockSvg.MIN_BLOCK_Y;\n    });\n    var initialValue = {\n      getRelativeToSurfaceXY: function getRelativeToSurfaceXY() {\n        return {\n          y: 0\n        };\n      },\n      getHeightWidth: function getHeightWidth() {\n        return {\n          height: 0\n        };\n      }\n    };\n    var lowest_root_block = root_blocks.reduce(function (a, b) {\n      var a_metrics = a.getRelativeToSurfaceXY().y + a.getHeightWidth().height;\n      var b_metrics = b.getRelativeToSurfaceXY().y + b.getHeightWidth().height;\n      return a_metrics > b_metrics ? a : b;\n    }, initialValue);\n    original_cursor_y = lowest_root_block.getRelativeToSurfaceXY().y + lowest_root_block.getHeightWidth().height + Blockly.BlockSvg.MIN_BLOCK_Y;\n  }\n  var filtered_top_blocks = top_blocks.filter(function (block) {\n    return !block.isMainBlock();\n  });\n  filtered_top_blocks.forEach(function (block) {\n    if (_this.RTL && block.comment) {\n      block.RTL = true;\n      block.comment.needsAutoPositioning_ = true;\n    }\n    var xy = block.getRelativeToSurfaceXY();\n    var cursor_x = is_import ? x : -xy.x;\n    var cursor_y = original_cursor_y - (is_import ? 0 : xy.y);\n    block.moveBy(cursor_x, cursor_y);\n    block.snapToGrid();\n    original_cursor_y = block.getRelativeToSurfaceXY().y + block.getHeightWidth().height + Blockly.BlockSvg.MIN_BLOCK_Y;\n  });\n  Blockly.Events.setGroup(false);\n  this.setResizesEnabled(true);\n};\n\n/**\n * Return an object with all the metrics required to size scrollbars for a\n * top level workspace.  The following properties are computed:\n * Coordinate system: pixel coordinates.\n * .viewHeight: Height of the visible rectangle,\n * .viewWidth: Width of the visible rectangle,\n * .contentHeight: Height of the contents,\n * .contentWidth: Width of the content,\n * .viewTop: Offset of top edge of visible rectangle from parent,\n * .viewLeft: Offset of left edge of visible rectangle from parent,\n * .contentTop: Offset of the top-most content from the y=0 coordinate,\n * .contentLeft: Offset of the left-most content from the x=0 coordinate.\n * .absolute_top: Top-edge of view.\n * .absolute_left: Left-edge of view.\n * .toolboxWidth: Width of toolbox, if it exists.  Otherwise zero.\n * .toolboxHeight: Height of toolbox, if it exists.  Otherwise zero.\n * .flyoutWidth: Width of the flyout if it is always open.  Otherwise zero.\n * .flyoutHeight: Height of flyout if it is always open.  Otherwise zero.\n * .toolboxPosition: Top, bottom, left or right.\n * @return {!Object} Contains size and position metrics of a top level\n *   workspace.\n * @private\n * @this Blockly.WorkspaceSvg\n */\nBlockly.WorkspaceSvg.getTopLevelWorkspaceMetrics_ = function () {\n  var toolbox_dimensions = Blockly.WorkspaceSvg.getDimensionsPx_(this.toolbox_);\n  var flyout_dimensions = Blockly.WorkspaceSvg.getDimensionsPx_(this.flyout_);\n\n  // Contains height and width in CSS pixels.\n  // svg_size is equivalent to the size of the injectionDiv at this point.\n  var svg_size = Blockly.svgSize(this.getParentSvg());\n  if (this.toolbox_) {\n    if (this.toolboxPosition === Blockly.TOOLBOX_AT_TOP || this.toolboxPosition === Blockly.TOOLBOX_AT_BOTTOM) {\n      svg_size.height -= toolbox_dimensions.height;\n    } else if (this.toolboxPosition === Blockly.TOOLBOX_AT_LEFT || this.toolboxPosition === Blockly.TOOLBOX_AT_RIGHT) {\n      svg_size.width -= toolbox_dimensions.width;\n    }\n  }\n\n  // svg_size is now the space taken up by the Blockly workspace, not including the toolbox.\n  var content_dimensions = Blockly.WorkspaceSvg.getContentDimensions_(this, svg_size);\n  var absolute_left = 0;\n  var absolute_top = 0;\n  if (this.toolbox_ && this.toolboxPosition === Blockly.TOOLBOX_AT_LEFT) {\n    absolute_top = 50; // deriv-bot: Add some spacing for Core header.\n    absolute_left = toolbox_dimensions.width;\n  }\n  if (this.toolbox_ && this.toolboxPosition === Blockly.TOOLBOX_AT_TOP) {\n    absolute_top = toolbox_dimensions.height + 50;\n  }\n  var metrics = {\n    contentHeight: content_dimensions.height,\n    contentWidth: content_dimensions.width,\n    contentTop: content_dimensions.top,\n    contentLeft: content_dimensions.left,\n    viewHeight: svg_size.height,\n    viewWidth: svg_size.width,\n    viewTop: -this.scrollY,\n    // Must be in pixels, somehow.\n    viewLeft: -this.scrollX,\n    // Must be in pixels, somehow.\n    absoluteTop: absolute_top,\n    absoluteLeft: absolute_left,\n    toolboxWidth: toolbox_dimensions.width,\n    toolboxHeight: toolbox_dimensions.height,\n    flyoutWidth: flyout_dimensions.width,\n    flyoutHeight: flyout_dimensions.height,\n    toolboxPosition: this.toolboxPosition\n  };\n  return metrics;\n};\n\n/**\n * Show the context menu for the workspace.\n * @param {!Event} e Mouse event.\n * @private\n */\n\n/**\n * Dispose of all blocks in workspace, with an optimization to prevent resizes.\n */\nBlockly.WorkspaceSvg.prototype.asyncClear = function () {\n  var _this2 = this;\n  var setLoading = _dbot_store__WEBPACK_IMPORTED_MODULE_1__["default"].instance.setLoading;\n  setLoading(true);\n  return new Promise(function (resolve) {\n    _this2.clear();\n    setLoading(false);\n    resolve();\n  });\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../bot-skeleton/src/scratch/hooks/workspace_svg.js\n'
                );

                /***/
            },
    },
]);
