'use strict';
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self['webpackChunk_deriv_bot_web_ui'] = self['webpackChunk_deriv_bot_web_ui'] || []).push([
    ['dalembert_max-stake-xml'],
    {
        /***/ './src/xml/dalembert_max-stake.xml':
            /*!*****************************************!*\
  !*** ./src/xml/dalembert_max-stake.xml ***!
  \*****************************************/
            /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                eval(
                    '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("<xml xmlns=\\"http://www.w3.org/1999/xhtml\\" is_dbot=\\"true\\" collection=\\"false\\">\\n  <variables>\\n    <variable type=\\"\\" id=\\"/shM51Nl|.I_R[9=PPJd\\" islocal=\\"false\\" iscloud=\\"false\\">dalembert:resultIsWin</variable>\\n    <variable type=\\"\\" id=\\"8-FGM6FF)6Y!:[]L7ZW0\\" islocal=\\"false\\" iscloud=\\"false\\">dalembert:profit</variable>\\n    <variable type=\\"\\" id=\\"weOIq50C[S,Wr;`!|gYR\\" islocal=\\"false\\" iscloud=\\"false\\">dalembert:totalProfit</variable>\\n    <variable type=\\"\\" id=\\"[w@pzvBAlteju[8,x#hD\\" islocal=\\"false\\" iscloud=\\"false\\">dalembert:tradeAgain</variable>\\n    <variable type=\\"\\" id=\\"ZGpA`4foih2T_0.]xE66\\" islocal=\\"false\\" iscloud=\\"false\\">dalembert:profitThreshold</variable>\\n    <variable type=\\"\\" id=\\"Xv=?/_{i5i7(YfFJqUM2\\" islocal=\\"false\\" iscloud=\\"false\\">dalembert:totalUnits</variable>\\n    <variable type=\\"\\" id=\\"-PgUuax5KQf1zn42iCd~\\" islocal=\\"false\\" iscloud=\\"false\\">dalembert:initialStake</variable>\\n    <variable type=\\"\\" id=\\"%o8CQE,uNdg`rmRL:-ca\\" islocal=\\"false\\" iscloud=\\"false\\">dalembert:lossThreshold</variable>\\n    <variable type=\\"\\" id=\\"%E[W9r:QZ/2?Y?7zpL(z\\" islocal=\\"false\\" iscloud=\\"false\\">won</variable>\\n    <variable type=\\"\\" id=\\"MMgdM5q/OL:^wIms8obu\\" islocal=\\"false\\" iscloud=\\"false\\">loss</variable>\\n    <variable type=\\"\\" id=\\"y)Al0290GkJ5zCJq;pfo\\" islocal=\\"false\\" iscloud=\\"false\\">Notification:totalProfit</variable>\\n    <variable type=\\"\\" id=\\"uTM3hkZFvI8cHTGU3@Im\\" islocal=\\"false\\" iscloud=\\"false\\">Notification:lossThresholdReached</variable>\\n    <variable type=\\"\\" id=\\",g^G%+--#CDpuJVWt}3P\\" islocal=\\"false\\" iscloud=\\"false\\">Notification:profitThresholdReached</variable>\\n    <variable type=\\"\\" id=\\"x^Ag/KQ(CK{q!8kwe0;:\\" islocal=\\"false\\" iscloud=\\"false\\">maxStake</variable>\\n    <variable type=\\"\\" id=\\"wNW1/CwvZQ:Cn3d/SS+p\\" islocal=\\"false\\" iscloud=\\"false\\">item</variable>\\n    <variable type=\\"\\" id=\\"kGMePgkd~JQ9#^23xJy[\\" islocal=\\"false\\" iscloud=\\"false\\">useMaxStake?</variable>\\n    <variable type=\\"\\" id=\\"nGC!N,V4~gxge3//ZqMs\\" islocal=\\"false\\" iscloud=\\"false\\">dalembert:changeInUnit</variable>\\n    <variable type=\\"\\" id=\\"(%X)fm`ac*=cJtd-P8tU\\" islocal=\\"false\\" iscloud=\\"false\\">Notification:currentStake</variable>\\n  </variables>\\n  <block type=\\"trade_definition\\" id=\\"S8h29bv2DDtW#WyF}Eva\\" deletable=\\"false\\" x=\\"0\\" y=\\"0\\">\\n    <statement name=\\"TRADE_OPTIONS\\">\\n      <block type=\\"trade_definition_market\\" id=\\"CAL$3(*qz%,|%p-@tWu,\\" deletable=\\"false\\" movable=\\"false\\">\\n        <field name=\\"MARKET_LIST\\">synthetic_index</field>\\n        <field name=\\"SUBMARKET_LIST\\">random_index</field>\\n        <field name=\\"SYMBOL_LIST\\">1HZ100V</field>\\n        <next>\\n          <block type=\\"trade_definition_tradetype\\" id=\\"1JDTS0%^EFc?!72k#Zzm\\" deletable=\\"false\\" movable=\\"false\\">\\n            <field name=\\"TRADETYPECAT_LIST\\">callput</field>\\n            <field name=\\"TRADETYPE_LIST\\">callput</field>\\n            <next>\\n              <block type=\\"trade_definition_contracttype\\" id=\\"y_:V!ihNraBJT1oV/z4H\\" deletable=\\"false\\" movable=\\"false\\">\\n                <field name=\\"TYPE_LIST\\">both</field>\\n                <next>\\n                  <block type=\\"trade_definition_candleinterval\\" id=\\":g(SG0@!|9=NZiADM]AT\\" deletable=\\"false\\" movable=\\"false\\">\\n                    <field name=\\"CANDLEINTERVAL_LIST\\">60</field>\\n                    <next>\\n                      <block type=\\"trade_definition_restartbuysell\\" id=\\"gAd13y{LVy%s4(hqgmfB\\" deletable=\\"false\\" movable=\\"false\\">\\n                        <field name=\\"TIME_MACHINE_ENABLED\\">FALSE</field>\\n                        <next>\\n                          <block type=\\"trade_definition_restartonerror\\" id=\\"*aUzV1ENk`-z`9hg_Apk\\" deletable=\\"false\\" movable=\\"false\\">\\n                            <field name=\\"RESTARTONERROR\\">TRUE</field>\\n                          </block>\\n                        </next>\\n                      </block>\\n                    </next>\\n                  </block>\\n                </next>\\n              </block>\\n            </next>\\n          </block>\\n        </next>\\n      </block>\\n    </statement>\\n    <statement name=\\"INITIALIZATION\\">\\n      <block type=\\"variables_set\\" id=\\"ods[F-yNES?hknl($0Q=\\">\\n        <field name=\\"VAR\\" id=\\"kGMePgkd~JQ9#^23xJy[\\" variabletype=\\"\\">useMaxStake?</field>\\n        <value name=\\"VALUE\\" strategy_value=\\"boolean_max_stake\\">\\n          <block type=\\"logic_boolean\\" id=\\"5XcvH`yeH:F[5V8q*!+@\\">\\n            <field name=\\"BOOL\\">TRUE</field>\\n          </block>\\n        </value>\\n        <next>\\n          <block type=\\"variables_set\\" id=\\"5zYkm?%M%dhWa.SDk_?Q\\">\\n            <field name=\\"VAR\\" id=\\"x^Ag/KQ(CK{q!8kwe0;:\\" variabletype=\\"\\">maxStake</field>\\n            <value name=\\"VALUE\\" strategy_value=\\"max_stake\\">\\n              <shadow type=\\"math_number\\" id=\\"VL+;XZ52`h#Y^pT]PC=D\\">\\n                <field name=\\"NUM\\">1000</field>\\n              </shadow>\\n            </value>\\n          </block>\\n        </next>\\n      </block>\\n    </statement>\\n    <statement name=\\"SUBMARKET\\">\\n      <block type=\\"trade_definition_tradeoptions\\" id=\\"m$azlE5x%ef8fEy,u;,,\\">\\n        <mutation has_first_barrier=\\"false\\" has_second_barrier=\\"false\\" has_prediction=\\"false\\"></mutation>\\n        <field name=\\"DURATIONTYPE_LIST\\">t</field>\\n        <value name=\\"DURATION\\" strategy_value=\\"duration\\">\\n          <shadow type=\\"math_number\\" id=\\"Zov-zc5py|}1d_PfSU)x\\">\\n            <field name=\\"NUM\\">1</field>\\n          </shadow>\\n        </value>\\n        <value name=\\"AMOUNT\\">\\n          <shadow type=\\"math_number\\">\\n            <field name=\\"NUM\\">1</field>\\n          </shadow>\\n          <block type=\\"procedures_callreturn\\" id=\\"N+RnzL60o00{/YicP^+t\\">\\n            <mutation name=\\"D\'Alembert Trade Amount\\"></mutation>\\n            <data>EmObAV!^T%mj8FmH$qw4</data>\\n          </block>\\n        </value>\\n      </block>\\n    </statement>\\n  </block>\\n  <block type=\\"after_purchase\\" id=\\":w?h)j*]?@+q/LM@,1r7\\" x=\\"808\\" y=\\"0\\">\\n    <statement name=\\"AFTERPURCHASE_STACK\\">\\n      <block type=\\"controls_if\\" id=\\"+a[84}f^_!,F5=3f$Uy^\\">\\n        <value name=\\"IF0\\">\\n          <block type=\\"procedures_callreturn\\" id=\\"Wrp{{4@tW:(N+%_!f!xu\\">\\n            <mutation name=\\"D\'Alembert Trade Again After Purchase\\">\\n              <arg name=\\"dalembert:profit\\"></arg>\\n              <arg name=\\"dalembert:resultIsWin\\"></arg>\\n            </mutation>\\n            <data>RI6JdsHz({df~bVVIE;f</data>\\n            <value name=\\"ARG0\\">\\n              <block type=\\"read_details\\" id=\\";@Pic?.Li0OCjGv-91Ur\\">\\n                <field name=\\"DETAIL_INDEX\\">4</field>\\n              </block>\\n            </value>\\n            <value name=\\"ARG1\\">\\n              <block type=\\"contract_check_result\\" id=\\"pmWi^^-CT7Pvl4*yhn,+\\">\\n                <field name=\\"CHECK_RESULT\\">win</field>\\n              </block>\\n            </value>\\n          </block>\\n        </value>\\n        <statement name=\\"DO0\\">\\n          <block type=\\"trade_again\\" id=\\"/;dLnlE!v7eHau;0e9$L\\"></block>\\n        </statement>\\n      </block>\\n    </statement>\\n  </block>\\n  <block type=\\"before_purchase\\" id=\\"`J0qOF#1|/@L,(N{xG8X\\" deletable=\\"false\\" x=\\"0\\" y=\\"648\\">\\n    <statement name=\\"BEFOREPURCHASE_STACK\\">\\n      <block type=\\"purchase\\" id=\\"H$KfQ`]v.,5_^kmBGDy7\\">\\n        <field name=\\"PURCHASE_LIST\\">CALL</field>\\n      </block>\\n    </statement>\\n  </block>\\n  <block type=\\"procedures_defnoreturn\\" id=\\"Z-37~d]E;0rXD;Nl]{o@\\" collapsed=\\"true\\" x=\\"0\\" y=\\"832\\">\\n    <mutation>\\n      <arg name=\\"dalembert:resultIsWin\\" varid=\\"/shM51Nl|.I_R[9=PPJd\\"></arg>\\n    </mutation>\\n    <field name=\\"NAME\\">D\'Alembert Core Functionality</field>\\n    <statement name=\\"STACK\\">\\n      <block type=\\"text_join\\" id=\\"+f+)u]eOl_h`8ej[voyw\\">\\n        <field name=\\"VARIABLE\\" id=\\"(%X)fm`ac*=cJtd-P8tU\\" variabletype=\\"\\">Notification:currentStake</field>\\n        <statement name=\\"STACK\\">\\n          <block type=\\"text_statement\\" id=\\";J=2QGW+mp,jAS9TdZ|Q\\">\\n            <value name=\\"TEXT\\">\\n              <shadow type=\\"text\\" id=\\"u%KG5Wu}HG,$p|VB|UHu\\">\\n                <field name=\\"TEXT\\">Current stake:</field>\\n              </shadow>\\n            </value>\\n            <next>\\n              <block type=\\"text_statement\\" id=\\"%,AqzfU|}/Dx?LdYF)=j\\">\\n                <value name=\\"TEXT\\">\\n                  <shadow type=\\"text\\" id=\\";7kuHL01;GA+bv_5mp@E\\">\\n                    <field name=\\"TEXT\\"></field>\\n                  </shadow>\\n                  <block type=\\"procedures_callreturn\\" id=\\"`rQ,v8R),Zs2D+~]zclS\\">\\n                    <mutation name=\\"D\'Alembert Trade Amount\\"></mutation>\\n                    <data>EmObAV!^T%mj8FmH$qw4</data>\\n                  </block>\\n                </value>\\n              </block>\\n            </next>\\n          </block>\\n        </statement>\\n        <next>\\n          <block type=\\"notify\\" id=\\"zQN_,e[!@N4gUkPFgFY-\\">\\n            <field name=\\"NOTIFICATION_TYPE\\">warn</field>\\n            <field name=\\"NOTIFICATION_SOUND\\">silent</field>\\n            <value name=\\"MESSAGE\\">\\n              <shadow type=\\"text\\" id=\\"f[Zkw4B+X+d:)}])Iak@\\">\\n                <field name=\\"TEXT\\">abc</field>\\n              </shadow>\\n              <block type=\\"variables_get\\" id=\\"6S,*6ny~?fN`yM[1kQJ4\\">\\n                <field name=\\"VAR\\" id=\\"(%X)fm`ac*=cJtd-P8tU\\" variabletype=\\"\\">Notification:currentStake</field>\\n              </block>\\n            </value>\\n            <next>\\n              <block type=\\"controls_if\\" id=\\"_/=wck]-x]xCtN1{6tmA\\">\\n                <mutation else=\\"1\\"></mutation>\\n                <value name=\\"IF0\\">\\n                  <block type=\\"variables_get\\" id=\\"NwS^C~iIqeT*Lv%xW=zD\\">\\n                    <field name=\\"VAR\\" id=\\"/shM51Nl|.I_R[9=PPJd\\" variabletype=\\"\\">dalembert:resultIsWin</field>\\n                  </block>\\n                </value>\\n                <statement name=\\"DO0\\">\\n                  <block type=\\"variables_set\\" id=\\"mA1b~rG(;BN~zemGwthV\\">\\n                    <field name=\\"VAR\\" id=\\"o((rBg*rL/qm;RU%PM7_\\" variabletype=\\"\\">dalembert:totalUnits</field>\\n                    <value name=\\"VALUE\\">\\n                      <block type=\\"math_arithmetic\\" id=\\"FOv}cpsixo3M,fTMoxl]\\">\\n                        <field name=\\"OP\\">MINUS</field>\\n                        <value name=\\"A\\">\\n                          <shadow type=\\"math_number\\">\\n                            <field name=\\"NUM\\">1</field>\\n                          </shadow>\\n                          <block type=\\"variables_get\\" id=\\"Im*Ml*f*_oi)nrK`osaC\\">\\n                            <field name=\\"VAR\\" id=\\"o((rBg*rL/qm;RU%PM7_\\" variabletype=\\"\\">dalembert:totalUnits</field>\\n                          </block>\\n                        </value>\\n                        <value name=\\"B\\">\\n                          <block type=\\"variables_get\\" id=\\"yB?OOKx-yXMaA*:p%]?L\\">\\n                            <field name=\\"VAR\\" id=\\"nGC!N,V4~gxge3//ZqMs\\" variabletype=\\"\\">dalembert:changeInUnit</field>\\n                          </block>\\n                        </value>\\n                      </block>\\n                    </value>\\n                    <next>\\n                      <block type=\\"controls_if\\" id=\\"qViz0Dvts^*Uw]v?hmP0\\">\\n                        <value name=\\"IF0\\">\\n                          <block type=\\"logic_compare\\" id=\\"kY4%*-@K52-jiL5$P2]=\\">\\n                            <field name=\\"OP\\">LT</field>\\n                            <value name=\\"A\\">\\n                              <block type=\\"variables_get\\" id=\\"Ts3}g.~9+~6K5-7V#2-F\\">\\n                                <field name=\\"VAR\\" id=\\"o((rBg*rL/qm;RU%PM7_\\" variabletype=\\"\\">dalembert:totalUnits</field>\\n                              </block>\\n                            </value>\\n                            <value name=\\"B\\">\\n                              <block type=\\"math_number\\" id=\\"EV@s_(^]kP,UBSuf;k_l\\">\\n                                <field name=\\"NUM\\">1</field>\\n                              </block>\\n                            </value>\\n                          </block>\\n                        </value>\\n                        <statement name=\\"DO0\\">\\n                          <block type=\\"variables_set\\" id=\\"0.OrOV/(}#;ZAcIv8$v4\\">\\n                            <field name=\\"VAR\\" id=\\"o((rBg*rL/qm;RU%PM7_\\" variabletype=\\"\\">dalembert:totalUnits</field>\\n                            <value name=\\"VALUE\\">\\n                              <block type=\\"math_number\\" id=\\"vu]OHD91fS@W0%bMhH@9\\">\\n                                <field name=\\"NUM\\">1</field>\\n                              </block>\\n                            </value>\\n                          </block>\\n                        </statement>\\n                      </block>\\n                    </next>\\n                  </block>\\n                </statement>\\n                <statement name=\\"ELSE\\">\\n                  <block type=\\"variables_set\\" id=\\"AKbtRY7t336`swq];yoh\\">\\n                    <field name=\\"VAR\\" id=\\"o((rBg*rL/qm;RU%PM7_\\" variabletype=\\"\\">dalembert:totalUnits</field>\\n                    <value name=\\"VALUE\\">\\n                      <block type=\\"math_arithmetic\\" id=\\"%7gp$c-LN}6-5NP6LE9X\\">\\n                        <field name=\\"OP\\">ADD</field>\\n                        <value name=\\"A\\">\\n                          <shadow type=\\"math_number\\" id=\\"TOP9AeSQg#2YYrYW+iK~\\">\\n                            <field name=\\"NUM\\">1</field>\\n                          </shadow>\\n                          <block type=\\"variables_get\\" id=\\"2Z0Gov6Fb%HqcDklK,I-\\">\\n                            <field name=\\"VAR\\" id=\\"o((rBg*rL/qm;RU%PM7_\\" variabletype=\\"\\">dalembert:totalUnits</field>\\n                          </block>\\n                        </value>\\n                        <value name=\\"B\\">\\n                          <shadow type=\\"math_number\\" id=\\"5}a$|p!Rf2E,fbo/aI4?\\">\\n                            <field name=\\"NUM\\">1</field>\\n                          </shadow>\\n                          <block type=\\"variables_get\\" id=\\"Hz4;F%CJ:#IvC+@BZ8PP\\">\\n                            <field name=\\"VAR\\" id=\\"nGC!N,V4~gxge3//ZqMs\\" variabletype=\\"\\">dalembert:changeInUnit</field>\\n                          </block>\\n                        </value>\\n                      </block>\\n                    </value>\\n                    <next>\\n                      <block type=\\"controls_if\\" id=\\"kb,-oANKX.ip*pKu~$O:\\">\\n                        <value name=\\"IF0\\">\\n                          <block type=\\"logic_compare\\" id=\\"fc^*b4o|5ye7Kp#LG;H2\\">\\n                            <field name=\\"OP\\">GT</field>\\n                            <value name=\\"A\\">\\n                              <block type=\\"logic_operation\\" id=\\"l!%U6-UY{GBkR;P$q4Ga\\">\\n                                <field name=\\"OP\\">AND</field>\\n                                <value name=\\"A\\">\\n                                  <block type=\\"variables_get\\" id=\\"m;w7$qbTH`u!5kRA_DP.\\">\\n                                    <field name=\\"VAR\\" id=\\"kGMePgkd~JQ9#^23xJy[\\" variabletype=\\"\\">useMaxStake?</field>\\n                                  </block>\\n                                </value>\\n                                <value name=\\"B\\">\\n                                  <block type=\\"procedures_callreturn\\" id=\\"052:APsrk@/5}S/JNyIq\\">\\n                                    <mutation name=\\"D\'Alembert Trade Amount\\"></mutation>\\n                                    <data>EmObAV!^T%mj8FmH$qw4</data>\\n                                  </block>\\n                                </value>\\n                              </block>\\n                            </value>\\n                            <value name=\\"B\\">\\n                              <block type=\\"variables_get\\" id=\\"VRTCUTK*KW]VMUf4ab^a\\">\\n                                <field name=\\"VAR\\" id=\\"x^Ag/KQ(CK{q!8kwe0;:\\" variabletype=\\"\\">maxStake</field>\\n                              </block>\\n                            </value>\\n                          </block>\\n                        </value>\\n                        <statement name=\\"DO0\\">\\n                          <block type=\\"variables_set\\" id=\\"w2-6K;;V7wo0kQz^).AJ\\">\\n                            <field name=\\"VAR\\" id=\\"o((rBg*rL/qm;RU%PM7_\\" variabletype=\\"\\">dalembert:totalUnits</field>\\n                            <value name=\\"VALUE\\">\\n                              <block type=\\"math_number\\" id=\\"RpZ[zW8WA]![EDY{;~IZ\\">\\n                                <field name=\\"NUM\\">1</field>\\n                              </block>\\n                            </value>\\n                            <next>\\n                              <block type=\\"notify\\" id=\\"?n|Qa8-k41ii$Z_m_iRb\\">\\n                                <field name=\\"NOTIFICATION_TYPE\\">error</field>\\n                                <field name=\\"NOTIFICATION_SOUND\\">silent</field>\\n                                <value name=\\"MESSAGE\\">\\n                                  <shadow type=\\"text\\" id=\\"*nSCY~^JfE{kNpc{~%K8\\">\\n                                    <field name=\\"TEXT\\">Stake resets for the next trade (reason: exceeds max stake amount)</field>\\n                                  </shadow>\\n                                </value>\\n                              </block>\\n                            </next>\\n                          </block>\\n                        </statement>\\n                      </block>\\n                    </next>\\n                  </block>\\n                </statement>\\n              </block>\\n            </next>\\n          </block>\\n        </next>\\n      </block>\\n    </statement>\\n  </block>\\n  <block type=\\"procedures_defreturn\\" id=\\"EmObAV!^T%mj8FmH$qw4\\" collapsed=\\"true\\" x=\\"0\\" y=\\"928\\">\\n    <field name=\\"NAME\\">D\'Alembert Trade Amount</field>\\n    <statement name=\\"STACK\\">\\n      <block type=\\"controls_if\\" id=\\",(7?SH-dD0YO4N(j2|Ca\\">\\n        <value name=\\"IF0\\">\\n          <block type=\\"logic_compare\\" id=\\"Uq#.hcd$auJ)gcUi9P[o\\">\\n            <field name=\\"OP\\">EQ</field>\\n            <value name=\\"A\\">\\n              <block type=\\"variables_get\\" id=\\"myak3L(HNC4,k/r7D)?7\\">\\n                <field name=\\"VAR\\" id=\\"ZGpA`4foih2T_0.]xE66\\" variabletype=\\"\\">dalembert:profitThreshold</field>\\n              </block>\\n            </value>\\n            <value name=\\"B\\">\\n              <block type=\\"logic_null\\" id=\\"%08%qoE;ZNE%]]9PHaZL\\"></block>\\n            </value>\\n          </block>\\n        </value>\\n        <statement name=\\"DO0\\">\\n          <block type=\\"variables_set\\" id=\\"Y=Z$E2zJKQ`l[H,_C|w@\\">\\n            <field name=\\"VAR\\" id=\\"ZGpA`4foih2T_0.]xE66\\" variabletype=\\"\\">dalembert:profitThreshold</field>\\n            <value name=\\"VALUE\\" strategy_value=\\"profit\\">\\n              <shadow type=\\"math_number\\" id=\\"G/w^g.RPP`K%|8_ONr66\\">\\n                <field name=\\"NUM\\">5000</field>\\n              </shadow>\\n            </value>\\n          </block>\\n        </statement>\\n        <next>\\n          <block type=\\"controls_if\\" id=\\"*x.6`GeZPW6,`f}ANshq\\">\\n            <value name=\\"IF0\\">\\n              <block type=\\"logic_compare\\" id=\\"6`49zommf9($yZ;L?7of\\">\\n                <field name=\\"OP\\">EQ</field>\\n                <value name=\\"A\\">\\n                  <block type=\\"variables_get\\" id=\\"f/YuBp3,UsEyXDl6TB3q\\">\\n                    <field name=\\"VAR\\" id=\\"%o8CQE,uNdg`rmRL:-ca\\" variabletype=\\"\\">dalembert:lossThreshold</field>\\n                  </block>\\n                </value>\\n                <value name=\\"B\\">\\n                  <block type=\\"logic_null\\" id=\\"iRv:X6j=2/DQ#U_18]d4\\"></block>\\n                </value>\\n              </block>\\n            </value>\\n            <statement name=\\"DO0\\">\\n              <block type=\\"variables_set\\" id=\\"?VovWY,aXgs.y1djI*-g\\">\\n                <field name=\\"VAR\\" id=\\"%o8CQE,uNdg`rmRL:-ca\\" variabletype=\\"\\">dalembert:lossThreshold</field>\\n                <value name=\\"VALUE\\" strategy_value=\\"loss\\">\\n                  <shadow type=\\"math_number\\" id=\\"9Ns@K/Uz41f/BYBUDt_M\\">\\n                    <field name=\\"NUM\\">3000</field>\\n                  </shadow>\\n                </value>\\n              </block>\\n            </statement>\\n            <next>\\n              <block type=\\"controls_if\\" id=\\"F;.!Do6-)o2WcCck(brg\\">\\n                <value name=\\"IF0\\">\\n                  <block type=\\"logic_compare\\" id=\\"![emA!]O(^me^x${3TE;\\">\\n                    <field name=\\"OP\\">EQ</field>\\n                    <value name=\\"A\\">\\n                      <block type=\\"variables_get\\" id=\\"V/uwxoFd6yyopbz{[#Uh\\">\\n                        <field name=\\"VAR\\" id=\\"-PgUuax5KQf1zn42iCd~\\" variabletype=\\"\\">dalembert:initialStake</field>\\n                      </block>\\n                    </value>\\n                    <value name=\\"B\\">\\n                      <block type=\\"logic_null\\" id=\\"9j!0kv:!$S#cg`M)q$Mg\\"></block>\\n                    </value>\\n                  </block>\\n                </value>\\n                <statement name=\\"DO0\\">\\n                  <block type=\\"variables_set\\" id=\\"mq}/@a{Qc-KeTxmcqFjU\\">\\n                    <field name=\\"VAR\\" id=\\"-PgUuax5KQf1zn42iCd~\\" variabletype=\\"\\">dalembert:initialStake</field>\\n                    <value name=\\"VALUE\\" strategy_value=\\"stake\\">\\n                      <shadow type=\\"math_number\\" id=\\"RwW?sM1m]g+n?{G%!kva\\">\\n                        <field name=\\"NUM\\">100</field>\\n                      </shadow>\\n                    </value>\\n                  </block>\\n                </statement>\\n                <next>\\n                  <block type=\\"controls_if\\" id=\\"5Q,@|#C+MSO=ZB^WtC[7\\">\\n                    <value name=\\"IF0\\">\\n                      <block type=\\"logic_compare\\" id=\\"E?}hkyfNNpByBzM3!k9!\\">\\n                        <field name=\\"OP\\">EQ</field>\\n                        <value name=\\"A\\">\\n                          <block type=\\"variables_get\\" id=\\"pc$}:5k0^3*?DiurlDnK\\">\\n                            <field name=\\"VAR\\" id=\\"nGC!N,V4~gxge3//ZqMs\\" variabletype=\\"\\">dalembert:changeInUnit</field>\\n                          </block>\\n                        </value>\\n                        <value name=\\"B\\">\\n                          <block type=\\"logic_null\\" id=\\"@RI8wOc}u-9;vFr7Xd(5\\"></block>\\n                        </value>\\n                      </block>\\n                    </value>\\n                    <statement name=\\"DO0\\">\\n                      <block type=\\"variables_set\\" id=\\"ZwPpNMsK]IT,,eM_`vn)\\">\\n                        <field name=\\"VAR\\" id=\\"nGC!N,V4~gxge3//ZqMs\\" variabletype=\\"\\">dalembert:changeInUnit</field>\\n                        <value name=\\"VALUE\\" strategy_value=\\"dalembert_unit\\">\\n                          <shadow type=\\"math_number\\" id=\\"p[LNf|7[5av$)xK[t~e;\\">\\n                            <field name=\\"NUM\\">1</field>\\n                          </shadow>\\n                        </value>\\n                      </block>\\n                    </statement>\\n                    <next>\\n                      <block type=\\"controls_if\\" id=\\"sG%4hlo-P26Nr0#kIhMF\\">\\n                        <value name=\\"IF0\\">\\n                          <block type=\\"logic_compare\\" id=\\"-uC[[Ga(p{VT#7ovNfr4\\">\\n                            <field name=\\"OP\\">EQ</field>\\n                            <value name=\\"A\\">\\n                              <block type=\\"variables_get\\" id=\\"7$B#MO,8@;GIu@Mofrx}\\">\\n                                <field name=\\"VAR\\" id=\\"o((rBg*rL/qm;RU%PM7_\\" variabletype=\\"\\">dalembert:totalUnits</field>\\n                              </block>\\n                            </value>\\n                            <value name=\\"B\\">\\n                              <block type=\\"logic_null\\" id=\\"B{U,C`Y$G]}v#Kq]@x:p\\"></block>\\n                            </value>\\n                          </block>\\n                        </value>\\n                        <statement name=\\"DO0\\">\\n                          <block type=\\"variables_set\\" id=\\"iX^w=Jc(b/VlAIdNMduh\\">\\n                            <field name=\\"VAR\\" id=\\"o((rBg*rL/qm;RU%PM7_\\" variabletype=\\"\\">dalembert:totalUnits</field>\\n                            <value name=\\"VALUE\\">\\n                              <shadow type=\\"math_number\\" id=\\"d#8t+7WO$h2wHp|@8_eA\\">\\n                                <field name=\\"NUM\\">1</field>\\n                              </shadow>\\n                            </value>\\n                          </block>\\n                        </statement>\\n                        <next>\\n                          <block type=\\"controls_if\\" id=\\"F)U6+Uka*K,jqGK@}({H\\">\\n                            <value name=\\"IF0\\">\\n                              <block type=\\"logic_compare\\" id=\\":H|M3?~SzqICLD`V#)/x\\">\\n                                <field name=\\"OP\\">EQ</field>\\n                                <value name=\\"A\\">\\n                                  <block type=\\"variables_get\\" id=\\"#6Ab%#a4!6|9q:XHS`pb\\">\\n                                    <field name=\\"VAR\\" id=\\"weOIq50C[S,Wr;`!|gYR\\" variabletype=\\"\\">dalembert:totalProfit</field>\\n                                  </block>\\n                                </value>\\n                                <value name=\\"B\\">\\n                                  <block type=\\"logic_null\\" id=\\"nFKikFg~}zpQZ7t}HI)d\\"></block>\\n                                </value>\\n                              </block>\\n                            </value>\\n                            <statement name=\\"DO0\\">\\n                              <block type=\\"variables_set\\" id=\\"3(a50!~_FArRjyUd)*np\\">\\n                                <field name=\\"VAR\\" id=\\"weOIq50C[S,Wr;`!|gYR\\" variabletype=\\"\\">dalembert:totalProfit</field>\\n                                <value name=\\"VALUE\\">\\n                                  <shadow type=\\"math_number\\" id=\\"*6;H2j+wK=C6V,Pp}Oe`\\">\\n                                    <field name=\\"NUM\\">0</field>\\n                                  </shadow>\\n                                </value>\\n                              </block>\\n                            </statement>\\n                          </block>\\n                        </next>\\n                      </block>\\n                    </next>\\n                  </block>\\n                </next>\\n              </block>\\n            </next>\\n          </block>\\n        </next>\\n      </block>\\n    </statement>\\n    <value name=\\"RETURN\\">\\n      <block type=\\"math_arithmetic\\" id=\\"US22LDE-R$fo.w[=-2E;\\">\\n        <field name=\\"OP\\">MULTIPLY</field>\\n        <value name=\\"A\\">\\n          <shadow type=\\"math_number\\">\\n            <field name=\\"NUM\\">1</field>\\n          </shadow>\\n          <block type=\\"variables_get\\" id=\\"WL}Si1.(d7}}-{ii1}Rl\\">\\n            <field name=\\"VAR\\" id=\\"-PgUuax5KQf1zn42iCd~\\" variabletype=\\"\\">dalembert:initialStake</field>\\n          </block>\\n        </value>\\n        <value name=\\"B\\">\\n          <shadow type=\\"math_number\\">\\n            <field name=\\"NUM\\">1</field>\\n          </shadow>\\n          <block type=\\"variables_get\\" id=\\"T4[Q(H?!GZT.5qxN/Wsz\\">\\n            <field name=\\"VAR\\" id=\\"o((rBg*rL/qm;RU%PM7_\\" variabletype=\\"\\">dalembert:totalUnits</field>\\n          </block>\\n        </value>\\n      </block>\\n    </value>\\n  </block>\\n  <block type=\\"procedures_defreturn\\" id=\\"RI6JdsHz({df~bVVIE;f\\" collapsed=\\"true\\" x=\\"0\\" y=\\"1024\\">\\n    <mutation>\\n      <arg name=\\"dalembert:profit\\" varid=\\"8-FGM6FF)6Y!:[]L7ZW0\\"></arg>\\n      <arg name=\\"dalembert:resultIsWin\\" varid=\\"/shM51Nl|.I_R[9=PPJd\\"></arg>\\n    </mutation>\\n    <field name=\\"NAME\\">D\'Alembert Trade Again After Purchase</field>\\n    <statement name=\\"STACK\\">\\n      <block type=\\"math_change\\" id=\\"KbSUl~PGM5H:S{)Vo;x(\\">\\n        <field name=\\"VAR\\" id=\\"weOIq50C[S,Wr;`!|gYR\\" variabletype=\\"\\">dalembert:totalProfit</field>\\n        <value name=\\"DELTA\\">\\n          <shadow type=\\"math_number\\">\\n            <field name=\\"NUM\\">1</field>\\n          </shadow>\\n          <block type=\\"variables_get\\" id=\\"@Meat^O|{Jj*b/s,_PsG\\">\\n            <field name=\\"VAR\\" id=\\"8-FGM6FF)6Y!:[]L7ZW0\\" variabletype=\\"\\">dalembert:profit</field>\\n          </block>\\n        </value>\\n        <next>\\n          <block type=\\"variables_set\\" id=\\"nCLw{7#[Vwq1#]92K=;4\\">\\n            <field name=\\"VAR\\" id=\\"weOIq50C[S,Wr;`!|gYR\\" variabletype=\\"\\">dalembert:totalProfit</field>\\n            <value name=\\"VALUE\\">\\n              <block type=\\"math_arithmetic\\" id=\\"jZl``irrVpi_K].~c+]/\\">\\n                <field name=\\"OP\\">DIVIDE</field>\\n                <value name=\\"A\\">\\n                  <shadow type=\\"math_number\\">\\n                    <field name=\\"NUM\\">1</field>\\n                  </shadow>\\n                  <block type=\\"math_round\\" id=\\".~K2:,9J(5BA`9jY^IUN\\">\\n                    <field name=\\"OP\\">ROUND</field>\\n                    <value name=\\"NUM\\">\\n                      <shadow type=\\"math_number\\">\\n                        <field name=\\"NUM\\">3.1</field>\\n                      </shadow>\\n                      <block type=\\"math_arithmetic\\" id=\\"*rClskQ40.Np`zs40a|-\\">\\n                        <field name=\\"OP\\">MULTIPLY</field>\\n                        <value name=\\"A\\">\\n                          <shadow type=\\"math_number\\">\\n                            <field name=\\"NUM\\">1</field>\\n                          </shadow>\\n                          <block type=\\"variables_get\\" id=\\"^T/v:ZREB3kFaEsT,K4*\\">\\n                            <field name=\\"VAR\\" id=\\"weOIq50C[S,Wr;`!|gYR\\" variabletype=\\"\\">dalembert:totalProfit</field>\\n                          </block>\\n                        </value>\\n                        <value name=\\"B\\">\\n                          <shadow type=\\"math_number\\" id=\\"_7oEE4VLfSWL:?(xev((\\">\\n                            <field name=\\"NUM\\">100</field>\\n                          </shadow>\\n                        </value>\\n                      </block>\\n                    </value>\\n                  </block>\\n                </value>\\n                <value name=\\"B\\">\\n                  <shadow type=\\"math_number\\" id=\\"+R-V5nHA2*uPTJzp(RSm\\">\\n                    <field name=\\"NUM\\">100</field>\\n                  </shadow>\\n                </value>\\n              </block>\\n            </value>\\n            <next>\\n              <block type=\\"procedures_callnoreturn\\" id=\\"d9c]3Se?`}O%.vY%mmHZ\\">\\n                <mutation name=\\"D\'Alembert Core Functionality\\">\\n                  <arg name=\\"dalembert:resultIsWin\\"></arg>\\n                </mutation>\\n                <data>Z-37~d]E;0rXD;Nl]{o@</data>\\n                <value name=\\"ARG0\\">\\n                  <block type=\\"variables_get\\" id=\\"c?0U5G#:kk(cdrrZgP/Z\\">\\n                    <field name=\\"VAR\\" id=\\"/shM51Nl|.I_R[9=PPJd\\" variabletype=\\"\\">dalembert:resultIsWin</field>\\n                  </block>\\n                </value>\\n                <next>\\n                  <block type=\\"text_join\\" id=\\"D%uq.rRMXyoUj05;l;,3\\">\\n                    <field name=\\"VARIABLE\\" id=\\"y)Al0290GkJ5zCJq;pfo\\" variabletype=\\"\\">Notification:totalProfit</field>\\n                    <statement name=\\"STACK\\">\\n                      <block type=\\"text_statement\\" id=\\"z4ctT[~{^d)oTKXa;m^A\\">\\n                        <value name=\\"TEXT\\">\\n                          <shadow type=\\"text\\" id=\\"NGd90lLbe*CR;M3bE.h|\\">\\n                            <field name=\\"TEXT\\">Total Profit:</field>\\n                          </shadow>\\n                        </value>\\n                        <next>\\n                          <block type=\\"text_statement\\" id=\\"$?9Z6)43h,1}`ebd1b#(\\">\\n                            <value name=\\"TEXT\\">\\n                              <shadow type=\\"text\\">\\n                                <field name=\\"TEXT\\"></field>\\n                              </shadow>\\n                              <block type=\\"variables_get\\" id=\\"K~~4NDB}jBAjh^nZM@;r\\">\\n                                <field name=\\"VAR\\" id=\\"weOIq50C[S,Wr;`!|gYR\\" variabletype=\\"\\">dalembert:totalProfit</field>\\n                              </block>\\n                            </value>\\n                          </block>\\n                        </next>\\n                      </block>\\n                    </statement>\\n                    <next>\\n                      <block type=\\"notify\\" id=\\"*vY8nukFB6~GAbLc3_Cd\\">\\n                        <field name=\\"NOTIFICATION_TYPE\\">info</field>\\n                        <field name=\\"NOTIFICATION_SOUND\\">silent</field>\\n                        <value name=\\"MESSAGE\\">\\n                          <shadow type=\\"text\\">\\n                            <field name=\\"TEXT\\">abc</field>\\n                          </shadow>\\n                          <block type=\\"variables_get\\" id=\\"X7*OuZJoYglG5!Kl3UJE\\">\\n                            <field name=\\"VAR\\" id=\\"y)Al0290GkJ5zCJq;pfo\\" variabletype=\\"\\">Notification:totalProfit</field>\\n                          </block>\\n                        </value>\\n                        <next>\\n                          <block type=\\"variables_set\\" id=\\",c/z%8k6EWkqc:fZtzfE\\">\\n                            <field name=\\"VAR\\" id=\\"[w@pzvBAlteju[8,x#hD\\" variabletype=\\"\\">dalembert:tradeAgain</field>\\n                            <value name=\\"VALUE\\">\\n                              <block type=\\"logic_boolean\\" id=\\"s@hLOZacb94r(b`=-?m=\\">\\n                                <field name=\\"BOOL\\">FALSE</field>\\n                              </block>\\n                            </value>\\n                            <next>\\n                              <block type=\\"controls_if\\" id=\\"YF*U!j=#qjyUpBToCklJ\\">\\n                                <mutation else=\\"1\\"></mutation>\\n                                <value name=\\"IF0\\">\\n                                  <block type=\\"logic_compare\\" id=\\".C,!tn_Dmn}UWJEK:g;r\\">\\n                                    <field name=\\"OP\\">LT</field>\\n                                    <value name=\\"A\\">\\n                                      <block type=\\"variables_get\\" id=\\"M*l_mEuzY747A/9P/k(0\\">\\n                                        <field name=\\"VAR\\" id=\\"weOIq50C[S,Wr;`!|gYR\\" variabletype=\\"\\">dalembert:totalProfit</field>\\n                                      </block>\\n                                    </value>\\n                                    <value name=\\"B\\">\\n                                      <block type=\\"variables_get\\" id=\\"{}m6MN)qLd:$#:OxiAWJ\\">\\n                                        <field name=\\"VAR\\" id=\\"ZGpA`4foih2T_0.]xE66\\" variabletype=\\"\\">dalembert:profitThreshold</field>\\n                                      </block>\\n                                    </value>\\n                                  </block>\\n                                </value>\\n                                <statement name=\\"DO0\\">\\n                                  <block type=\\"controls_if\\" id=\\";z4Hx5/7p=fR6p{5suJC\\">\\n                                    <mutation else=\\"1\\"></mutation>\\n                                    <value name=\\"IF0\\">\\n                                      <block type=\\"logic_compare\\" id=\\"bNH=OA[a^nPR_ru$[#3V\\">\\n                                        <field name=\\"OP\\">GT</field>\\n                                        <value name=\\"A\\">\\n                                          <block type=\\"variables_get\\" id=\\";-*3mu!xGYYyZZk|gcs9\\">\\n                                            <field name=\\"VAR\\" id=\\"weOIq50C[S,Wr;`!|gYR\\" variabletype=\\"\\">dalembert:totalProfit</field>\\n                                          </block>\\n                                        </value>\\n                                        <value name=\\"B\\">\\n                                          <block type=\\"math_single\\" id=\\"Wou%(S]*gz}DGyGdCmF+\\">\\n                                            <field name=\\"OP\\">NEG</field>\\n                                            <value name=\\"NUM\\">\\n                                              <shadow type=\\"math_number\\">\\n                                                <field name=\\"NUM\\">9</field>\\n                                              </shadow>\\n                                              <block type=\\"variables_get\\" id=\\")O~FX{%sJo`UREf7KzcC\\">\\n                                                <field name=\\"VAR\\" id=\\"%o8CQE,uNdg`rmRL:-ca\\" variabletype=\\"\\">dalembert:lossThreshold</field>\\n                                              </block>\\n                                            </value>\\n                                          </block>\\n                                        </value>\\n                                      </block>\\n                                    </value>\\n                                    <statement name=\\"DO0\\">\\n                                      <block type=\\"variables_set\\" id=\\"KtG-u#*0@:_w1Hb$a+Rs\\">\\n                                        <field name=\\"VAR\\" id=\\"[w@pzvBAlteju[8,x#hD\\" variabletype=\\"\\">dalembert:tradeAgain</field>\\n                                        <value name=\\"VALUE\\">\\n                                          <block type=\\"logic_boolean\\" id=\\"_L,b@{:SNDs;CVZ`_+M|\\">\\n                                            <field name=\\"BOOL\\">TRUE</field>\\n                                          </block>\\n                                        </value>\\n                                      </block>\\n                                    </statement>\\n                                    <statement name=\\"ELSE\\">\\n                                      <block type=\\"text_join\\" id=\\"$wU*5]hG$jv,NIz.U9Cf\\">\\n                                        <field name=\\"VARIABLE\\" id=\\"uTM3hkZFvI8cHTGU3@Im\\" variabletype=\\"\\">Notification:lossThresholdReached</field>\\n                                        <statement name=\\"STACK\\">\\n                                          <block type=\\"text_statement\\" id=\\"]Z4Yoi%Ml,@)%HZ_n}~w\\">\\n                                            <value name=\\"TEXT\\">\\n                                              <shadow type=\\"text\\" id=\\"W5!)Xu@6bPx=c(wubC3e\\">\\n                                                <field name=\\"TEXT\\">Loss threshold triggered. Total Loss:</field>\\n                                              </shadow>\\n                                            </value>\\n                                            <next>\\n                                              <block type=\\"text_statement\\" id=\\"H_!Csgh~sV2/L-h/(~pL\\">\\n                                                <value name=\\"TEXT\\">\\n                                                  <shadow type=\\"text\\">\\n                                                    <field name=\\"TEXT\\"></field>\\n                                                  </shadow>\\n                                                  <block type=\\"math_single\\" id=\\"=FAFuZ{|jPm`t%gE)_+$\\">\\n                                                    <field name=\\"OP\\">NEG</field>\\n                                                    <value name=\\"NUM\\">\\n                                                      <shadow type=\\"math_number\\">\\n                                                        <field name=\\"NUM\\">9</field>\\n                                                      </shadow>\\n                                                      <block type=\\"variables_get\\" id=\\"oCe(8,VsGnhr0u9PJ$r=\\">\\n                                                        <field name=\\"VAR\\" id=\\"weOIq50C[S,Wr;`!|gYR\\" variabletype=\\"\\">dalembert:totalProfit</field>\\n                                                      </block>\\n                                                    </value>\\n                                                  </block>\\n                                                </value>\\n                                              </block>\\n                                            </next>\\n                                          </block>\\n                                        </statement>\\n                                        <next>\\n                                          <block type=\\"notify\\" id=\\"5Qw`EQbfjlak9R{6%NQe\\">\\n                                            <field name=\\"NOTIFICATION_TYPE\\">error</field>\\n                                            <field name=\\"NOTIFICATION_SOUND\\">silent</field>\\n                                            <value name=\\"MESSAGE\\">\\n                                              <shadow type=\\"text\\" id=\\"AR*95}aMV(FbzHBxBU+g\\">\\n                                                <field name=\\"TEXT\\">abc</field>\\n                                              </shadow>\\n                                              <block type=\\"variables_get\\" id=\\"RciPt$L]8SskoqL[UC;|\\">\\n                                                <field name=\\"VAR\\" id=\\"uTM3hkZFvI8cHTGU3@Im\\" variabletype=\\"\\">Notification:lossThresholdReached</field>\\n                                              </block>\\n                                            </value>\\n                                            <next>\\n                                              <block type=\\"text_print\\" id=\\".|-?8JHw};Ae0e+_rTtT\\">\\n                                                <value name=\\"TEXT\\">\\n                                                  <shadow type=\\"text\\">\\n                                                    <field name=\\"TEXT\\">abc</field>\\n                                                  </shadow>\\n                                                  <block type=\\"variables_get\\" id=\\"D4S$@b{H[$=-L/^Rx-MP\\">\\n                                                    <field name=\\"VAR\\" id=\\"uTM3hkZFvI8cHTGU3@Im\\" variabletype=\\"\\">Notification:lossThresholdReached</field>\\n                                                  </block>\\n                                                </value>\\n                                              </block>\\n                                            </next>\\n                                          </block>\\n                                        </next>\\n                                      </block>\\n                                    </statement>\\n                                  </block>\\n                                </statement>\\n                                <statement name=\\"ELSE\\">\\n                                  <block type=\\"text_join\\" id=\\"`jp^xmB{2/+`+=GYvlI!\\">\\n                                    <field name=\\"VARIABLE\\" id=\\",g^G%+--#CDpuJVWt}3P\\" variabletype=\\"\\">Notification:profitThresholdReached</field>\\n                                    <statement name=\\"STACK\\">\\n                                      <block type=\\"text_statement\\" id=\\"{ttA@cQSFz^1P?2_)v{T\\">\\n                                        <value name=\\"TEXT\\">\\n                                          <shadow type=\\"text\\" id=\\"lKSXIja`H$cE]ulkOpPC\\">\\n                                            <field name=\\"TEXT\\">Profit threshold triggered. Total Profit:</field>\\n                                          </shadow>\\n                                        </value>\\n                                        <next>\\n                                          <block type=\\"text_statement\\" id=\\"J$taS8:NY?CWGXEoR4Py\\">\\n                                            <value name=\\"TEXT\\">\\n                                              <shadow type=\\"text\\">\\n                                                <field name=\\"TEXT\\"></field>\\n                                              </shadow>\\n                                              <block type=\\"variables_get\\" id=\\"xD`gB^obkxob@?G7TWg/\\">\\n                                                <field name=\\"VAR\\" id=\\"weOIq50C[S,Wr;`!|gYR\\" variabletype=\\"\\">dalembert:totalProfit</field>\\n                                              </block>\\n                                            </value>\\n                                          </block>\\n                                        </next>\\n                                      </block>\\n                                    </statement>\\n                                    <next>\\n                                      <block type=\\"notify\\" id=\\"x``V~AfiCW@-)oi60lJ[\\">\\n                                        <field name=\\"NOTIFICATION_TYPE\\">success</field>\\n                                        <field name=\\"NOTIFICATION_SOUND\\">silent</field>\\n                                        <value name=\\"MESSAGE\\">\\n                                          <shadow type=\\"text\\" id=\\"XBp|Y-R[|@S}8M.iQOSI\\">\\n                                            <field name=\\"TEXT\\">abc</field>\\n                                          </shadow>\\n                                          <block type=\\"variables_get\\" id=\\"j05-.!*U5v``8h81@Q(8\\">\\n                                            <field name=\\"VAR\\" id=\\",g^G%+--#CDpuJVWt}3P\\" variabletype=\\"\\">Notification:profitThresholdReached</field>\\n                                          </block>\\n                                        </value>\\n                                        <next>\\n                                          <block type=\\"text_print\\" id=\\"14Vk%?]6Ct;JSV4zqllv\\">\\n                                            <value name=\\"TEXT\\">\\n                                              <shadow type=\\"text\\">\\n                                                <field name=\\"TEXT\\">abc</field>\\n                                              </shadow>\\n                                              <block type=\\"variables_get\\" id=\\"iGi=D5I(W6aCuJWNlnLu\\">\\n                                                <field name=\\"VAR\\" id=\\",g^G%+--#CDpuJVWt}3P\\" variabletype=\\"\\">Notification:profitThresholdReached</field>\\n                                              </block>\\n                                            </value>\\n                                          </block>\\n                                        </next>\\n                                      </block>\\n                                    </next>\\n                                  </block>\\n                                </statement>\\n                              </block>\\n                            </next>\\n                          </block>\\n                        </next>\\n                      </block>\\n                    </next>\\n                  </block>\\n                </next>\\n              </block>\\n            </next>\\n          </block>\\n        </next>\\n      </block>\\n    </statement>\\n    <value name=\\"RETURN\\">\\n      <block type=\\"variables_get\\" id=\\"6oaZcb;rCyTYXAMPCx?B\\">\\n        <field name=\\"VAR\\" id=\\"[w@pzvBAlteju[8,x#hD\\" variabletype=\\"\\">dalembert:tradeAgain</field>\\n      </block>\\n    </value>\\n  </block>\\n</xml>");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/xml/dalembert_max-stake.xml\n'
                );

                /***/
            },
    },
]);
