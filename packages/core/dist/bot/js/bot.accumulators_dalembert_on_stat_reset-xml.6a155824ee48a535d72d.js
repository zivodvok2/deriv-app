'use strict';
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self['webpackChunk_deriv_bot_web_ui'] = self['webpackChunk_deriv_bot_web_ui'] || []).push([
    ['accumulators_dalembert_on_stat_reset-xml'],
    {
        /***/ './src/xml/accumulators_dalembert_on_stat_reset.xml':
            /*!**********************************************************!*\
  !*** ./src/xml/accumulators_dalembert_on_stat_reset.xml ***!
  \**********************************************************/
            /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                eval(
                    '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("<xml xmlns=\\"https://developers.google.com/blockly/xml\\" is_dbot=\\"true\\" collection=\\"false\\">\\n  <variables>\\n    <variable id=\\"/shM51Nl|.I_R[9=PPJd\\">dalembert:resultIsWin</variable>\\n    <variable id=\\"8-FGM6FF)6Y!:[]L7ZW0\\">dalembert:profit</variable>\\n    <variable id=\\"52xfAd@7%m%OGj6@$J#f\\">Sell by \'Count Down\'? If false, sell by \'Take Profit\'</variable>\\n    <variable id=\\"oeSl;?ofo-$i(#3A)LtZ\\">isBought</variable>\\n    <variable id=\\"$`%)Z21{siOe8LP.X0Z#\\">Current Tick Value</variable>\\n    <variable id=\\"(%X)fm`ac*=cJtd-P8tU\\">Notification:currentStake</variable>\\n    <variable id=\\"weOIq50C[S,Wr;`!|gYR\\">dalembert:totalProfit</variable>\\n    <variable id=\\"[w@pzvBAlteju[8,x#hD\\">dalembert:tradeAgain</variable>\\n    <variable id=\\"kGMePgkd~JQ9#^23xJy[\\">useMaxStake?</variable>\\n    <variable id=\\"ZGpA`4foih2T_0.]xE66\\">dalembert:profitThreshold</variable>\\n    <variable id=\\"-PgUuax5KQf1zn42iCd~\\">dalembert:initialStake</variable>\\n    <variable id=\\"o((rBg*rL/qm;RU%PM7_\\">dalembert:totalUnits</variable>\\n    <variable id=\\"x^Ag/KQ(CK{q!8kwe0;:\\">maxStake</variable>\\n    <variable id=\\"%o8CQE,uNdg`rmRL:-ca\\">dalembert:lossThreshold</variable>\\n    <variable id=\\"4;k={Pz/f-!5I}ri=G1f\\">Tick Count</variable>\\n    <variable id=\\"y)Al0290GkJ5zCJq;pfo\\">Notification:totalProfit</variable>\\n    <variable id=\\"nGC!N,V4~gxge3//ZqMs\\">dalembert:changeInUnit</variable>\\n    <variable id=\\",g^G%+--#CDpuJVWt}3P\\">Notification:profitThresholdReached</variable>\\n    <variable id=\\"uTM3hkZFvI8cHTGU3@Im\\">Notification:lossThresholdReached</variable>\\n  </variables>\\n  <block type=\\"trade_definition\\" id=\\"S8h29bv2DDtW#WyF}Eva\\" deletable=\\"false\\" x=\\"0\\" y=\\"0\\">\\n    <statement name=\\"TRADE_OPTIONS\\">\\n      <block type=\\"trade_definition_market\\" id=\\"CAL$3(*qz%,|%p-@tWu,\\" deletable=\\"false\\" movable=\\"false\\">\\n        <field name=\\"MARKET_LIST\\">synthetic_index</field>\\n        <field name=\\"SUBMARKET_LIST\\">random_index</field>\\n        <field name=\\"SYMBOL_LIST\\">1HZ10V</field>\\n        <next>\\n          <block type=\\"trade_definition_tradetype\\" id=\\"1JDTS0%^EFc?!72k#Zzm\\" deletable=\\"false\\" movable=\\"false\\">\\n            <field name=\\"TRADETYPECAT_LIST\\">accumulator</field>\\n            <field name=\\"TRADETYPE_LIST\\">accumulator</field>\\n            <next>\\n              <block type=\\"trade_definition_contracttype\\" id=\\"y_:V!ihNraBJT1oV/z4H\\" deletable=\\"false\\" movable=\\"false\\">\\n                <field name=\\"TYPE_LIST\\">ACCU</field>\\n                <next>\\n                  <block type=\\"trade_definition_candleinterval\\" id=\\":g(SG0@!|9=NZiADM]AT\\" deletable=\\"false\\" movable=\\"false\\">\\n                    <field name=\\"CANDLEINTERVAL_LIST\\">60</field>\\n                    <next>\\n                      <block type=\\"trade_definition_restartbuysell\\" id=\\"gAd13y{LVy%s4(hqgmfB\\" deletable=\\"false\\" movable=\\"false\\">\\n                        <field name=\\"TIME_MACHINE_ENABLED\\">FALSE</field>\\n                        <next>\\n                          <block type=\\"trade_definition_restartonerror\\" id=\\"*aUzV1ENk`-z`9hg_Apk\\" deletable=\\"false\\" movable=\\"false\\">\\n                            <field name=\\"RESTARTONERROR\\">TRUE</field>\\n                          </block>\\n                        </next>\\n                      </block>\\n                    </next>\\n                  </block>\\n                </next>\\n              </block>\\n            </next>\\n          </block>\\n        </next>\\n      </block>\\n    </statement>\\n    <statement name=\\"INITIALIZATION\\">\\n      <block type=\\"variables_set\\" id=\\"`5)$dT!cqK_+F()Cv@?^\\">\\n        <field name=\\"VAR\\" id=\\"52xfAd@7%m%OGj6@$J#f\\">Sell by \'Count Down\'? If false, sell by \'Take Profit\'</field>\\n        <value name=\\"VALUE\\" strategy_value=\\"boolean_tick_count\\">\\n          <block type=\\"logic_boolean\\" id=\\"QH`mR__-buv{!d!jV_U}\\">\\n            <field name=\\"BOOL\\">TRUE</field>\\n          </block>\\n        </value>\\n        <next>\\n          <block type=\\"variables_set\\" id=\\"ods[F-yNES?hknl($0Q=\\">\\n            <field name=\\"VAR\\" id=\\"kGMePgkd~JQ9#^23xJy[\\">useMaxStake?</field>\\n            <value name=\\"VALUE\\" strategy_value=\\"boolean_max_stake\\">\\n              <block type=\\"logic_boolean\\" id=\\"5XcvH`yeH:F[5V8q*!+@\\">\\n                <field name=\\"BOOL\\">TRUE</field>\\n              </block>\\n            </value>\\n            <next>\\n              <block type=\\"variables_set\\" id=\\"5zYkm?%M%dhWa.SDk_?Q\\">\\n                <field name=\\"VAR\\" id=\\"x^Ag/KQ(CK{q!8kwe0;:\\">maxStake</field>\\n                <value name=\\"VALUE\\" strategy_value=\\"max_stake\\">\\n                  <shadow type=\\"math_number\\" id=\\"VL+;XZ52`h#Y^pT]PC=D\\">\\n                    <field name=\\"NUM\\">1000</field>\\n                  </shadow>\\n                </value>\\n                <next>\\n                  <block type=\\"variables_set\\" id=\\"9*mD4P5,`rZsNDX@z}A9\\">\\n                    <field name=\\"VAR\\" id=\\"4;k={Pz/f-!5I}ri=G1f\\">Tick Count</field>\\n                    <value name=\\"VALUE\\" strategy_value=\\"tick_count\\">\\n                      <block type=\\"math_number\\" id=\\"][OkwxVu_eMJa64GhR8#\\">\\n                        <field name=\\"NUM\\">5</field>\\n                      </block>\\n                    </value>\\n                    <next>\\n                      <block type=\\"variables_set\\" id=\\"n7Xc_BWx%J81O]V~?Ur+\\">\\n                        <field name=\\"VAR\\" id=\\"oeSl;?ofo-$i(#3A)LtZ\\">isBought</field>\\n                        <value name=\\"VALUE\\">\\n                          <block type=\\"logic_boolean\\" id=\\"/bmG.h}1r*K#@7c{2(GN\\">\\n                            <field name=\\"BOOL\\">FALSE</field>\\n                          </block>\\n                        </value>\\n                      </block>\\n                    </next>\\n                  </block>\\n                </next>\\n              </block>\\n            </next>\\n          </block>\\n        </next>\\n      </block>\\n    </statement>\\n    <statement name=\\"SUBMARKET\\">\\n      <block type=\\"trade_definition_accumulator\\" id=\\"`XbWhq)3{Z(,9m%LJDfg\\">\\n        <field name=\\"GROWTHRATE_LIST\\" strategy_value=\\"growth_rate\\">0.01</field>\\n        <value name=\\"AMOUNT\\">\\n          <shadow type=\\"math_number_positive\\" id=\\"^yX?!K_KxpvHpoSlsZx`\\">\\n            <field name=\\"NUM\\">1</field>\\n          </shadow>\\n          <block type=\\"procedures_callreturn\\" id=\\"9[?fHf^Z?*;Ydu;)/eH)\\">\\n            <mutation xmlns=\\"http://www.w3.org/1999/xhtml\\" name=\\"D\'Alembert Trade Amount\\"></mutation>\\n            <data>EmObAV!^T%mj8FmH$qw4</data>\\n          </block>\\n        </value>\\n        <statement name=\\"ACCUMULATOR_PARAMS\\">\\n          <block type=\\"accumulator_take_profit\\" id=\\"6uNPj*D2,{qgT=*rL3H(\\" disabled=\\"true\\">\\n            <value name=\\"AMOUNT\\"  strategy_value=\\"take_profit\\">\\n              <shadow type=\\"math_number_positive\\" id=\\"B5jKPNx507-%(HhNG*p(\\">\\n                <field name=\\"NUM\\">0</field>\\n              </shadow>\\n            </value>\\n          </block>\\n        </statement>\\n      </block>\\n    </statement>\\n  </block>\\n  <block type=\\"during_purchase\\" id=\\"eS*gHL(f[DOZ$NdoF@Vf\\" x=\\"714\\" y=\\"0\\">\\n    <statement name=\\"DURING_PURCHASE_STACK\\">\\n      <block type=\\"variables_set\\" id=\\"j68c#HoF$k}G[k*XqARy\\">\\n        <field name=\\"VAR\\" id=\\"oeSl;?ofo-$i(#3A)LtZ\\">isBought</field>\\n        <value name=\\"VALUE\\">\\n          <block type=\\"logic_boolean\\" id=\\"@$s|/fM`=KJ*W|-+{kxi\\">\\n            <field name=\\"BOOL\\">TRUE</field>\\n          </block>\\n        </value>\\n        <next>\\n          <block type=\\"controls_if\\" id=\\"v?@a?;t2I14Yq)($hVrL\\">\\n            <value name=\\"IF0\\">\\n              <block type=\\"logic_operation\\" id=\\"g`$RhysgD+9}Ny56)IJ[\\">\\n                <field name=\\"OP\\">AND</field>\\n                <value name=\\"A\\">\\n                  <block type=\\"check_sell\\" id=\\"evSAM2|!v)Zj0U,pk5r#\\"></block>\\n                </value>\\n                <value name=\\"B\\">\\n                  <block type=\\"logic_compare\\" id=\\"`rF3_GKe!yM$0YZB.se2\\">\\n                    <field name=\\"OP\\">EQ</field>\\n                    <value name=\\"A\\">\\n                      <block type=\\"variables_get\\" id=\\"Ro8G.y=Tp?*e70suLCU|\\">\\n                        <field name=\\"VAR\\" id=\\"52xfAd@7%m%OGj6@$J#f\\">Sell by \'Count Down\'? If false, sell by \'Take Profit\'</field>\\n                      </block>\\n                    </value>\\n                    <value name=\\"B\\">\\n                      <block type=\\"logic_boolean\\" id=\\"7ImZ5oI}_@AC[$8]c@4t\\">\\n                        <field name=\\"BOOL\\">TRUE</field>\\n                      </block>\\n                    </value>\\n                  </block>\\n                </value>\\n              </block>\\n            </value>\\n            <statement name=\\"DO0\\">\\n              <block type=\\"controls_if\\" id=\\"mUtk_8d]MSjEqZ_R7L#:\\">\\n                <value name=\\"IF0\\">\\n                  <block type=\\"logic_compare\\" id=\\"w]=N~zLUWFFnV,~gXwId\\">\\n                    <field name=\\"OP\\">GT</field>\\n                    <value name=\\"A\\">\\n                      <block type=\\"variables_get\\" id=\\"qw~tM$[$c(Yn1qRDNCe%\\">\\n                        <field name=\\"VAR\\" id=\\"$`%)Z21{siOe8LP.X0Z#\\">Current Tick Value</field>\\n                      </block>\\n                    </value>\\n                    <value name=\\"B\\">\\n                      <block type=\\"variables_get\\" id=\\"pCL35s-XpucR|BGA|PL2\\">\\n                        <field name=\\"VAR\\" id=\\"4;k={Pz/f-!5I}ri=G1f\\">Tick Count</field>\\n                      </block>\\n                    </value>\\n                  </block>\\n                </value>\\n                <statement name=\\"DO0\\">\\n                  <block type=\\"sell_at_market\\" id=\\"LwN-3C0cqaKfaRSw#b?x\\"></block>\\n                </statement>\\n              </block>\\n            </statement>\\n          </block>\\n        </next>\\n      </block>\\n    </statement>\\n  </block>\\n  <block type=\\"after_purchase\\" id=\\":w?h)j*]?@+q/LM@,1r7\\" x=\\"714\\" y=\\"410\\">\\n    <statement name=\\"AFTERPURCHASE_STACK\\">\\n      <block type=\\"controls_if\\" id=\\"+a[84}f^_!,F5=3f$Uy^\\">\\n        <value name=\\"IF0\\">\\n          <block type=\\"procedures_callreturn\\" id=\\"Wrp{{4@tW:(N+%_!f!xu\\">\\n            <mutation xmlns=\\"http://www.w3.org/1999/xhtml\\" name=\\"D\'Alembert Trade Again After Purchase\\">\\n              <arg name=\\"dalembert:profit\\"></arg>\\n              <arg name=\\"dalembert:resultIsWin\\"></arg>\\n            </mutation>\\n            <data>RI6JdsHz({df~bVVIE;f</data>\\n            <value name=\\"ARG0\\">\\n              <block type=\\"read_details\\" id=\\";@Pic?.Li0OCjGv-91Ur\\">\\n                <field name=\\"DETAIL_INDEX\\">4</field>\\n              </block>\\n            </value>\\n            <value name=\\"ARG1\\">\\n              <block type=\\"contract_check_result\\" id=\\"pmWi^^-CT7Pvl4*yhn,+\\">\\n                <field name=\\"CHECK_RESULT\\">win</field>\\n              </block>\\n            </value>\\n          </block>\\n        </value>\\n        <statement name=\\"DO0\\">\\n          <block type=\\"trade_again\\" id=\\"/;dLnlE!v7eHau;0e9$L\\"></block>\\n        </statement>\\n      </block>\\n    </statement>\\n  </block>\\n  <block type=\\"before_purchase\\" id=\\"`J0qOF#1|/@L,(N{xG8X\\" deletable=\\"false\\" x=\\"0\\" y=\\"890\\">\\n    <statement name=\\"BEFOREPURCHASE_STACK\\">\\n      <block type=\\"variables_set\\" id=\\"P$n*En?F9clr)QO*d/6j\\">\\n        <field name=\\"VAR\\" id=\\"$`%)Z21{siOe8LP.X0Z#\\">Current Tick Value</field>\\n        <value name=\\"VALUE\\">\\n          <block type=\\"math_number\\" id=\\",%o@=Nb~hP`}4a!VHfrt\\">\\n            <field name=\\"NUM\\">0</field>\\n          </block>\\n        </value>\\n        <next>\\n          <block type=\\"variables_set\\" id=\\"%F.}s!KIX13CpLRY_)!Q\\">\\n            <field name=\\"VAR\\" id=\\"oeSl;?ofo-$i(#3A)LtZ\\">isBought</field>\\n            <value name=\\"VALUE\\">\\n              <block type=\\"logic_boolean\\" id=\\":1%+X65~4WZxSe,=N*4=\\">\\n                <field name=\\"BOOL\\">FALSE</field>\\n              </block>\\n            </value>\\n            <next>\\n              <block type=\\"notify\\" id=\\"Ym$v.ix]r{xp0?1EOEDP\\">\\n                <field name=\\"NOTIFICATION_TYPE\\">success</field>\\n                <field name=\\"NOTIFICATION_SOUND\\">silent</field>\\n                <value name=\\"MESSAGE\\">\\n                  <shadow type=\\"text\\" id=\\"@`!1q,P_Nmz8Oi!b*Hpo\\">\\n                    <field name=\\"TEXT\\">abc</field>\\n                  </shadow>\\n                  <block type=\\"stat\\" id=\\"x`e653nV/q(^;VT%%4LM\\"></block>\\n                </value>\\n                <next>\\n                  <block type=\\"controls_if\\" id=\\"!I,?yP7:Z1rlgWeDWR./\\">\\n                    <value name=\\"IF0\\">\\n                      <block type=\\"logic_compare\\" id=\\"*(d6Fv3.CHiWRS(uYGh:\\">\\n                        <field name=\\"OP\\">LTE</field>\\n                        <value name=\\"A\\">\\n                          <block type=\\"stat\\" id=\\"1BL?3OB3T,Esj-.Ka73m\\"></block>\\n                        </value>\\n                        <value name=\\"B\\">\\n                          <block type=\\"math_number\\" id=\\"VNiWP#V_,-rb;5(8u/G,\\">\\n                            <field name=\\"NUM\\">5</field>\\n                          </block>\\n                        </value>\\n                      </block>\\n                    </value>\\n                    <statement name=\\"DO0\\">\\n                      <block type=\\"purchase\\" id=\\"H$KfQ`]v.,5_^kmBGDy7\\">\\n                        <field name=\\"PURCHASE_LIST\\">ACCU</field>\\n                      </block>\\n                    </statement>\\n                  </block>\\n                </next>\\n              </block>\\n            </next>\\n          </block>\\n        </next>\\n      </block>\\n    </statement>\\n  </block>\\n  <block type=\\"tick_analysis\\" id=\\"EsT6R_3J(NwPp@$L)Y,W\\" x=\\"0\\" y=\\"1300\\">\\n    <statement name=\\"TICKANALYSIS_STACK\\">\\n      <block type=\\"controls_if\\" id=\\"clguE%Wb;eNOMK4|J|%_\\">\\n        <value name=\\"IF0\\">\\n          <block type=\\"variables_get\\" id=\\"OGWysg^2F|J-^dy+7!A|\\">\\n            <field name=\\"VAR\\" id=\\"oeSl;?ofo-$i(#3A)LtZ\\">isBought</field>\\n          </block>\\n        </value>\\n        <statement name=\\"DO0\\">\\n          <block type=\\"variables_set\\" id=\\"eMay`Azvw^0{Kxr`g~X/\\">\\n            <field name=\\"VAR\\" id=\\"$`%)Z21{siOe8LP.X0Z#\\">Current Tick Value</field>\\n            <value name=\\"VALUE\\">\\n              <block type=\\"math_arithmetic\\" id=\\"ArwGMK_y)[-Hg{~P2mk8\\">\\n                <field name=\\"OP\\">ADD</field>\\n                <value name=\\"A\\">\\n                  <shadow type=\\"math_number\\" id=\\"v+8u%Yf+lS?ZWNLiRp:Z\\">\\n                    <field name=\\"NUM\\">1</field>\\n                  </shadow>\\n                  <block type=\\"variables_get\\" id=\\"7Xcr}X5Q%-]y0d@FPhy/\\">\\n                    <field name=\\"VAR\\" id=\\"$`%)Z21{siOe8LP.X0Z#\\">Current Tick Value</field>\\n                  </block>\\n                </value>\\n                <value name=\\"B\\">\\n                  <shadow type=\\"math_number\\" id=\\"T7-kBuhi6ng0Jh2zs#s4\\">\\n                    <field name=\\"NUM\\">1</field>\\n                  </shadow>\\n                </value>\\n              </block>\\n            </value>\\n          </block>\\n        </statement>\\n      </block>\\n    </statement>\\n  </block>\\n  <block type=\\"procedures_defnoreturn\\" id=\\"Z-37~d]E;0rXD;Nl]{o@\\" collapsed=\\"true\\" x=\\"0\\" y=\\"1564\\">\\n    <mutation xmlns=\\"http://www.w3.org/1999/xhtml\\">\\n      <arg name=\\"dalembert:resultIsWin\\" varid=\\"/shM51Nl|.I_R[9=PPJd\\"></arg>\\n    </mutation>\\n    <field name=\\"NAME\\">D\'Alembert Core Functionality</field>\\n    <comment pinned=\\"false\\" h=\\"80\\" w=\\"160\\">Describe this function...</comment>\\n    <statement name=\\"STACK\\">\\n      <block type=\\"text_join\\" id=\\"+f+)u]eOl_h`8ej[voyw\\">\\n        <field name=\\"VARIABLE\\" id=\\"(%X)fm`ac*=cJtd-P8tU\\">Notification:currentStake</field>\\n        <statement name=\\"STACK\\">\\n          <block type=\\"text_statement\\" id=\\";J=2QGW+mp,jAS9TdZ|Q\\">\\n            <value name=\\"TEXT\\">\\n              <shadow type=\\"text\\" id=\\"u%KG5Wu}HG,$p|VB|UHu\\">\\n                <field name=\\"TEXT\\">Current stake:</field>\\n              </shadow>\\n            </value>\\n            <next>\\n              <block type=\\"text_statement\\" id=\\"%,AqzfU|}/Dx?LdYF)=j\\">\\n                <value name=\\"TEXT\\">\\n                  <shadow type=\\"text\\" id=\\";7kuHL01;GA+bv_5mp@E\\">\\n                    <field name=\\"TEXT\\"></field>\\n                  </shadow>\\n                  <block type=\\"procedures_callreturn\\" id=\\"`rQ,v8R),Zs2D+~]zclS\\">\\n                    <mutation xmlns=\\"http://www.w3.org/1999/xhtml\\" name=\\"D\'Alembert Trade Amount\\"></mutation>\\n                    <data>EmObAV!^T%mj8FmH$qw4</data>\\n                  </block>\\n                </value>\\n              </block>\\n            </next>\\n          </block>\\n        </statement>\\n        <next>\\n          <block type=\\"notify\\" id=\\"zQN_,e[!@N4gUkPFgFY-\\">\\n            <field name=\\"NOTIFICATION_TYPE\\">warn</field>\\n            <field name=\\"NOTIFICATION_SOUND\\">silent</field>\\n            <value name=\\"MESSAGE\\">\\n              <shadow type=\\"text\\" id=\\"f[Zkw4B+X+d:)}])Iak@\\">\\n                <field name=\\"TEXT\\">abc</field>\\n              </shadow>\\n              <block type=\\"variables_get\\" id=\\"6S,*6ny~?fN`yM[1kQJ4\\">\\n                <field name=\\"VAR\\" id=\\"(%X)fm`ac*=cJtd-P8tU\\">Notification:currentStake</field>\\n              </block>\\n            </value>\\n            <next>\\n              <block type=\\"controls_if\\" id=\\"_/=wck]-x]xCtN1{6tmA\\">\\n                <mutation xmlns=\\"http://www.w3.org/1999/xhtml\\" else=\\"1\\"></mutation>\\n                <value name=\\"IF0\\">\\n                  <block type=\\"variables_get\\" id=\\"NwS^C~iIqeT*Lv%xW=zD\\">\\n                    <field name=\\"VAR\\" id=\\"/shM51Nl|.I_R[9=PPJd\\">dalembert:resultIsWin</field>\\n                  </block>\\n                </value>\\n                <statement name=\\"DO0\\">\\n                  <block type=\\"variables_set\\" id=\\"mA1b~rG(;BN~zemGwthV\\">\\n                    <field name=\\"VAR\\" id=\\"o((rBg*rL/qm;RU%PM7_\\">dalembert:totalUnits</field>\\n                    <value name=\\"VALUE\\">\\n                      <block type=\\"math_arithmetic\\" id=\\"FOv}cpsixo3M,fTMoxl]\\">\\n                        <field name=\\"OP\\">MINUS</field>\\n                        <value name=\\"A\\">\\n                          <shadow type=\\"math_number\\" id=\\"{)YiAo#J1K7)+7cF#kA`\\">\\n                            <field name=\\"NUM\\">1</field>\\n                          </shadow>\\n                          <block type=\\"variables_get\\" id=\\"Im*Ml*f*_oi)nrK`osaC\\">\\n                            <field name=\\"VAR\\" id=\\"o((rBg*rL/qm;RU%PM7_\\">dalembert:totalUnits</field>\\n                          </block>\\n                        </value>\\n                        <value name=\\"B\\">\\n                          <block type=\\"variables_get\\" id=\\"yB?OOKx-yXMaA*:p%]?L\\">\\n                            <field name=\\"VAR\\" id=\\"nGC!N,V4~gxge3//ZqMs\\">dalembert:changeInUnit</field>\\n                          </block>\\n                        </value>\\n                      </block>\\n                    </value>\\n                    <next>\\n                      <block type=\\"controls_if\\" id=\\"qViz0Dvts^*Uw]v?hmP0\\">\\n                        <value name=\\"IF0\\">\\n                          <block type=\\"logic_compare\\" id=\\"kY4%*-@K52-jiL5$P2]=\\">\\n                            <field name=\\"OP\\">LT</field>\\n                            <value name=\\"A\\">\\n                              <block type=\\"variables_get\\" id=\\"Ts3}g.~9+~6K5-7V#2-F\\">\\n                                <field name=\\"VAR\\" id=\\"o((rBg*rL/qm;RU%PM7_\\">dalembert:totalUnits</field>\\n                              </block>\\n                            </value>\\n                            <value name=\\"B\\">\\n                              <block type=\\"math_number\\" id=\\"EV@s_(^]kP,UBSuf;k_l\\">\\n                                <field name=\\"NUM\\">1</field>\\n                              </block>\\n                            </value>\\n                          </block>\\n                        </value>\\n                        <statement name=\\"DO0\\">\\n                          <block type=\\"variables_set\\" id=\\"0.OrOV/(}#;ZAcIv8$v4\\">\\n                            <field name=\\"VAR\\" id=\\"o((rBg*rL/qm;RU%PM7_\\">dalembert:totalUnits</field>\\n                            <value name=\\"VALUE\\">\\n                              <block type=\\"math_number\\" id=\\"vu]OHD91fS@W0%bMhH@9\\">\\n                                <field name=\\"NUM\\">1</field>\\n                              </block>\\n                            </value>\\n                          </block>\\n                        </statement>\\n                      </block>\\n                    </next>\\n                  </block>\\n                </statement>\\n                <statement name=\\"ELSE\\">\\n                  <block type=\\"variables_set\\" id=\\"AKbtRY7t336`swq];yoh\\">\\n                    <field name=\\"VAR\\" id=\\"o((rBg*rL/qm;RU%PM7_\\">dalembert:totalUnits</field>\\n                    <value name=\\"VALUE\\">\\n                      <block type=\\"math_arithmetic\\" id=\\"%7gp$c-LN}6-5NP6LE9X\\">\\n                        <field name=\\"OP\\">ADD</field>\\n                        <value name=\\"A\\">\\n                          <shadow type=\\"math_number\\" id=\\"TOP9AeSQg#2YYrYW+iK~\\">\\n                            <field name=\\"NUM\\">1</field>\\n                          </shadow>\\n                          <block type=\\"variables_get\\" id=\\"2Z0Gov6Fb%HqcDklK,I-\\">\\n                            <field name=\\"VAR\\" id=\\"o((rBg*rL/qm;RU%PM7_\\">dalembert:totalUnits</field>\\n                          </block>\\n                        </value>\\n                        <value name=\\"B\\">\\n                          <shadow type=\\"math_number\\" id=\\"5}a$|p!Rf2E,fbo/aI4?\\">\\n                            <field name=\\"NUM\\">1</field>\\n                          </shadow>\\n                          <block type=\\"variables_get\\" id=\\"Hz4;F%CJ:#IvC+@BZ8PP\\">\\n                            <field name=\\"VAR\\" id=\\"nGC!N,V4~gxge3//ZqMs\\">dalembert:changeInUnit</field>\\n                          </block>\\n                        </value>\\n                      </block>\\n                    </value>\\n                    <next>\\n                      <block type=\\"controls_if\\" id=\\"kb,-oANKX.ip*pKu~$O:\\">\\n                        <value name=\\"IF0\\">\\n                          <block type=\\"logic_compare\\" id=\\"fc^*b4o|5ye7Kp#LG;H2\\">\\n                            <field name=\\"OP\\">GT</field>\\n                            <value name=\\"A\\">\\n                              <block type=\\"logic_operation\\" id=\\"l!%U6-UY{GBkR;P$q4Ga\\">\\n                                <field name=\\"OP\\">AND</field>\\n                                <value name=\\"A\\">\\n                                  <block type=\\"variables_get\\" id=\\"m;w7$qbTH`u!5kRA_DP.\\">\\n                                    <field name=\\"VAR\\" id=\\"kGMePgkd~JQ9#^23xJy[\\">useMaxStake?</field>\\n                                  </block>\\n                                </value>\\n                                <value name=\\"B\\">\\n                                  <block type=\\"procedures_callreturn\\" id=\\"052:APsrk@/5}S/JNyIq\\">\\n                                    <mutation xmlns=\\"http://www.w3.org/1999/xhtml\\" name=\\"D\'Alembert Trade Amount\\"></mutation>\\n                                    <data>EmObAV!^T%mj8FmH$qw4</data>\\n                                  </block>\\n                                </value>\\n                              </block>\\n                            </value>\\n                            <value name=\\"B\\">\\n                              <block type=\\"variables_get\\" id=\\"VRTCUTK*KW]VMUf4ab^a\\">\\n                                <field name=\\"VAR\\" id=\\"x^Ag/KQ(CK{q!8kwe0;:\\">maxStake</field>\\n                              </block>\\n                            </value>\\n                          </block>\\n                        </value>\\n                        <statement name=\\"DO0\\">\\n                          <block type=\\"variables_set\\" id=\\"w2-6K;;V7wo0kQz^).AJ\\">\\n                            <field name=\\"VAR\\" id=\\"o((rBg*rL/qm;RU%PM7_\\">dalembert:totalUnits</field>\\n                            <value name=\\"VALUE\\">\\n                              <block type=\\"math_number\\" id=\\"RpZ[zW8WA]![EDY{;~IZ\\">\\n                                <field name=\\"NUM\\">1</field>\\n                              </block>\\n                            </value>\\n                            <next>\\n                              <block type=\\"notify\\" id=\\"?n|Qa8-k41ii$Z_m_iRb\\">\\n                                <field name=\\"NOTIFICATION_TYPE\\">error</field>\\n                                <field name=\\"NOTIFICATION_SOUND\\">silent</field>\\n                                <value name=\\"MESSAGE\\">\\n                                  <shadow type=\\"text\\" id=\\"*nSCY~^JfE{kNpc{~%K8\\">\\n                                    <field name=\\"TEXT\\">Stake resets for the next trade (reason: exceeds max stake amount)</field>\\n                                  </shadow>\\n                                </value>\\n                              </block>\\n                            </next>\\n                          </block>\\n                        </statement>\\n                      </block>\\n                    </next>\\n                  </block>\\n                </statement>\\n              </block>\\n            </next>\\n          </block>\\n        </next>\\n      </block>\\n    </statement>\\n  </block>\\n  <block type=\\"procedures_defreturn\\" id=\\"EmObAV!^T%mj8FmH$qw4\\" collapsed=\\"true\\" x=\\"0\\" y=\\"1660\\">\\n    <field name=\\"NAME\\">D\'Alembert Trade Amount</field>\\n    <comment pinned=\\"false\\" h=\\"80\\" w=\\"160\\">Describe this function...</comment>\\n    <statement name=\\"STACK\\">\\n      <block type=\\"controls_if\\" id=\\",(7?SH-dD0YO4N(j2|Ca\\">\\n        <value name=\\"IF0\\">\\n          <block type=\\"logic_compare\\" id=\\"Uq#.hcd$auJ)gcUi9P[o\\">\\n            <field name=\\"OP\\">EQ</field>\\n            <value name=\\"A\\">\\n              <block type=\\"variables_get\\" id=\\"myak3L(HNC4,k/r7D)?7\\">\\n                <field name=\\"VAR\\" id=\\"ZGpA`4foih2T_0.]xE66\\">dalembert:profitThreshold</field>\\n              </block>\\n            </value>\\n            <value name=\\"B\\">\\n              <block type=\\"logic_null\\" id=\\"%08%qoE;ZNE%]]9PHaZL\\"></block>\\n            </value>\\n          </block>\\n        </value>\\n        <statement name=\\"DO0\\">\\n          <block type=\\"variables_set\\" id=\\"Y=Z$E2zJKQ`l[H,_C|w@\\">\\n            <field name=\\"VAR\\" id=\\"ZGpA`4foih2T_0.]xE66\\">dalembert:profitThreshold</field>\\n            <value name=\\"VALUE\\" strategy_value=\\"profit\\">\\n              <shadow type=\\"math_number\\" id=\\"G/w^g.RPP`K%|8_ONr66\\">\\n                <field name=\\"NUM\\">5000</field>\\n              </shadow>\\n            </value>\\n          </block>\\n        </statement>\\n        <next>\\n          <block type=\\"controls_if\\" id=\\"*x.6`GeZPW6,`f}ANshq\\">\\n            <value name=\\"IF0\\">\\n              <block type=\\"logic_compare\\" id=\\"6`49zommf9($yZ;L?7of\\">\\n                <field name=\\"OP\\">EQ</field>\\n                <value name=\\"A\\">\\n                  <block type=\\"variables_get\\" id=\\"f/YuBp3,UsEyXDl6TB3q\\">\\n                    <field name=\\"VAR\\" id=\\"%o8CQE,uNdg`rmRL:-ca\\">dalembert:lossThreshold</field>\\n                  </block>\\n                </value>\\n                <value name=\\"B\\">\\n                  <block type=\\"logic_null\\" id=\\"iRv:X6j=2/DQ#U_18]d4\\"></block>\\n                </value>\\n              </block>\\n            </value>\\n            <statement name=\\"DO0\\">\\n              <block type=\\"variables_set\\" id=\\"?VovWY,aXgs.y1djI*-g\\">\\n                <field name=\\"VAR\\" id=\\"%o8CQE,uNdg`rmRL:-ca\\">dalembert:lossThreshold</field>\\n                <value name=\\"VALUE\\" strategy_value=\\"loss\\">\\n                  <shadow type=\\"math_number\\" id=\\"9Ns@K/Uz41f/BYBUDt_M\\">\\n                    <field name=\\"NUM\\">3000</field>\\n                  </shadow>\\n                </value>\\n              </block>\\n            </statement>\\n            <next>\\n              <block type=\\"controls_if\\" id=\\"F;.!Do6-)o2WcCck(brg\\">\\n                <value name=\\"IF0\\">\\n                  <block type=\\"logic_compare\\" id=\\"![emA!]O(^me^x${3TE;\\">\\n                    <field name=\\"OP\\">EQ</field>\\n                    <value name=\\"A\\">\\n                      <block type=\\"variables_get\\" id=\\"V/uwxoFd6yyopbz{[#Uh\\">\\n                        <field name=\\"VAR\\" id=\\"-PgUuax5KQf1zn42iCd~\\">dalembert:initialStake</field>\\n                      </block>\\n                    </value>\\n                    <value name=\\"B\\">\\n                      <block type=\\"logic_null\\" id=\\"9j!0kv:!$S#cg`M)q$Mg\\"></block>\\n                    </value>\\n                  </block>\\n                </value>\\n                <statement name=\\"DO0\\">\\n                  <block type=\\"variables_set\\" id=\\"mq}/@a{Qc-KeTxmcqFjU\\">\\n                    <field name=\\"VAR\\" id=\\"-PgUuax5KQf1zn42iCd~\\">dalembert:initialStake</field>\\n                    <value name=\\"VALUE\\"  strategy_value=\\"stake\\">\\n                      <shadow type=\\"math_number\\" id=\\"RwW?sM1m]g+n?{G%!kva\\">\\n                        <field name=\\"NUM\\">100</field>\\n                      </shadow>\\n                    </value>\\n                  </block>\\n                </statement>\\n                <next>\\n                  <block type=\\"controls_if\\" id=\\"5Q,@|#C+MSO=ZB^WtC[7\\">\\n                    <value name=\\"IF0\\">\\n                      <block type=\\"logic_compare\\" id=\\"E?}hkyfNNpByBzM3!k9!\\">\\n                        <field name=\\"OP\\">EQ</field>\\n                        <value name=\\"A\\">\\n                          <block type=\\"variables_get\\" id=\\"pc$}:5k0^3*?DiurlDnK\\">\\n                            <field name=\\"VAR\\" id=\\"nGC!N,V4~gxge3//ZqMs\\">dalembert:changeInUnit</field>\\n                          </block>\\n                        </value>\\n                        <value name=\\"B\\">\\n                          <block type=\\"logic_null\\" id=\\"@RI8wOc}u-9;vFr7Xd(5\\"></block>\\n                        </value>\\n                      </block>\\n                    </value>\\n                    <statement name=\\"DO0\\">\\n                      <block type=\\"variables_set\\" id=\\"ZwPpNMsK]IT,,eM_`vn)\\">\\n                        <field name=\\"VAR\\" id=\\"nGC!N,V4~gxge3//ZqMs\\">dalembert:changeInUnit</field>\\n                        <value name=\\"VALUE\\" strategy_value=\\"dalembert_unit\\">\\n                          <shadow type=\\"math_number\\" id=\\"p[LNf|7[5av$)xK[t~e;\\">\\n                            <field name=\\"NUM\\">1</field>\\n                          </shadow>\\n                        </value>\\n                      </block>\\n                    </statement>\\n                    <next>\\n                      <block type=\\"controls_if\\" id=\\"sG%4hlo-P26Nr0#kIhMF\\">\\n                        <value name=\\"IF0\\">\\n                          <block type=\\"logic_compare\\" id=\\"-uC[[Ga(p{VT#7ovNfr4\\">\\n                            <field name=\\"OP\\">EQ</field>\\n                            <value name=\\"A\\">\\n                              <block type=\\"variables_get\\" id=\\"7$B#MO,8@;GIu@Mofrx}\\">\\n                                <field name=\\"VAR\\" id=\\"o((rBg*rL/qm;RU%PM7_\\">dalembert:totalUnits</field>\\n                              </block>\\n                            </value>\\n                            <value name=\\"B\\">\\n                              <block type=\\"logic_null\\" id=\\"B{U,C`Y$G]}v#Kq]@x:p\\"></block>\\n                            </value>\\n                          </block>\\n                        </value>\\n                        <statement name=\\"DO0\\">\\n                          <block type=\\"variables_set\\" id=\\"iX^w=Jc(b/VlAIdNMduh\\">\\n                            <field name=\\"VAR\\" id=\\"o((rBg*rL/qm;RU%PM7_\\">dalembert:totalUnits</field>\\n                            <value name=\\"VALUE\\">\\n                              <shadow type=\\"math_number\\" id=\\"d#8t+7WO$h2wHp|@8_eA\\">\\n                                <field name=\\"NUM\\">1</field>\\n                              </shadow>\\n                            </value>\\n                          </block>\\n                        </statement>\\n                        <next>\\n                          <block type=\\"controls_if\\" id=\\"F)U6+Uka*K,jqGK@}({H\\">\\n                            <value name=\\"IF0\\">\\n                              <block type=\\"logic_compare\\" id=\\":H|M3?~SzqICLD`V#)/x\\">\\n                                <field name=\\"OP\\">EQ</field>\\n                                <value name=\\"A\\">\\n                                  <block type=\\"variables_get\\" id=\\"#6Ab%#a4!6|9q:XHS`pb\\">\\n                                    <field name=\\"VAR\\" id=\\"weOIq50C[S,Wr;`!|gYR\\">dalembert:totalProfit</field>\\n                                  </block>\\n                                </value>\\n                                <value name=\\"B\\">\\n                                  <block type=\\"logic_null\\" id=\\"nFKikFg~}zpQZ7t}HI)d\\"></block>\\n                                </value>\\n                              </block>\\n                            </value>\\n                            <statement name=\\"DO0\\">\\n                              <block type=\\"variables_set\\" id=\\"3(a50!~_FArRjyUd)*np\\">\\n                                <field name=\\"VAR\\" id=\\"weOIq50C[S,Wr;`!|gYR\\">dalembert:totalProfit</field>\\n                                <value name=\\"VALUE\\">\\n                                  <shadow type=\\"math_number\\" id=\\"*6;H2j+wK=C6V,Pp}Oe`\\">\\n                                    <field name=\\"NUM\\">0</field>\\n                                  </shadow>\\n                                </value>\\n                              </block>\\n                            </statement>\\n                          </block>\\n                        </next>\\n                      </block>\\n                    </next>\\n                  </block>\\n                </next>\\n              </block>\\n            </next>\\n          </block>\\n        </next>\\n      </block>\\n    </statement>\\n    <value name=\\"RETURN\\">\\n      <block type=\\"math_arithmetic\\" id=\\"US22LDE-R$fo.w[=-2E;\\">\\n        <field name=\\"OP\\">MULTIPLY</field>\\n        <value name=\\"A\\">\\n          <shadow type=\\"math_number\\" id=\\"x0nt_f/Ye=TP3c(vZn$5\\">\\n            <field name=\\"NUM\\">1</field>\\n          </shadow>\\n          <block type=\\"variables_get\\" id=\\"WL}Si1.(d7}}-{ii1}Rl\\">\\n            <field name=\\"VAR\\" id=\\"-PgUuax5KQf1zn42iCd~\\">dalembert:initialStake</field>\\n          </block>\\n        </value>\\n        <value name=\\"B\\">\\n          <shadow type=\\"math_number\\" id=\\"RWb{X,RQ1{.a})/Uo%A8\\">\\n            <field name=\\"NUM\\">1</field>\\n          </shadow>\\n          <block type=\\"variables_get\\" id=\\"T4[Q(H?!GZT.5qxN/Wsz\\">\\n            <field name=\\"VAR\\" id=\\"o((rBg*rL/qm;RU%PM7_\\">dalembert:totalUnits</field>\\n          </block>\\n        </value>\\n      </block>\\n    </value>\\n  </block>\\n  <block type=\\"procedures_defreturn\\" id=\\"RI6JdsHz({df~bVVIE;f\\" collapsed=\\"true\\" x=\\"0\\" y=\\"1756\\">\\n    <mutation xmlns=\\"http://www.w3.org/1999/xhtml\\">\\n      <arg name=\\"dalembert:profit\\" varid=\\"8-FGM6FF)6Y!:[]L7ZW0\\"></arg>\\n      <arg name=\\"dalembert:resultIsWin\\" varid=\\"/shM51Nl|.I_R[9=PPJd\\"></arg>\\n    </mutation>\\n    <field name=\\"NAME\\">D\'Alembert Trade Again After Purchase</field>\\n    <comment pinned=\\"false\\" h=\\"80\\" w=\\"160\\">Describe this function...</comment>\\n    <statement name=\\"STACK\\">\\n      <block type=\\"math_change\\" id=\\"KbSUl~PGM5H:S{)Vo;x(\\">\\n        <field name=\\"VAR\\" id=\\"weOIq50C[S,Wr;`!|gYR\\">dalembert:totalProfit</field>\\n        <value name=\\"DELTA\\">\\n          <shadow type=\\"math_number\\" id=\\"iIDCjv!e^K/waJwM)blA\\">\\n            <field name=\\"NUM\\">1</field>\\n          </shadow>\\n          <block type=\\"variables_get\\" id=\\"@Meat^O|{Jj*b/s,_PsG\\">\\n            <field name=\\"VAR\\" id=\\"8-FGM6FF)6Y!:[]L7ZW0\\">dalembert:profit</field>\\n          </block>\\n        </value>\\n        <next>\\n          <block type=\\"variables_set\\" id=\\"nCLw{7#[Vwq1#]92K=;4\\">\\n            <field name=\\"VAR\\" id=\\"weOIq50C[S,Wr;`!|gYR\\">dalembert:totalProfit</field>\\n            <value name=\\"VALUE\\">\\n              <block type=\\"math_arithmetic\\" id=\\"jZl``irrVpi_K].~c+]/\\">\\n                <field name=\\"OP\\">DIVIDE</field>\\n                <value name=\\"A\\">\\n                  <shadow type=\\"math_number\\" id=\\"IA[I$$+az/RL35Z1S@+/\\">\\n                    <field name=\\"NUM\\">1</field>\\n                  </shadow>\\n                  <block type=\\"math_round\\" id=\\".~K2:,9J(5BA`9jY^IUN\\">\\n                    <field name=\\"OP\\">ROUND</field>\\n                    <value name=\\"NUM\\">\\n                      <shadow type=\\"math_number\\" id=\\"uDD|xJ,[4:(Gom^2rxB:\\">\\n                        <field name=\\"NUM\\">3.1</field>\\n                      </shadow>\\n                      <block type=\\"math_arithmetic\\" id=\\"*rClskQ40.Np`zs40a|-\\">\\n                        <field name=\\"OP\\">MULTIPLY</field>\\n                        <value name=\\"A\\">\\n                          <shadow type=\\"math_number\\" id=\\"m_!:=tBr7$_l39(+$@{-\\">\\n                            <field name=\\"NUM\\">1</field>\\n                          </shadow>\\n                          <block type=\\"variables_get\\" id=\\"^T/v:ZREB3kFaEsT,K4*\\">\\n                            <field name=\\"VAR\\" id=\\"weOIq50C[S,Wr;`!|gYR\\">dalembert:totalProfit</field>\\n                          </block>\\n                        </value>\\n                        <value name=\\"B\\">\\n                          <shadow type=\\"math_number\\" id=\\"_7oEE4VLfSWL:?(xev((\\">\\n                            <field name=\\"NUM\\">100</field>\\n                          </shadow>\\n                        </value>\\n                      </block>\\n                    </value>\\n                  </block>\\n                </value>\\n                <value name=\\"B\\">\\n                  <shadow type=\\"math_number\\" id=\\"+R-V5nHA2*uPTJzp(RSm\\">\\n                    <field name=\\"NUM\\">100</field>\\n                  </shadow>\\n                </value>\\n              </block>\\n            </value>\\n            <next>\\n              <block type=\\"procedures_callnoreturn\\" id=\\"d9c]3Se?`}O%.vY%mmHZ\\">\\n                <mutation xmlns=\\"http://www.w3.org/1999/xhtml\\" name=\\"D\'Alembert Core Functionality\\">\\n                  <arg name=\\"dalembert:resultIsWin\\"></arg>\\n                </mutation>\\n                <data>Z-37~d]E;0rXD;Nl]{o@</data>\\n                <value name=\\"ARG0\\">\\n                  <block type=\\"variables_get\\" id=\\"c?0U5G#:kk(cdrrZgP/Z\\">\\n                    <field name=\\"VAR\\" id=\\"/shM51Nl|.I_R[9=PPJd\\">dalembert:resultIsWin</field>\\n                  </block>\\n                </value>\\n                <next>\\n                  <block type=\\"text_join\\" id=\\"D%uq.rRMXyoUj05;l;,3\\">\\n                    <field name=\\"VARIABLE\\" id=\\"y)Al0290GkJ5zCJq;pfo\\">Notification:totalProfit</field>\\n                    <statement name=\\"STACK\\">\\n                      <block type=\\"text_statement\\" id=\\"z4ctT[~{^d)oTKXa;m^A\\">\\n                        <value name=\\"TEXT\\">\\n                          <shadow type=\\"text\\" id=\\"NGd90lLbe*CR;M3bE.h|\\">\\n                            <field name=\\"TEXT\\">Total Profit:</field>\\n                          </shadow>\\n                        </value>\\n                        <next>\\n                          <block type=\\"text_statement\\" id=\\"$?9Z6)43h,1}`ebd1b#(\\">\\n                            <value name=\\"TEXT\\">\\n                              <shadow type=\\"text\\" id=\\"v$n}lKIYZRceGMInDNnz\\">\\n                                <field name=\\"TEXT\\"></field>\\n                              </shadow>\\n                              <block type=\\"variables_get\\" id=\\"K~~4NDB}jBAjh^nZM@;r\\">\\n                                <field name=\\"VAR\\" id=\\"weOIq50C[S,Wr;`!|gYR\\">dalembert:totalProfit</field>\\n                              </block>\\n                            </value>\\n                          </block>\\n                        </next>\\n                      </block>\\n                    </statement>\\n                    <next>\\n                      <block type=\\"notify\\" id=\\"*vY8nukFB6~GAbLc3_Cd\\">\\n                        <field name=\\"NOTIFICATION_TYPE\\">info</field>\\n                        <field name=\\"NOTIFICATION_SOUND\\">silent</field>\\n                        <value name=\\"MESSAGE\\">\\n                          <shadow type=\\"text\\" id=\\"_yenZ]X:y@`%so1S@:pW\\">\\n                            <field name=\\"TEXT\\">abc</field>\\n                          </shadow>\\n                          <block type=\\"variables_get\\" id=\\"X7*OuZJoYglG5!Kl3UJE\\">\\n                            <field name=\\"VAR\\" id=\\"y)Al0290GkJ5zCJq;pfo\\">Notification:totalProfit</field>\\n                          </block>\\n                        </value>\\n                        <next>\\n                          <block type=\\"variables_set\\" id=\\",c/z%8k6EWkqc:fZtzfE\\">\\n                            <field name=\\"VAR\\" id=\\"[w@pzvBAlteju[8,x#hD\\">dalembert:tradeAgain</field>\\n                            <value name=\\"VALUE\\">\\n                              <block type=\\"logic_boolean\\" id=\\"s@hLOZacb94r(b`=-?m=\\">\\n                                <field name=\\"BOOL\\">FALSE</field>\\n                              </block>\\n                            </value>\\n                            <next>\\n                              <block type=\\"controls_if\\" id=\\"YF*U!j=#qjyUpBToCklJ\\">\\n                                <mutation xmlns=\\"http://www.w3.org/1999/xhtml\\" else=\\"1\\"></mutation>\\n                                <value name=\\"IF0\\">\\n                                  <block type=\\"logic_compare\\" id=\\".C,!tn_Dmn}UWJEK:g;r\\">\\n                                    <field name=\\"OP\\">LT</field>\\n                                    <value name=\\"A\\">\\n                                      <block type=\\"variables_get\\" id=\\"M*l_mEuzY747A/9P/k(0\\">\\n                                        <field name=\\"VAR\\" id=\\"weOIq50C[S,Wr;`!|gYR\\">dalembert:totalProfit</field>\\n                                      </block>\\n                                    </value>\\n                                    <value name=\\"B\\">\\n                                      <block type=\\"variables_get\\" id=\\"{}m6MN)qLd:$#:OxiAWJ\\">\\n                                        <field name=\\"VAR\\" id=\\"ZGpA`4foih2T_0.]xE66\\">dalembert:profitThreshold</field>\\n                                      </block>\\n                                    </value>\\n                                  </block>\\n                                </value>\\n                                <statement name=\\"DO0\\">\\n                                  <block type=\\"controls_if\\" id=\\";z4Hx5/7p=fR6p{5suJC\\">\\n                                    <mutation xmlns=\\"http://www.w3.org/1999/xhtml\\" else=\\"1\\"></mutation>\\n                                    <value name=\\"IF0\\">\\n                                      <block type=\\"logic_compare\\" id=\\"bNH=OA[a^nPR_ru$[#3V\\">\\n                                        <field name=\\"OP\\">GT</field>\\n                                        <value name=\\"A\\">\\n                                          <block type=\\"variables_get\\" id=\\";-*3mu!xGYYyZZk|gcs9\\">\\n                                            <field name=\\"VAR\\" id=\\"weOIq50C[S,Wr;`!|gYR\\">dalembert:totalProfit</field>\\n                                          </block>\\n                                        </value>\\n                                        <value name=\\"B\\">\\n                                          <block type=\\"math_single\\" id=\\"Wou%(S]*gz}DGyGdCmF+\\">\\n                                            <field name=\\"OP\\">NEG</field>\\n                                            <value name=\\"NUM\\">\\n                                              <shadow type=\\"math_number\\" id=\\"*1As}XT}kvPy#iJVL.X:\\">\\n                                                <field name=\\"NUM\\">9</field>\\n                                              </shadow>\\n                                              <block type=\\"variables_get\\" id=\\")O~FX{%sJo`UREf7KzcC\\">\\n                                                <field name=\\"VAR\\" id=\\"%o8CQE,uNdg`rmRL:-ca\\">dalembert:lossThreshold</field>\\n                                              </block>\\n                                            </value>\\n                                          </block>\\n                                        </value>\\n                                      </block>\\n                                    </value>\\n                                    <statement name=\\"DO0\\">\\n                                      <block type=\\"variables_set\\" id=\\"KtG-u#*0@:_w1Hb$a+Rs\\">\\n                                        <field name=\\"VAR\\" id=\\"[w@pzvBAlteju[8,x#hD\\">dalembert:tradeAgain</field>\\n                                        <value name=\\"VALUE\\">\\n                                          <block type=\\"logic_boolean\\" id=\\"_L,b@{:SNDs;CVZ`_+M|\\">\\n                                            <field name=\\"BOOL\\">TRUE</field>\\n                                          </block>\\n                                        </value>\\n                                      </block>\\n                                    </statement>\\n                                    <statement name=\\"ELSE\\">\\n                                      <block type=\\"text_join\\" id=\\"$wU*5]hG$jv,NIz.U9Cf\\">\\n                                        <field name=\\"VARIABLE\\" id=\\"uTM3hkZFvI8cHTGU3@Im\\">Notification:lossThresholdReached</field>\\n                                        <statement name=\\"STACK\\">\\n                                          <block type=\\"text_statement\\" id=\\"]Z4Yoi%Ml,@)%HZ_n}~w\\">\\n                                            <value name=\\"TEXT\\">\\n                                              <shadow type=\\"text\\" id=\\"W5!)Xu@6bPx=c(wubC3e\\">\\n                                                <field name=\\"TEXT\\">Loss threshold triggered. Total Loss:</field>\\n                                              </shadow>\\n                                            </value>\\n                                            <next>\\n                                              <block type=\\"text_statement\\" id=\\"H_!Csgh~sV2/L-h/(~pL\\">\\n                                                <value name=\\"TEXT\\">\\n                                                  <shadow type=\\"text\\" id=\\"*K4v(M2]ptiU(ub@cfGk\\">\\n                                                    <field name=\\"TEXT\\"></field>\\n                                                  </shadow>\\n                                                  <block type=\\"math_single\\" id=\\"=FAFuZ{|jPm`t%gE)_+$\\">\\n                                                    <field name=\\"OP\\">NEG</field>\\n                                                    <value name=\\"NUM\\">\\n                                                      <shadow type=\\"math_number\\" id=\\"zCRFi{C)hlw@fVu]x8{8\\">\\n                                                        <field name=\\"NUM\\">9</field>\\n                                                      </shadow>\\n                                                      <block type=\\"variables_get\\" id=\\"oCe(8,VsGnhr0u9PJ$r=\\">\\n                                                        <field name=\\"VAR\\" id=\\"weOIq50C[S,Wr;`!|gYR\\">dalembert:totalProfit</field>\\n                                                      </block>\\n                                                    </value>\\n                                                  </block>\\n                                                </value>\\n                                              </block>\\n                                            </next>\\n                                          </block>\\n                                        </statement>\\n                                        <next>\\n                                          <block type=\\"notify\\" id=\\"5Qw`EQbfjlak9R{6%NQe\\">\\n                                            <field name=\\"NOTIFICATION_TYPE\\">error</field>\\n                                            <field name=\\"NOTIFICATION_SOUND\\">silent</field>\\n                                            <value name=\\"MESSAGE\\">\\n                                              <shadow type=\\"text\\" id=\\"AR*95}aMV(FbzHBxBU+g\\">\\n                                                <field name=\\"TEXT\\">abc</field>\\n                                              </shadow>\\n                                              <block type=\\"variables_get\\" id=\\"RciPt$L]8SskoqL[UC;|\\">\\n                                                <field name=\\"VAR\\" id=\\"uTM3hkZFvI8cHTGU3@Im\\">Notification:lossThresholdReached</field>\\n                                              </block>\\n                                            </value>\\n                                            <next>\\n                                              <block type=\\"text_print\\" id=\\".|-?8JHw};Ae0e+_rTtT\\">\\n                                                <value name=\\"TEXT\\">\\n                                                  <shadow type=\\"text\\" id=\\"bu|CI];_vs^L`l;IP1yx\\">\\n                                                    <field name=\\"TEXT\\">abc</field>\\n                                                  </shadow>\\n                                                  <block type=\\"variables_get\\" id=\\"D4S$@b{H[$=-L/^Rx-MP\\">\\n                                                    <field name=\\"VAR\\" id=\\"uTM3hkZFvI8cHTGU3@Im\\">Notification:lossThresholdReached</field>\\n                                                  </block>\\n                                                </value>\\n                                              </block>\\n                                            </next>\\n                                          </block>\\n                                        </next>\\n                                      </block>\\n                                    </statement>\\n                                  </block>\\n                                </statement>\\n                                <statement name=\\"ELSE\\">\\n                                  <block type=\\"text_join\\" id=\\"`jp^xmB{2/+`+=GYvlI!\\">\\n                                    <field name=\\"VARIABLE\\" id=\\",g^G%+--#CDpuJVWt}3P\\">Notification:profitThresholdReached</field>\\n                                    <statement name=\\"STACK\\">\\n                                      <block type=\\"text_statement\\" id=\\"{ttA@cQSFz^1P?2_)v{T\\">\\n                                        <value name=\\"TEXT\\">\\n                                          <shadow type=\\"text\\" id=\\"lKSXIja`H$cE]ulkOpPC\\">\\n                                            <field name=\\"TEXT\\">Profit threshold triggered. Total Profit:</field>\\n                                          </shadow>\\n                                        </value>\\n                                        <next>\\n                                          <block type=\\"text_statement\\" id=\\"J$taS8:NY?CWGXEoR4Py\\">\\n                                            <value name=\\"TEXT\\">\\n                                              <shadow type=\\"text\\" id=\\"SGbrwIAdE-P1XemyZ6Rs\\">\\n                                                <field name=\\"TEXT\\"></field>\\n                                              </shadow>\\n                                              <block type=\\"variables_get\\" id=\\"xD`gB^obkxob@?G7TWg/\\">\\n                                                <field name=\\"VAR\\" id=\\"weOIq50C[S,Wr;`!|gYR\\">dalembert:totalProfit</field>\\n                                              </block>\\n                                            </value>\\n                                          </block>\\n                                        </next>\\n                                      </block>\\n                                    </statement>\\n                                    <next>\\n                                      <block type=\\"notify\\" id=\\"x``V~AfiCW@-)oi60lJ[\\">\\n                                        <field name=\\"NOTIFICATION_TYPE\\">success</field>\\n                                        <field name=\\"NOTIFICATION_SOUND\\">silent</field>\\n                                        <value name=\\"MESSAGE\\">\\n                                          <shadow type=\\"text\\" id=\\"XBp|Y-R[|@S}8M.iQOSI\\">\\n                                            <field name=\\"TEXT\\">abc</field>\\n                                          </shadow>\\n                                          <block type=\\"variables_get\\" id=\\"j05-.!*U5v``8h81@Q(8\\">\\n                                            <field name=\\"VAR\\" id=\\",g^G%+--#CDpuJVWt}3P\\">Notification:profitThresholdReached</field>\\n                                          </block>\\n                                        </value>\\n                                        <next>\\n                                          <block type=\\"text_print\\" id=\\"14Vk%?]6Ct;JSV4zqllv\\">\\n                                            <value name=\\"TEXT\\">\\n                                              <shadow type=\\"text\\" id=\\"jBlLsCTByB`_RiU76r+1\\">\\n                                                <field name=\\"TEXT\\">abc</field>\\n                                              </shadow>\\n                                              <block type=\\"variables_get\\" id=\\"iGi=D5I(W6aCuJWNlnLu\\">\\n                                                <field name=\\"VAR\\" id=\\",g^G%+--#CDpuJVWt}3P\\">Notification:profitThresholdReached</field>\\n                                              </block>\\n                                            </value>\\n                                          </block>\\n                                        </next>\\n                                      </block>\\n                                    </next>\\n                                  </block>\\n                                </statement>\\n                              </block>\\n                            </next>\\n                          </block>\\n                        </next>\\n                      </block>\\n                    </next>\\n                  </block>\\n                </next>\\n              </block>\\n            </next>\\n          </block>\\n        </next>\\n      </block>\\n    </statement>\\n    <value name=\\"RETURN\\">\\n      <block type=\\"variables_get\\" id=\\"6oaZcb;rCyTYXAMPCx?B\\">\\n        <field name=\\"VAR\\" id=\\"[w@pzvBAlteju[8,x#hD\\">dalembert:tradeAgain</field>\\n      </block>\\n    </value>\\n  </block>\\n</xml>");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/xml/accumulators_dalembert_on_stat_reset.xml\n'
                );

                /***/
            },
    },
]);
