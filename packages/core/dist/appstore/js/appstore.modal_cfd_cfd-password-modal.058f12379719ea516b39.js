/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self['webpackChunk_deriv_appstore'] = self['webpackChunk_deriv_appstore'] || []).push([
    ['modal_cfd_cfd-password-modal'],
    {
        /***/ '../../node_modules/css-loader/dist/cjs.js!../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../node_modules/sass-loader/dist/cjs.js!../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!../cfd/src/sass/cfd.scss':
            /*!*************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/css-loader/dist/cjs.js!../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../node_modules/sass-loader/dist/cjs.js!../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!../cfd/src/sass/cfd.scss ***!
  \*************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
            /***/ (module, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    "__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js */ \"../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/api.js */ \"../../node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n/*RTL Language Mixin*/\\n/* stylelint-disable color-no-hex */\\n/* COLOR PALETTE */\\n/* colors */\\n/* status colors */\\n/* alpha colors */\\n/* gradient colors */\\n/* Preserve legacy variables */\\n/* Primary */\\n/* stylelint-enable color-no-hex */\\n/* Wallet gradient background */\\n/* App Cards gradient background */\\n/* Wallets */\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n/*\\n * SASS interpolation\\n */\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n/*\\n * SVG icons colors\\n */\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n/*\\n    Constants\\n*/\\n/*\\n    Variables\\n*/\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n/**\\n * Define Breakpoints here.\\n */\\n/** Need to add new breakpoints for mixins */\\n.dc-modal__container_cfd-password-modal,\\n.dc-mobile-dialog__cfd-password-modal {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: flex-start;\\n  max-width: 424px;\\n}\\n.dc-modal__container_cfd-password-modal form,\\n.dc-mobile-dialog__cfd-password-modal form {\\n  flex-grow: 1;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: flex-start;\\n  justify-content: space-between;\\n  padding: 0 2.4rem 1.2rem;\\n}\\n@media (max-width: 1279px) {\\n  .dc-modal__container_cfd-password-modal form,\\n  .dc-mobile-dialog__cfd-password-modal form {\\n    padding: 0;\\n  }\\n}\\n.dc-modal__container_cfd-password-modal__description,\\n.dc-mobile-dialog__cfd-password-modal__description {\\n  font-size: 1.2rem;\\n  color: var(--text-general);\\n  font-weight: 400;\\n  text-transform: none;\\n  text-align: center;\\n  line-height: 1.25;\\n  color: var(--text-prominent);\\n  text-transform: none;\\n  margin-top: 1rem;\\n  top: 2rem;\\n  position: relative;\\n  padding: 1.3rem;\\n}\\n.dc-modal__container_cfd-password-modal__hint,\\n.dc-mobile-dialog__cfd-password-modal__hint {\\n  max-width: 40rem;\\n}\\n.dc-modal__container_cfd-password-modal__body,\\n.dc-mobile-dialog__cfd-password-modal__body {\\n  flex-grow: 1;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: flex-start;\\n  align-items: flex-start;\\n}\\n.dc-modal__container_cfd-password-modal .dc-input__label,\\n.dc-mobile-dialog__cfd-password-modal .dc-input__label {\\n  top: 1.2rem;\\n}\\n@media (max-width: 1279px) {\\n  .dc-modal__container_cfd-password-modal .dc-input__label,\\n  .dc-mobile-dialog__cfd-password-modal .dc-input__label {\\n    top: 0.9rem;\\n    background-color: var(--fill-normal);\\n  }\\n}\\n.dc-modal__container_cfd-password-modal .dc-password-meter__bg,\\n.dc-mobile-dialog__cfd-password-modal .dc-password-meter__bg {\\n  background: var(--general-section-2);\\n}\\n@media (max-width: 1279px) {\\n  .dc-modal__container_cfd-password-modal .dc-password-meter__bg,\\n  .dc-mobile-dialog__cfd-password-modal .dc-password-meter__bg {\\n    background: var(--fill-disabled);\\n  }\\n}\\n.dc-modal__container_cfd-password-modal .status-dialog,\\n.dc-mobile-dialog__cfd-password-modal .status-dialog {\\n  margin-top: 3em;\\n}\\n@media (max-width: 1279px) {\\n  .dc-modal__container_cfd-password-modal .cfd-password-reset,\\n  .dc-mobile-dialog__cfd-password-modal .cfd-password-reset {\\n    flex: 1;\\n  }\\n}\\n.dc-modal__container_cfd-password-modal .dc-password-meter__container,\\n.dc-mobile-dialog__cfd-password-modal .dc-password-meter__container {\\n  flex-grow: 1;\\n  margin: auto;\\n}\\n@media (max-width: 1279px) {\\n  .dc-modal__container_cfd-password-modal .dc-password-meter__container,\\n  .dc-mobile-dialog__cfd-password-modal .dc-password-meter__container {\\n    max-width: 100%;\\n  }\\n}\\n.dc-modal__container_cfd-password-modal .mt5-password-field,\\n.dc-mobile-dialog__cfd-password-modal .mt5-password-field {\\n  margin-bottom: 1em;\\n  width: 80%;\\n}\\n.dc-modal__container_cfd-password-modal .input-element,\\n.dc-mobile-dialog__cfd-password-modal .input-element {\\n  width: 100%;\\n}\\n@media (max-width: 1279px) {\\n  .dc-modal__container_cfd-password-modal .cfd-password-modal__content,\\n  .dc-mobile-dialog__cfd-password-modal .cfd-password-modal__content {\\n    overflow-y: auto;\\n    overflow-x: hidden;\\n    height: 100%;\\n    max-height: calc(100vh - 6.4rem);\\n    padding: 1rem;\\n  }\\n}\\n@media (min-width: 768px) {\\n  .dc-modal__container_cfd-password-modal .cfd-password-modal__content,\\n  .dc-mobile-dialog__cfd-password-modal .cfd-password-modal__content {\\n    display: flex;\\n    flex-direction: column;\\n    width: 100%;\\n    margin-bottom: 2rem;\\n  }\\n  .dc-modal__container_cfd-password-modal .cfd-password-modal__content--password-reset,\\n  .dc-mobile-dialog__cfd-password-modal .cfd-password-modal__content--password-reset {\\n    padding: 0 2.5rem;\\n  }\\n}\\n@media only screen and (max-width: 1279px) and (orientation: landscape) {\\n  .dc-modal__container_cfd-password-modal .cfd-password-change__content,\\n  .dc-mobile-dialog__cfd-password-modal .cfd-password-change__content {\\n    overflow-y: auto;\\n    display: block;\\n  }\\n  .dc-modal__container_cfd-password-modal .cfd-password-change__content .cfd-password-modal__content,\\n  .dc-mobile-dialog__cfd-password-modal .cfd-password-change__content .cfd-password-modal__content {\\n    max-height: 100%;\\n    border-top: 1px solid var(--general-hover);\\n    border-bottom: 1px solid var(--general-hover);\\n    margin-bottom: 0;\\n  }\\n}\\n\\n.dc-mobile-dialog__mt5-email-sent {\\n  padding-bottom: 1rem;\\n}\\n\\n.cfd-password-modal__warning {\\n  padding: 2.5rem;\\n  max-width: 50rem;\\n  align-self: center;\\n}\\n.cfd-password-modal__warning-text {\\n  border-radius: 0.8rem;\\n  padding: 0.8rem;\\n  background-color: var(--status-warning);\\n}\\n.cfd-password-modal__message {\\n  max-width: 32rem;\\n  margin: auto;\\n  line-height: 1.43;\\n}\\n.cfd-password-modal__radio.dc-radio-group {\\n  display: grid;\\n  grid-gap: 2rem;\\n  margin-top: 0;\\n  padding-bottom: 2.4rem;\\n}\\n.cfd-password-modal__radio.dc-radio-group__item {\\n  display: flex;\\n  flex-direction: row;\\n}\\n.cfd-password-modal__create-password {\\n  padding: 0 1.2rem;\\n}\\n.cfd-password-modal__create-password-content {\\n  display: flex;\\n  flex-direction: column;\\n  width: 100%;\\n  align-items: center;\\n  margin-top: -2.5rem;\\n}\\n.cfd-password-modal__create-password-content .dc-icon {\\n  margin-left: 1.1rem;\\n  flex: none;\\n}\\n.cfd-password-modal__create-password-body {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  width: 100%;\\n}\\n.cfd-password-modal__create-password-title {\\n  margin-top: 2.4rem;\\n  margin-bottom: 0.8rem;\\n}\\n.cfd-password-modal__create-password-description {\\n  max-width: 30rem;\\n  margin-bottom: 1.6rem;\\n}\\n.cfd-password-modal__change-password-confirmation {\\n  display: flex;\\n  align-items: center;\\n  flex-direction: column;\\n  max-width: 30rem;\\n}\\n@media (min-width: 1280px) {\\n  .cfd-password-modal__change-password-confirmation {\\n    margin-top: -2.5rem;\\n  }\\n}\\n.cfd-password-modal__change-password-confirmation-wrapper {\\n  display: flex;\\n  justify-content: center;\\n  width: 100%;\\n}\\n.cfd-password-modal__change-password-confirmation .dc-form-submit-button {\\n  margin-bottom: 2.2rem;\\n}\\n@media (max-width: 1279px) {\\n  .cfd-password-modal-tnc--bottom {\\n    margin-top: auto;\\n    margin-bottom: 7.5rem;\\n  }\\n}\\n.cfd-password-modal-info {\\n  border-radius: 0.4rem;\\n  background: rgba(55, 124, 252, 0.16);\\n  display: flex;\\n  padding: 0.8rem;\\n  align-items: flex-start;\\n  gap: 0.8rem;\\n  margin: 1.6rem auto;\\n}\\n.cfd-password-modal-info__icon {\\n  flex-basis: 1.6rem;\\n  max-width: 1.6rem;\\n}\\n[dir=\\\"ltr\\\"] .cfd-password-modal__checkbox {\\n  margin-left: -0.8rem;\\n}\\n[dir=\\\"rtl\\\"] .cfd-password-modal__checkbox {\\n  margin-right: -0.8rem;\\n}\\n.cfd-password-modal__checkbox {\\n  display: flex;\\n  align-self: baseline;\\n}\\n[dir=\\\"ltr\\\"] .cfd-password-modal-info .dc-icon,[dir=\\\"ltr\\\"]  .cfd-password-modal__checkbox .dc-icon {\\n  margin-left: 0;\\n}\\n[dir=\\\"rtl\\\"] .cfd-password-modal-info .dc-icon,[dir=\\\"rtl\\\"]  .cfd-password-modal__checkbox .dc-icon {\\n  margin-right: 0;\\n}\\n\\n.dc-modal__container_top-up-virtual {\\n  width: 384px;\\n  min-height: 367px;\\n  display: flex;\\n  flex-direction: column;\\n}\\n.dc-modal__container_top-up-virtual__body {\\n  display: flex;\\n  flex-direction: column;\\n  padding: 4.8rem 4.2rem;\\n  flex-grow: 1;\\n  justify-content: space-around;\\n  align-items: center;\\n}\\n.dc-modal__container_top-up-virtual__description {\\n  text-transform: none;\\n}\\n.dc-modal__container_top-up-virtual--h4 {\\n  font-size: 1.2rem;\\n  color: var(--text-general);\\n  font-weight: 700;\\n  text-transform: none;\\n  text-align: center;\\n  line-height: 1.25;\\n  text-transform: none;\\n  color: var(--text-prominent);\\n}\\n.dc-modal__container_top-up-virtual--balance {\\n  font-size: 1.6rem;\\n  color: var(--text-general);\\n  font-weight: 700;\\n  text-transform: none;\\n  text-align: center;\\n  line-height: 1.75;\\n  line-height: 1.5;\\n  color: var(--text-profit-success);\\n}\\n\\n.cfd-success-topup__heading {\\n  font-size: 1.4rem;\\n  color: var(--text-general);\\n  font-weight: 700;\\n  text-transform: none;\\n  text-align: center;\\n  line-height: 1.5;\\n  margin: 1.6rem 1.8rem;\\n}\\n.cfd-success-topup__description p {\\n  font-size: 1.2rem;\\n  color: var(--text-general);\\n  font-weight: 400;\\n  text-transform: none;\\n  text-align: center;\\n  line-height: 1.25;\\n  color: var(--text-general);\\n  text-transform: none;\\n}\\n\\n.cfd-dashboard__container .dc-popover__target {\\n  display: flex;\\n}\\n\\n.cfd-verification-email-sent {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n}\\n.cfd-verification-email-sent__title {\\n  font-size: 1.6rem;\\n  color: var(--text-general);\\n  font-weight: 700;\\n  text-transform: none;\\n  text-align: center;\\n  line-height: 1.75;\\n  margin: 0.8rem 0;\\n}\\n.cfd-verification-email-sent__title--sub {\\n  margin-bottom: 0.8rem;\\n  margin-top: 3rem;\\n}\\n.cfd-verification-email-sent__resend-button {\\n  display: block;\\n  font-size: 1.4rem;\\n  color: var(--text-general);\\n  font-weight: 700;\\n  text-transform: none;\\n  text-align: center;\\n  line-height: 1.5;\\n  color: var(--brand-red-coral);\\n  text-decoration: none;\\n  margin: 3.2rem 0 0;\\n}\\n.cfd-verification-email-sent .countdown {\\n  margin: 0 0.4rem;\\n}\\n\\n[dir=\\\"ltr\\\"] .cfd-reset-password {\\n  text-align: left;\\n}\\n\\n[dir=\\\"rtl\\\"] .cfd-reset-password {\\n  text-align: right;\\n}\\n\\n.cfd-reset-password {\\n  width: 100%;\\n  height: 100%;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  font-size: 1.4rem;\\n  color: var(--text-general);\\n  font-weight: 400;\\n  text-transform: none;\\n  line-height: 1.5;\\n  color: var(--text-prominent);\\n}\\n.cfd-reset-password__container {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  height: 100%;\\n  width: 100%;\\n  justify-items: center;\\n  flex-grow: 1;\\n  gap: 4rem;\\n  padding: 2.4rem 0;\\n}\\n@media (max-width: 1279px) {\\n  .cfd-reset-password__container {\\n    min-height: 24rem;\\n    width: calc(100vw - 3.2rem);\\n  }\\n}\\n.cfd-reset-password__heading {\\n  font-size: 1.4rem;\\n  color: var(--text-general);\\n  font-weight: 700;\\n  text-transform: none;\\n  text-align: center;\\n  line-height: 1.5;\\n  margin: 1.6rem 0 0;\\n}\\n[dir=\\\"ltr\\\"] .cfd-reset-password__hint {\\n  text-align: left;\\n}\\n[dir=\\\"rtl\\\"] .cfd-reset-password__hint {\\n  text-align: right;\\n}\\n.cfd-reset-password__hint {\\n  font-size: 1.2rem;\\n  color: var(--text-general);\\n  font-weight: 400;\\n  text-transform: none;\\n  line-height: 1.25;\\n  color: var(--text-less-prominent);\\n  margin-left: 1.2rem;\\n}\\n.cfd-reset-password__password-field {\\n  margin-bottom: 0.5rem;\\n}\\n.cfd-reset-password__password-field .dc-input__label {\\n  top: 0.9rem;\\n}\\n@media (min-width: 1280px) {\\n  .cfd-reset-password__password-area {\\n    width: min(34rem, 100vw);\\n  }\\n}\\n@media (max-width: 1279px) {\\n  .cfd-reset-password__password-area {\\n    width: 100%;\\n    max-width: calc(100% - 2.4rem);\\n  }\\n}\\n.cfd-reset-password__error {\\n  display: flex;\\n  max-width: 38.4rem;\\n  min-height: 28.4rem;\\n  flex-direction: column;\\n  align-items: center;\\n  padding: 2rem 0;\\n  margin: 0 auto;\\n}\\n[dir=\\\"ltr\\\"] .cfd-reset-password__description {\\n  text-align: left;\\n}\\n[dir=\\\"rtl\\\"] .cfd-reset-password__description {\\n  text-align: right;\\n}\\n.cfd-reset-password__description {\\n  font-size: 1.4rem;\\n  color: var(--text-general);\\n  font-weight: 400;\\n  text-transform: none;\\n  line-height: 1.5;\\n  color: var(--text-prominent);\\n  margin-bottom: 2.4rem;\\n}\\n.cfd-reset-password__description--is-centered {\\n  margin-bottom: 2.4rem;\\n  max-width: 70%;\\n}\\n.cfd-reset-password__confirm-button {\\n  margin-top: 2.4rem;\\n}\\n.cfd-reset-password__success {\\n  min-width: 38.4rem;\\n  height: 28.4rem;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: space-around;\\n  padding: 2.4rem 0 2rem;\\n}\\n@media (max-width: 1279px) {\\n  .cfd-reset-password__success {\\n    width: calc(100vw - 3.2rem);\\n    height: 100%;\\n  }\\n}\\n@media (max-width: 1279px) {\\n  .cfd-reset-password .dc-form-submit-button {\\n    all: unset;\\n  }\\n}\\n\\n.dc-modal__container_cfd-financial-stp-modal .dc-modal-header {\\n  border-bottom: 1px solid var(--general-section-1);\\n}\\n\\n.dc-modal__container_jurisdiction-modal {\\n  overflow-y: auto;\\n}\\n.dc-modal__container_jurisdiction-modal .dc-modal-header {\\n  border-bottom: 2px solid var(--general-section-1);\\n}\\n\\n.poi-poa-submitted__message-content {\\n  align-items: center;\\n  display: flex;\\n  flex-direction: column;\\n  height: auto;\\n  justify-content: center;\\n  padding: 10rem 3rem 7rem;\\n  line-height: 5rem;\\n}\\n.poi-poa-submitted__message-content .dc-btn {\\n  margin-top: 2rem;\\n}\\n.poi-poa-submitted__text {\\n  padding-top: 1.6rem;\\n}\\n.poi-poa-submitted__svg-footer {\\n  display: flex;\\n  margin: 1.6rem 0;\\n}\\n.poi-poa-submitted__svg-footer .dc-btn {\\n  margin: 0.5rem;\\n}\\n\\n@media (max-width: 1279px) {\\n  .cfd-password-modal__mt5 form {\\n    height: 100%;\\n  }\\n}\\n@media (max-width: 1279px) {\\n  .cfd-password-modal__mt5 .dc-password-meter__container {\\n    width: 100%;\\n    max-width: 100%;\\n  }\\n}\\n@media (max-width: 1279px) {\\n  .cfd-password-modal__mt5 .cfd-password-modal__content {\\n    max-height: 100%;\\n    padding: 0;\\n    justify-content: space-between;\\n  }\\n}\\n@media (min-width: 768px) {\\n  .cfd-password-modal__mt5 .cfd-password-modal__content {\\n    margin-bottom: 0;\\n  }\\n}\\n.cfd-password-modal__mt5 .dc-form-submit-button {\\n  box-shadow: 0px 2px 0px 0px var(--border-divider) inset;\\n  width: 100%;\\n  padding-left: 1.6rem;\\n  padding-right: 1.6rem;\\n  padding-top: 1.6rem;\\n  padding-bottom: 0.8rem;\\n}\\n@media (max-width: 1279px) {\\n  .cfd-password-modal__mt5 .dc-form-submit-button > .dc-btn {\\n    width: 100%;\\n  }\\n}\\n.cfd-password-modal__mt5 .cfd-password-modal__create-password-content {\\n  margin-top: 0;\\n}\\n.cfd-password-modal__mt5 .cfd-password-modal__create-password-body {\\n  padding-top: 3.2rem;\\n  padding-bottom: 3.2rem;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n}\\n@media (max-width: 1279px) {\\n  .cfd-password-modal__mt5 .cfd-password-modal__create-password-body {\\n    height: 100%;\\n    padding-left: 1.6rem;\\n    padding-right: 1.6rem;\\n    padding-top: 4rem;\\n    padding-bottom: 1.6rem;\\n  }\\n}\\n.cfd-password-modal__mt5 .cfd-password-modal__create-password-description {\\n  max-width: 100%;\\n  margin-top: 1.6rem;\\n  margin-bottom: 1.6rem;\\n}\\n@media (max-width: 1279px) {\\n  .cfd-password-modal__mt5 .cfd-password-modal-tnc {\\n    margin-top: auto;\\n  }\\n}\\n.cfd-password-modal__mt5 .dc-modal-header--cfd-password-modal {\\n  box-shadow: 0px -2px 0px 0px var(--border-divider) inset;\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./cfd.scss\"],\"names\":[],\"mappings\":\"AAAA;;uCAAA;AAIA,qBAAA;AAQA,mCAAA;AAEA,kBAAA;AAEA,WAAA;AAwEA,kBAAA;AAQA,iBAAA;AAuBA,oBAAA;AA+BA,8BAAA;AACA,YAAA;AAsDA,kCAAA;AAsBA,+BAAA;AAmBA,kCAAA;AAIA,YAAA;AASA;;uCAAA;AAIA;;EAAA;AAkCA;;;;;;;;EAAA;AAsBA;;;;;;;EAAA;AAYA;;;;EAAA;AAyBA;;;;EAAA;AAkCA;;;;;;;EAAA;AAqBA;;EAAA;AAkBA;;EAAA;AAgBA;;;;;;;EAAA;AAkBA;;;;;EAAA;AA4BA;;;;;EAAA;AA4BA;;CAAA;AAMA;;CAAA;AAoCA;;;;EAAA;AAOA;;;;;;;;CAAA;AAmCA;;EAAA;AA+DA,4CAAA;AA8CA;;EAEI,aAAA;EACA,sBAAA;EACA,2BAAA;EACA,gBAAA;AA5lBJ;AA8lBI;;EACI,YAAA;EACA,aAAA;EACA,sBAAA;EACA,uBAAA;EACA,8BAAA;EACA,wBAAA;AA3lBR;AAujBI;EA8BA;;IASQ,UAAA;EAzlBV;AACF;AA2lBI;;EAhXI,iBAyCG;EAtCH,0BAyCI;EAtCJ,gBAqCK;EAlCL,oBA0BmB;EAvBnB,kBA8BI;EAvBJ,iBAAA;EA+VA,4BAAA;EACA,oBAAA;EACA,gBAAA;EACA,SAAA;EACA,kBAAA;EACA,eAAA;AAnlBR;AAqlBI;;EACI,gBAAA;AAllBR;AAolBI;;EACI,YAAA;EACA,aAAA;EACA,sBAAA;EACA,2BAAA;EACA,uBAAA;AAjlBR;AAolBQ;;EACI,WAAA;AAjlBZ;AAkhBI;EA8DI;;IAGQ,WAAA;IACA,oCAAA;EA9kBd;AACF;AAklBQ;;EACI,oCAAA;AA/kBZ;AAugBI;EAuEI;;IAGQ,gCAAA;EA5kBd;AACF;AA+kBI;;EACI,eAAA;AA5kBR;AA6fI;EAiFA;;IAEQ,OAAA;EA3kBV;AACF;AA6kBI;;EACI,YAAA;EACA,YAAA;AA1kBR;AAkfI;EAsFA;;IAKQ,eAAA;EAxkBV;AACF;AA0kBI;;EACI,kBAAA;EACA,UAAA;AAvkBR;AAykBI;;EACI,WAAA;AAtkBR;AAmeI;EAsGI;;IACI,gBAAA;IACA,kBAAA;IACA,YAAA;IACA,gCAAA;IACA,aAAA;EArkBV;AACF;AA6ZI;EA2KI;;IACI,aAAA;IACA,sBAAA;IACA,WAAA;IACA,mBAAA;EApkBV;EAskBU;;IACI,iBAAA;EAnkBd;AACF;AA8dI;EAyGI;;IACI,gBAAA;IACA,cAAA;EAnkBV;EAokBU;;IACI,gBAAA;IACA,0CAAA;IAAA,6CAAA;IACA,gBAAA;EAjkBd;AACF;;AAqkBA;EACI,oBAAA;AAlkBJ;;AAskBI;EACI,eAAA;EACA,gBAAA;EACA,kBAAA;AAnkBR;AAokBQ;EACI,qBAAA;EACA,eAAA;EACA,uCAAA;AAlkBZ;AAqkBI;EACI,gBAAA;EACA,YAAA;EACA,iBAAA;AAnkBR;AAskBQ;EACI,aAAA;EACA,cAAA;EACA,aAAA;EACA,sBAAA;AApkBZ;AAskBQ;EACI,aAAA;EACA,mBAAA;AApkBZ;AAukBI;EACI,iBAAA;AArkBR;AAukBQ;EACI,aAAA;EACA,sBAAA;EACA,WAAA;EACA,mBAAA;EACA,mBAAA;AArkBZ;AAukBY;EACI,mBAAA;EACA,UAAA;AArkBhB;AAwkBQ;EACI,aAAA;EACA,sBAAA;EACA,mBAAA;EACA,WAAA;AAtkBZ;AAwkBQ;EACI,kBAAA;EACA,qBAAA;AAtkBZ;AAwkBQ;EACI,gBAAA;EACA,qBAAA;AAtkBZ;AAykBI;EACI,aAAA;EACA,mBAAA;EACA,sBAAA;EACA,gBAAA;AAvkBR;AAyXI;EA0MA;IAOQ,mBAAA;EAtkBV;AACF;AAwkBQ;EACI,aAAA;EACA,uBAAA;EACA,WAAA;AAtkBZ;AAwkBQ;EACI,qBAAA;AAtkBZ;AAkXI;EAwNI;IAEQ,gBAAA;IACA,qBAAA;EAxkBd;AACF;AA2kBI;EACI,qBAAA;EACA,oCAxzBmB;EAyzBnB,aAAA;EACA,eAAA;EACA,uBAAA;EACA,WAAA;EACA,mBAAA;AAzkBR;AA0kBQ;EACI,kBAAA;EACA,iBAAA;AAxkBZ;AA2kBI;EAGI;AAzkBR;AAskBI;EAGI;AAzkBR;AAskBI;EACI,aAAA;EACA,oBAAA;AAxkBR;AA6kBQ;EACI;AA3kBZ;AA0kBQ;EACI;AA3kBZ;;AAglBA;EACI,YAAA;EACA,iBAAA;EACA,aAAA;EACA,sBAAA;AA7kBJ;AA+kBI;EACI,aAAA;EACA,sBAAA;EACA,sBAAA;EACA,YAAA;EACA,6BAAA;EACA,mBAAA;AA7kBR;AA+kBI;EACI,oBAAA;AA7kBR;AA+kBI;EAhlBI,iBAyCG;EAtCH,0BAyCI;EAtCJ,gBAqCK;EAlCL,oBA0BmB;EAvBnB,kBA8BI;EAvBJ,iBAAA;EA+jBA,oBAAA;EACA,4BAAA;AAxkBR;AA0kBI;EArlBI,iBAyCG;EAtCH,0BAyCI;EAtCJ,gBAqCK;EAlCL,oBA0BmB;EAvBnB,kBA8BI;EA3BJ,iBAAA;EAwkBA,gBAAA;EACA,iCAAA;AAnkBR;;AAwkBI;EA7lBI,iBAyCG;EAtCH,0BAyCI;EAtCJ,gBAqCK;EAlCL,oBA0BmB;EAvBnB,kBA8BI;EAzBJ,gBAAA;EA8kBA,qBAAA;AAhkBR;AAmkBQ;EAlmBA,iBAyCG;EAtCH,0BAyCI;EAtCJ,gBAqCK;EAlCL,oBA0BmB;EAvBnB,kBA8BI;EAvBJ,iBAAA;EAilBI,0BAAA;EACA,oBAAA;AA5jBZ;;AAmkBQ;EACI,aAAA;AAhkBZ;;AAqkBA;EACI,aAAA;EACA,sBAAA;EACA,uBAAA;EACA,mBAAA;AAlkBJ;AAokBI;EAxnBI,iBAyCG;EAtCH,0BAyCI;EAtCJ,gBAqCK;EAlCL,oBA0BmB;EAvBnB,kBA8BI;EA3BJ,iBAAA;EA2mBA,gBAAA;AA7jBR;AA+jBQ;EACI,qBAAA;EACA,gBAAA;AA7jBZ;AAgkBI;EACI,cAAA;EAloBA,iBAyCG;EAtCH,0BAyCI;EAtCJ,gBAqCK;EAlCL,oBA0BmB;EAvBnB,kBA8BI;EAzBJ,gBAAA;EAmnBA,6BAAA;EACA,qBAAA;EACA,kBAAA;AAzjBR;AA2jBI;EACI,gBAAA;AAzjBR;;AA6jBA;EAjoBQ;AAmFR;;AA8iBA;EAjoBQ;AAmFR;;AA8iBA;EACI,WAAA;EACA,YAAA;EACA,aAAA;EACA,mBAAA;EACA,uBAAA;EAlpBI,iBAyCG;EAtCH,0BAyCI;EAtCJ,gBAqCK;EAlCL,oBA0BmB;EAlBnB,gBAAA;EAmoBJ,4BAAA;AArjBJ;AAujBI;EACI,aAAA;EACA,sBAAA;EACA,mBAAA;EACA,YAAA;EACA,WAAA;EACA,qBAAA;EACA,YAAA;EACA,SAAA;EACA,iBAAA;AArjBR;AA4NI;EAgVA;IAYQ,iBAAA;IACA,2BAAA;EApjBV;AACF;AAsjBI;EAtqBI,iBAyCG;EAtCH,0BAyCI;EAtCJ,gBAqCK;EAlCL,oBA0BmB;EAvBnB,kBA8BI;EAzBJ,gBAAA;EAupBA,kBAAA;AA/iBR;AAijBI;EA9pBI;AAuHR;AAuiBI;EA9pBI;AAuHR;AAuiBI;EA1qBI,iBAyCG;EAtCH,0BAyCI;EAtCJ,gBAqCK;EAlCL,oBA0BmB;EAhBnB,iBAAA;EAypBA,iCAAA;EACA,mBAAA;AA1iBR;AA4iBI;EACI,qBAAA;AA1iBR;AA4iBQ;EACI,WAAA;AA1iBZ;AAuLI;EAsXA;IAEQ,wBAAA;EA3iBV;AACF;AAwLI;EAgXA;IAKQ,WAAA;IACA,8BAAA;EAziBV;AACF;AA2iBI;EACI,aAAA;EACA,kBAAA;EACA,mBAAA;EACA,sBAAA;EACA,mBAAA;EACA,eAAA;EACA,cAAA;AAziBR;AA2iBI;EA5rBI;AA2JR;AAiiBI;EA5rBI;AA2JR;AAiiBI;EAxsBI,iBAyCG;EAtCH,0BAyCI;EAtCJ,gBAqCK;EAlCL,oBA0BmB;EAlBnB,gBAAA;EAyrBA,4BAAA;EACA,qBAAA;AApiBR;AAsiBQ;EACI,qBAAA;EACA,cAAA;AApiBZ;AAuiBI;EACI,kBAAA;AAriBR;AAuiBI;EACI,kBAAA;EACA,eAAA;EACA,aAAA;EACA,sBAAA;EACA,mBAAA;EACA,6BAAA;EACA,sBAAA;AAriBR;AA+II;EA+YA;IAUQ,2BAAA;IACA,YAAA;EApiBV;AACF;AAyII;EA8ZI;IACI,UAAA;EApiBV;AACF;;AAyiBI;EACI,iDAAA;AAtiBR;;AA0iBA;EAII,gBAAA;AA1iBJ;AAuiBI;EACI,iDAAA;AAriBR;;AA2iBI;EACI,mBAAA;EACA,aAAA;EACA,sBAAA;EACA,YAAA;EACA,uBAAA;EACA,wBAAA;EACA,iBAAA;AAxiBR;AAyiBQ;EACI,gBAAA;AAviBZ;AA0iBI;EACI,mBAAA;AAxiBR;AA0iBI;EACI,aAAA;EACA,gBAAA;AAxiBR;AAyiBQ;EACI,cAAA;AAviBZ;;AAkGI;EA2cA;IAEQ,YAAA;EA1iBV;AACF;AA4FI;EAgdA;IAEQ,WAAA;IACA,eAAA;EA1iBV;AACF;AAsFI;EAsdA;IAEQ,gBAAA;IACA,UAAA;IACA,8BAAA;EA1iBV;AACF;AAmBI;EAkhBA;IAOQ,gBAAA;EAxiBV;AACF;AA2iBI;EACI,uDAAA;EACA,WAAA;EACA,oBAAA;EAAA,qBAAA;EACA,mBAAA;EACA,sBAAA;AAziBR;AAmEI;EAweQ;IACI,WAAA;EAxiBd;AACF;AA6iBY;EACI,aAAA;AA3iBhB;AA6iBY;EACI,mBAAA;EAAA,sBAAA;EACA,aAAA;EACA,sBAAA;EACA,mBAAA;AA3iBhB;AAqDI;EAkfQ;IAMQ,YAAA;IACA,oBAAA;IAAA,qBAAA;IACA,iBAAA;IACA,sBAAA;EAziBlB;AACF;AA2iBY;EACI,eAAA;EACA,kBAAA;EAAA,qBAAA;AAziBhB;AAyCI;EAmgBI;IAEQ,gBAAA;EA1iBd;AACF;AA8iBQ;EACI,wDAAA;AA5iBZ\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.dc-modal__container_cfd-password-modal,\\n.dc-mobile-dialog__cfd-password-modal {\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: flex-start;\\n    max-width: 424px;\\n\\n    form {\\n        flex-grow: 1;\\n        display: flex;\\n        flex-direction: column;\\n        align-items: flex-start;\\n        justify-content: space-between;\\n        padding: 0 2.4rem 1.2rem;\\n\\n        @include mobile-or-tablet-screen {\\n            padding: 0;\\n        }\\n    }\\n    &__description {\\n        @include typeface(--small-center-normal-black);\\n        color: var(--text-prominent);\\n        text-transform: none;\\n        margin-top: 1rem;\\n        top: 2rem;\\n        position: relative;\\n        padding: 1.3rem;\\n    }\\n    &__hint {\\n        max-width: 40rem;\\n    }\\n    &__body {\\n        flex-grow: 1;\\n        display: flex;\\n        flex-direction: column;\\n        justify-content: flex-start;\\n        align-items: flex-start;\\n    }\\n    .dc-input {\\n        &__label {\\n            top: 1.2rem;\\n            @include mobile-or-tablet-screen {\\n                top: 0.9rem;\\n                background-color: var(--fill-normal);\\n            }\\n        }\\n    }\\n    .dc-password-meter {\\n        &__bg {\\n            background: var(--general-section-2);\\n            @include mobile-or-tablet-screen {\\n                background: var(--fill-disabled);\\n            }\\n        }\\n    }\\n    .status-dialog {\\n        margin-top: 3em;\\n    }\\n    .cfd-password-reset {\\n        @include mobile-or-tablet-screen {\\n            flex: 1;\\n        }\\n    }\\n    & .dc-password-meter__container {\\n        flex-grow: 1;\\n        margin: auto;\\n\\n        @include mobile-or-tablet-screen {\\n            max-width: 100%;\\n        }\\n    }\\n    & .mt5-password-field {\\n        margin-bottom: 1em;\\n        width: 80%;\\n    }\\n    .input-element {\\n        width: 100%;\\n    }\\n    @include mobile-or-tablet-screen {\\n        .cfd-password-modal__content {\\n            overflow-y: auto;\\n            overflow-x: hidden;\\n            height: 100%;\\n            max-height: calc(100vh - 6.4rem);\\n            padding: 1rem;\\n        }\\n    }\\n    @include tablet-up {\\n        .cfd-password-modal__content {\\n            display: flex;\\n            flex-direction: column;\\n            width: 100%;\\n            margin-bottom: 2rem;\\n\\n            &--password-reset {\\n                padding: 0 2.5rem;\\n            }\\n        }\\n    }\\n    @include mobile-or-tablet-landscape {\\n        .cfd-password-change__content {\\n            overflow-y: auto;\\n            display: block;\\n            .cfd-password-modal__content {\\n                max-height: 100%;\\n                border-block: 1px solid var(--general-hover);\\n                margin-bottom: 0;\\n            }\\n        }\\n    }\\n}\\n.dc-mobile-dialog__mt5-email-sent {\\n    padding-bottom: 1rem;\\n}\\n\\n.cfd-password-modal {\\n    &__warning {\\n        padding: 2.5rem;\\n        max-width: 50rem;\\n        align-self: center;\\n        &-text {\\n            border-radius: 0.8rem;\\n            padding: 0.8rem;\\n            background-color: var(--status-warning);\\n        }\\n    }\\n    &__message {\\n        max-width: 32rem;\\n        margin: auto;\\n        line-height: 1.43;\\n    }\\n    &__radio {\\n        &.dc-radio-group {\\n            display: grid;\\n            grid-gap: 2rem;\\n            margin-top: 0;\\n            padding-bottom: 2.4rem;\\n        }\\n        &.dc-radio-group__item {\\n            display: flex;\\n            flex-direction: row;\\n        }\\n    }\\n    &__create-password {\\n        padding: 0 1.2rem;\\n\\n        &-content {\\n            display: flex;\\n            flex-direction: column;\\n            width: 100%;\\n            align-items: center;\\n            margin-top: -2.5rem;\\n\\n            .dc-icon {\\n                margin-left: 1.1rem;\\n                flex: none;\\n            }\\n        }\\n        &-body {\\n            display: flex;\\n            flex-direction: column;\\n            align-items: center;\\n            width: 100%;\\n        }\\n        &-title {\\n            margin-top: 2.4rem;\\n            margin-bottom: 0.8rem;\\n        }\\n        &-description {\\n            max-width: 30rem;\\n            margin-bottom: 1.6rem;\\n        }\\n    }\\n    &__change-password-confirmation {\\n        display: flex;\\n        align-items: center;\\n        flex-direction: column;\\n        max-width: 30rem;\\n\\n        @include desktop-screen {\\n            margin-top: -2.5rem;\\n        }\\n\\n        &-wrapper {\\n            display: flex;\\n            justify-content: center;\\n            width: 100%;\\n        }\\n        .dc-form-submit-button {\\n            margin-bottom: 2.2rem;\\n        }\\n    }\\n    &-tnc {\\n        &--bottom {\\n            @include mobile-or-tablet-screen {\\n                margin-top: auto;\\n                margin-bottom: 7.5rem;\\n            }\\n        }\\n    }\\n    &-info {\\n        border-radius: 0.4rem;\\n        background: $color-status-information;\\n        display: flex;\\n        padding: 0.8rem;\\n        align-items: flex-start;\\n        gap: 0.8rem;\\n        margin: 1.6rem auto;\\n        &__icon {\\n            flex-basis: 1.6rem;\\n            max-width: 1.6rem;\\n        }\\n    }\\n    &__checkbox {\\n        display: flex;\\n        align-self: baseline;\\n        margin-inline-start: -0.8rem;\\n    }\\n    &-info,\\n    &__checkbox {\\n        .dc-icon {\\n            margin-inline-start: 0;\\n        }\\n    }\\n}\\n\\n.dc-modal__container_top-up-virtual {\\n    width: 384px;\\n    min-height: 367px;\\n    display: flex;\\n    flex-direction: column;\\n\\n    &__body {\\n        display: flex;\\n        flex-direction: column;\\n        padding: 4.8rem 4.2rem;\\n        flex-grow: 1;\\n        justify-content: space-around;\\n        align-items: center;\\n    }\\n    &__description {\\n        text-transform: none;\\n    }\\n    &--h4 {\\n        @include typeface(--small-center-bold-black);\\n        text-transform: none;\\n        color: var(--text-prominent);\\n    }\\n    &--balance {\\n        @include typeface(--title-center-bold-black);\\n        line-height: 1.5;\\n        color: var(--text-profit-success);\\n    }\\n}\\n\\n.cfd-success-topup {\\n    &__heading {\\n        @include typeface(--paragraph-center-bold-black);\\n        margin: 1.6rem 1.8rem;\\n    }\\n    &__description {\\n        p {\\n            @include typeface(--small-center-normal-black);\\n            color: var(--text-general);\\n            text-transform: none;\\n        }\\n    }\\n}\\n\\n.cfd-dashboard {\\n    &__container {\\n        & .dc-popover__target {\\n            display: flex;\\n        }\\n    }\\n}\\n\\n.cfd-verification-email-sent {\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: center;\\n    align-items: center;\\n\\n    &__title {\\n        @include typeface(--title-center-bold-black);\\n        margin: 0.8rem 0;\\n\\n        &--sub {\\n            margin-bottom: 0.8rem;\\n            margin-top: 3rem;\\n        }\\n    }\\n    &__resend-button {\\n        display: block;\\n        @include typeface(--paragraph-center-bold-black);\\n        color: var(--brand-red-coral);\\n        text-decoration: none;\\n        margin: 3.2rem 0 0;\\n    }\\n    & .countdown {\\n        margin: 0 0.4rem;\\n    }\\n}\\n\\n.cfd-reset-password {\\n    width: 100%;\\n    height: 100%;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    @include typeface(--paragraph-left-normal-black);\\n    color: var(--text-prominent);\\n\\n    &__container {\\n        display: flex;\\n        flex-direction: column;\\n        align-items: center;\\n        height: 100%;\\n        width: 100%;\\n        justify-items: center;\\n        flex-grow: 1;\\n        gap: 4rem;\\n        padding: 2.4rem 0;\\n\\n        @include mobile-or-tablet-screen {\\n            min-height: 24rem;\\n            width: calc(100vw - 3.2rem);\\n        }\\n    }\\n    &__heading {\\n        @include typeface(--paragraph-center-bold-black);\\n        margin: 1.6rem 0 0;\\n    }\\n    &__hint {\\n        @include typeface(--small-left-normal-black);\\n        color: var(--text-less-prominent);\\n        margin-left: 1.2rem;\\n    }\\n    &__password-field {\\n        margin-bottom: 0.5rem;\\n\\n        & .dc-input__label {\\n            top: 0.9rem;\\n        }\\n    }\\n    &__password-area {\\n        @include desktop-screen {\\n            width: calc(min(34rem, 100vw));\\n        }\\n        @include mobile-or-tablet-screen {\\n            width: 100%;\\n            max-width: calc(100% - 2.4rem);\\n        }\\n    }\\n    &__error {\\n        display: flex;\\n        max-width: 38.4rem;\\n        min-height: 28.4rem;\\n        flex-direction: column;\\n        align-items: center;\\n        padding: 2rem 0;\\n        margin: 0 auto;\\n    }\\n    &__description {\\n        @include typeface(--paragraph-left-normal-black);\\n        color: var(--text-prominent);\\n        margin-bottom: 2.4rem;\\n\\n        &--is-centered {\\n            margin-bottom: 2.4rem;\\n            max-width: 70%;\\n        }\\n    }\\n    &__confirm-button {\\n        margin-top: 2.4rem;\\n    }\\n    &__success {\\n        min-width: 38.4rem;\\n        height: 28.4rem;\\n        display: flex;\\n        flex-direction: column;\\n        align-items: center;\\n        justify-content: space-around;\\n        padding: 2.4rem 0 2rem;\\n\\n        @include mobile-or-tablet-screen {\\n            width: calc(100vw - 3.2rem);\\n            height: 100%;\\n        }\\n    }\\n    @include mobile-or-tablet-screen {\\n        & .dc-form-submit-button {\\n            all: unset;\\n        }\\n    }\\n}\\n\\n.dc-modal__container_cfd-financial-stp-modal {\\n    .dc-modal-header {\\n        border-bottom: 1px solid var(--general-section-1);\\n    }\\n}\\n\\n.dc-modal__container_jurisdiction-modal {\\n    .dc-modal-header {\\n        border-bottom: 2px solid var(--general-section-1);\\n    }\\n    overflow-y: auto;\\n}\\n\\n.poi-poa-submitted {\\n    &__message-content {\\n        align-items: center;\\n        display: flex;\\n        flex-direction: column;\\n        height: auto;\\n        justify-content: center;\\n        padding: 10rem 3rem 7rem;\\n        line-height: 5rem;\\n        .dc-btn {\\n            margin-top: 2rem;\\n        }\\n    }\\n    &__text {\\n        padding-top: 1.6rem;\\n    }\\n    &__svg-footer {\\n        display: flex;\\n        margin: 1.6rem 0;\\n        .dc-btn {\\n            margin: 0.5rem;\\n        }\\n    }\\n}\\n\\n.cfd-password-modal__mt5 {\\n    form {\\n        @include mobile-or-tablet-screen {\\n            height: 100%;\\n        }\\n    }\\n    .dc-password-meter__container {\\n        @include mobile-or-tablet-screen {\\n            width: 100%;\\n            max-width: 100%;\\n        }\\n    }\\n    .cfd-password-modal__content {\\n        @include mobile-or-tablet-screen {\\n            max-height: 100%;\\n            padding: 0;\\n            justify-content: space-between;\\n        }\\n        @include tablet-up {\\n            margin-bottom: 0;\\n        }\\n    }\\n\\n    .dc-form-submit-button {\\n        box-shadow: 0px 2px 0px 0px var(--border-divider) inset;\\n        width: 100%;\\n        padding-inline: 1.6rem;\\n        padding-block-start: 1.6rem;\\n        padding-block-end: 0.8rem;\\n        @include mobile-or-tablet-screen {\\n            & > .dc-btn {\\n                width: 100%;\\n            }\\n        }\\n    }\\n    .cfd-password-modal {\\n        &__create-password {\\n            &-content {\\n                margin-top: 0;\\n            }\\n            &-body {\\n                padding-block: 3.2rem;\\n                display: flex;\\n                flex-direction: column;\\n                align-items: center;\\n                @include mobile-or-tablet-screen {\\n                    height: 100%;\\n                    padding-inline: 1.6rem;\\n                    padding-block-start: 4rem;\\n                    padding-block-end: 1.6rem;\\n                }\\n            }\\n            &-description {\\n                max-width: 100%;\\n                margin-block: 1.6rem;\\n            }\\n        }\\n        &-tnc {\\n            @include mobile-or-tablet-screen {\\n                margin-top: auto;\\n            }\\n        }\\n    }\\n    .dc-modal-header {\\n        &--cfd-password-modal {\\n            box-shadow: 0px -2px 0px 0px var(--border-divider) inset;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/css-loader/dist/cjs.js!../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../node_modules/sass-loader/dist/cjs.js!../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!../cfd/src/sass/cfd.scss\n"
                );

                /***/
            },

        /***/ '../cfd/src/sass/cfd.scss':
            /*!********************************!*\
  !*** ../cfd/src/sass/cfd.scss ***!
  \********************************/
            /***/ (module, __unused_webpack_exports, __webpack_require__) => {
                eval(
                    'var api = __webpack_require__(/*! !../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");\n            var content = __webpack_require__(/*! !!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../node_modules/sass-loader/dist/cjs.js!../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./cfd.scss */ "../../node_modules/css-loader/dist/cjs.js!../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../node_modules/sass-loader/dist/cjs.js!../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!../cfd/src/sass/cfd.scss");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === \'string\') {\n              content = [[module.id, content, \'\']];\n            }\n\nvar options = {};\n\noptions.insert = "head";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vY2ZkL3NyYy9zYXNzL2NmZC5zY3NzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlcml2L2FwcHN0b3JlLy4uL2NmZC9zcmMvc2Fzcy9jZmQuc2Nzcz8wMTkzIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBhcGkgPSByZXF1aXJlKFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiKTtcbiAgICAgICAgICAgIHZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzNdLnVzZVsyXSEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvcmVzb2x2ZS11cmwtbG9hZGVyL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzNdLnVzZVszXSEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzNdLnVzZVs1XSEuL2NmZC5zY3NzXCIpO1xuXG4gICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5fX2VzTW9kdWxlID8gY29udGVudC5kZWZhdWx0IDogY29udGVudDtcblxuICAgICAgICAgICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgICAgICAgICB9XG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuaW5zZXJ0ID0gXCJoZWFkXCI7XG5vcHRpb25zLnNpbmdsZXRvbiA9IGZhbHNlO1xuXG52YXIgdXBkYXRlID0gYXBpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxubW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscyB8fCB7fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../cfd/src/sass/cfd.scss\n'
                );

                /***/
            },

        /***/ '../account/dist/account/js/sent-email-modal.js':
            /*!******************************************************!*\
  !*** ../account/dist/account/js/sent-email-modal.js ***!
  \******************************************************/
            /***/ (module, exports, __webpack_require__) => {
                eval(
                    "/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n/*\n * ATTENTION: An \"eval-source-map\" devtool has been used.\n * This devtool is neither made for production nor for readable output files.\n * It uses \"eval()\" calls to create a separate source file with attached SourceMaps in the browser devtools.\n * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)\n * or disable the default devtool with \"devtool: false\".\n * If you are looking for production-ready output files, see mode: \"production\" (https://webpack.js.org/configuration/mode/).\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n  if (( false ? 0 : _typeof(exports)) === 'object' && ( false ? 0 : _typeof(module)) === 'object') module.exports = factory(__webpack_require__(/*! @deriv-com/translations */ \"@deriv-com/translations\"), __webpack_require__(/*! @deriv/components */ \"@deriv/components\"), __webpack_require__(/*! @deriv/shared */ \"@deriv/shared\"), __webpack_require__(/*! react */ \"react\"));else if (true) !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! @deriv-com/translations */ \"@deriv-com/translations\"), __webpack_require__(/*! @deriv/components */ \"@deriv/components\"), __webpack_require__(/*! @deriv/shared */ \"@deriv/shared\"), __webpack_require__(/*! react */ \"react\")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));else {}\n})(self, function (__WEBPACK_EXTERNAL_MODULE__deriv_com_translations__, __WEBPACK_EXTERNAL_MODULE__deriv_components__, __WEBPACK_EXTERNAL_MODULE__deriv_shared__, __WEBPACK_EXTERNAL_MODULE_react__) {\n  return /******/function () {\n    // webpackBootstrap\n    /******/\n    \"use strict\";\n\n    /******/\n    var __webpack_modules__ = {\n      /***/\"./Components/sent-email-modal/index.ts\": (\n      /*!**********************************************!*\\\n        !*** ./Components/sent-email-modal/index.ts ***!\n        \\**********************************************/\n      /***/\n      function _Components_sentEmailModal_indexTs(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n        eval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"default\\\": () => (__WEBPACK_DEFAULT_EXPORT__)\\n/* harmony export */ });\\n/* harmony import */ var _sent_email_modal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sent-email-modal */ \\\"./Components/sent-email-modal/sent-email-modal.tsx\\\");\\n\\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_sent_email_modal__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"]);//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9Db21wb25lbnRzL3NlbnQtZW1haWwtbW9kYWwvaW5kZXgudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi9Db21wb25lbnRzL3NlbnQtZW1haWwtbW9kYWwvaW5kZXgudHM/ZjgyNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU2VudEVtYWlsTW9kYWwgZnJvbSAnLi9zZW50LWVtYWlsLW1vZGFsJztcblxuZXhwb3J0IGRlZmF1bHQgU2VudEVtYWlsTW9kYWw7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///./Components/sent-email-modal/index.ts\\n\");\n\n        /***/\n      }),\n      /***/\"./Components/sent-email-modal/sent-email-modal.tsx\": (\n      /*!**********************************************************!*\\\n        !*** ./Components/sent-email-modal/sent-email-modal.tsx ***!\n        \\**********************************************************/\n      /***/\n      function _Components_sentEmailModal_sentEmailModalTsx(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n        eval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"default\\\": () => (__WEBPACK_DEFAULT_EXPORT__)\\n/* harmony export */ });\\n/* harmony import */ var _deriv_com_translations__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @deriv-com/translations */ \\\"@deriv-com/translations\\\");\\n/* harmony import */ var _deriv_com_translations__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_deriv_com_translations__WEBPACK_IMPORTED_MODULE_0__);\\n/* harmony import */ var _deriv_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @deriv/components */ \\\"@deriv/components\\\");\\n/* harmony import */ var _deriv_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_deriv_components__WEBPACK_IMPORTED_MODULE_1__);\\n/* harmony import */ var _deriv_shared__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @deriv/shared */ \\\"@deriv/shared\\\");\\n/* harmony import */ var _deriv_shared__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_deriv_shared__WEBPACK_IMPORTED_MODULE_2__);\\n/* harmony import */ var _deriv_com_ui__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @deriv-com/ui */ \\\"../../../node_modules/@deriv-com/ui/dist/hooks/useDevice.js\\\");\\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react/jsx-runtime */ \\\"../../../node_modules/react/jsx-runtime.js\\\");\\n\\n\\n\\n\\n\\nconst getNoEmailContentStrings = () => {\\n  return [{\\n    key: 'email_spam',\\n    icon: 'IcEmailSpam',\\n    content: (0,_deriv_com_translations__WEBPACK_IMPORTED_MODULE_0__.localize)('The email is in your spam folder (Sometimes things get lost there).')\\n  }, {\\n    key: 'wrong_email',\\n    icon: 'IcEmail',\\n    content: (0,_deriv_com_translations__WEBPACK_IMPORTED_MODULE_0__.localize)('You accidentally gave us another email address (Usually a work or a personal one instead of the one you meant).')\\n  }, {\\n    key: 'wrong_typo',\\n    icon: 'IcEmailTypo',\\n    content: (0,_deriv_com_translations__WEBPACK_IMPORTED_MODULE_0__.localize)('The email address you entered had a mistake or typo (happens to the best of us).')\\n  }, {\\n    key: 'email_firewall',\\n    icon: 'IcEmailFirewall',\\n    content: (0,_deriv_com_translations__WEBPACK_IMPORTED_MODULE_0__.localize)('We can’t deliver the email to this address (Usually because of firewalls or filtering).')\\n  }];\\n};\\nconst SentEmailModal = _ref => {\\n  let {\\n    identifier_title,\\n    is_modal_when_mobile = false,\\n    is_open,\\n    has_live_chat = false,\\n    onClickSendEmail,\\n    onClose\\n  } = _ref;\\n  const {\\n    isDesktop\\n  } = (0,_deriv_com_ui__WEBPACK_IMPORTED_MODULE_4__.useDevice)();\\n  const {\\n    localize\\n  } = (0,_deriv_com_translations__WEBPACK_IMPORTED_MODULE_0__.useTranslations)();\\n  const getSubtitle = () => {\\n    let subtitle = '';\\n    switch (identifier_title) {\\n      case _deriv_shared__WEBPACK_IMPORTED_MODULE_2__.CFD_PLATFORMS.DXTRADE:\\n        subtitle = /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_deriv_com_translations__WEBPACK_IMPORTED_MODULE_0__.Localize, {\\n          i18n_default_text: \\\"Please click on the link in the email to change your <0>{{platform_name_dxtrade}}</0> password.\\\",\\n          components: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\\\"span\\\", {\\n            className: \\\"send-email-template__subtitle-platform\\\"\\n          }, 0)],\\n          values: {\\n            platform_name_dxtrade: (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_2__.getPlatformSettings)('dxtrade').name\\n          }\\n        });\\n        break;\\n      case _deriv_shared__WEBPACK_IMPORTED_MODULE_2__.CFD_PLATFORMS.MT5:\\n        subtitle = localize('Please click on the link in the email to change your Deriv MT5 password.');\\n        break;\\n      case 'Google':\\n      case 'Facebook':\\n        subtitle = localize('Check your {{ identifier_title }} account email and click the link in the email to proceed.', {\\n          identifier_title\\n        });\\n        break;\\n      case 'Change_Email':\\n        subtitle = localize('Check your email and click the link in the email to proceed.');\\n        break;\\n      default:\\n        subtitle = localize('Please click on the link in the email to reset your password.');\\n        break;\\n    }\\n    return subtitle;\\n  };\\n  const onLiveChatClick = () => {\\n    onClose();\\n    window.LiveChatWidget?.call('maximize');\\n  };\\n  const live_chat = has_live_chat ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_deriv_com_translations__WEBPACK_IMPORTED_MODULE_0__.Localize, {\\n    i18n_default_text: \\\"Still didn't get the email? Please contact us via <0>live chat.</0>\\\",\\n    components: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\\\"span\\\", {\\n      className: \\\"send-email-template__footer-live-chat\\\",\\n      onClick: onLiveChatClick,\\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_1__.Popover, {\\n        className: \\\"send-email-template__footer-live-chat__link\\\",\\n        classNameBubble: \\\"help-centre__tooltip\\\",\\n        alignment: \\\"top\\\",\\n        message: localize('Live chat'),\\n        zIndex: \\\"9999\\\"\\n      })\\n    }, 0)]\\n  }) : null;\\n  const sent_email_template = /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_1__.SendEmailTemplate, {\\n    className: \\\"sent-email\\\",\\n    subtitle: getSubtitle(),\\n    title: localize('We’ve sent you an email'),\\n    lbl_no_receive: localize(\\\"Didn't receive the email?\\\"),\\n    txt_resend: localize('Resend email'),\\n    txt_resend_in: localize('Resend email in'),\\n    onClickSendEmail: onClickSendEmail,\\n    live_chat: live_chat,\\n    children: getNoEmailContentStrings().map(item => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(\\\"div\\\", {\\n      className: \\\"sent-email__content\\\",\\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_1__.Icon, {\\n        icon: item.icon,\\n        size: 32\\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_1__.Text, {\\n        size: \\\"xxs\\\",\\n        as: \\\"p\\\",\\n        children: item.content\\n      })]\\n    }, item.key))\\n  });\\n  if (!isDesktop && !is_modal_when_mobile) {\\n    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_1__.MobileDialog, {\\n      portal_element_id: \\\"modal_root\\\",\\n      title: localize('We’ve sent you an email'),\\n      wrapper_classname: \\\"mt5-email-sent\\\",\\n      visible: is_open,\\n      onClose: onClose,\\n      has_content_scroll: true,\\n      children: sent_email_template\\n    });\\n  }\\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_1__.Modal, {\\n    className: 'sent-email__modal',\\n    is_open: is_open,\\n    has_close_icon: true,\\n    should_header_stick_body: true,\\n    title: \\\"\\\",\\n    toggleModal: onClose,\\n    width: \\\"440px\\\",\\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_1__.Div100vhContainer, {\\n      className: \\\"account__scrollbars_container-wrapper\\\",\\n      is_disabled: isDesktop,\\n      height_offset: \\\"80px\\\",\\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(_deriv_components__WEBPACK_IMPORTED_MODULE_1__.Modal.Body, {\\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\\\"div\\\", {\\n          onClick: onClose,\\n          className: \\\"send-email-template__close\\\",\\n          \\\"data-testid\\\": \\\"dt_send_email_template_close\\\",\\n          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_1__.Icon, {\\n            icon: \\\"IcCross\\\"\\n          })\\n        }), sent_email_template]\\n      })\\n    })\\n  });\\n};\\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SentEmailModal);//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./Components/sent-email-modal/sent-email-modal.tsx\\n\");\n\n        /***/\n      }),\n      /***/\"../../../node_modules/object-assign/index.js\": (\n      /*!****************************************************!*\\\n        !*** ../../../node_modules/object-assign/index.js ***!\n        \\****************************************************/\n      /***/\n      function ___node_modules_objectAssign_indexJs(module) {\n        eval(\"/*\\nobject-assign\\n(c) Sindre Sorhus\\n@license MIT\\n*/\\n\\n\\n/* eslint-disable no-unused-vars */\\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\\n\\nfunction toObject(val) {\\n\\tif (val === null || val === undefined) {\\n\\t\\tthrow new TypeError('Object.assign cannot be called with null or undefined');\\n\\t}\\n\\n\\treturn Object(val);\\n}\\n\\nfunction shouldUseNative() {\\n\\ttry {\\n\\t\\tif (!Object.assign) {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\t// Detect buggy property enumeration order in older V8 versions.\\n\\n\\t\\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\\n\\t\\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\\n\\t\\ttest1[5] = 'de';\\n\\t\\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\\n\\t\\tvar test2 = {};\\n\\t\\tfor (var i = 0; i < 10; i++) {\\n\\t\\t\\ttest2['_' + String.fromCharCode(i)] = i;\\n\\t\\t}\\n\\t\\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\\n\\t\\t\\treturn test2[n];\\n\\t\\t});\\n\\t\\tif (order2.join('') !== '0123456789') {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\\n\\t\\tvar test3 = {};\\n\\t\\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\\n\\t\\t\\ttest3[letter] = letter;\\n\\t\\t});\\n\\t\\tif (Object.keys(Object.assign({}, test3)).join('') !==\\n\\t\\t\\t\\t'abcdefghijklmnopqrst') {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\treturn true;\\n\\t} catch (err) {\\n\\t\\t// We don't expect any of the above to throw, but better to be safe.\\n\\t\\treturn false;\\n\\t}\\n}\\n\\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\\n\\tvar from;\\n\\tvar to = toObject(target);\\n\\tvar symbols;\\n\\n\\tfor (var s = 1; s < arguments.length; s++) {\\n\\t\\tfrom = Object(arguments[s]);\\n\\n\\t\\tfor (var key in from) {\\n\\t\\t\\tif (hasOwnProperty.call(from, key)) {\\n\\t\\t\\t\\tto[key] = from[key];\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tif (getOwnPropertySymbols) {\\n\\t\\t\\tsymbols = getOwnPropertySymbols(from);\\n\\t\\t\\tfor (var i = 0; i < symbols.length; i++) {\\n\\t\\t\\t\\tif (propIsEnumerable.call(from, symbols[i])) {\\n\\t\\t\\t\\t\\tto[symbols[i]] = from[symbols[i]];\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\treturn to;\\n};\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL29iamVjdC1hc3NpZ24vaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL29iamVjdC1hc3NpZ24vaW5kZXguanM/M2UxMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxub2JqZWN0LWFzc2lnblxuKGMpIFNpbmRyZSBTb3JodXNcbkBsaWNlbnNlIE1JVFxuKi9cblxuJ3VzZSBzdHJpY3QnO1xuLyogZXNsaW50LWRpc2FibGUgbm8tdW51c2VkLXZhcnMgKi9cbnZhciBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xudmFyIGhhc093blByb3BlcnR5ID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbnZhciBwcm9wSXNFbnVtZXJhYmxlID0gT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZTtcblxuZnVuY3Rpb24gdG9PYmplY3QodmFsKSB7XG5cdGlmICh2YWwgPT09IG51bGwgfHwgdmFsID09PSB1bmRlZmluZWQpIHtcblx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKCdPYmplY3QuYXNzaWduIGNhbm5vdCBiZSBjYWxsZWQgd2l0aCBudWxsIG9yIHVuZGVmaW5lZCcpO1xuXHR9XG5cblx0cmV0dXJuIE9iamVjdCh2YWwpO1xufVxuXG5mdW5jdGlvbiBzaG91bGRVc2VOYXRpdmUoKSB7XG5cdHRyeSB7XG5cdFx0aWYgKCFPYmplY3QuYXNzaWduKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gRGV0ZWN0IGJ1Z2d5IHByb3BlcnR5IGVudW1lcmF0aW9uIG9yZGVyIGluIG9sZGVyIFY4IHZlcnNpb25zLlxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9NDExOFxuXHRcdHZhciB0ZXN0MSA9IG5ldyBTdHJpbmcoJ2FiYycpOyAgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXctd3JhcHBlcnNcblx0XHR0ZXN0MVs1XSA9ICdkZSc7XG5cdFx0aWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QxKVswXSA9PT0gJzUnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MiA9IHt9O1xuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgMTA7IGkrKykge1xuXHRcdFx0dGVzdDJbJ18nICsgU3RyaW5nLmZyb21DaGFyQ29kZShpKV0gPSBpO1xuXHRcdH1cblx0XHR2YXIgb3JkZXIyID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDIpLm1hcChmdW5jdGlvbiAobikge1xuXHRcdFx0cmV0dXJuIHRlc3QyW25dO1xuXHRcdH0pO1xuXHRcdGlmIChvcmRlcjIuam9pbignJykgIT09ICcwMTIzNDU2Nzg5Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcblx0XHR2YXIgdGVzdDMgPSB7fTtcblx0XHQnYWJjZGVmZ2hpamtsbW5vcHFyc3QnLnNwbGl0KCcnKS5mb3JFYWNoKGZ1bmN0aW9uIChsZXR0ZXIpIHtcblx0XHRcdHRlc3QzW2xldHRlcl0gPSBsZXR0ZXI7XG5cdFx0fSk7XG5cdFx0aWYgKE9iamVjdC5rZXlzKE9iamVjdC5hc3NpZ24oe30sIHRlc3QzKSkuam9pbignJykgIT09XG5cdFx0XHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdHJ1ZTtcblx0fSBjYXRjaCAoZXJyKSB7XG5cdFx0Ly8gV2UgZG9uJ3QgZXhwZWN0IGFueSBvZiB0aGUgYWJvdmUgdG8gdGhyb3csIGJ1dCBiZXR0ZXIgdG8gYmUgc2FmZS5cblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzaG91bGRVc2VOYXRpdmUoKSA/IE9iamVjdC5hc3NpZ24gOiBmdW5jdGlvbiAodGFyZ2V0LCBzb3VyY2UpIHtcblx0dmFyIGZyb207XG5cdHZhciB0byA9IHRvT2JqZWN0KHRhcmdldCk7XG5cdHZhciBzeW1ib2xzO1xuXG5cdGZvciAodmFyIHMgPSAxOyBzIDwgYXJndW1lbnRzLmxlbmd0aDsgcysrKSB7XG5cdFx0ZnJvbSA9IE9iamVjdChhcmd1bWVudHNbc10pO1xuXG5cdFx0Zm9yICh2YXIga2V5IGluIGZyb20pIHtcblx0XHRcdGlmIChoYXNPd25Qcm9wZXJ0eS5jYWxsKGZyb20sIGtleSkpIHtcblx0XHRcdFx0dG9ba2V5XSA9IGZyb21ba2V5XTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRpZiAoZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7XG5cdFx0XHRzeW1ib2xzID0gZ2V0T3duUHJvcGVydHlTeW1ib2xzKGZyb20pO1xuXHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBzeW1ib2xzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRcdGlmIChwcm9wSXNFbnVtZXJhYmxlLmNhbGwoZnJvbSwgc3ltYm9sc1tpXSkpIHtcblx0XHRcdFx0XHR0b1tzeW1ib2xzW2ldXSA9IGZyb21bc3ltYm9sc1tpXV07XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gdG87XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///../../../node_modules/object-assign/index.js\\n\");\n\n        /***/\n      }),\n      /***/\"../../../node_modules/react/cjs/react-jsx-runtime.development.js\": (\n      /*!************************************************************************!*\\\n        !*** ../../../node_modules/react/cjs/react-jsx-runtime.development.js ***!\n        \\************************************************************************/\n      /***/\n      function ___node_modules_react_cjs_reactJsxRuntimeDevelopmentJs(__unused_webpack_module, exports, __webpack_require__) {\n        eval(\"/** @license React v17.0.2\\n * react-jsx-runtime.development.js\\n *\\n * Copyright (c) Facebook, Inc. and its affiliates.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n\\n\\n\\nif (true) {\\n  (function() {\\n'use strict';\\n\\nvar React = __webpack_require__(/*! react */ \\\"react\\\");\\nvar _assign = __webpack_require__(/*! object-assign */ \\\"../../../node_modules/object-assign/index.js\\\");\\n\\n// ATTENTION\\n// When adding new symbols to this file,\\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\\n// nor polyfill, then a plain number is used for performance.\\nvar REACT_ELEMENT_TYPE = 0xeac7;\\nvar REACT_PORTAL_TYPE = 0xeaca;\\nexports.Fragment = 0xeacb;\\nvar REACT_STRICT_MODE_TYPE = 0xeacc;\\nvar REACT_PROFILER_TYPE = 0xead2;\\nvar REACT_PROVIDER_TYPE = 0xeacd;\\nvar REACT_CONTEXT_TYPE = 0xeace;\\nvar REACT_FORWARD_REF_TYPE = 0xead0;\\nvar REACT_SUSPENSE_TYPE = 0xead1;\\nvar REACT_SUSPENSE_LIST_TYPE = 0xead8;\\nvar REACT_MEMO_TYPE = 0xead3;\\nvar REACT_LAZY_TYPE = 0xead4;\\nvar REACT_BLOCK_TYPE = 0xead9;\\nvar REACT_SERVER_BLOCK_TYPE = 0xeada;\\nvar REACT_FUNDAMENTAL_TYPE = 0xead5;\\nvar REACT_SCOPE_TYPE = 0xead7;\\nvar REACT_OPAQUE_ID_TYPE = 0xeae0;\\nvar REACT_DEBUG_TRACING_MODE_TYPE = 0xeae1;\\nvar REACT_OFFSCREEN_TYPE = 0xeae2;\\nvar REACT_LEGACY_HIDDEN_TYPE = 0xeae3;\\n\\nif (typeof Symbol === 'function' && Symbol.for) {\\n  var symbolFor = Symbol.for;\\n  REACT_ELEMENT_TYPE = symbolFor('react.element');\\n  REACT_PORTAL_TYPE = symbolFor('react.portal');\\n  exports.Fragment = symbolFor('react.fragment');\\n  REACT_STRICT_MODE_TYPE = symbolFor('react.strict_mode');\\n  REACT_PROFILER_TYPE = symbolFor('react.profiler');\\n  REACT_PROVIDER_TYPE = symbolFor('react.provider');\\n  REACT_CONTEXT_TYPE = symbolFor('react.context');\\n  REACT_FORWARD_REF_TYPE = symbolFor('react.forward_ref');\\n  REACT_SUSPENSE_TYPE = symbolFor('react.suspense');\\n  REACT_SUSPENSE_LIST_TYPE = symbolFor('react.suspense_list');\\n  REACT_MEMO_TYPE = symbolFor('react.memo');\\n  REACT_LAZY_TYPE = symbolFor('react.lazy');\\n  REACT_BLOCK_TYPE = symbolFor('react.block');\\n  REACT_SERVER_BLOCK_TYPE = symbolFor('react.server.block');\\n  REACT_FUNDAMENTAL_TYPE = symbolFor('react.fundamental');\\n  REACT_SCOPE_TYPE = symbolFor('react.scope');\\n  REACT_OPAQUE_ID_TYPE = symbolFor('react.opaque.id');\\n  REACT_DEBUG_TRACING_MODE_TYPE = symbolFor('react.debug_trace_mode');\\n  REACT_OFFSCREEN_TYPE = symbolFor('react.offscreen');\\n  REACT_LEGACY_HIDDEN_TYPE = symbolFor('react.legacy_hidden');\\n}\\n\\nvar MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\\nfunction getIteratorFn(maybeIterable) {\\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\\n    return null;\\n  }\\n\\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\\n\\n  if (typeof maybeIterator === 'function') {\\n    return maybeIterator;\\n  }\\n\\n  return null;\\n}\\n\\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\\n\\nfunction error(format) {\\n  {\\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\\n      args[_key2 - 1] = arguments[_key2];\\n    }\\n\\n    printWarning('error', format, args);\\n  }\\n}\\n\\nfunction printWarning(level, format, args) {\\n  // When changing this logic, you might want to also\\n  // update consoleWithStackDev.www.js as well.\\n  {\\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\\n\\n    if (stack !== '') {\\n      format += '%s';\\n      args = args.concat([stack]);\\n    }\\n\\n    var argsWithFormat = args.map(function (item) {\\n      return '' + item;\\n    }); // Careful: RN currently depends on this prefix\\n\\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\\n    // breaks IE9: https://github.com/facebook/react/issues/13610\\n    // eslint-disable-next-line react-internal/no-production-logging\\n\\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\\n  }\\n}\\n\\n// Filter certain DOM attributes (e.g. src, href) if their values are empty strings.\\n\\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\\n\\nfunction isValidElementType(type) {\\n  if (typeof type === 'string' || typeof type === 'function') {\\n    return true;\\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\\n\\n\\n  if (type === exports.Fragment || type === REACT_PROFILER_TYPE || type === REACT_DEBUG_TRACING_MODE_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || type === REACT_LEGACY_HIDDEN_TYPE || enableScopeAPI ) {\\n    return true;\\n  }\\n\\n  if (typeof type === 'object' && type !== null) {\\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_BLOCK_TYPE || type[0] === REACT_SERVER_BLOCK_TYPE) {\\n      return true;\\n    }\\n  }\\n\\n  return false;\\n}\\n\\nfunction getWrappedName(outerType, innerType, wrapperName) {\\n  var functionName = innerType.displayName || innerType.name || '';\\n  return outerType.displayName || (functionName !== '' ? wrapperName + \\\"(\\\" + functionName + \\\")\\\" : wrapperName);\\n}\\n\\nfunction getContextName(type) {\\n  return type.displayName || 'Context';\\n}\\n\\nfunction getComponentName(type) {\\n  if (type == null) {\\n    // Host root, text node or just invalid type.\\n    return null;\\n  }\\n\\n  {\\n    if (typeof type.tag === 'number') {\\n      error('Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');\\n    }\\n  }\\n\\n  if (typeof type === 'function') {\\n    return type.displayName || type.name || null;\\n  }\\n\\n  if (typeof type === 'string') {\\n    return type;\\n  }\\n\\n  switch (type) {\\n    case exports.Fragment:\\n      return 'Fragment';\\n\\n    case REACT_PORTAL_TYPE:\\n      return 'Portal';\\n\\n    case REACT_PROFILER_TYPE:\\n      return 'Profiler';\\n\\n    case REACT_STRICT_MODE_TYPE:\\n      return 'StrictMode';\\n\\n    case REACT_SUSPENSE_TYPE:\\n      return 'Suspense';\\n\\n    case REACT_SUSPENSE_LIST_TYPE:\\n      return 'SuspenseList';\\n  }\\n\\n  if (typeof type === 'object') {\\n    switch (type.$$typeof) {\\n      case REACT_CONTEXT_TYPE:\\n        var context = type;\\n        return getContextName(context) + '.Consumer';\\n\\n      case REACT_PROVIDER_TYPE:\\n        var provider = type;\\n        return getContextName(provider._context) + '.Provider';\\n\\n      case REACT_FORWARD_REF_TYPE:\\n        return getWrappedName(type, type.render, 'ForwardRef');\\n\\n      case REACT_MEMO_TYPE:\\n        return getComponentName(type.type);\\n\\n      case REACT_BLOCK_TYPE:\\n        return getComponentName(type._render);\\n\\n      case REACT_LAZY_TYPE:\\n        {\\n          var lazyComponent = type;\\n          var payload = lazyComponent._payload;\\n          var init = lazyComponent._init;\\n\\n          try {\\n            return getComponentName(init(payload));\\n          } catch (x) {\\n            return null;\\n          }\\n        }\\n    }\\n  }\\n\\n  return null;\\n}\\n\\n// Helpers to patch console.logs to avoid logging during side-effect free\\n// replaying on render function. This currently only patches the object\\n// lazily which won't cover if the log function was extracted eagerly.\\n// We could also eagerly patch the method.\\nvar disabledDepth = 0;\\nvar prevLog;\\nvar prevInfo;\\nvar prevWarn;\\nvar prevError;\\nvar prevGroup;\\nvar prevGroupCollapsed;\\nvar prevGroupEnd;\\n\\nfunction disabledLog() {}\\n\\ndisabledLog.__reactDisabledLog = true;\\nfunction disableLogs() {\\n  {\\n    if (disabledDepth === 0) {\\n      /* eslint-disable react-internal/no-production-logging */\\n      prevLog = console.log;\\n      prevInfo = console.info;\\n      prevWarn = console.warn;\\n      prevError = console.error;\\n      prevGroup = console.group;\\n      prevGroupCollapsed = console.groupCollapsed;\\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\\n\\n      var props = {\\n        configurable: true,\\n        enumerable: true,\\n        value: disabledLog,\\n        writable: true\\n      }; // $FlowFixMe Flow thinks console is immutable.\\n\\n      Object.defineProperties(console, {\\n        info: props,\\n        log: props,\\n        warn: props,\\n        error: props,\\n        group: props,\\n        groupCollapsed: props,\\n        groupEnd: props\\n      });\\n      /* eslint-enable react-internal/no-production-logging */\\n    }\\n\\n    disabledDepth++;\\n  }\\n}\\nfunction reenableLogs() {\\n  {\\n    disabledDepth--;\\n\\n    if (disabledDepth === 0) {\\n      /* eslint-disable react-internal/no-production-logging */\\n      var props = {\\n        configurable: true,\\n        enumerable: true,\\n        writable: true\\n      }; // $FlowFixMe Flow thinks console is immutable.\\n\\n      Object.defineProperties(console, {\\n        log: _assign({}, props, {\\n          value: prevLog\\n        }),\\n        info: _assign({}, props, {\\n          value: prevInfo\\n        }),\\n        warn: _assign({}, props, {\\n          value: prevWarn\\n        }),\\n        error: _assign({}, props, {\\n          value: prevError\\n        }),\\n        group: _assign({}, props, {\\n          value: prevGroup\\n        }),\\n        groupCollapsed: _assign({}, props, {\\n          value: prevGroupCollapsed\\n        }),\\n        groupEnd: _assign({}, props, {\\n          value: prevGroupEnd\\n        })\\n      });\\n      /* eslint-enable react-internal/no-production-logging */\\n    }\\n\\n    if (disabledDepth < 0) {\\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\\n    }\\n  }\\n}\\n\\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\\nvar prefix;\\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\\n  {\\n    if (prefix === undefined) {\\n      // Extract the VM specific prefix used by each line.\\n      try {\\n        throw Error();\\n      } catch (x) {\\n        var match = x.stack.trim().match(/\\\\n( *(at )?)/);\\n        prefix = match && match[1] || '';\\n      }\\n    } // We use the prefix to ensure our stacks line up with native stack frames.\\n\\n\\n    return '\\\\n' + prefix + name;\\n  }\\n}\\nvar reentry = false;\\nvar componentFrameCache;\\n\\n{\\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\\n  componentFrameCache = new PossiblyWeakMap();\\n}\\n\\nfunction describeNativeComponentFrame(fn, construct) {\\n  // If something asked for a stack inside a fake render, it should get ignored.\\n  if (!fn || reentry) {\\n    return '';\\n  }\\n\\n  {\\n    var frame = componentFrameCache.get(fn);\\n\\n    if (frame !== undefined) {\\n      return frame;\\n    }\\n  }\\n\\n  var control;\\n  reentry = true;\\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\\n\\n  Error.prepareStackTrace = undefined;\\n  var previousDispatcher;\\n\\n  {\\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\\n    // for warnings.\\n\\n    ReactCurrentDispatcher.current = null;\\n    disableLogs();\\n  }\\n\\n  try {\\n    // This should throw.\\n    if (construct) {\\n      // Something should be setting the props in the constructor.\\n      var Fake = function () {\\n        throw Error();\\n      }; // $FlowFixMe\\n\\n\\n      Object.defineProperty(Fake.prototype, 'props', {\\n        set: function () {\\n          // We use a throwing setter instead of frozen or non-writable props\\n          // because that won't throw in a non-strict mode function.\\n          throw Error();\\n        }\\n      });\\n\\n      if (typeof Reflect === 'object' && Reflect.construct) {\\n        // We construct a different control for this case to include any extra\\n        // frames added by the construct call.\\n        try {\\n          Reflect.construct(Fake, []);\\n        } catch (x) {\\n          control = x;\\n        }\\n\\n        Reflect.construct(fn, [], Fake);\\n      } else {\\n        try {\\n          Fake.call();\\n        } catch (x) {\\n          control = x;\\n        }\\n\\n        fn.call(Fake.prototype);\\n      }\\n    } else {\\n      try {\\n        throw Error();\\n      } catch (x) {\\n        control = x;\\n      }\\n\\n      fn();\\n    }\\n  } catch (sample) {\\n    // This is inlined manually because closure doesn't do it for us.\\n    if (sample && control && typeof sample.stack === 'string') {\\n      // This extracts the first frame from the sample that isn't also in the control.\\n      // Skipping one frame that we assume is the frame that calls the two.\\n      var sampleLines = sample.stack.split('\\\\n');\\n      var controlLines = control.stack.split('\\\\n');\\n      var s = sampleLines.length - 1;\\n      var c = controlLines.length - 1;\\n\\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\\n        // We expect at least one stack frame to be shared.\\n        // Typically this will be the root most one. However, stack frames may be\\n        // cut off due to maximum stack limits. In this case, one maybe cut off\\n        // earlier than the other. We assume that the sample is longer or the same\\n        // and there for cut off earlier. So we should find the root most frame in\\n        // the sample somewhere in the control.\\n        c--;\\n      }\\n\\n      for (; s >= 1 && c >= 0; s--, c--) {\\n        // Next we find the first one that isn't the same which should be the\\n        // frame that called our sample function and the control.\\n        if (sampleLines[s] !== controlLines[c]) {\\n          // In V8, the first line is describing the message but other VMs don't.\\n          // If we're about to return the first line, and the control is also on the same\\n          // line, that's a pretty good indicator that our sample threw at same line as\\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\\n          // This can happen if you passed a class to function component, or non-function.\\n          if (s !== 1 || c !== 1) {\\n            do {\\n              s--;\\n              c--; // We may still have similar intermediate frames from the construct call.\\n              // The next one that isn't the same should be our match though.\\n\\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\\n                // V8 adds a \\\"new\\\" prefix for native classes. Let's remove it to make it prettier.\\n                var _frame = '\\\\n' + sampleLines[s].replace(' at new ', ' at ');\\n\\n                {\\n                  if (typeof fn === 'function') {\\n                    componentFrameCache.set(fn, _frame);\\n                  }\\n                } // Return the line we found.\\n\\n\\n                return _frame;\\n              }\\n            } while (s >= 1 && c >= 0);\\n          }\\n\\n          break;\\n        }\\n      }\\n    }\\n  } finally {\\n    reentry = false;\\n\\n    {\\n      ReactCurrentDispatcher.current = previousDispatcher;\\n      reenableLogs();\\n    }\\n\\n    Error.prepareStackTrace = previousPrepareStackTrace;\\n  } // Fallback to just using the name if we couldn't make it throw.\\n\\n\\n  var name = fn ? fn.displayName || fn.name : '';\\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\\n\\n  {\\n    if (typeof fn === 'function') {\\n      componentFrameCache.set(fn, syntheticFrame);\\n    }\\n  }\\n\\n  return syntheticFrame;\\n}\\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\\n  {\\n    return describeNativeComponentFrame(fn, false);\\n  }\\n}\\n\\nfunction shouldConstruct(Component) {\\n  var prototype = Component.prototype;\\n  return !!(prototype && prototype.isReactComponent);\\n}\\n\\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\\n\\n  if (type == null) {\\n    return '';\\n  }\\n\\n  if (typeof type === 'function') {\\n    {\\n      return describeNativeComponentFrame(type, shouldConstruct(type));\\n    }\\n  }\\n\\n  if (typeof type === 'string') {\\n    return describeBuiltInComponentFrame(type);\\n  }\\n\\n  switch (type) {\\n    case REACT_SUSPENSE_TYPE:\\n      return describeBuiltInComponentFrame('Suspense');\\n\\n    case REACT_SUSPENSE_LIST_TYPE:\\n      return describeBuiltInComponentFrame('SuspenseList');\\n  }\\n\\n  if (typeof type === 'object') {\\n    switch (type.$$typeof) {\\n      case REACT_FORWARD_REF_TYPE:\\n        return describeFunctionComponentFrame(type.render);\\n\\n      case REACT_MEMO_TYPE:\\n        // Memo may contain any component type so we recursively resolve it.\\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\\n\\n      case REACT_BLOCK_TYPE:\\n        return describeFunctionComponentFrame(type._render);\\n\\n      case REACT_LAZY_TYPE:\\n        {\\n          var lazyComponent = type;\\n          var payload = lazyComponent._payload;\\n          var init = lazyComponent._init;\\n\\n          try {\\n            // Lazy may contain any component type so we recursively resolve it.\\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\\n          } catch (x) {}\\n        }\\n    }\\n  }\\n\\n  return '';\\n}\\n\\nvar loggedTypeFailures = {};\\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\\n\\nfunction setCurrentlyValidatingElement(element) {\\n  {\\n    if (element) {\\n      var owner = element._owner;\\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\\n    } else {\\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\\n    }\\n  }\\n}\\n\\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\\n  {\\n    // $FlowFixMe This is okay but Flow doesn't know it.\\n    var has = Function.call.bind(Object.prototype.hasOwnProperty);\\n\\n    for (var typeSpecName in typeSpecs) {\\n      if (has(typeSpecs, typeSpecName)) {\\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\\n        // fail the render phase where it didn't fail before. So we log it.\\n        // After these have been cleaned up, we'll let them throw.\\n\\n        try {\\n          // This is intentionally an invariant that gets caught. It's the same\\n          // behavior as without this statement except with a better message.\\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\\n            err.name = 'Invariant Violation';\\n            throw err;\\n          }\\n\\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\\n        } catch (ex) {\\n          error$1 = ex;\\n        }\\n\\n        if (error$1 && !(error$1 instanceof Error)) {\\n          setCurrentlyValidatingElement(element);\\n\\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\\n\\n          setCurrentlyValidatingElement(null);\\n        }\\n\\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\\n          // Only monitor this failure once because there tends to be a lot of the\\n          // same error.\\n          loggedTypeFailures[error$1.message] = true;\\n          setCurrentlyValidatingElement(element);\\n\\n          error('Failed %s type: %s', location, error$1.message);\\n\\n          setCurrentlyValidatingElement(null);\\n        }\\n      }\\n    }\\n  }\\n}\\n\\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\\nvar RESERVED_PROPS = {\\n  key: true,\\n  ref: true,\\n  __self: true,\\n  __source: true\\n};\\nvar specialPropKeyWarningShown;\\nvar specialPropRefWarningShown;\\nvar didWarnAboutStringRefs;\\n\\n{\\n  didWarnAboutStringRefs = {};\\n}\\n\\nfunction hasValidRef(config) {\\n  {\\n    if (hasOwnProperty.call(config, 'ref')) {\\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\\n\\n      if (getter && getter.isReactWarning) {\\n        return false;\\n      }\\n    }\\n  }\\n\\n  return config.ref !== undefined;\\n}\\n\\nfunction hasValidKey(config) {\\n  {\\n    if (hasOwnProperty.call(config, 'key')) {\\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\\n\\n      if (getter && getter.isReactWarning) {\\n        return false;\\n      }\\n    }\\n  }\\n\\n  return config.key !== undefined;\\n}\\n\\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\\n  {\\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\\n      var componentName = getComponentName(ReactCurrentOwner.current.type);\\n\\n      if (!didWarnAboutStringRefs[componentName]) {\\n        error('Component \\\"%s\\\" contains the string ref \\\"%s\\\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentName(ReactCurrentOwner.current.type), config.ref);\\n\\n        didWarnAboutStringRefs[componentName] = true;\\n      }\\n    }\\n  }\\n}\\n\\nfunction defineKeyPropWarningGetter(props, displayName) {\\n  {\\n    var warnAboutAccessingKey = function () {\\n      if (!specialPropKeyWarningShown) {\\n        specialPropKeyWarningShown = true;\\n\\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\\n      }\\n    };\\n\\n    warnAboutAccessingKey.isReactWarning = true;\\n    Object.defineProperty(props, 'key', {\\n      get: warnAboutAccessingKey,\\n      configurable: true\\n    });\\n  }\\n}\\n\\nfunction defineRefPropWarningGetter(props, displayName) {\\n  {\\n    var warnAboutAccessingRef = function () {\\n      if (!specialPropRefWarningShown) {\\n        specialPropRefWarningShown = true;\\n\\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\\n      }\\n    };\\n\\n    warnAboutAccessingRef.isReactWarning = true;\\n    Object.defineProperty(props, 'ref', {\\n      get: warnAboutAccessingRef,\\n      configurable: true\\n    });\\n  }\\n}\\n/**\\n * Factory method to create a new React element. This no longer adheres to\\n * the class pattern, so do not use new to call it. Also, instanceof check\\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\\n * if something is a React Element.\\n *\\n * @param {*} type\\n * @param {*} props\\n * @param {*} key\\n * @param {string|object} ref\\n * @param {*} owner\\n * @param {*} self A *temporary* helper to detect places where `this` is\\n * different from the `owner` when React.createElement is called, so that we\\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\\n * functions, and as long as `this` and owner are the same, there will be no\\n * change in behavior.\\n * @param {*} source An annotation object (added by a transpiler or otherwise)\\n * indicating filename, line number, and/or other information.\\n * @internal\\n */\\n\\n\\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\\n  var element = {\\n    // This tag allows us to uniquely identify this as a React Element\\n    $$typeof: REACT_ELEMENT_TYPE,\\n    // Built-in properties that belong on the element\\n    type: type,\\n    key: key,\\n    ref: ref,\\n    props: props,\\n    // Record the component responsible for creating this element.\\n    _owner: owner\\n  };\\n\\n  {\\n    // The validation flag is currently mutative. We put it on\\n    // an external backing store so that we can freeze the whole object.\\n    // This can be replaced with a WeakMap once they are implemented in\\n    // commonly used development environments.\\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\\n    // the validation flag non-enumerable (where possible, which should\\n    // include every environment we run tests in), so the test framework\\n    // ignores it.\\n\\n    Object.defineProperty(element._store, 'validated', {\\n      configurable: false,\\n      enumerable: false,\\n      writable: true,\\n      value: false\\n    }); // self and source are DEV only properties.\\n\\n    Object.defineProperty(element, '_self', {\\n      configurable: false,\\n      enumerable: false,\\n      writable: false,\\n      value: self\\n    }); // Two elements created in two different places should be considered\\n    // equal for testing purposes and therefore we hide it from enumeration.\\n\\n    Object.defineProperty(element, '_source', {\\n      configurable: false,\\n      enumerable: false,\\n      writable: false,\\n      value: source\\n    });\\n\\n    if (Object.freeze) {\\n      Object.freeze(element.props);\\n      Object.freeze(element);\\n    }\\n  }\\n\\n  return element;\\n};\\n/**\\n * https://github.com/reactjs/rfcs/pull/107\\n * @param {*} type\\n * @param {object} props\\n * @param {string} key\\n */\\n\\nfunction jsxDEV(type, config, maybeKey, source, self) {\\n  {\\n    var propName; // Reserved names are extracted\\n\\n    var props = {};\\n    var key = null;\\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\\n    // issue if key is also explicitly declared (ie. <div {...props} key=\\\"Hi\\\" />\\n    // or <div key=\\\"Hi\\\" {...props} /> ). We want to deprecate key spread,\\n    // but as an intermediary step, we will use jsxDEV for everything except\\n    // <div {...props} key=\\\"Hi\\\" />, because we aren't currently able to tell if\\n    // key is explicitly declared to be undefined or not.\\n\\n    if (maybeKey !== undefined) {\\n      key = '' + maybeKey;\\n    }\\n\\n    if (hasValidKey(config)) {\\n      key = '' + config.key;\\n    }\\n\\n    if (hasValidRef(config)) {\\n      ref = config.ref;\\n      warnIfStringRefCannotBeAutoConverted(config, self);\\n    } // Remaining properties are added to a new props object\\n\\n\\n    for (propName in config) {\\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\\n        props[propName] = config[propName];\\n      }\\n    } // Resolve default props\\n\\n\\n    if (type && type.defaultProps) {\\n      var defaultProps = type.defaultProps;\\n\\n      for (propName in defaultProps) {\\n        if (props[propName] === undefined) {\\n          props[propName] = defaultProps[propName];\\n        }\\n      }\\n    }\\n\\n    if (key || ref) {\\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\\n\\n      if (key) {\\n        defineKeyPropWarningGetter(props, displayName);\\n      }\\n\\n      if (ref) {\\n        defineRefPropWarningGetter(props, displayName);\\n      }\\n    }\\n\\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\\n  }\\n}\\n\\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\\n\\nfunction setCurrentlyValidatingElement$1(element) {\\n  {\\n    if (element) {\\n      var owner = element._owner;\\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\\n    } else {\\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\\n    }\\n  }\\n}\\n\\nvar propTypesMisspellWarningShown;\\n\\n{\\n  propTypesMisspellWarningShown = false;\\n}\\n/**\\n * Verifies the object is a ReactElement.\\n * See https://reactjs.org/docs/react-api.html#isvalidelement\\n * @param {?object} object\\n * @return {boolean} True if `object` is a ReactElement.\\n * @final\\n */\\n\\nfunction isValidElement(object) {\\n  {\\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\\n  }\\n}\\n\\nfunction getDeclarationErrorAddendum() {\\n  {\\n    if (ReactCurrentOwner$1.current) {\\n      var name = getComponentName(ReactCurrentOwner$1.current.type);\\n\\n      if (name) {\\n        return '\\\\n\\\\nCheck the render method of `' + name + '`.';\\n      }\\n    }\\n\\n    return '';\\n  }\\n}\\n\\nfunction getSourceInfoErrorAddendum(source) {\\n  {\\n    if (source !== undefined) {\\n      var fileName = source.fileName.replace(/^.*[\\\\\\\\\\\\/]/, '');\\n      var lineNumber = source.lineNumber;\\n      return '\\\\n\\\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\\n    }\\n\\n    return '';\\n  }\\n}\\n/**\\n * Warn if there's no key explicitly set on dynamic arrays of children or\\n * object keys are not valid. This allows us to keep track of children between\\n * updates.\\n */\\n\\n\\nvar ownerHasKeyUseWarning = {};\\n\\nfunction getCurrentComponentErrorInfo(parentType) {\\n  {\\n    var info = getDeclarationErrorAddendum();\\n\\n    if (!info) {\\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\\n\\n      if (parentName) {\\n        info = \\\"\\\\n\\\\nCheck the top-level render call using <\\\" + parentName + \\\">.\\\";\\n      }\\n    }\\n\\n    return info;\\n  }\\n}\\n/**\\n * Warn if the element doesn't have an explicit key assigned to it.\\n * This element is in an array. The array could grow and shrink or be\\n * reordered. All children that haven't already been validated are required to\\n * have a \\\"key\\\" property assigned to it. Error statuses are cached so a warning\\n * will only be shown once.\\n *\\n * @internal\\n * @param {ReactElement} element Element that requires a key.\\n * @param {*} parentType element's parent's type.\\n */\\n\\n\\nfunction validateExplicitKey(element, parentType) {\\n  {\\n    if (!element._store || element._store.validated || element.key != null) {\\n      return;\\n    }\\n\\n    element._store.validated = true;\\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\\n\\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\\n      return;\\n    }\\n\\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\\n    // property, it may be the creator of the child that's responsible for\\n    // assigning it a key.\\n\\n    var childOwner = '';\\n\\n    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {\\n      // Give the component that originally created this child.\\n      childOwner = \\\" It was passed a child from \\\" + getComponentName(element._owner.type) + \\\".\\\";\\n    }\\n\\n    setCurrentlyValidatingElement$1(element);\\n\\n    error('Each child in a list should have a unique \\\"key\\\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\\n\\n    setCurrentlyValidatingElement$1(null);\\n  }\\n}\\n/**\\n * Ensure that every element either is passed in a static location, in an\\n * array with an explicit keys property defined, or in an object literal\\n * with valid key property.\\n *\\n * @internal\\n * @param {ReactNode} node Statically passed child of any type.\\n * @param {*} parentType node's parent's type.\\n */\\n\\n\\nfunction validateChildKeys(node, parentType) {\\n  {\\n    if (typeof node !== 'object') {\\n      return;\\n    }\\n\\n    if (Array.isArray(node)) {\\n      for (var i = 0; i < node.length; i++) {\\n        var child = node[i];\\n\\n        if (isValidElement(child)) {\\n          validateExplicitKey(child, parentType);\\n        }\\n      }\\n    } else if (isValidElement(node)) {\\n      // This element was passed in a valid location.\\n      if (node._store) {\\n        node._store.validated = true;\\n      }\\n    } else if (node) {\\n      var iteratorFn = getIteratorFn(node);\\n\\n      if (typeof iteratorFn === 'function') {\\n        // Entry iterators used to provide implicit keys,\\n        // but now we print a separate warning for them later.\\n        if (iteratorFn !== node.entries) {\\n          var iterator = iteratorFn.call(node);\\n          var step;\\n\\n          while (!(step = iterator.next()).done) {\\n            if (isValidElement(step.value)) {\\n              validateExplicitKey(step.value, parentType);\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\n/**\\n * Given an element, validate that its props follow the propTypes definition,\\n * provided by the type.\\n *\\n * @param {ReactElement} element\\n */\\n\\n\\nfunction validatePropTypes(element) {\\n  {\\n    var type = element.type;\\n\\n    if (type === null || type === undefined || typeof type === 'string') {\\n      return;\\n    }\\n\\n    var propTypes;\\n\\n    if (typeof type === 'function') {\\n      propTypes = type.propTypes;\\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\\n    // Inner props are checked in the reconciler.\\n    type.$$typeof === REACT_MEMO_TYPE)) {\\n      propTypes = type.propTypes;\\n    } else {\\n      return;\\n    }\\n\\n    if (propTypes) {\\n      // Intentionally inside to avoid triggering lazy initializers:\\n      var name = getComponentName(type);\\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\\n\\n      var _name = getComponentName(type);\\n\\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\\n    }\\n\\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\\n    }\\n  }\\n}\\n/**\\n * Given a fragment, validate that it can only be provided with fragment props\\n * @param {ReactElement} fragment\\n */\\n\\n\\nfunction validateFragmentProps(fragment) {\\n  {\\n    var keys = Object.keys(fragment.props);\\n\\n    for (var i = 0; i < keys.length; i++) {\\n      var key = keys[i];\\n\\n      if (key !== 'children' && key !== 'key') {\\n        setCurrentlyValidatingElement$1(fragment);\\n\\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\\n\\n        setCurrentlyValidatingElement$1(null);\\n        break;\\n      }\\n    }\\n\\n    if (fragment.ref !== null) {\\n      setCurrentlyValidatingElement$1(fragment);\\n\\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\\n\\n      setCurrentlyValidatingElement$1(null);\\n    }\\n  }\\n}\\n\\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\\n  {\\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\\n    // succeed and there will likely be errors in render.\\n\\n    if (!validType) {\\n      var info = '';\\n\\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\\n        info += ' You likely forgot to export your component from the file ' + \\\"it's defined in, or you might have mixed up default and named imports.\\\";\\n      }\\n\\n      var sourceInfo = getSourceInfoErrorAddendum(source);\\n\\n      if (sourceInfo) {\\n        info += sourceInfo;\\n      } else {\\n        info += getDeclarationErrorAddendum();\\n      }\\n\\n      var typeString;\\n\\n      if (type === null) {\\n        typeString = 'null';\\n      } else if (Array.isArray(type)) {\\n        typeString = 'array';\\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\\n        typeString = \\\"<\\\" + (getComponentName(type.type) || 'Unknown') + \\\" />\\\";\\n        info = ' Did you accidentally export a JSX literal instead of a component?';\\n      } else {\\n        typeString = typeof type;\\n      }\\n\\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\\n    }\\n\\n    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\\n    // TODO: Drop this when these are no longer allowed as the type argument.\\n\\n    if (element == null) {\\n      return element;\\n    } // Skip key warning if the type isn't valid since our key validation logic\\n    // doesn't expect a non-string/function type and can throw confusing errors.\\n    // We don't want exception behavior to differ between dev and prod.\\n    // (Rendering will throw with a helpful message and as soon as the type is\\n    // fixed, the key warnings will appear.)\\n\\n\\n    if (validType) {\\n      var children = props.children;\\n\\n      if (children !== undefined) {\\n        if (isStaticChildren) {\\n          if (Array.isArray(children)) {\\n            for (var i = 0; i < children.length; i++) {\\n              validateChildKeys(children[i], type);\\n            }\\n\\n            if (Object.freeze) {\\n              Object.freeze(children);\\n            }\\n          } else {\\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\\n          }\\n        } else {\\n          validateChildKeys(children, type);\\n        }\\n      }\\n    }\\n\\n    if (type === exports.Fragment) {\\n      validateFragmentProps(element);\\n    } else {\\n      validatePropTypes(element);\\n    }\\n\\n    return element;\\n  }\\n} // These two functions exist to still get child warnings in dev\\n// even with the prod transform. This means that jsxDEV is purely\\n// opt-in behavior for better messages but that we won't stop\\n// giving you warnings if you use production apis.\\n\\nfunction jsxWithValidationStatic(type, props, key) {\\n  {\\n    return jsxWithValidation(type, props, key, true);\\n  }\\n}\\nfunction jsxWithValidationDynamic(type, props, key) {\\n  {\\n    return jsxWithValidation(type, props, key, false);\\n  }\\n}\\n\\nvar jsx =  jsxWithValidationDynamic ; // we may want to special case jsxs internally to take advantage of static children.\\n// for now we can ship identical prod functions\\n\\nvar jsxs =  jsxWithValidationStatic ;\\n\\nexports.jsx = jsx;\\nexports.jsxs = jsxs;\\n  })();\\n}\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///../../../node_modules/react/cjs/react-jsx-runtime.development.js\\n\");\n\n        /***/\n      }),\n      /***/\"../../../node_modules/react/jsx-runtime.js\": (\n      /*!**************************************************!*\\\n        !*** ../../../node_modules/react/jsx-runtime.js ***!\n        \\**************************************************/\n      /***/\n      function ___node_modules_react_jsxRuntimeJs(module, __unused_webpack_exports, __webpack_require__) {\n        eval(\"\\n\\nif (false) {} else {\\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-runtime.development.js */ \\\"../../../node_modules/react/cjs/react-jsx-runtime.development.js\\\");\\n}\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3JlYWN0L2pzeC1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUdBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvcmVhY3QvanN4LXJ1bnRpbWUuanM/MDZhYyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LXJ1bnRpbWUucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LXJ1bnRpbWUuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///../../../node_modules/react/jsx-runtime.js\\n\");\n\n        /***/\n      }),\n      /***/\"@deriv-com/translations\": (\n      /*!******************************************!*\\\n        !*** external \"@deriv-com/translations\" ***!\n        \\******************************************/\n      /***/\n      function derivCom_translations(module) {\n        module.exports = __WEBPACK_EXTERNAL_MODULE__deriv_com_translations__;\n\n        /***/\n      }),\n      /***/\"@deriv/components\": (\n      /*!************************************!*\\\n        !*** external \"@deriv/components\" ***!\n        \\************************************/\n      /***/\n      function deriv_components(module) {\n        module.exports = __WEBPACK_EXTERNAL_MODULE__deriv_components__;\n\n        /***/\n      }),\n      /***/\"@deriv/shared\": (\n      /*!********************************!*\\\n        !*** external \"@deriv/shared\" ***!\n        \\********************************/\n      /***/\n      function deriv_shared(module) {\n        module.exports = __WEBPACK_EXTERNAL_MODULE__deriv_shared__;\n\n        /***/\n      }),\n      /***/\"react\": (\n      /*!************************!*\\\n        !*** external \"react\" ***!\n        \\************************/\n      /***/\n      function react(module) {\n        module.exports = __WEBPACK_EXTERNAL_MODULE_react__;\n\n        /***/\n      }),\n      /***/\"../../../node_modules/@deriv-com/ui/dist/_commonjsHelpers-BkfeUUK-.js\": (\n      /*!*****************************************************************************!*\\\n        !*** ../../../node_modules/@deriv-com/ui/dist/_commonjsHelpers-BkfeUUK-.js ***!\n        \\*****************************************************************************/\n      /***/\n      function ___node_modules_DerivCom_ui_dist__commonjsHelpersBkfeUUKJs(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {\n        eval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   a: () => (/* binding */ l),\\n/* harmony export */   c: () => (/* binding */ u),\\n/* harmony export */   g: () => (/* binding */ f)\\n/* harmony export */ });\\nvar u = typeof globalThis < \\\"u\\\" ? globalThis : typeof window < \\\"u\\\" ? window : typeof global < \\\"u\\\" ? global : typeof self < \\\"u\\\" ? self : {};\\nfunction f(e) {\\n  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, \\\"default\\\") ? e.default : e;\\n}\\nfunction l(e) {\\n  if (e.__esModule) return e;\\n  var r = e.default;\\n  if (typeof r == \\\"function\\\") {\\n    var t = function o() {\\n      return this instanceof o ? Reflect.construct(r, arguments, this.constructor) : r.apply(this, arguments);\\n    };\\n    t.prototype = r.prototype;\\n  } else t = {};\\n  return Object.defineProperty(t, \\\"__esModule\\\", { value: !0 }), Object.keys(e).forEach(function(o) {\\n    var n = Object.getOwnPropertyDescriptor(e, o);\\n    Object.defineProperty(t, o, n.get ? n : {\\n      enumerable: !0,\\n      get: function() {\\n        return e[o];\\n      }\\n    });\\n  }), t;\\n}\\n\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL0BkZXJpdi1jb20vdWkvZGlzdC9fY29tbW9uanNIZWxwZXJzLUJrZmVVVUstLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFLQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9AZGVyaXYtY29tL3VpL2Rpc3QvX2NvbW1vbmpzSGVscGVycy1Ca2ZlVVVLLS5qcz9kYzA3Il0sInNvdXJjZXNDb250ZW50IjpbInZhciB1ID0gdHlwZW9mIGdsb2JhbFRoaXMgPCBcInVcIiA/IGdsb2JhbFRoaXMgOiB0eXBlb2Ygd2luZG93IDwgXCJ1XCIgPyB3aW5kb3cgOiB0eXBlb2YgZ2xvYmFsIDwgXCJ1XCIgPyBnbG9iYWwgOiB0eXBlb2Ygc2VsZiA8IFwidVwiID8gc2VsZiA6IHt9O1xuZnVuY3Rpb24gZihlKSB7XG4gIHJldHVybiBlICYmIGUuX19lc01vZHVsZSAmJiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSwgXCJkZWZhdWx0XCIpID8gZS5kZWZhdWx0IDogZTtcbn1cbmZ1bmN0aW9uIGwoZSkge1xuICBpZiAoZS5fX2VzTW9kdWxlKSByZXR1cm4gZTtcbiAgdmFyIHIgPSBlLmRlZmF1bHQ7XG4gIGlmICh0eXBlb2YgciA9PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YXIgdCA9IGZ1bmN0aW9uIG8oKSB7XG4gICAgICByZXR1cm4gdGhpcyBpbnN0YW5jZW9mIG8gPyBSZWZsZWN0LmNvbnN0cnVjdChyLCBhcmd1bWVudHMsIHRoaXMuY29uc3RydWN0b3IpIDogci5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIH07XG4gICAgdC5wcm90b3R5cGUgPSByLnByb3RvdHlwZTtcbiAgfSBlbHNlIHQgPSB7fTtcbiAgcmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogITAgfSksIE9iamVjdC5rZXlzKGUpLmZvckVhY2goZnVuY3Rpb24obykge1xuICAgIHZhciBuID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihlLCBvKTtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodCwgbywgbi5nZXQgPyBuIDoge1xuICAgICAgZW51bWVyYWJsZTogITAsXG4gICAgICBnZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gZVtvXTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfSksIHQ7XG59XG5leHBvcnQge1xuICBsIGFzIGEsXG4gIHUgYXMgYyxcbiAgZiBhcyBnXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///../../../node_modules/@deriv-com/ui/dist/_commonjsHelpers-BkfeUUK-.js\\n\");\n\n        /***/\n      }),\n      /***/\"../../../node_modules/@deriv-com/ui/dist/hooks/useDevice.js\": (\n      /*!*******************************************************************!*\\\n        !*** ../../../node_modules/@deriv-com/ui/dist/hooks/useDevice.js ***!\n        \\*******************************************************************/\n      /***/\n      function ___node_modules_DerivCom_ui_dist_hooks_useDeviceJs(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {\n        eval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   useDevice: () => (/* binding */ d)\\n/* harmony export */ });\\n/* harmony import */ var _index_EY1gwl5O_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../index-EY1gwl5O.js */ \\\"../../../node_modules/@deriv-com/ui/dist/index-EY1gwl5O.js\\\");\\n\\nconst d = () => {\\n  const i = (0,_index_EY1gwl5O_js__WEBPACK_IMPORTED_MODULE_0__.u)(\\\"(min-width: 1280px)\\\"), a = (0,_index_EY1gwl5O_js__WEBPACK_IMPORTED_MODULE_0__.u)(\\\"(max-width: 600px)\\\"), n = (0,_index_EY1gwl5O_js__WEBPACK_IMPORTED_MODULE_0__.u)(\\n    \\\"(min-width: 601px) and (max-width: 1279px)\\\"\\n  ), e = (0,_index_EY1gwl5O_js__WEBPACK_IMPORTED_MODULE_0__.u)(\\n    \\\"(min-width: 601px) and (max-width: 1279px) and (orientation: portrait)\\\"\\n  ), o = (0,_index_EY1gwl5O_js__WEBPACK_IMPORTED_MODULE_0__.u)(\\n    \\\"(max-width: 1279px) and (orientation: landscape)\\\"\\n  );\\n  return {\\n    /** returns Larger screen tablets [min-width: 1280px] */\\n    isDesktop: i,\\n    /**  returns Smaller screen tablets [max-width: 600px] */\\n    isMobile: a,\\n    /** returns Larger screen phones and smaller screen desktop [min-width: 601px and max-width: 1279px] */\\n    isTablet: n,\\n    /** returns tablet screen with portrait orientation [min-width: 601px and max-width: 1279px and orientation: portrait] */\\n    isTabletPortrait: e,\\n    /** returns mobile or medium screens in landscape orientation [max-width: 1279px and orientation: landscape] */\\n    isMobileOrTabletLandscape: o\\n  };\\n};\\n\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL0BkZXJpdi1jb20vdWkvZGlzdC9ob29rcy91c2VEZXZpY2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL0BkZXJpdi1jb20vdWkvZGlzdC9ob29rcy91c2VEZXZpY2UuanM/MjcwOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1IGFzIHQgfSBmcm9tIFwiLi4vaW5kZXgtRVkxZ3dsNU8uanNcIjtcbmNvbnN0IGQgPSAoKSA9PiB7XG4gIGNvbnN0IGkgPSB0KFwiKG1pbi13aWR0aDogMTI4MHB4KVwiKSwgYSA9IHQoXCIobWF4LXdpZHRoOiA2MDBweClcIiksIG4gPSB0KFxuICAgIFwiKG1pbi13aWR0aDogNjAxcHgpIGFuZCAobWF4LXdpZHRoOiAxMjc5cHgpXCJcbiAgKSwgZSA9IHQoXG4gICAgXCIobWluLXdpZHRoOiA2MDFweCkgYW5kIChtYXgtd2lkdGg6IDEyNzlweCkgYW5kIChvcmllbnRhdGlvbjogcG9ydHJhaXQpXCJcbiAgKSwgbyA9IHQoXG4gICAgXCIobWF4LXdpZHRoOiAxMjc5cHgpIGFuZCAob3JpZW50YXRpb246IGxhbmRzY2FwZSlcIlxuICApO1xuICByZXR1cm4ge1xuICAgIC8qKiByZXR1cm5zIExhcmdlciBzY3JlZW4gdGFibGV0cyBbbWluLXdpZHRoOiAxMjgwcHhdICovXG4gICAgaXNEZXNrdG9wOiBpLFxuICAgIC8qKiAgcmV0dXJucyBTbWFsbGVyIHNjcmVlbiB0YWJsZXRzIFttYXgtd2lkdGg6IDYwMHB4XSAqL1xuICAgIGlzTW9iaWxlOiBhLFxuICAgIC8qKiByZXR1cm5zIExhcmdlciBzY3JlZW4gcGhvbmVzIGFuZCBzbWFsbGVyIHNjcmVlbiBkZXNrdG9wIFttaW4td2lkdGg6IDYwMXB4IGFuZCBtYXgtd2lkdGg6IDEyNzlweF0gKi9cbiAgICBpc1RhYmxldDogbixcbiAgICAvKiogcmV0dXJucyB0YWJsZXQgc2NyZWVuIHdpdGggcG9ydHJhaXQgb3JpZW50YXRpb24gW21pbi13aWR0aDogNjAxcHggYW5kIG1heC13aWR0aDogMTI3OXB4IGFuZCBvcmllbnRhdGlvbjogcG9ydHJhaXRdICovXG4gICAgaXNUYWJsZXRQb3J0cmFpdDogZSxcbiAgICAvKiogcmV0dXJucyBtb2JpbGUgb3IgbWVkaXVtIHNjcmVlbnMgaW4gbGFuZHNjYXBlIG9yaWVudGF0aW9uIFttYXgtd2lkdGg6IDEyNzlweCBhbmQgb3JpZW50YXRpb246IGxhbmRzY2FwZV0gKi9cbiAgICBpc01vYmlsZU9yVGFibGV0TGFuZHNjYXBlOiBvXG4gIH07XG59O1xuZXhwb3J0IHtcbiAgZCBhcyB1c2VEZXZpY2Vcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///../../../node_modules/@deriv-com/ui/dist/hooks/useDevice.js\\n\");\n\n        /***/\n      }),\n      /***/\"../../../node_modules/@deriv-com/ui/dist/index-EY1gwl5O.js\": (\n      /*!******************************************************************!*\\\n        !*** ../../../node_modules/@deriv-com/ui/dist/index-EY1gwl5O.js ***!\n        \\******************************************************************/\n      /***/\n      function ___node_modules_DerivCom_ui_dist_indexEY1gwl5OJs(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {\n        eval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   a: () => (/* binding */ g),\\n/* harmony export */   u: () => (/* binding */ O)\\n/* harmony export */ });\\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \\\"react\\\");\\n/* harmony import */ var _commonjsHelpers_BkfeUUK_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_commonjsHelpers-BkfeUUK-.js */ \\\"../../../node_modules/@deriv-com/ui/dist/_commonjsHelpers-BkfeUUK-.js\\\");\\n\\n\\nvar v = typeof _commonjsHelpers_BkfeUUK_js__WEBPACK_IMPORTED_MODULE_1__.c == \\\"object\\\" && _commonjsHelpers_BkfeUUK_js__WEBPACK_IMPORTED_MODULE_1__.c && _commonjsHelpers_BkfeUUK_js__WEBPACK_IMPORTED_MODULE_1__.c.Object === Object && _commonjsHelpers_BkfeUUK_js__WEBPACK_IMPORTED_MODULE_1__.c, E = typeof self == \\\"object\\\" && self && self.Object === Object && self;\\nv || E || Function(\\\"return this\\\")();\\nvar f = typeof window < \\\"u\\\" ? react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect : react__WEBPACK_IMPORTED_MODULE_0__.useEffect;\\nfunction L(t, s, o, i) {\\n  const c = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(s);\\n  f(() => {\\n    c.current = s;\\n  }, [s]), (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\\n    const n = window;\\n    if (!(n && n.addEventListener))\\n      return;\\n    const r = (e) => {\\n      c.current(e);\\n    };\\n    return n.addEventListener(t, r, i), () => {\\n      n.removeEventListener(t, r, i);\\n    };\\n  }, [t, o, i]);\\n}\\nvar h = typeof window > \\\"u\\\";\\nfunction O(t, {\\n  defaultValue: s = !1,\\n  initializeWithValue: o = !0\\n} = {}) {\\n  const i = (e) => h ? s : window.matchMedia(e).matches, [c, n] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(() => o ? i(t) : s);\\n  function r() {\\n    n(i(t));\\n  }\\n  return f(() => {\\n    const e = window.matchMedia(t);\\n    return r(), e.addListener ? e.addListener(r) : e.addEventListener(\\\"change\\\", r), () => {\\n      e.removeListener ? e.removeListener(r) : e.removeEventListener(\\\"change\\\", r);\\n    };\\n  }, [t]), c;\\n}\\nfunction g(t, s, o = \\\"mousedown\\\", i = {}) {\\n  L(\\n    o,\\n    (c) => {\\n      const n = c.target;\\n      if (!n || !n.isConnected)\\n        return;\\n      (Array.isArray(t) ? t.filter((e) => !!e.current).every((e) => e.current && !e.current.contains(n)) : t.current && !t.current.contains(n)) && s(c);\\n    },\\n    void 0,\\n    i\\n  );\\n}\\n\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL0BkZXJpdi1jb20vdWkvZGlzdC9pbmRleC1FWTFnd2w1Ty5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUlBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL0BkZXJpdi1jb20vdWkvZGlzdC9pbmRleC1FWTFnd2w1Ty5qcz9iODMzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZVN0YXRlIGFzIGQsIHVzZUxheW91dEVmZmVjdCBhcyBtLCB1c2VFZmZlY3QgYXMgdSwgdXNlUmVmIGFzIGwgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IGMgYXMgYSB9IGZyb20gXCIuL19jb21tb25qc0hlbHBlcnMtQmtmZVVVSy0uanNcIjtcbnZhciB2ID0gdHlwZW9mIGEgPT0gXCJvYmplY3RcIiAmJiBhICYmIGEuT2JqZWN0ID09PSBPYmplY3QgJiYgYSwgRSA9IHR5cGVvZiBzZWxmID09IFwib2JqZWN0XCIgJiYgc2VsZiAmJiBzZWxmLk9iamVjdCA9PT0gT2JqZWN0ICYmIHNlbGY7XG52IHx8IEUgfHwgRnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpO1xudmFyIGYgPSB0eXBlb2Ygd2luZG93IDwgXCJ1XCIgPyBtIDogdTtcbmZ1bmN0aW9uIEwodCwgcywgbywgaSkge1xuICBjb25zdCBjID0gbChzKTtcbiAgZigoKSA9PiB7XG4gICAgYy5jdXJyZW50ID0gcztcbiAgfSwgW3NdKSwgdSgoKSA9PiB7XG4gICAgY29uc3QgbiA9IHdpbmRvdztcbiAgICBpZiAoIShuICYmIG4uYWRkRXZlbnRMaXN0ZW5lcikpXG4gICAgICByZXR1cm47XG4gICAgY29uc3QgciA9IChlKSA9PiB7XG4gICAgICBjLmN1cnJlbnQoZSk7XG4gICAgfTtcbiAgICByZXR1cm4gbi5hZGRFdmVudExpc3RlbmVyKHQsIHIsIGkpLCAoKSA9PiB7XG4gICAgICBuLnJlbW92ZUV2ZW50TGlzdGVuZXIodCwgciwgaSk7XG4gICAgfTtcbiAgfSwgW3QsIG8sIGldKTtcbn1cbnZhciBoID0gdHlwZW9mIHdpbmRvdyA+IFwidVwiO1xuZnVuY3Rpb24gTyh0LCB7XG4gIGRlZmF1bHRWYWx1ZTogcyA9ICExLFxuICBpbml0aWFsaXplV2l0aFZhbHVlOiBvID0gITBcbn0gPSB7fSkge1xuICBjb25zdCBpID0gKGUpID0+IGggPyBzIDogd2luZG93Lm1hdGNoTWVkaWEoZSkubWF0Y2hlcywgW2MsIG5dID0gZCgoKSA9PiBvID8gaSh0KSA6IHMpO1xuICBmdW5jdGlvbiByKCkge1xuICAgIG4oaSh0KSk7XG4gIH1cbiAgcmV0dXJuIGYoKCkgPT4ge1xuICAgIGNvbnN0IGUgPSB3aW5kb3cubWF0Y2hNZWRpYSh0KTtcbiAgICByZXR1cm4gcigpLCBlLmFkZExpc3RlbmVyID8gZS5hZGRMaXN0ZW5lcihyKSA6IGUuYWRkRXZlbnRMaXN0ZW5lcihcImNoYW5nZVwiLCByKSwgKCkgPT4ge1xuICAgICAgZS5yZW1vdmVMaXN0ZW5lciA/IGUucmVtb3ZlTGlzdGVuZXIocikgOiBlLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJjaGFuZ2VcIiwgcik7XG4gICAgfTtcbiAgfSwgW3RdKSwgYztcbn1cbmZ1bmN0aW9uIGcodCwgcywgbyA9IFwibW91c2Vkb3duXCIsIGkgPSB7fSkge1xuICBMKFxuICAgIG8sXG4gICAgKGMpID0+IHtcbiAgICAgIGNvbnN0IG4gPSBjLnRhcmdldDtcbiAgICAgIGlmICghbiB8fCAhbi5pc0Nvbm5lY3RlZClcbiAgICAgICAgcmV0dXJuO1xuICAgICAgKEFycmF5LmlzQXJyYXkodCkgPyB0LmZpbHRlcigoZSkgPT4gISFlLmN1cnJlbnQpLmV2ZXJ5KChlKSA9PiBlLmN1cnJlbnQgJiYgIWUuY3VycmVudC5jb250YWlucyhuKSkgOiB0LmN1cnJlbnQgJiYgIXQuY3VycmVudC5jb250YWlucyhuKSkgJiYgcyhjKTtcbiAgICB9LFxuICAgIHZvaWQgMCxcbiAgICBpXG4gICk7XG59XG5leHBvcnQge1xuICBnIGFzIGEsXG4gIE8gYXMgdVxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///../../../node_modules/@deriv-com/ui/dist/index-EY1gwl5O.js\\n\");\n\n        /***/\n      })\n\n      /******/\n    };\n    /************************************************************************/\n    /******/ // The module cache\n    /******/\n    var __webpack_module_cache__ = {};\n    /******/\n    /******/ // The require function\n    /******/\n    function __nested_webpack_require_147724__(moduleId) {\n      /******/ // Check if module is in cache\n      /******/var cachedModule = __webpack_module_cache__[moduleId];\n      /******/\n      if (cachedModule !== undefined) {\n        /******/return cachedModule.exports;\n        /******/\n      }\n      /******/ // Create a new module (and put it into the cache)\n      /******/\n      var module = __webpack_module_cache__[moduleId] = {\n        /******/ // no module.id needed\n        /******/ // no module.loaded needed\n        /******/exports: {}\n        /******/\n      };\n      /******/\n      /******/ // Execute the module function\n      /******/\n      __webpack_modules__[moduleId](module, module.exports, __nested_webpack_require_147724__);\n      /******/\n      /******/ // Return the exports of the module\n      /******/\n      return module.exports;\n      /******/\n    }\n    /******/\n    /************************************************************************/\n    /******/ /* webpack/runtime/compat get default export */\n    /******/\n    (function () {\n      /******/ // getDefaultExport function for compatibility with non-harmony modules\n      /******/__nested_webpack_require_147724__.n = function (module) {\n        /******/var getter = module && module.__esModule ? /******/function () {\n          return module['default'];\n        } : /******/function () {\n          return module;\n        };\n        /******/\n        __nested_webpack_require_147724__.d(getter, {\n          a: getter\n        });\n        /******/\n        return getter;\n        /******/\n      };\n      /******/\n    })();\n    /******/\n    /******/ /* webpack/runtime/define property getters */\n    /******/\n    (function () {\n      /******/ // define getter functions for harmony exports\n      /******/__nested_webpack_require_147724__.d = function (exports, definition) {\n        /******/for (var key in definition) {\n          /******/if (__nested_webpack_require_147724__.o(definition, key) && !__nested_webpack_require_147724__.o(exports, key)) {\n            /******/Object.defineProperty(exports, key, {\n              enumerable: true,\n              get: definition[key]\n            });\n            /******/\n          }\n          /******/\n        }\n        /******/\n      };\n      /******/\n    })();\n    /******/\n    /******/ /* webpack/runtime/hasOwnProperty shorthand */\n    /******/\n    (function () {\n      /******/__nested_webpack_require_147724__.o = function (obj, prop) {\n        return Object.prototype.hasOwnProperty.call(obj, prop);\n      };\n      /******/\n    })();\n    /******/\n    /******/ /* webpack/runtime/make namespace object */\n    /******/\n    (function () {\n      /******/ // define __esModule on exports\n      /******/__nested_webpack_require_147724__.r = function (exports) {\n        /******/if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n          /******/Object.defineProperty(exports, Symbol.toStringTag, {\n            value: 'Module'\n          });\n          /******/\n        }\n        /******/\n        Object.defineProperty(exports, '__esModule', {\n          value: true\n        });\n        /******/\n      };\n      /******/\n    })();\n    /******/\n    /************************************************************************/\n    /******/\n    /******/ // startup\n    /******/ // Load entry module and return exports\n    /******/ // This entry module can't be inlined because the eval-source-map devtool is used.\n    /******/\n    var __nested_webpack_exports__ = __nested_webpack_require_147724__(\"./Components/sent-email-modal/index.ts\");\n    /******/\n    __nested_webpack_exports__ = __nested_webpack_exports__[\"default\"];\n    /******/\n    /******/\n    return __nested_webpack_exports__;\n    /******/\n  }();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../account/dist/account/js/sent-email-modal.js\n"
                );

                /***/
            },

        /***/ '../cfd/src/Components/migration-success-modal/index.tsx':
            /*!***************************************************************!*\
  !*** ../cfd/src/Components/migration-success-modal/index.tsx ***!
  \***************************************************************/
            /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _migration_success_modal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./migration-success-modal */ "../cfd/src/Components/migration-success-modal/migration-success-modal.tsx");\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_migration_success_modal__WEBPACK_IMPORTED_MODULE_0__["default"]);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vY2ZkL3NyYy9Db21wb25lbnRzL21pZ3JhdGlvbi1zdWNjZXNzLW1vZGFsL2luZGV4LnRzeCIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvYXBwc3RvcmUvLi4vY2ZkL3NyYy9Db21wb25lbnRzL21pZ3JhdGlvbi1zdWNjZXNzLW1vZGFsL2luZGV4LnRzeD8wYmZmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBNaWdyYXRpb25TdWNjZXNzTW9kYWwgZnJvbSAnLi9taWdyYXRpb24tc3VjY2Vzcy1tb2RhbCc7XG5cbmV4cG9ydCBkZWZhdWx0IE1pZ3JhdGlvblN1Y2Nlc3NNb2RhbDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../cfd/src/Components/migration-success-modal/index.tsx\n'
                );

                /***/
            },

        /***/ '../cfd/src/Components/migration-success-modal/migration-success-modal-content.tsx':
            /*!*****************************************************************************************!*\
  !*** ../cfd/src/Components/migration-success-modal/migration-success-modal-content.tsx ***!
  \*****************************************************************************************/
            /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! classnames */ "classnames");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _deriv_stores__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @deriv/stores */ "../../node_modules/mobx-react-lite/es/index.js");\n/* harmony import */ var _deriv_stores__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @deriv/stores */ "../stores/src/useStore.ts");\n/* harmony import */ var _deriv_translations__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @deriv/translations */ "@deriv/translations");\n/* harmony import */ var _deriv_translations__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_deriv_translations__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _deriv_components__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @deriv/components */ "@deriv/components");\n/* harmony import */ var _deriv_components__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_deriv_components__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _deriv_shared__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @deriv/shared */ "@deriv/shared");\n/* harmony import */ var _deriv_shared__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_deriv_shared__WEBPACK_IMPORTED_MODULE_4__);\nfunction _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }\nfunction _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }\n\n\n\n\n\n\nvar MigrationSuccessModalContent = (0,_deriv_stores__WEBPACK_IMPORTED_MODULE_5__.observer)(function (_ref) {\n  var icon = _ref.icon,\n    eligible_account_to_migrate = _ref.eligible_account_to_migrate,\n    jurisdiction_market_name = _ref.jurisdiction_market_name,\n    closePopupModal = _ref.closePopupModal;\n  var _useStore = (0,_deriv_stores__WEBPACK_IMPORTED_MODULE_6__["default"])(),\n    ui = _useStore.ui;\n  var is_mobile = ui.is_mobile;\n  var platform = (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_4__.getCFDPlatformNames)(_deriv_shared__WEBPACK_IMPORTED_MODULE_4__.CFD_PLATFORMS.MT5);\n  var text_size = is_mobile ? \'xxs\' : \'xs\';\n  var information_text_size = is_mobile ? \'xxxs\' : \'xxs\';\n  var getFormattedAccounts = function getFormattedAccounts() {\n    return jurisdiction_market_name.length > 1 ? {\n      type_1: jurisdiction_market_name[0],\n      type_2: jurisdiction_market_name[1]\n    } : {\n      type_1: jurisdiction_market_name[0]\n    };\n  };\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {\n    className: "cfd-success-dialog-migration__modal-content"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_components__WEBPACK_IMPORTED_MODULE_3__.Modal.Body, {\n    className: classnames__WEBPACK_IMPORTED_MODULE_1___default()(\'cfd-success-dialog-migration__body\')\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {\n    className: "cfd-success-dialog-migration__icon-area"\n  }, icon && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_components__WEBPACK_IMPORTED_MODULE_3__.Icon, {\n    icon: icon,\n    size: 128\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_components__WEBPACK_IMPORTED_MODULE_3__.Text, {\n    as: "h2",\n    weight: "bold",\n    className: "cfd-success-dialog-migration__title"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_translations__WEBPACK_IMPORTED_MODULE_2__.Localize, {\n    i18n_default_text: "Upgrade complete"\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {\n    className: "cfd-success-dialog-migration__content-wrapper"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_components__WEBPACK_IMPORTED_MODULE_3__.Text, {\n    size: text_size,\n    as: "p",\n    align: "center"\n  }, jurisdiction_market_name.length > 1 ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_translations__WEBPACK_IMPORTED_MODULE_2__.Localize, {\n    i18n_default_text: "Start trading with your new <0>{{platform}} {{type_1}}</0> and <0>{{type_2}} {{eligible_account_to_migrate}}</0> accounts.",\n    values: _objectSpread({\n      platform: platform,\n      eligible_account_to_migrate: eligible_account_to_migrate\n    }, getFormattedAccounts()),\n    components: [/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("strong", {\n      key: 0\n    })]\n  }) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_translations__WEBPACK_IMPORTED_MODULE_2__.Localize, {\n    i18n_default_text: "Start trading with your new <0>{{platform}} {{type_1}} {{eligible_account_to_migrate}}</0> account.",\n    values: _objectSpread({\n      platform: platform,\n      eligible_account_to_migrate: eligible_account_to_migrate\n    }, getFormattedAccounts()),\n    components: [/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("strong", {\n      key: 0\n    })]\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {\n    className: "cfd-success-dialog-migration__inline-msg"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_components__WEBPACK_IMPORTED_MODULE_3__.InlineMessage, {\n    type: "information",\n    size: "sm",\n    title: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_translations__WEBPACK_IMPORTED_MODULE_2__.Localize, {\n      i18n_default_text: "Important: Your <0>{{platform}} {{existing_account}}</0> account.",\n      values: {\n        platform: platform,\n        existing_account: (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_4__.getFormattedJurisdictionCode)(_deriv_shared__WEBPACK_IMPORTED_MODULE_4__.Jurisdiction.SVG)\n      },\n      components: [/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("strong", {\n        key: 0\n      })]\n    }),\n    message: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_components__WEBPACK_IMPORTED_MODULE_3__.Text, {\n      as: "ul",\n      size: information_text_size,\n      className: \'cfd-success-dialog-migration__body-bullets--list\'\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("li", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_translations__WEBPACK_IMPORTED_MODULE_2__.Localize, {\n      i18n_default_text: "You can manage your existing positions, but you can\'t start a new trade."\n    })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("li", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_translations__WEBPACK_IMPORTED_MODULE_2__.Localize, {\n      i18n_default_text: "We\'ll close accounts with no open positions after 60 days."\n    })))\n  }))))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_components__WEBPACK_IMPORTED_MODULE_3__.Modal.Footer, {\n    has_separator: true,\n    className: "cfd-success-dialog-migration-footer"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_components__WEBPACK_IMPORTED_MODULE_3__.Button, {\n    has_effect: true,\n    onClick: closePopupModal,\n    primary: true,\n    large: true\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_translations__WEBPACK_IMPORTED_MODULE_2__.Localize, {\n    i18n_default_text: "OK"\n  }))));\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MigrationSuccessModalContent);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../cfd/src/Components/migration-success-modal/migration-success-modal-content.tsx\n'
                );

                /***/
            },

        /***/ '../cfd/src/Components/migration-success-modal/migration-success-modal.tsx':
            /*!*********************************************************************************!*\
  !*** ../cfd/src/Components/migration-success-modal/migration-success-modal.tsx ***!
  \*********************************************************************************/
            /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _deriv_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @deriv/components */ "@deriv/components");\n/* harmony import */ var _deriv_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_deriv_components__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _deriv_shared__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @deriv/shared */ "@deriv/shared");\n/* harmony import */ var _deriv_shared__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_deriv_shared__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _deriv_stores__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @deriv/stores */ "../../node_modules/mobx-react-lite/es/index.js");\n/* harmony import */ var _deriv_stores__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @deriv/stores */ "../stores/src/useStore.ts");\n/* harmony import */ var _Stores_Modules_CFD_Helpers_cfd_config__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../Stores/Modules/CFD/Helpers/cfd-config */ "../cfd/src/Stores/Modules/CFD/Helpers/cfd-config.ts");\n/* harmony import */ var _Stores_Modules_CFD_Helpers_useCfdStores__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../Stores/Modules/CFD/Helpers/useCfdStores */ "../cfd/src/Stores/Modules/CFD/Helpers/useCfdStores.tsx");\n/* harmony import */ var _migration_success_modal_content__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./migration-success-modal-content */ "../cfd/src/Components/migration-success-modal/migration-success-modal-content.tsx");\n\n\n\n\n\n\n\nvar MigrationSuccessModal = (0,_deriv_stores__WEBPACK_IMPORTED_MODULE_6__.observer)(function (_ref) {\n  var _migrated_mt5_account;\n  var is_open = _ref.is_open,\n    closeModal = _ref.closeModal;\n  var _useStore = (0,_deriv_stores__WEBPACK_IMPORTED_MODULE_7__["default"])(),\n    ui = _useStore.ui;\n  var is_mobile = ui.is_mobile,\n    setMT5MigrationModalEnabled = ui.setMT5MigrationModalEnabled;\n  var _useCfdStore = (0,_Stores_Modules_CFD_Helpers_useCfdStores__WEBPACK_IMPORTED_MODULE_4__.useCfdStore)(),\n    migrated_mt5_accounts = _useCfdStore.migrated_mt5_accounts,\n    setIsFromMt5MigrationModal = _useCfdStore.setIsFromMt5MigrationModal;\n  var has_migrated_mt5_accounts = !!migrated_mt5_accounts.length;\n  var eligible_account_to_migrate = (0,_Stores_Modules_CFD_Helpers_cfd_config__WEBPACK_IMPORTED_MODULE_3__.getFormattedJurisdictionCode)((_migrated_mt5_account = migrated_mt5_accounts.map(function (account) {\n    var _Object$values, _account$to_account;\n    return (_Object$values = Object.values((_account$to_account = account === null || account === void 0 ? void 0 : account.to_account) !== null && _account$to_account !== void 0 ? _account$to_account : {})) === null || _Object$values === void 0 ? void 0 : _Object$values[0];\n  })) === null || _migrated_mt5_account === void 0 ? void 0 : _migrated_mt5_account[0]);\n  var jurisdiction_market_name = migrated_mt5_accounts.map(function (account) {\n    var _Object$keys, _account$to_account2;\n    return (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_2__.getFormattedJurisdictionMarketTypes)((_Object$keys = Object.keys((_account$to_account2 = account === null || account === void 0 ? void 0 : account.to_account) !== null && _account$to_account2 !== void 0 ? _account$to_account2 : {})) === null || _Object$keys === void 0 ? void 0 : _Object$keys[0]);\n  });\n  var closeMigrationModals = function closeMigrationModals() {\n    setIsFromMt5MigrationModal(false);\n    setMT5MigrationModalEnabled(false);\n    closeModal();\n  };\n  var getMigrationIcon = function getMigrationIcon() {\n    if (has_migrated_mt5_accounts) {\n      var _Object$values2, _migrated_mt5_account2;\n      var to_acc = ((_Object$values2 = Object.values((_migrated_mt5_account2 = migrated_mt5_accounts[0]) === null || _migrated_mt5_account2 === void 0 ? void 0 : _migrated_mt5_account2.to_account)) === null || _Object$values2 === void 0 ? void 0 : _Object$values2[0]) || \'\';\n      if ((migrated_mt5_accounts === null || migrated_mt5_accounts === void 0 ? void 0 : migrated_mt5_accounts.length) === 1) {\n        switch (to_acc) {\n          case _deriv_shared__WEBPACK_IMPORTED_MODULE_2__.Jurisdiction.BVI:\n            return \'IcMt5Bvi\';\n          case _deriv_shared__WEBPACK_IMPORTED_MODULE_2__.Jurisdiction.VANUATU:\n            return \'IcMt5Vanuatu\';\n          default:\n            return \'\';\n        }\n      } else {\n        switch (to_acc) {\n          case _deriv_shared__WEBPACK_IMPORTED_MODULE_2__.Jurisdiction.BVI:\n            return \'IcMt5StandardFinancialBvi\';\n          case _deriv_shared__WEBPACK_IMPORTED_MODULE_2__.Jurisdiction.VANUATU:\n            return \'IcMt5StandardFinancialVanuatu\';\n          default:\n            return \'\';\n        }\n      }\n    }\n  };\n  var ModalContent = function ModalContent() {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_migration_success_modal_content__WEBPACK_IMPORTED_MODULE_5__["default"], {\n      closePopupModal: closeMigrationModals,\n      icon: getMigrationIcon(),\n      eligible_account_to_migrate: eligible_account_to_migrate,\n      jurisdiction_market_name: jurisdiction_market_name\n    });\n  };\n  return is_mobile ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_components__WEBPACK_IMPORTED_MODULE_1__.PageOverlay, {\n    is_open: is_open,\n    header_classname: "cfd-success-dialog-migration",\n    portal_id: "deriv_app",\n    header: " ",\n    onClickClose: closeMigrationModals\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(ModalContent, null)) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_components__WEBPACK_IMPORTED_MODULE_1__.Modal, {\n    className: "cfd-success-dialog-migration",\n    is_open: is_open,\n    toggleModal: closeMigrationModals,\n    has_close_icon: true,\n    title: " ",\n    width: "58.8rem",\n    should_header_stick_body: false\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(ModalContent, null));\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MigrationSuccessModal);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vY2ZkL3NyYy9Db21wb25lbnRzL21pZ3JhdGlvbi1zdWNjZXNzLW1vZGFsL21pZ3JhdGlvbi1zdWNjZXNzLW1vZGFsLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQU9BO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFFQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBR0E7QUFBQTtBQUFBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBR0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBS0E7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi9hcHBzdG9yZS8uLi9jZmQvc3JjL0NvbXBvbmVudHMvbWlncmF0aW9uLXN1Y2Nlc3MtbW9kYWwvbWlncmF0aW9uLXN1Y2Nlc3MtbW9kYWwudHN4P2ExZDIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IE1vZGFsLCBQYWdlT3ZlcmxheSB9IGZyb20gJ0BkZXJpdi9jb21wb25lbnRzJztcbmltcG9ydCB7IEp1cmlzZGljdGlvbiwgZ2V0Rm9ybWF0dGVkSnVyaXNkaWN0aW9uTWFya2V0VHlwZXMgfSBmcm9tICdAZGVyaXYvc2hhcmVkJztcbmltcG9ydCB7IG9ic2VydmVyLCB1c2VTdG9yZSB9IGZyb20gJ0BkZXJpdi9zdG9yZXMnO1xuaW1wb3J0IHsgZ2V0Rm9ybWF0dGVkSnVyaXNkaWN0aW9uQ29kZSB9IGZyb20gJy4uLy4uL1N0b3Jlcy9Nb2R1bGVzL0NGRC9IZWxwZXJzL2NmZC1jb25maWcnO1xuXG5pbXBvcnQgeyB1c2VDZmRTdG9yZSB9IGZyb20gJy4uLy4uL1N0b3Jlcy9Nb2R1bGVzL0NGRC9IZWxwZXJzL3VzZUNmZFN0b3Jlcyc7XG5pbXBvcnQgTWlncmF0aW9uU3VjY2Vzc01vZGFsQ29udGVudCBmcm9tICcuL21pZ3JhdGlvbi1zdWNjZXNzLW1vZGFsLWNvbnRlbnQnO1xuXG50eXBlIFRNaWdyYXRpb25TdWNjZXNzTW9kYWwgPSB7XG4gICAgaXNfb3BlbjogYm9vbGVhbjtcbiAgICBjbG9zZU1vZGFsOiAoKSA9PiB2b2lkO1xufTtcblxuY29uc3QgTWlncmF0aW9uU3VjY2Vzc01vZGFsID0gb2JzZXJ2ZXIoKHsgaXNfb3BlbiwgY2xvc2VNb2RhbCB9OiBUTWlncmF0aW9uU3VjY2Vzc01vZGFsKSA9PiB7XG4gICAgY29uc3QgeyB1aSB9ID0gdXNlU3RvcmUoKTtcbiAgICBjb25zdCB7IGlzX21vYmlsZSwgc2V0TVQ1TWlncmF0aW9uTW9kYWxFbmFibGVkIH0gPSB1aTtcbiAgICBjb25zdCB7IG1pZ3JhdGVkX210NV9hY2NvdW50cywgc2V0SXNGcm9tTXQ1TWlncmF0aW9uTW9kYWwgfSA9IHVzZUNmZFN0b3JlKCk7XG5cbiAgICBjb25zdCBoYXNfbWlncmF0ZWRfbXQ1X2FjY291bnRzID0gISFtaWdyYXRlZF9tdDVfYWNjb3VudHMubGVuZ3RoO1xuICAgIGNvbnN0IGVsaWdpYmxlX2FjY291bnRfdG9fbWlncmF0ZSA9IGdldEZvcm1hdHRlZEp1cmlzZGljdGlvbkNvZGUoXG4gICAgICAgIG1pZ3JhdGVkX210NV9hY2NvdW50cy5tYXAoYWNjb3VudCA9PiBPYmplY3QudmFsdWVzKGFjY291bnQ/LnRvX2FjY291bnQgPz8ge30pPy5bMF0pPy5bMF1cbiAgICApO1xuXG4gICAgY29uc3QganVyaXNkaWN0aW9uX21hcmtldF9uYW1lID0gbWlncmF0ZWRfbXQ1X2FjY291bnRzLm1hcChhY2NvdW50ID0+XG4gICAgICAgIGdldEZvcm1hdHRlZEp1cmlzZGljdGlvbk1hcmtldFR5cGVzKE9iamVjdC5rZXlzKGFjY291bnQ/LnRvX2FjY291bnQgPz8ge30pPy5bMF0pXG4gICAgKTtcblxuICAgIGNvbnN0IGNsb3NlTWlncmF0aW9uTW9kYWxzID0gKCkgPT4ge1xuICAgICAgICBzZXRJc0Zyb21NdDVNaWdyYXRpb25Nb2RhbChmYWxzZSk7XG4gICAgICAgIHNldE1UNU1pZ3JhdGlvbk1vZGFsRW5hYmxlZChmYWxzZSk7XG4gICAgICAgIGNsb3NlTW9kYWwoKTtcbiAgICB9O1xuXG4gICAgY29uc3QgZ2V0TWlncmF0aW9uSWNvbiA9ICgpID0+IHtcbiAgICAgICAgaWYgKGhhc19taWdyYXRlZF9tdDVfYWNjb3VudHMpIHtcbiAgICAgICAgICAgIGNvbnN0IHRvX2FjYyA9IE9iamVjdC52YWx1ZXMobWlncmF0ZWRfbXQ1X2FjY291bnRzWzBdPy50b19hY2NvdW50KT8uWzBdIHx8ICcnO1xuICAgICAgICAgICAgaWYgKG1pZ3JhdGVkX210NV9hY2NvdW50cz8ubGVuZ3RoID09PSAxKSB7XG4gICAgICAgICAgICAgICAgc3dpdGNoICh0b19hY2MpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBKdXJpc2RpY3Rpb24uQlZJOlxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICdJY010NUJ2aSc7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgSnVyaXNkaWN0aW9uLlZBTlVBVFU6XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ0ljTXQ1VmFudWF0dSc7XG4gICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gJyc7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBzd2l0Y2ggKHRvX2FjYykge1xuICAgICAgICAgICAgICAgICAgICBjYXNlIEp1cmlzZGljdGlvbi5CVkk6XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ0ljTXQ1U3RhbmRhcmRGaW5hbmNpYWxCdmknO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIEp1cmlzZGljdGlvbi5WQU5VQVRVOlxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICdJY010NVN0YW5kYXJkRmluYW5jaWFsVmFudWF0dSc7XG4gICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gJyc7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfTtcblxuICAgIGNvbnN0IE1vZGFsQ29udGVudCA9ICgpID0+IChcbiAgICAgICAgPE1pZ3JhdGlvblN1Y2Nlc3NNb2RhbENvbnRlbnRcbiAgICAgICAgICAgIGNsb3NlUG9wdXBNb2RhbD17Y2xvc2VNaWdyYXRpb25Nb2RhbHN9XG4gICAgICAgICAgICBpY29uPXtnZXRNaWdyYXRpb25JY29uKCl9XG4gICAgICAgICAgICBlbGlnaWJsZV9hY2NvdW50X3RvX21pZ3JhdGU9e2VsaWdpYmxlX2FjY291bnRfdG9fbWlncmF0ZX1cbiAgICAgICAgICAgIGp1cmlzZGljdGlvbl9tYXJrZXRfbmFtZT17anVyaXNkaWN0aW9uX21hcmtldF9uYW1lfVxuICAgICAgICAvPlxuICAgICk7XG5cbiAgICByZXR1cm4gaXNfbW9iaWxlID8gKFxuICAgICAgICA8UGFnZU92ZXJsYXlcbiAgICAgICAgICAgIGlzX29wZW49e2lzX29wZW59XG4gICAgICAgICAgICBoZWFkZXJfY2xhc3NuYW1lPSdjZmQtc3VjY2Vzcy1kaWFsb2ctbWlncmF0aW9uJ1xuICAgICAgICAgICAgcG9ydGFsX2lkPSdkZXJpdl9hcHAnXG4gICAgICAgICAgICBoZWFkZXI9JyAnXG4gICAgICAgICAgICBvbkNsaWNrQ2xvc2U9e2Nsb3NlTWlncmF0aW9uTW9kYWxzfVxuICAgICAgICA+XG4gICAgICAgICAgICA8TW9kYWxDb250ZW50IC8+XG4gICAgICAgIDwvUGFnZU92ZXJsYXk+XG4gICAgKSA6IChcbiAgICAgICAgPE1vZGFsXG4gICAgICAgICAgICBjbGFzc05hbWU9J2NmZC1zdWNjZXNzLWRpYWxvZy1taWdyYXRpb24nXG4gICAgICAgICAgICBpc19vcGVuPXtpc19vcGVufVxuICAgICAgICAgICAgdG9nZ2xlTW9kYWw9e2Nsb3NlTWlncmF0aW9uTW9kYWxzfVxuICAgICAgICAgICAgaGFzX2Nsb3NlX2ljb25cbiAgICAgICAgICAgIHRpdGxlPScgJ1xuICAgICAgICAgICAgd2lkdGg9JzU4LjhyZW0nXG4gICAgICAgICAgICBzaG91bGRfaGVhZGVyX3N0aWNrX2JvZHk9e2ZhbHNlfVxuICAgICAgICA+XG4gICAgICAgICAgICA8TW9kYWxDb250ZW50IC8+XG4gICAgICAgIDwvTW9kYWw+XG4gICAgKTtcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBNaWdyYXRpb25TdWNjZXNzTW9kYWw7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../cfd/src/Components/migration-success-modal/migration-success-modal.tsx\n'
                );

                /***/
            },

        /***/ '../cfd/src/Components/success-dialog/success-dialog.tsx':
            /*!***************************************************************!*\
  !*** ../cfd/src/Components/success-dialog/success-dialog.tsx ***!
  \***************************************************************/
            /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! classnames */ "classnames");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _deriv_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @deriv/components */ "@deriv/components");\n/* harmony import */ var _deriv_components__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_deriv_components__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _deriv_translations__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @deriv/translations */ "@deriv/translations");\n/* harmony import */ var _deriv_translations__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_deriv_translations__WEBPACK_IMPORTED_MODULE_3__);\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\n\n\n\n\nvar SuccessDialog = function SuccessDialog(_ref) {\n  var _ref$classNameMessage = _ref.classNameMessage,\n    classNameMessage = _ref$classNameMessage === void 0 ? \'\' : _ref$classNameMessage,\n    _ref$has_cancel = _ref.has_cancel,\n    has_cancel = _ref$has_cancel === void 0 ? false : _ref$has_cancel,\n    _ref$has_submit = _ref.has_submit,\n    has_submit = _ref$has_submit === void 0 ? true : _ref$has_submit,\n    icon = _ref.icon,\n    message = _ref.message,\n    onCancel = _ref.onCancel,\n    onSubmit = _ref.onSubmit,\n    heading = _ref.heading,\n    _ref$icon_size = _ref.icon_size,\n    icon_size = _ref$icon_size === void 0 ? \'large\' : _ref$icon_size,\n    text_submit = _ref.text_submit,\n    text_cancel = _ref.text_cancel,\n    is_open = _ref.is_open,\n    toggleModal = _ref.toggleModal,\n    title = _ref.title,\n    has_close_icon = _ref.has_close_icon,\n    _ref$width = _ref.width,\n    width = _ref$width === void 0 ? \'\' : _ref$width,\n    is_medium_button = _ref.is_medium_button;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.Modal, {\n    className: "cfd-success-dialog",\n    is_open: is_open,\n    toggleModal: toggleModal,\n    has_close_icon: has_close_icon,\n    small: !title,\n    title: title,\n    width: width\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.Modal.Body, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {\n    className: classnames__WEBPACK_IMPORTED_MODULE_1___default()(\'success-change__icon-area\', {\n      \'success-change__icon-area--large\': icon_size === \'large\',\n      \'success-change__icon-area--xlarge\': icon_size === \'xlarge\'\n    }),\n    "data-testid": "dt_cfd_success_modal_icon_wrapper"\n  }, icon, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.Icon, {\n    className: "bottom-right-overlay",\n    icon: "IcCheckmarkCircle",\n    custom_color: "var(--status-success)",\n    size: 24\n  })), !heading ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.Text, {\n    as: "h2",\n    weight: "bold",\n    size: "s",\n    className: "dc-modal-header__title"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_translations__WEBPACK_IMPORTED_MODULE_3__.Localize, {\n    i18n_default_text: "Success!"\n  })) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, heading), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().isValidElement(message) && message, ! /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().isValidElement(message) && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("p", {\n    className: classNameMessage\n  }, message)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.Modal.Footer, null, has_cancel && onCancel && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.Button, _extends({\n    onClick: onCancel,\n    has_effect: true,\n    text: text_cancel || (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_3__.localize)(\'Maybe later\'),\n    secondary: true\n  }, is_medium_button ? {\n    medium: true\n  } : {\n    large: true\n  })), has_submit && onSubmit && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.Button, _extends({\n    has_effect: true,\n    onClick: onSubmit,\n    text: text_submit,\n    primary: true\n  }, is_medium_button ? {\n    medium: true\n  } : {\n    large: true\n  }))));\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SuccessDialog);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vY2ZkL3NyYy9Db21wb25lbnRzL3N1Y2Nlc3MtZGlhbG9nL3N1Y2Nlc3MtZGlhbG9nLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUF1QkE7QUFrQkE7QUFqQkE7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUlBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBT0E7QUFBQTtBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQU1BO0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvYXBwc3RvcmUvLi4vY2ZkL3NyYy9Db21wb25lbnRzL3N1Y2Nlc3MtZGlhbG9nL3N1Y2Nlc3MtZGlhbG9nLnRzeD84YmZiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgY2xhc3NOYW1lcyBmcm9tICdjbGFzc25hbWVzJztcbmltcG9ydCB7IEJ1dHRvbiwgSWNvbiwgTW9kYWwsIFRleHQgfSBmcm9tICdAZGVyaXYvY29tcG9uZW50cyc7XG5pbXBvcnQgeyBsb2NhbGl6ZSwgTG9jYWxpemUgfSBmcm9tICdAZGVyaXYvdHJhbnNsYXRpb25zJztcblxudHlwZSBUU3VjY2Vzc0RpYWxvZ1Byb3BzID0ge1xuICAgIGlzX29wZW46IGJvb2xlYW47XG4gICAgdG9nZ2xlTW9kYWw6ICgpID0+IHZvaWQ7XG4gICAgb25DYW5jZWw/OiAoKSA9PiB2b2lkO1xuICAgIG9uU3VibWl0PzogKCkgPT4gdm9pZDtcbiAgICBjbGFzc05hbWVNZXNzYWdlPzogc3RyaW5nO1xuICAgIG1lc3NhZ2U6IHN0cmluZyB8IFJlYWN0LlJlYWN0RWxlbWVudDtcbiAgICBpY29uOiBSZWFjdC5SZWFjdEVsZW1lbnQ7XG4gICAgaWNvbl9zaXplPzogc3RyaW5nO1xuICAgIHRleHRfc3VibWl0Pzogc3RyaW5nO1xuICAgIHRleHRfY2FuY2VsPzogc3RyaW5nO1xuICAgIGhlYWRpbmc/OiBzdHJpbmcgfCBSZWFjdC5SZWFjdEVsZW1lbnQ7XG4gICAgdGl0bGU/OiBzdHJpbmc7XG4gICAgaWNvbl90eXBlPzogc3RyaW5nO1xuICAgIGlzX21lZGl1bV9idXR0b24/OiBib29sZWFuO1xuICAgIGhhc19jbG9zZV9pY29uOiBib29sZWFuO1xuICAgIHdpZHRoPzogc3RyaW5nO1xuICAgIGhhc19jYW5jZWw/OiBib29sZWFuO1xuICAgIGhhc19zdWJtaXQ/OiBib29sZWFuO1xufTtcblxuY29uc3QgU3VjY2Vzc0RpYWxvZyA9ICh7XG4gICAgY2xhc3NOYW1lTWVzc2FnZSA9ICcnLFxuICAgIGhhc19jYW5jZWwgPSBmYWxzZSxcbiAgICBoYXNfc3VibWl0ID0gdHJ1ZSxcbiAgICBpY29uLFxuICAgIG1lc3NhZ2UsXG4gICAgb25DYW5jZWwsXG4gICAgb25TdWJtaXQsXG4gICAgaGVhZGluZyxcbiAgICBpY29uX3NpemUgPSAnbGFyZ2UnLFxuICAgIHRleHRfc3VibWl0LFxuICAgIHRleHRfY2FuY2VsLFxuICAgIGlzX29wZW4sXG4gICAgdG9nZ2xlTW9kYWwsXG4gICAgdGl0bGUsXG4gICAgaGFzX2Nsb3NlX2ljb24sXG4gICAgd2lkdGggPSAnJyxcbiAgICBpc19tZWRpdW1fYnV0dG9uLFxufTogVFN1Y2Nlc3NEaWFsb2dQcm9wcykgPT4ge1xuICAgIHJldHVybiAoXG4gICAgICAgIDxNb2RhbFxuICAgICAgICAgICAgY2xhc3NOYW1lPSdjZmQtc3VjY2Vzcy1kaWFsb2cnXG4gICAgICAgICAgICBpc19vcGVuPXtpc19vcGVufVxuICAgICAgICAgICAgdG9nZ2xlTW9kYWw9e3RvZ2dsZU1vZGFsfVxuICAgICAgICAgICAgaGFzX2Nsb3NlX2ljb249e2hhc19jbG9zZV9pY29ufVxuICAgICAgICAgICAgc21hbGw9eyF0aXRsZX1cbiAgICAgICAgICAgIHRpdGxlPXt0aXRsZX1cbiAgICAgICAgICAgIHdpZHRoPXt3aWR0aH1cbiAgICAgICAgPlxuICAgICAgICAgICAgPE1vZGFsLkJvZHk+XG4gICAgICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9e2NsYXNzTmFtZXMoJ3N1Y2Nlc3MtY2hhbmdlX19pY29uLWFyZWEnLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAnc3VjY2Vzcy1jaGFuZ2VfX2ljb24tYXJlYS0tbGFyZ2UnOiBpY29uX3NpemUgPT09ICdsYXJnZScsXG4gICAgICAgICAgICAgICAgICAgICAgICAnc3VjY2Vzcy1jaGFuZ2VfX2ljb24tYXJlYS0teGxhcmdlJzogaWNvbl9zaXplID09PSAneGxhcmdlJyxcbiAgICAgICAgICAgICAgICAgICAgfSl9XG4gICAgICAgICAgICAgICAgICAgIGRhdGEtdGVzdGlkPSdkdF9jZmRfc3VjY2Vzc19tb2RhbF9pY29uX3dyYXBwZXInXG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICB7aWNvbn1cbiAgICAgICAgICAgICAgICAgICAgPEljb25cbiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT0nYm90dG9tLXJpZ2h0LW92ZXJsYXknXG4gICAgICAgICAgICAgICAgICAgICAgICBpY29uPSdJY0NoZWNrbWFya0NpcmNsZSdcbiAgICAgICAgICAgICAgICAgICAgICAgIGN1c3RvbV9jb2xvcj0ndmFyKC0tc3RhdHVzLXN1Y2Nlc3MpJ1xuICAgICAgICAgICAgICAgICAgICAgICAgc2l6ZT17MjR9XG4gICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgeyFoZWFkaW5nID8gKFxuICAgICAgICAgICAgICAgICAgICA8VGV4dCBhcz0naDInIHdlaWdodD0nYm9sZCcgc2l6ZT0ncycgY2xhc3NOYW1lPSdkYy1tb2RhbC1oZWFkZXJfX3RpdGxlJz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxMb2NhbGl6ZSBpMThuX2RlZmF1bHRfdGV4dD0nU3VjY2VzcyEnIC8+XG4gICAgICAgICAgICAgICAgICAgIDwvVGV4dD5cbiAgICAgICAgICAgICAgICApIDogKFxuICAgICAgICAgICAgICAgICAgICA8UmVhY3QuRnJhZ21lbnQ+e2hlYWRpbmd9PC9SZWFjdC5GcmFnbWVudD5cbiAgICAgICAgICAgICAgICApfVxuXG4gICAgICAgICAgICAgICAge1JlYWN0LmlzVmFsaWRFbGVtZW50KG1lc3NhZ2UpICYmIG1lc3NhZ2V9XG4gICAgICAgICAgICAgICAgeyFSZWFjdC5pc1ZhbGlkRWxlbWVudChtZXNzYWdlKSAmJiA8cCBjbGFzc05hbWU9e2NsYXNzTmFtZU1lc3NhZ2V9PnttZXNzYWdlfTwvcD59XG4gICAgICAgICAgICA8L01vZGFsLkJvZHk+XG4gICAgICAgICAgICA8TW9kYWwuRm9vdGVyPlxuICAgICAgICAgICAgICAgIHtoYXNfY2FuY2VsICYmIG9uQ2FuY2VsICYmIChcbiAgICAgICAgICAgICAgICAgICAgPEJ1dHRvblxuICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17b25DYW5jZWx9XG4gICAgICAgICAgICAgICAgICAgICAgICBoYXNfZWZmZWN0XG4gICAgICAgICAgICAgICAgICAgICAgICB0ZXh0PXt0ZXh0X2NhbmNlbCB8fCBsb2NhbGl6ZSgnTWF5YmUgbGF0ZXInKX1cbiAgICAgICAgICAgICAgICAgICAgICAgIHNlY29uZGFyeVxuICAgICAgICAgICAgICAgICAgICAgICAgey4uLihpc19tZWRpdW1fYnV0dG9uID8geyBtZWRpdW06IHRydWUgfSA6IHsgbGFyZ2U6IHRydWUgfSl9XG4gICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICB7aGFzX3N1Ym1pdCAmJiBvblN1Ym1pdCAmJiAoXG4gICAgICAgICAgICAgICAgICAgIDxCdXR0b25cbiAgICAgICAgICAgICAgICAgICAgICAgIGhhc19lZmZlY3RcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e29uU3VibWl0fVxuICAgICAgICAgICAgICAgICAgICAgICAgdGV4dD17dGV4dF9zdWJtaXR9XG4gICAgICAgICAgICAgICAgICAgICAgICBwcmltYXJ5XG4gICAgICAgICAgICAgICAgICAgICAgICB7Li4uKGlzX21lZGl1bV9idXR0b24gPyB7IG1lZGl1bTogdHJ1ZSB9IDogeyBsYXJnZTogdHJ1ZSB9KX1cbiAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgPC9Nb2RhbC5Gb290ZXI+XG4gICAgICAgIDwvTW9kYWw+XG4gICAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFN1Y2Nlc3NEaWFsb2c7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../cfd/src/Components/success-dialog/success-dialog.tsx\n'
                );

                /***/
            },

        /***/ '../cfd/src/Containers/cfd-enter-password-modal-title.tsx':
            /*!****************************************************************!*\
  !*** ../cfd/src/Containers/cfd-enter-password-modal-title.tsx ***!
  \****************************************************************/
            /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _deriv_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @deriv/components */ "@deriv/components");\n/* harmony import */ var _deriv_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_deriv_components__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _deriv_shared__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @deriv/shared */ "@deriv/shared");\n/* harmony import */ var _deriv_shared__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_deriv_shared__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _deriv_stores__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @deriv/stores */ "../../node_modules/mobx-react-lite/es/index.js");\n/* harmony import */ var _deriv_stores__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @deriv/stores */ "../stores/src/useStore.ts");\n/* harmony import */ var _deriv_translations__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @deriv/translations */ "@deriv/translations");\n/* harmony import */ var _deriv_translations__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_deriv_translations__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _Helpers_cfd_config__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Helpers/cfd-config */ "../cfd/src/Helpers/cfd-config.ts");\n\n\n\n\n\n\nvar CFDEnterPasswordModalTitle = (0,_deriv_stores__WEBPACK_IMPORTED_MODULE_5__.observer)(function (_ref) {\n  var platform = _ref.platform;\n  var _useStore = (0,_deriv_stores__WEBPACK_IMPORTED_MODULE_6__["default"])(),\n    cfd = _useStore.modules.cfd;\n  var account_title = cfd.account_title,\n    account_type = cfd.account_type;\n  var getAccountCardTitle = function getAccountCardTitle() {\n    switch (platform) {\n      case _Helpers_cfd_config__WEBPACK_IMPORTED_MODULE_4__.CFD_PLATFORMS.CTRADER:\n      case _Helpers_cfd_config__WEBPACK_IMPORTED_MODULE_4__.CFD_PLATFORMS.DXTRADE:\n        return account_type.category === _Helpers_cfd_config__WEBPACK_IMPORTED_MODULE_4__.CATEGORY.REAL ? \'Real\' : \'\';\n      default:\n        return account_title;\n    }\n  };\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_components__WEBPACK_IMPORTED_MODULE_1__.Text, {\n    size: "xs",\n    className: "dc-modal__container_cfd-password-modal__account-title"\n  }, platform === _Helpers_cfd_config__WEBPACK_IMPORTED_MODULE_4__.CFD_PLATFORMS.MT5 ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_translations__WEBPACK_IMPORTED_MODULE_3__.Localize, {\n    i18n_default_text: "Enter your {{platform}} password to add an {{platform}} {{account}} account.",\n    values: {\n      platform: (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_2__.getCFDPlatformNames)(platform),\n      account: getAccountCardTitle()\n    }\n  }) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_translations__WEBPACK_IMPORTED_MODULE_3__.Localize, {\n    i18n_default_text: "Enter your {{platform}} password to add a {{platform}} {{account}} account.",\n    values: {\n      platform: (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_2__.getCFDPlatformLabel)(platform),\n      account: getAccountCardTitle()\n    }\n  }));\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CFDEnterPasswordModalTitle);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vY2ZkL3NyYy9Db250YWluZXJzL2NmZC1lbnRlci1wYXNzd29yZC1tb2RhbC10aXRsZS50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSUE7QUFBQTtBQUNBO0FBQ0E7QUFFQTtBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUFBO0FBQUE7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFLQTtBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlcml2L2FwcHN0b3JlLy4uL2NmZC9zcmMvQ29udGFpbmVycy9jZmQtZW50ZXItcGFzc3dvcmQtbW9kYWwtdGl0bGUudHN4PzhhYTkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IFRleHQgfSBmcm9tICdAZGVyaXYvY29tcG9uZW50cyc7XG5pbXBvcnQgeyBnZXRDRkRQbGF0Zm9ybUxhYmVsLCBnZXRDRkRQbGF0Zm9ybU5hbWVzIH0gZnJvbSAnQGRlcml2L3NoYXJlZCc7XG5pbXBvcnQgeyBvYnNlcnZlciwgdXNlU3RvcmUgfSBmcm9tICdAZGVyaXYvc3RvcmVzJztcbmltcG9ydCB7IExvY2FsaXplIH0gZnJvbSAnQGRlcml2L3RyYW5zbGF0aW9ucyc7XG5pbXBvcnQgeyBDQVRFR09SWSwgQ0ZEX1BMQVRGT1JNUyB9IGZyb20gJy4uL0hlbHBlcnMvY2ZkLWNvbmZpZyc7XG5cbnR5cGUgVENGREVudGVyUGFzc3dvcmRNb2RhbFRpdGxlUHJvcHMgPSB7IHBsYXRmb3JtOiB0eXBlb2YgQ0ZEX1BMQVRGT1JNU1trZXlvZiB0eXBlb2YgQ0ZEX1BMQVRGT1JNU10gfTtcblxuY29uc3QgQ0ZERW50ZXJQYXNzd29yZE1vZGFsVGl0bGUgPSBvYnNlcnZlcigoeyBwbGF0Zm9ybSB9OiBUQ0ZERW50ZXJQYXNzd29yZE1vZGFsVGl0bGVQcm9wcykgPT4ge1xuICAgIGNvbnN0IHtcbiAgICAgICAgbW9kdWxlczogeyBjZmQgfSxcbiAgICB9ID0gdXNlU3RvcmUoKTtcbiAgICBjb25zdCB7IGFjY291bnRfdGl0bGUsIGFjY291bnRfdHlwZSB9ID0gY2ZkO1xuXG4gICAgY29uc3QgZ2V0QWNjb3VudENhcmRUaXRsZSA9ICgpID0+IHtcbiAgICAgICAgc3dpdGNoIChwbGF0Zm9ybSkge1xuICAgICAgICAgICAgY2FzZSBDRkRfUExBVEZPUk1TLkNUUkFERVI6XG4gICAgICAgICAgICBjYXNlIENGRF9QTEFURk9STVMuRFhUUkFERTpcbiAgICAgICAgICAgICAgICByZXR1cm4gYWNjb3VudF90eXBlLmNhdGVnb3J5ID09PSBDQVRFR09SWS5SRUFMID8gJ1JlYWwnIDogJyc7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHJldHVybiBhY2NvdW50X3RpdGxlO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIHJldHVybiAoXG4gICAgICAgIDxUZXh0IHNpemU9J3hzJyBjbGFzc05hbWU9J2RjLW1vZGFsX19jb250YWluZXJfY2ZkLXBhc3N3b3JkLW1vZGFsX19hY2NvdW50LXRpdGxlJz5cbiAgICAgICAgICAgIHtwbGF0Zm9ybSA9PT0gQ0ZEX1BMQVRGT1JNUy5NVDUgPyAoXG4gICAgICAgICAgICAgICAgPExvY2FsaXplXG4gICAgICAgICAgICAgICAgICAgIGkxOG5fZGVmYXVsdF90ZXh0PSdFbnRlciB5b3VyIHt7cGxhdGZvcm19fSBwYXNzd29yZCB0byBhZGQgYW4ge3twbGF0Zm9ybX19IHt7YWNjb3VudH19IGFjY291bnQuJ1xuICAgICAgICAgICAgICAgICAgICB2YWx1ZXM9e3tcbiAgICAgICAgICAgICAgICAgICAgICAgIHBsYXRmb3JtOiBnZXRDRkRQbGF0Zm9ybU5hbWVzKHBsYXRmb3JtKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGFjY291bnQ6IGdldEFjY291bnRDYXJkVGl0bGUoKSxcbiAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgKSA6IChcbiAgICAgICAgICAgICAgICA8TG9jYWxpemVcbiAgICAgICAgICAgICAgICAgICAgaTE4bl9kZWZhdWx0X3RleHQ9J0VudGVyIHlvdXIge3twbGF0Zm9ybX19IHBhc3N3b3JkIHRvIGFkZCBhIHt7cGxhdGZvcm19fSB7e2FjY291bnR9fSBhY2NvdW50LidcbiAgICAgICAgICAgICAgICAgICAgdmFsdWVzPXt7XG4gICAgICAgICAgICAgICAgICAgICAgICBwbGF0Zm9ybTogZ2V0Q0ZEUGxhdGZvcm1MYWJlbChwbGF0Zm9ybSksXG4gICAgICAgICAgICAgICAgICAgICAgICBhY2NvdW50OiBnZXRBY2NvdW50Q2FyZFRpdGxlKCksXG4gICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICl9XG4gICAgICAgIDwvVGV4dD5cbiAgICApO1xufSk7XG5cbmV4cG9ydCBkZWZhdWx0IENGREVudGVyUGFzc3dvcmRNb2RhbFRpdGxlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../cfd/src/Containers/cfd-enter-password-modal-title.tsx\n'
                );

                /***/
            },

        /***/ '../cfd/src/Containers/cfd-password-modal.tsx':
            /*!****************************************************!*\
  !*** ../cfd/src/Containers/cfd-password-modal.tsx ***!
  \****************************************************/
            /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-router */ "react-router");\n/* harmony import */ var react_router__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_router__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var formik__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! formik */ "../../node_modules/formik/dist/formik.esm.js");\n/* harmony import */ var _deriv_com_ui__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @deriv-com/ui */ "../../node_modules/@deriv-com/ui/dist/hooks/useDevice.js");\n/* harmony import */ var _deriv_account_dist_account_js_sent_email_modal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @deriv/account/dist/account/js/sent-email-modal */ "../account/dist/account/js/sent-email-modal.js");\n/* harmony import */ var _deriv_account_dist_account_js_sent_email_modal__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_deriv_account_dist_account_js_sent_email_modal__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _sass_cfd_scss__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../sass/cfd.scss */ "../cfd/src/sass/cfd.scss");\n/* harmony import */ var _sass_cfd_scss__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_sass_cfd_scss__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _deriv_components__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @deriv/components */ "@deriv/components");\n/* harmony import */ var _deriv_components__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_deriv_components__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _deriv_shared__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @deriv/shared */ "@deriv/shared");\n/* harmony import */ var _deriv_shared__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_deriv_shared__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _deriv_stores__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @deriv/stores */ "../../node_modules/mobx-react-lite/es/index.js");\n/* harmony import */ var _deriv_stores__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @deriv/stores */ "../stores/src/useStore.ts");\n/* harmony import */ var _deriv_translations__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @deriv/translations */ "@deriv/translations");\n/* harmony import */ var _deriv_translations__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_deriv_translations__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _cfd_enter_password_modal_title__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./cfd-enter-password-modal-title */ "../cfd/src/Containers/cfd-enter-password-modal-title.tsx");\n/* harmony import */ var _Components_success_dialog_success_dialog__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../Components/success-dialog/success-dialog */ "../cfd/src/Components/success-dialog/success-dialog.tsx");\n/* harmony import */ var _Components_migration_success_modal__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../Components/migration-success-modal */ "../cfd/src/Components/migration-success-modal/index.tsx");\n/* harmony import */ var _Stores_Modules_CFD_Helpers_useCfdStores__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../Stores/Modules/CFD/Helpers/useCfdStores */ "../cfd/src/Stores/Modules/CFD/Helpers/useCfdStores.tsx");\n/* harmony import */ var _Helpers_cfd_config__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../Helpers/cfd-config */ "../cfd/src/Helpers/cfd-config.ts");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! classnames */ "classnames");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_12__);\n/* harmony import */ var _Stores_Modules_CFD_Helpers_cfd_config__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../Stores/Modules/CFD/Helpers/cfd-config */ "../cfd/src/Stores/Modules/CFD/Helpers/cfd-config.ts");\nfunction _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }\nfunction _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }\nfunction _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\n\n\n\n\n\n\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\nvar MT5CreatePassword = (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_5__.makeLazyLoader)(function () {\n  return (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_5__.moduleLoader)(function () {\n    return Promise.all(/*! import() */[__webpack_require__.e("hooks_src_useIsSelectedMT5AccountCreated_ts"), __webpack_require__.e("cfd_src_Containers_mt5-create-password_mt5-create-password_tsx")]).then(__webpack_require__.bind(__webpack_require__, /*! ./mt5-create-password/mt5-create-password */ "../cfd/src/Containers/mt5-create-password/mt5-create-password.tsx"));\n  });\n}, function () {\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", null);\n})();\nvar CfdPasswordModalTnc = (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_5__.makeLazyLoader)(function () {\n  return (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_5__.moduleLoader)(function () {\n    return Promise.all(/*! import() */[__webpack_require__.e("hooks_src_useIsSelectedMT5AccountCreated_ts"), __webpack_require__.e("cfd_src_Containers_cfd-password-modal-tnc_tsx")]).then(__webpack_require__.bind(__webpack_require__, /*! ./cfd-password-modal-tnc */ "../cfd/src/Containers/cfd-password-modal-tnc.tsx"));\n  });\n}, function () {\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", null);\n})();\nvar CFDPasswordChange = (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_5__.makeLazyLoader)(function () {\n  return (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_5__.moduleLoader)(function () {\n    return Promise.all(/*! import() */[__webpack_require__.e("cfd_src_Helpers_constants_ts"), __webpack_require__.e("hooks_src_useIsSelectedMT5AccountCreated_ts"), __webpack_require__.e("cfd_src_Containers_cfd-password-change_tsx")]).then(__webpack_require__.bind(__webpack_require__, /*! ./cfd-password-change */ "../cfd/src/Containers/cfd-password-change.tsx"));\n  });\n}, function () {\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", null);\n})();\nvar CFDPasswordSuccessIcon = (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_5__.makeLazyLoader)(function () {\n  return (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_5__.moduleLoader)(function () {\n    return Promise.all(/*! import() */[__webpack_require__.e("cfd_src_Assets_svgs_trading-platform_index_tsx"), __webpack_require__.e("cfd_src_Containers_cfd-password-success-icon_tsx")]).then(__webpack_require__.bind(__webpack_require__, /*! ./cfd-password-success-icon */ "../cfd/src/Containers/cfd-password-success-icon.tsx"));\n  });\n}, function () {\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", null);\n})();\nvar CFDPasswordChangeContent = (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_5__.makeLazyLoader)(function () {\n  return (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_5__.moduleLoader)(function () {\n    return __webpack_require__.e(/*! import() */ "cfd_src_Containers_cfd-password-change-content_tsx").then(__webpack_require__.bind(__webpack_require__, /*! ./cfd-password-change-content */ "../cfd/src/Containers/cfd-password-change-content.tsx"));\n  });\n}, function () {\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", null);\n})();\nvar ChangePasswordConfirmation = (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_5__.makeLazyLoader)(function () {\n  return (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_5__.moduleLoader)(function () {\n    return __webpack_require__.e(/*! import() */ "cfd_src_Containers_cfd-change-password-confirmation_tsx").then(__webpack_require__.bind(__webpack_require__, /*! ./cfd-change-password-confirmation */ "../cfd/src/Containers/cfd-change-password-confirmation.tsx"));\n  });\n}, function () {\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", null);\n})();\nvar PasswordModalHeader = function PasswordModalHeader(_ref) {\n  var should_set_trading_password = _ref.should_set_trading_password,\n    is_password_reset_error = _ref.is_password_reset_error,\n    platform = _ref.platform;\n  var _useDevice = (0,_deriv_com_ui__WEBPACK_IMPORTED_MODULE_14__.useDevice)(),\n    isDesktop = _useDevice.isDesktop;\n  var is_mt5 = platform === _Helpers_cfd_config__WEBPACK_IMPORTED_MODULE_11__.CFD_PLATFORMS.MT5;\n  var element = !isDesktop ? \'p\' : \'span\';\n  var style = !isDesktop ? {\n    padding: \'2rem\'\n  } : {};\n  if (is_mt5 && !is_password_reset_error) {\n    var platform_name = (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_5__.getCFDPlatformNames)(platform);\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_components__WEBPACK_IMPORTED_MODULE_4__.Text, {\n      as: element,\n      line_height: "m",\n      weight: "bold",\n      size: !isDesktop ? \'xs\' : \'s\',\n      align: "center"\n    }, should_set_trading_password ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_translations__WEBPACK_IMPORTED_MODULE_6__.Localize, {\n      i18n_default_text: "Create an {{platform_name}} account",\n      values: {\n        platform_name: platform_name\n      }\n    }) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_translations__WEBPACK_IMPORTED_MODULE_6__.Localize, {\n      i18n_default_text: "Add an {{platform_name}} account",\n      values: {\n        platform_name: platform_name\n      }\n    }));\n  }\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_components__WEBPACK_IMPORTED_MODULE_4__.Text, {\n    styles: style,\n    as: element,\n    line_height: "m",\n    weight: "bold",\n    size: "s",\n    align: "center"\n  }, !should_set_trading_password && !is_password_reset_error && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_translations__WEBPACK_IMPORTED_MODULE_6__.Localize, {\n    i18n_default_text: "Enter your {{platform}} password",\n    values: {\n      platform: (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_5__.getCFDPlatformLabel)(platform)\n    }\n  }), is_password_reset_error && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_translations__WEBPACK_IMPORTED_MODULE_6__.Localize, {\n    i18n_default_text: "Too many attempts"\n  }));\n};\nvar getCancelButtonLabel = function getCancelButtonLabel(_ref2) {\n  var should_set_trading_password = _ref2.should_set_trading_password,\n    error_type = _ref2.error_type,\n    isDesktop = _ref2.isDesktop;\n  if (should_set_trading_password && error_type !== \'PasswordReset\') {\n    return isDesktop ? null : (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_6__.localize)(\'Cancel\');\n  }\n  return (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_6__.localize)(\'Forgot password?\');\n};\nvar handlePasswordInputChange = function handlePasswordInputChange(e, handleChange, validateForm, setFieldTouched) {\n  handleChange(e);\n  validateForm().then(function () {\n    setFieldTouched(\'password\', true);\n  });\n};\nvar CreatePassword = function CreatePassword(_ref3) {\n  var password = _ref3.password,\n    platform = _ref3.platform,\n    validatePassword = _ref3.validatePassword,\n    onSubmit = _ref3.onSubmit,\n    error_message = _ref3.error_message;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(formik__WEBPACK_IMPORTED_MODULE_15__.Formik, {\n    initialValues: {\n      password: password\n    },\n    enableReinitialize: true,\n    validate: validatePassword,\n    onSubmit: onSubmit\n  }, function (_ref4) {\n    var errors = _ref4.errors,\n      isSubmitting = _ref4.isSubmitting,\n      handleBlur = _ref4.handleBlur,\n      handleChange = _ref4.handleChange,\n      handleSubmit = _ref4.handleSubmit,\n      setFieldTouched = _ref4.setFieldTouched,\n      touched = _ref4.touched,\n      values = _ref4.values,\n      validateForm = _ref4.validateForm;\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("form", {\n      onSubmit: handleSubmit\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {\n      className: "cfd-password-modal__content dc-modal__container_cfd-password-modal__body cfd-password-modal__create-password-content",\n      "data-testid": "dt_create_password"\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_components__WEBPACK_IMPORTED_MODULE_4__.Icon, {\n      icon: "IcDxtradeOnePassword",\n      width: "122",\n      height: "108"\n    }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_components__WEBPACK_IMPORTED_MODULE_4__.Text, {\n      size: "s",\n      align: "center",\n      weight: "bold",\n      className: "cfd-password-modal__create-password-title"\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_translations__WEBPACK_IMPORTED_MODULE_6__.Localize, {\n      i18n_default_text: "Create a {{platform}} password",\n      values: {\n        platform: (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_5__.getCFDPlatformLabel)(platform)\n      }\n    })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_components__WEBPACK_IMPORTED_MODULE_4__.Text, {\n      size: "xs",\n      align: "center",\n      className: "cfd-password-modal__create-password-description"\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_translations__WEBPACK_IMPORTED_MODULE_6__.Localize, {\n      i18n_default_text: "You can use this password for all your {{platform}} accounts.",\n      values: {\n        platform: (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_5__.getCFDPlatformLabel)(platform)\n      }\n    })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {\n      className: "input-element"\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_components__WEBPACK_IMPORTED_MODULE_4__.PasswordMeter, {\n      input: values.password,\n      has_error: !!(touched.password && errors.password),\n      custom_feedback_messages: (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_5__.getErrorMessages)().password_warnings\n    }, function () {\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_components__WEBPACK_IMPORTED_MODULE_4__.PasswordInput, {\n        autoComplete: "new-password",\n        label: (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_6__.localize)(\'{{platform}} password\', {\n          platform: (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_5__.getCFDPlatformLabel)(platform)\n        }),\n        error: touched.password && errors.password || (values.password.length === 0 ? error_message : \'\'),\n        name: "password",\n        value: values.password,\n        onBlur: handleBlur,\n        onChange: function onChange(e) {\n          handlePasswordInputChange(e, handleChange, validateForm, setFieldTouched);\n        },\n        data_testId: "dt_".concat(platform, "_password")\n      });\n    })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_components__WEBPACK_IMPORTED_MODULE_4__.FormSubmitButton, {\n      is_disabled: !values.password || Object.keys(errors).length > 0,\n      is_loading: isSubmitting,\n      label: (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_6__.localize)(\'Create {{platform}} password\', {\n        platform: (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_5__.getCFDPlatformLabel)(platform)\n      }),\n      is_center: platform !== _Helpers_cfd_config__WEBPACK_IMPORTED_MODULE_11__.CFD_PLATFORMS.MT5\n    })));\n  });\n};\nvar CFDCreatePasswordForm = function CFDCreatePasswordForm(_ref5) {\n  var has_mt5_account = _ref5.has_mt5_account,\n    platform = _ref5.platform,\n    error_message = _ref5.error_message,\n    validatePassword = _ref5.validatePassword,\n    submitPassword = _ref5.submitPassword,\n    need_tnc = _ref5.need_tnc;\n  var multi_step_ref = react__WEBPACK_IMPORTED_MODULE_0___default().useRef();\n  var _React$useState = react__WEBPACK_IMPORTED_MODULE_0___default().useState(\'\'),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    password = _React$useState2[0],\n    setPassword = _React$useState2[1];\n  var onSubmit = function onSubmit(values, actions) {\n    if (platform === _Helpers_cfd_config__WEBPACK_IMPORTED_MODULE_11__.CFD_PLATFORMS.MT5 && has_mt5_account) {\n      var _multi_step_ref$curre;\n      setPassword(values.password);\n      (_multi_step_ref$curre = multi_step_ref.current) === null || _multi_step_ref$curre === void 0 || _multi_step_ref$curre.goNextStep();\n    } else {\n      submitPassword(values, actions);\n    }\n  };\n  var steps = [{\n    component: platform === _Helpers_cfd_config__WEBPACK_IMPORTED_MODULE_11__.CFD_PLATFORMS.MT5 ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(MT5CreatePassword, {\n      password: password,\n      platform: platform,\n      error_message: error_message,\n      validatePassword: validatePassword,\n      onSubmit: onSubmit,\n      need_tnc: need_tnc\n    }) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(CreatePassword, {\n      password: password,\n      platform: platform,\n      error_message: error_message,\n      validatePassword: validatePassword,\n      onSubmit: onSubmit,\n      need_tnc: need_tnc\n    })\n  }, {\n    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(ChangePasswordConfirmation, {\n      className: "cfd-password-modal__change-password-confirmation",\n      platform: platform,\n      onConfirm: function onConfirm(_values, actions) {\n        return submitPassword({\n          password: password\n        }, actions);\n      },\n      onCancel: function onCancel() {\n        var _multi_step_ref$curre2;\n        return (_multi_step_ref$curre2 = multi_step_ref.current) === null || _multi_step_ref$curre2 === void 0 ? void 0 : _multi_step_ref$curre2.goPrevStep();\n      }\n    })\n  }];\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_components__WEBPACK_IMPORTED_MODULE_4__.MultiStep, {\n    ref: multi_step_ref,\n    steps: steps\n  });\n};\nvar CFDPasswordForm = (0,_deriv_stores__WEBPACK_IMPORTED_MODULE_16__.observer)(function (_ref6) {\n  var closeModal = _ref6.closeModal,\n    error_message = _ref6.error_message,\n    error_type = _ref6.error_type,\n    form_error = _ref6.form_error,\n    has_mt5_account = _ref6.has_mt5_account,\n    onCancel = _ref6.onCancel,\n    onForgotPassword = _ref6.onForgotPassword,\n    platform = _ref6.platform,\n    should_set_trading_password = _ref6.should_set_trading_password,\n    submitPassword = _ref6.submitPassword,\n    validatePassword = _ref6.validatePassword,\n    account_type = _ref6.account_type;\n  var _useDevice2 = (0,_deriv_com_ui__WEBPACK_IMPORTED_MODULE_14__.useDevice)(),\n    isDesktop = _useDevice2.isDesktop;\n  var _useCfdStore = (0,_Stores_Modules_CFD_Helpers_useCfdStores__WEBPACK_IMPORTED_MODULE_10__.useCfdStore)(),\n    jurisdiction_selected_shortcode = _useCfdStore.jurisdiction_selected_shortcode;\n  var _React$useState3 = react__WEBPACK_IMPORTED_MODULE_0___default().useState(false),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    checked = _React$useState4[0],\n    setChecked = _React$useState4[1];\n  var need_tnc = jurisdiction_selected_shortcode !== \'svg\' && account_type.category === _Helpers_cfd_config__WEBPACK_IMPORTED_MODULE_11__.CATEGORY.REAL;\n  var button_label = react__WEBPACK_IMPORTED_MODULE_0___default().useMemo(function () {\n    if (error_type === \'PasswordReset\') {\n      return (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_6__.localize)(\'Try later\');\n    }\n    return (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_6__.localize)(\'Add account\');\n  }, [error_type]);\n  var has_cancel_button = (isDesktop ? !should_set_trading_password : true) || error_type === \'PasswordReset\';\n  var cancel_button_label = getCancelButtonLabel({\n    should_set_trading_password: should_set_trading_password,\n    error_type: error_type,\n    isDesktop: isDesktop\n  });\n  var handleCancel = function handleCancel() {\n    if (!has_cancel_button) {\n      return undefined;\n    }\n    if (should_set_trading_password) {\n      return onCancel();\n    }\n    return onForgotPassword();\n  };\n  if (error_type === \'PasswordReset\') {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {\n      className: "cfd-password-reset"\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {\n      className: "cfd-password-modal__content cfd-password-modal__content--password-reset"\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_components__WEBPACK_IMPORTED_MODULE_4__.Text, {\n      as: "p",\n      line_height: "24",\n      size: "xs"\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_translations__WEBPACK_IMPORTED_MODULE_6__.Localize, {\n      i18n_default_text: "Please try again in a minute."\n    }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(formik__WEBPACK_IMPORTED_MODULE_15__.Formik, {\n      onSubmit: closeModal,\n      initialValues: {}\n    }, function (_ref7) {\n      var handleSubmit = _ref7.handleSubmit;\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("form", {\n        onSubmit: handleSubmit\n      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_components__WEBPACK_IMPORTED_MODULE_4__.FormSubmitButton, {\n        has_cancel: has_cancel_button,\n        cancel_label: cancel_button_label,\n        onCancel: handleCancel,\n        is_absolute: !isDesktop,\n        label: button_label\n      }));\n    })));\n  }\n  if (should_set_trading_password) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(CFDCreatePasswordForm, {\n      platform: platform,\n      error_message: error_message,\n      validatePassword: validatePassword,\n      submitPassword: submitPassword,\n      has_mt5_account: has_mt5_account,\n      need_tnc: need_tnc\n    });\n  }\n  // enter password modal\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(formik__WEBPACK_IMPORTED_MODULE_15__.Formik, {\n    initialValues: {\n      password: \'\'\n    },\n    enableReinitialize: true,\n    validate: validatePassword,\n    onSubmit: submitPassword\n  }, function (_ref8) {\n    var errors = _ref8.errors,\n      isSubmitting = _ref8.isSubmitting,\n      handleBlur = _ref8.handleBlur,\n      handleChange = _ref8.handleChange,\n      handleSubmit = _ref8.handleSubmit,\n      setFieldTouched = _ref8.setFieldTouched,\n      touched = _ref8.touched,\n      values = _ref8.values,\n      validateForm = _ref8.validateForm,\n      isValid = _ref8.isValid;\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("form", {\n      onSubmit: handleSubmit\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {\n      className: "cfd-password-modal__content dc-modal__container_cfd-password-modal__body"\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_cfd_enter_password_modal_title__WEBPACK_IMPORTED_MODULE_7__["default"], {\n      platform: platform\n    }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {\n      className: "input-element"\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_components__WEBPACK_IMPORTED_MODULE_4__.PasswordInput, {\n      autoComplete: "new-password",\n      label: (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_6__.localize)(\'{{platform}} password\', {\n        platform: (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_5__.getCFDPlatformLabel)(platform)\n      }),\n      error: touched.password && errors.password || (values.password.length === 0 ? error_message : \'\'),\n      name: "password",\n      value: values.password,\n      onBlur: handleBlur,\n      onChange: function onChange(e) {\n        handlePasswordInputChange(e, handleChange, validateForm, setFieldTouched);\n      },\n      data_testId: "dt_".concat(platform, "_password")\n    })), error_type === \'PasswordError\' && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_components__WEBPACK_IMPORTED_MODULE_4__.Text, {\n      size: "xs",\n      as: "p",\n      className: "dc-modal__container_mt5-password-modal__hint"\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_translations__WEBPACK_IMPORTED_MODULE_6__.Localize, {\n      i18n_default_text: "Hint: You may have entered your Deriv password, which is different from your {{platform}} password.",\n      values: {\n        platform: (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_5__.getCFDPlatformLabel)(platform)\n      }\n    })), account_type.category === _Helpers_cfd_config__WEBPACK_IMPORTED_MODULE_11__.CATEGORY.REAL && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(CfdPasswordModalTnc, {\n      className: "cfd-password-modal-tnc--bottom",\n      platform: platform,\n      checked: checked,\n      onCheck: function onCheck() {\n        return setChecked(function (prev) {\n          return !prev;\n        });\n      },\n      need_tnc: need_tnc\n    })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_components__WEBPACK_IMPORTED_MODULE_4__.FormSubmitButton, {\n      is_disabled: !values.password || !isValid || need_tnc && !checked,\n      has_cancel: has_cancel_button,\n      cancel_label: cancel_button_label,\n      onCancel: handleCancel,\n      is_absolute: !isDesktop,\n      is_loading: isSubmitting,\n      label: button_label,\n      is_center: should_set_trading_password,\n      form_error: form_error\n    }));\n  });\n});\nvar CFDPasswordModal = (0,_deriv_stores__WEBPACK_IMPORTED_MODULE_16__.observer)(function (_ref9) {\n  var form_error = _ref9.form_error,\n    platform = _ref9.platform;\n  var _useDevice3 = (0,_deriv_com_ui__WEBPACK_IMPORTED_MODULE_14__.useDevice)(),\n    isDesktop = _useDevice3.isDesktop,\n    isMobileOrTabletLandscape = _useDevice3.isMobileOrTabletLandscape;\n  var isMobileOrTabletPortrait = !isDesktop && !isMobileOrTabletLandscape;\n  var _useStore = (0,_deriv_stores__WEBPACK_IMPORTED_MODULE_17__["default"])(),\n    client = _useStore.client,\n    traders_hub = _useStore.traders_hub,\n    ui = _useStore.ui;\n  var email = client.email,\n    account_status = client.account_status,\n    is_logged_in = client.is_logged_in,\n    is_populating_mt5_account_list = client.is_populating_mt5_account_list,\n    is_dxtrade_allowed = client.is_dxtrade_allowed,\n    mt5_login_list = client.mt5_login_list,\n    updateAccountStatus = client.updateAccountStatus,\n    updateMT5Status = client.updateMT5Status;\n  var show_eu_related_content = traders_hub.show_eu_related_content,\n    is_eu_user = traders_hub.is_eu_user,\n    toggleAccountTransferModal = traders_hub.toggleAccountTransferModal;\n  var is_mt5_migration_modal_enabled = ui.is_mt5_migration_modal_enabled,\n    setMT5MigrationModalEnabled = ui.setMT5MigrationModalEnabled,\n    is_mt5_migration_modal_open = ui.is_mt5_migration_modal_open;\n  var _useCfdStore2 = (0,_Stores_Modules_CFD_Helpers_useCfdStores__WEBPACK_IMPORTED_MODULE_10__.useCfdStore)(),\n    account_type = _useCfdStore2.account_type,\n    disableCFDPasswordModal = _useCfdStore2.disableCFDPasswordModal,\n    error_message = _useCfdStore2.error_message,\n    error_type = _useCfdStore2.error_type,\n    getAccountStatus = _useCfdStore2.getAccountStatus,\n    has_cfd_error = _useCfdStore2.has_cfd_error,\n    is_cfd_success_dialog_enabled = _useCfdStore2.is_cfd_success_dialog_enabled,\n    is_cfd_password_modal_enabled = _useCfdStore2.is_cfd_password_modal_enabled,\n    setError = _useCfdStore2.setError,\n    setCFDSuccessDialog = _useCfdStore2.setCFDSuccessDialog,\n    submitMt5Password = _useCfdStore2.submitMt5Password,\n    submitCFDPassword = _useCfdStore2.submitCFDPassword,\n    new_account_response = _useCfdStore2.new_account_response,\n    product = _useCfdStore2.product,\n    setMigratedMT5Accounts = _useCfdStore2.setMigratedMT5Accounts,\n    is_mt5_password_changed_modal_visible = _useCfdStore2.is_mt5_password_changed_modal_visible,\n    is_mt5_password_invalid_format_modal_visible = _useCfdStore2.is_mt5_password_invalid_format_modal_visible,\n    setIsMt5PasswordInvalidFormatModalVisible = _useCfdStore2.setIsMt5PasswordInvalidFormatModalVisible,\n    is_sent_email_modal_enabled = _useCfdStore2.is_sent_email_modal_enabled,\n    setSentEmailModalStatus = _useCfdStore2.setSentEmailModalStatus;\n  var history = (0,react_router__WEBPACK_IMPORTED_MODULE_1__.useHistory)();\n  var _React$useState5 = react__WEBPACK_IMPORTED_MODULE_0___default().useState(true),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    is_password_modal_exited = _React$useState6[0],\n    setPasswordModalExited = _React$useState6[1];\n  var has_mt5_account = Boolean(mt5_login_list === null || mt5_login_list === void 0 ? void 0 : mt5_login_list.length);\n  var should_set_trading_password = Array.isArray(account_status === null || account_status === void 0 ? void 0 : account_status.status) && account_status.status.includes(platform === _Helpers_cfd_config__WEBPACK_IMPORTED_MODULE_11__.CFD_PLATFORMS.MT5 ? \'mt5_password_not_set\' : \'dxtrade_password_not_set\');\n  var is_password_error = error_type === \'PasswordError\';\n  var is_password_reset = error_type === \'PasswordReset\';\n  var is_incorrect_mt5_password_format_error = error_type === \'InvalidTradingPlatformPasswordFormat\' || error_type === \'IncorrectMT5PasswordFormat\';\n  var _React$useState7 = react__WEBPACK_IMPORTED_MODULE_0___default().useState(\'\'),\n    _React$useState8 = _slicedToArray(_React$useState7, 2),\n    new_password_value = _React$useState8[0],\n    setNewPasswordValue = _React$useState8[1];\n\n  // Usecase: Added this timeout to render the Password Change modal after the password modal is closed.\n  // It is to avoid the flickering of the modal.\n  react__WEBPACK_IMPORTED_MODULE_0___default().useEffect(function () {\n    var timeout;\n    if (is_incorrect_mt5_password_format_error) {\n      timeout = setTimeout(function () {\n        setIsMt5PasswordInvalidFormatModalVisible(true);\n      }, 500);\n    }\n    return function () {\n      return clearTimeout(timeout);\n    };\n  }, [is_incorrect_mt5_password_format_error, setIsMt5PasswordInvalidFormatModalVisible]);\n  react__WEBPACK_IMPORTED_MODULE_0___default().useEffect(function () {\n    if (is_logged_in) {\n      updateMT5Status();\n      updateAccountStatus();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  var validatePassword = function validatePassword(values) {\n    var _values$password;\n    var errors = {};\n    var max_length = platform === _Helpers_cfd_config__WEBPACK_IMPORTED_MODULE_11__.CFD_PLATFORMS.MT5 && should_set_trading_password ? 16 : 25;\n    if (!(0,_deriv_shared__WEBPACK_IMPORTED_MODULE_5__.validLength)(values.password, {\n      min: 8,\n      max: max_length\n    })) {\n      errors.password = (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_6__.localize)(\'You should enter {{min_number}}-{{max_number}} characters.\', {\n        min_number: 8,\n        max_number: max_length\n      });\n    } else if (!(0,_deriv_shared__WEBPACK_IMPORTED_MODULE_5__.validPassword)(values.password)) {\n      errors.password = (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_5__.getErrorMessages)().password();\n    } else if (platform === _Helpers_cfd_config__WEBPACK_IMPORTED_MODULE_11__.CFD_PLATFORMS.MT5 && should_set_trading_password && !(0,_deriv_shared__WEBPACK_IMPORTED_MODULE_5__.validMT5Password)(values.password)) {\n      errors.password = (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_6__.localize)(\'Please include at least 1 special character such as ( _ @ ? ! / # ) in your password.\');\n    }\n    if (((_values$password = values.password) === null || _values$password === void 0 ? void 0 : _values$password.toLowerCase()) === email.toLowerCase()) {\n      errors.password = (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_6__.localize)(\'Your password cannot be the same as your email address.\');\n    }\n    return errors;\n  };\n  var closeDialogs = function closeDialogs() {\n    setCFDSuccessDialog(false);\n    if (is_mt5_migration_modal_enabled) setMT5MigrationModalEnabled(false);\n    setMigratedMT5Accounts([]);\n    setError(false);\n  };\n  var closeModal = function closeModal() {\n    updateMT5Status();\n    closeDialogs();\n    disableCFDPasswordModal();\n  };\n  var closeOpenSuccess = function closeOpenSuccess() {\n    disableCFDPasswordModal();\n    closeDialogs();\n    if (account_type.category === _Helpers_cfd_config__WEBPACK_IMPORTED_MODULE_11__.CATEGORY.REAL) {\n      toggleAccountTransferModal();\n    }\n  };\n  var handleForgotPassword = function handleForgotPassword() {\n    closeModal();\n    var redirect_to = platform === _Helpers_cfd_config__WEBPACK_IMPORTED_MODULE_11__.CFD_PLATFORMS.MT5 ? 1 : 2;\n\n    // if account type is real convert redirect_to from 1 or 2 to 10 or 20\n    // and if account type is demo convert redirect_to from 1 or 2 to 11 or 21\n    if (account_type.category === _Helpers_cfd_config__WEBPACK_IMPORTED_MODULE_11__.CATEGORY.REAL) {\n      redirect_to = Number("".concat(redirect_to, "0"));\n    } else if (account_type.category === _Helpers_cfd_config__WEBPACK_IMPORTED_MODULE_11__.CATEGORY.DEMO) {\n      redirect_to = Number("".concat(redirect_to, "1"));\n    }\n    var password_reset_code = platform === _Helpers_cfd_config__WEBPACK_IMPORTED_MODULE_11__.CFD_PLATFORMS.MT5 ? \'trading_platform_mt5_password_reset\' : \'trading_platform_dxtrade_password_reset\';\n    _deriv_shared__WEBPACK_IMPORTED_MODULE_5__.WS.verifyEmail(email, password_reset_code, {\n      url_parameters: {\n        redirect_to: redirect_to\n      }\n    });\n    setSentEmailModalStatus(true);\n  };\n  var submitPassword = function submitPassword(values, actions) {\n    if (platform === _Helpers_cfd_config__WEBPACK_IMPORTED_MODULE_11__.CFD_PLATFORMS.MT5) {\n      submitMt5Password(_objectSpread({}, values), actions);\n    } else {\n      values.platform = platform;\n      submitCFDPassword(values, actions);\n    }\n  };\n  var should_show_password = is_cfd_password_modal_enabled && !is_cfd_success_dialog_enabled && (!has_cfd_error || is_password_error || is_password_reset);\n  var should_show_success_modals = !has_cfd_error && is_cfd_success_dialog_enabled && is_password_modal_exited;\n  var should_show_success = should_show_success_modals && !is_mt5_migration_modal_enabled;\n  var should_show_migration_success = should_show_success_modals && is_mt5_migration_modal_enabled && !is_populating_mt5_account_list && !is_mt5_migration_modal_open;\n  var should_show_sent_email_modal = is_sent_email_modal_enabled && is_password_modal_exited;\n  var should_show_password_modal = react__WEBPACK_IMPORTED_MODULE_0___default().useMemo(function () {\n    if (should_show_password) {\n      return should_set_trading_password ? true : isDesktop;\n    }\n    return false;\n  }, [should_set_trading_password, should_show_password]);\n  var should_show_password_dialog = react__WEBPACK_IMPORTED_MODULE_0___default().useMemo(function () {\n    if (should_show_password) {\n      if (!should_set_trading_password) return !isDesktop;\n    }\n    return false;\n  }, [isDesktop, should_set_trading_password, should_show_password]);\n  var success_modal_submit_label = react__WEBPACK_IMPORTED_MODULE_0___default().useMemo(function () {\n    if (account_type.category === _Helpers_cfd_config__WEBPACK_IMPORTED_MODULE_11__.CATEGORY.REAL) {\n      return (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_6__.localize)(\'Transfer now\');\n    }\n    return (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_6__.localize)(\'Continue\');\n  }, [account_type]);\n  var success_modal_cancel_label = react__WEBPACK_IMPORTED_MODULE_0___default().useMemo(function () {\n    if (is_eu_user && account_type.category === \'real\' && platform === _Helpers_cfd_config__WEBPACK_IMPORTED_MODULE_11__.CFD_PLATFORMS.MT5) {\n      return (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_6__.localize)(\'Maybe later\');\n    }\n    return \'\';\n  }, [platform, account_type, is_eu_user]);\n  var getSuccssMessage = function getSuccssMessage() {\n    var category = account_type.category,\n      type = account_type.type;\n    if (!category && !type) return \'\';\n    var category_label = category === _Helpers_cfd_config__WEBPACK_IMPORTED_MODULE_11__.CATEGORY.REAL ? (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_6__.localize)(\'real\') : (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_6__.localize)(\'demo\');\n    var type_label = \'\';\n    switch (platform) {\n      case _Helpers_cfd_config__WEBPACK_IMPORTED_MODULE_11__.CFD_PLATFORMS.MT5:\n        type_label = (0,_Stores_Modules_CFD_Helpers_cfd_config__WEBPACK_IMPORTED_MODULE_13__.getMtCompanies)(show_eu_related_content, product)[category][type].short_title;\n        break;\n      case _Helpers_cfd_config__WEBPACK_IMPORTED_MODULE_11__.CFD_PLATFORMS.DXTRADE:\n        type_label = (0,_Stores_Modules_CFD_Helpers_cfd_config__WEBPACK_IMPORTED_MODULE_13__.getDxCompanies)()[category][type].short_title;\n        break;\n      default:\n        type_label = \'\';\n        break;\n    }\n    var accountTypes = function accountTypes() {\n      if (platform === _Helpers_cfd_config__WEBPACK_IMPORTED_MODULE_11__.CFD_PLATFORMS.DXTRADE || platform === _Helpers_cfd_config__WEBPACK_IMPORTED_MODULE_11__.CFD_PLATFORMS.CTRADER) {\n        return \'\';\n      }\n      return type_label;\n    };\n    if (category === _Helpers_cfd_config__WEBPACK_IMPORTED_MODULE_11__.CATEGORY.REAL) {\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, platform === _Helpers_cfd_config__WEBPACK_IMPORTED_MODULE_11__.CFD_PLATFORMS.DXTRADE || platform === _Helpers_cfd_config__WEBPACK_IMPORTED_MODULE_11__.CFD_PLATFORMS.CTRADER ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_translations__WEBPACK_IMPORTED_MODULE_6__.Localize, {\n        i18n_default_text: "Congratulations, you have successfully created your <0/>{{category}} {{platform}} {{type}} account. To start trading, <1 />transfer funds <2 />from your Deriv account into this account.",\n        values: {\n          type: accountTypes(),\n          platform: (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_5__.getCFDPlatformLabel)(platform),\n          category: category_label\n        },\n        components: [/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("br", {\n          key: 0\n        }), platform === _Helpers_cfd_config__WEBPACK_IMPORTED_MODULE_11__.CFD_PLATFORMS.CTRADER && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("br", {\n          key: 1\n        }), platform === _Helpers_cfd_config__WEBPACK_IMPORTED_MODULE_11__.CFD_PLATFORMS.DXTRADE && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("br", {\n          key: 2\n        })]\n      }) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_translations__WEBPACK_IMPORTED_MODULE_6__.Localize, {\n        i18n_default_text: "Your Deriv MT5 {{type}} account is ready. ",\n        values: {\n          type: accountTypes()\n        }\n      }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_translations__WEBPACK_IMPORTED_MODULE_6__.Localize, {\n        i18n_default_text: "Enable trading with your first transfer."\n      })));\n    }\n    if (platform === _Helpers_cfd_config__WEBPACK_IMPORTED_MODULE_11__.CFD_PLATFORMS.MT5) {\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_translations__WEBPACK_IMPORTED_MODULE_6__.Localize, {\n        i18n_default_text: "Your demo {{deriv}} {{type}} account is ready.",\n        values: {\n          type: accountTypes(),\n          deriv: \'Deriv MT5\'\n        }\n      });\n    }\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_translations__WEBPACK_IMPORTED_MODULE_6__.Localize, {\n      i18n_default_text: "Congratulations, you have successfully created your <0/>{{category}} {{platform}} {{type}} account. ",\n      values: {\n        type: accountTypes(),\n        platform: is_eu_user ? \'\' : (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_5__.getCFDPlatformLabel)(platform),\n        category: category_label\n      },\n      components: [/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("br", {\n        key: 0\n      })]\n    });\n  };\n  var cfd_password_form = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(CFDPasswordForm, {\n    closeModal: closeModal,\n    error_type: error_type,\n    error_message: error_type !== \'InvalidTradingPlatformPasswordFormat\' ? error_message : \'\',\n    has_mt5_account: has_mt5_account,\n    form_error: form_error,\n    should_set_trading_password: should_set_trading_password,\n    validatePassword: validatePassword,\n    onForgotPassword: handleForgotPassword,\n    submitPassword: submitPassword,\n    platform: platform,\n    is_dxtrade_allowed: is_dxtrade_allowed,\n    onCancel: closeModal,\n    account_type: account_type\n  });\n  var password_modal = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_components__WEBPACK_IMPORTED_MODULE_4__.Modal, {\n    className: classnames__WEBPACK_IMPORTED_MODULE_12___default()(\'cfd-password-modal\', {\n      \'cfd-password-modal__mt5\': platform === _Helpers_cfd_config__WEBPACK_IMPORTED_MODULE_11__.CFD_PLATFORMS.MT5 && should_set_trading_password\n    }),\n    has_close_icon: true,\n    is_open: should_show_password_modal,\n    toggleModal: closeModal,\n    should_header_stick_body: true,\n    renderTitle: function renderTitle() {\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(PasswordModalHeader, {\n        should_set_trading_password: should_set_trading_password,\n        is_password_reset_error: is_password_reset,\n        platform: platform\n      });\n    },\n    onUnmount: function onUnmount() {\n      return getAccountStatus(platform);\n    },\n    onExited: function onExited() {\n      return setPasswordModalExited(true);\n    },\n    onEntered: function onEntered() {\n      return setPasswordModalExited(false);\n    },\n    width: "auto"\n  }, cfd_password_form);\n  var password_modal_mobile = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_components__WEBPACK_IMPORTED_MODULE_4__.MobileDialog, {\n    has_full_height: true,\n    portal_element_id: "modal_root",\n    visible: should_show_password_modal,\n    onClose: closeModal,\n    wrapper_classname: "cfd-password-modal cfd-password-modal__mt5",\n    renderTitle: function renderTitle() {\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(PasswordModalHeader, {\n        should_set_trading_password: should_set_trading_password,\n        is_password_reset_error: is_password_reset,\n        platform: platform\n      });\n    }\n  }, cfd_password_form);\n  var password_dialog = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_components__WEBPACK_IMPORTED_MODULE_4__.MobileDialog, {\n    has_full_height: true,\n    portal_element_id: "modal_root",\n    visible: should_show_password_dialog,\n    onClose: closeModal,\n    wrapper_classname: "cfd-password-modal",\n    renderTitle: function renderTitle() {\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(PasswordModalHeader, {\n        should_set_trading_password: should_set_trading_password,\n        has_mt5_account: has_mt5_account,\n        is_password_reset_error: is_password_reset,\n        platform: platform\n      });\n    }\n  }, cfd_password_form);\n  var is_mt5_password_format_invalid_desktop = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_components__WEBPACK_IMPORTED_MODULE_4__.Modal, {\n    className: "cfd-password-modal",\n    has_close_icon: true,\n    is_open: is_mt5_password_invalid_format_modal_visible,\n    toggleModal: closeModal,\n    should_header_stick_body: true,\n    title: (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_6__.localize)(\'Deriv MT5 latest password requirements\'),\n    width: "auto"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(CFDPasswordChange, {\n    error_type: error_type,\n    error_message: error_message,\n    form_error: form_error,\n    should_set_trading_password: should_set_trading_password,\n    setNewPasswordValue: setNewPasswordValue,\n    validatePassword: validatePassword,\n    onForgotPassword: handleForgotPassword,\n    platform: _Helpers_cfd_config__WEBPACK_IMPORTED_MODULE_11__.CFD_PLATFORMS.MT5,\n    onCancel: closeModal\n  }));\n  var is_mt5_password_format_invalid = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_components__WEBPACK_IMPORTED_MODULE_4__.MobileDialog, {\n    has_full_height: true,\n    portal_element_id: "modal_root",\n    visible: is_mt5_password_invalid_format_modal_visible,\n    onClose: closeModal,\n    wrapper_classname: "cfd-password-modal cfd-password-change__wrapper",\n    header_classname: "cfd-password-change__header",\n    renderTitle: function renderTitle() {\n      return (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_6__.localize)(\'Deriv MT5 latest password requirements\');\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(CFDPasswordChange, {\n    error_type: error_type,\n    error_message: error_message,\n    form_error: form_error,\n    should_set_trading_password: should_set_trading_password,\n    setNewPasswordValue: setNewPasswordValue,\n    validatePassword: validatePassword,\n    onForgotPassword: handleForgotPassword,\n    platform: _Helpers_cfd_config__WEBPACK_IMPORTED_MODULE_11__.CFD_PLATFORMS.MT5,\n    onCancel: closeModal\n  }));\n  var invalid_mt5_password_modal = isMobileOrTabletPortrait ? is_mt5_password_format_invalid : is_mt5_password_format_invalid_desktop;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, platform === _Helpers_cfd_config__WEBPACK_IMPORTED_MODULE_11__.CFD_PLATFORMS.MT5 && !isDesktop && password_modal_mobile, password_modal, password_dialog, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Components_success_dialog_success_dialog__WEBPACK_IMPORTED_MODULE_8__["default"], {\n    is_open: should_show_success,\n    toggleModal: closeModal,\n    onCancel: closeModal,\n    onSubmit: closeOpenSuccess,\n    classNameMessage: "cfd-password-modal__message",\n    message: getSuccssMessage(),\n    icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(CFDPasswordSuccessIcon, {\n      platform: platform,\n      type: account_type.type,\n      show_eu_related_content: show_eu_related_content,\n      product: product\n    }),\n    icon_size: "xlarge",\n    text_submit: success_modal_submit_label,\n    text_cancel: success_modal_cancel_label,\n    has_cancel: account_type.category === _Helpers_cfd_config__WEBPACK_IMPORTED_MODULE_11__.CATEGORY.REAL,\n    has_close_icon: false,\n    width: "auto",\n    is_medium_button: !isDesktop\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Components_migration_success_modal__WEBPACK_IMPORTED_MODULE_9__["default"], {\n    is_open: should_show_migration_success,\n    closeModal: closeModal\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((_deriv_account_dist_account_js_sent_email_modal__WEBPACK_IMPORTED_MODULE_2___default()), {\n    is_open: should_show_sent_email_modal,\n    identifier_title: "trading_password",\n    onClose: function onClose() {\n      return setSentEmailModalStatus(false);\n    },\n    onClickSendEmail: handleForgotPassword\n  }), is_incorrect_mt5_password_format_error && invalid_mt5_password_modal, is_mt5_password_changed_modal_visible && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(CFDPasswordChangeContent, {\n    closeModal: closeModal,\n    password_value: new_password_value\n  }));\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CFDPasswordModal);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../cfd/src/Containers/cfd-password-modal.tsx\n'
                );

                /***/
            },
    },
]);
