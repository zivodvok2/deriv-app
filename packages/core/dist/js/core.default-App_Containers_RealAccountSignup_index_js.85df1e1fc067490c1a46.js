/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self['webpackChunk'] = self['webpackChunk'] || []).push([
    ['default-App_Containers_RealAccountSignup_index_js'],
    {
        /***/ './App/Containers/RealAccountSignup/currency-selector.scss':
            /*!*****************************************************************!*\
  !*** ./App/Containers/RealAccountSignup/currency-selector.scss ***!
  \*****************************************************************/
            /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    '__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9BcHAvQ29udGFpbmVycy9SZWFsQWNjb3VudFNpZ251cC9jdXJyZW5jeS1zZWxlY3Rvci5zY3NzIiwibWFwcGluZ3MiOiI7QUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL0FwcC9Db250YWluZXJzL1JlYWxBY2NvdW50U2lnbnVwL2N1cnJlbmN5LXNlbGVjdG9yLnNjc3M/ZTU3NiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./App/Containers/RealAccountSignup/currency-selector.scss\n'
                );

                /***/
            },

        /***/ './App/Containers/RealAccountSignup/new-status-dialog-container.scss':
            /*!***************************************************************************!*\
  !*** ./App/Containers/RealAccountSignup/new-status-dialog-container.scss ***!
  \***************************************************************************/
            /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    '__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9BcHAvQ29udGFpbmVycy9SZWFsQWNjb3VudFNpZ251cC9uZXctc3RhdHVzLWRpYWxvZy1jb250YWluZXIuc2NzcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9BcHAvQ29udGFpbmVycy9SZWFsQWNjb3VudFNpZ251cC9uZXctc3RhdHVzLWRpYWxvZy1jb250YWluZXIuc2Nzcz9lYjk4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./App/Containers/RealAccountSignup/new-status-dialog-container.scss\n'
                );

                /***/
            },

        /***/ './sass/account-wizard.scss':
            /*!**********************************!*\
  !*** ./sass/account-wizard.scss ***!
  \**********************************/
            /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    '__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zYXNzL2FjY291bnQtd2l6YXJkLnNjc3MiLCJtYXBwaW5ncyI6IjtBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc2Fzcy9hY2NvdW50LXdpemFyZC5zY3NzP2RjYjQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./sass/account-wizard.scss\n'
                );

                /***/
            },

        /***/ './sass/add-or-manage.scss':
            /*!*********************************!*\
  !*** ./sass/add-or-manage.scss ***!
  \*********************************/
            /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    '__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zYXNzL2FkZC1vci1tYW5hZ2Uuc2NzcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zYXNzL2FkZC1vci1tYW5hZ2Uuc2Nzcz9kZjNkIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./sass/add-or-manage.scss\n'
                );

                /***/
            },

        /***/ './sass/change-account.scss':
            /*!**********************************!*\
  !*** ./sass/change-account.scss ***!
  \**********************************/
            /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    '__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zYXNzL2NoYW5nZS1hY2NvdW50LnNjc3MiLCJtYXBwaW5ncyI6IjtBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc2Fzcy9jaGFuZ2UtYWNjb3VudC5zY3NzPzUyMzYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./sass/change-account.scss\n'
                );

                /***/
            },

        /***/ './sass/set-currency.scss':
            /*!********************************!*\
  !*** ./sass/set-currency.scss ***!
  \********************************/
            /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    '__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zYXNzL3NldC1jdXJyZW5jeS5zY3NzIiwibWFwcGluZ3MiOiI7QUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3Nhc3Mvc2V0LWN1cnJlbmN5LnNjc3M/NzI3NyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./sass/set-currency.scss\n'
                );

                /***/
            },

        /***/ '../../account/dist/account/js/currency-radio-button-group.js':
            /*!********************************************************************!*\
  !*** ../../account/dist/account/js/currency-radio-button-group.js ***!
  \********************************************************************/
            /***/ (module, __unused_webpack_exports, __webpack_require__) => {
                eval(
                    "/*\n * ATTENTION: An \"eval-source-map\" devtool has been used.\n * This devtool is neither made for production nor for readable output files.\n * It uses \"eval()\" calls to create a separate source file with attached SourceMaps in the browser devtools.\n * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)\n * or disable the default devtool with \"devtool: false\".\n * If you are looking for production-ready output files, see mode: \"production\" (https://webpack.js.org/configuration/mode/).\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory(__webpack_require__(/*! react */ \"../../../node_modules/react/index.js\"));\n\telse {}\n})(self, (__WEBPACK_EXTERNAL_MODULE_react__) => {\nreturn /******/ (() => { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ \"./Components/currency-selector/radio-button-group.tsx\":\n/*!*************************************************************!*\\\n  !*** ./Components/currency-selector/radio-button-group.tsx ***!\n  \\*************************************************************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"default\\\": () => (__WEBPACK_DEFAULT_EXPORT__)\\n/* harmony export */ });\\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \\\"react\\\");\\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! clsx */ \\\"../../../node_modules/clsx/dist/clsx.mjs\\\");\\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-runtime */ \\\"../../../node_modules/react/jsx-runtime.js\\\");\\n\\n\\n\\n/**\\n * Wrapper component for RadioButton\\n * @name RadioButtonGroup\\n * @param {string} className - class name for styling\\n * @param {boolean} is_fiat - is fiat currency\\n * @param {boolean} is_title_enabled - is title enabled\\n * @param {number} item_count - number of items\\n * @param {string} label - label for the radio button\\n * @param {React.ReactNode} description - description for the radio button\\n * @returns {React.ReactNode} - returns a React node\\n */\\nconst RadioButtonGroup = _ref => {\\n  let {\\n    children,\\n    label,\\n    className,\\n    is_title_enabled = true,\\n    is_fiat,\\n    item_count,\\n    description\\n  } = _ref;\\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\\\"div\\\", {\\n    className: className,\\n    children: [is_title_enabled && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\\\"h2\\\", {\\n      className: (0,clsx__WEBPACK_IMPORTED_MODULE_1__[\\\"default\\\"])(`${className}--is-header`, {\\n        'currency-selector__is-crypto': !is_fiat\\n      }),\\n      children: label\\n    }), is_fiat && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\\\"div\\\", {\\n      className: \\\"currency-selector__description\\\",\\n      children: description\\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\\\"div\\\", {\\n      className: (0,clsx__WEBPACK_IMPORTED_MODULE_1__[\\\"default\\\"])('currency-list__items', {\\n        'currency-list__items__center': item_count < 4,\\n        'currency-list__items__is-fiat': is_fiat,\\n        'currency-list__items__is-crypto': !is_fiat\\n      }),\\n      children: children\\n    })]\\n  });\\n};\\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (RadioButtonGroup);//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9Db21wb25lbnRzL2N1cnJlbmN5LXNlbGVjdG9yL3JhZGlvLWJ1dHRvbi1ncm91cC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQUE7QUFXQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFRQTtBQVBBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFHQTtBQUNBO0FBQ0E7QUFBQTtBQUVBO0FBR0E7QUFBQTtBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBRUE7QUFDQTtBQUdBO0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uL0NvbXBvbmVudHMvY3VycmVuY3ktc2VsZWN0b3IvcmFkaW8tYnV0dG9uLWdyb3VwLnRzeD9jZjIzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgY2xzeCBmcm9tICdjbHN4JztcblxuZXhwb3J0IHR5cGUgVFJhZGlvQnV0dG9uR3JvdXAgPSB7XG4gICAgY2xhc3NOYW1lOiBzdHJpbmc7XG4gICAgaXNfZmlhdD86IGJvb2xlYW47XG4gICAgaXNfdGl0bGVfZW5hYmxlZD86IGJvb2xlYW47XG4gICAgaXRlbV9jb3VudDogbnVtYmVyO1xuICAgIGxhYmVsPzogc3RyaW5nO1xuICAgIGRlc2NyaXB0aW9uPzogUmVhY3QuUmVhY3ROb2RlO1xufTtcblxuLyoqXG4gKiBXcmFwcGVyIGNvbXBvbmVudCBmb3IgUmFkaW9CdXR0b25cbiAqIEBuYW1lIFJhZGlvQnV0dG9uR3JvdXBcbiAqIEBwYXJhbSB7c3RyaW5nfSBjbGFzc05hbWUgLSBjbGFzcyBuYW1lIGZvciBzdHlsaW5nXG4gKiBAcGFyYW0ge2Jvb2xlYW59IGlzX2ZpYXQgLSBpcyBmaWF0IGN1cnJlbmN5XG4gKiBAcGFyYW0ge2Jvb2xlYW59IGlzX3RpdGxlX2VuYWJsZWQgLSBpcyB0aXRsZSBlbmFibGVkXG4gKiBAcGFyYW0ge251bWJlcn0gaXRlbV9jb3VudCAtIG51bWJlciBvZiBpdGVtc1xuICogQHBhcmFtIHtzdHJpbmd9IGxhYmVsIC0gbGFiZWwgZm9yIHRoZSByYWRpbyBidXR0b25cbiAqIEBwYXJhbSB7UmVhY3QuUmVhY3ROb2RlfSBkZXNjcmlwdGlvbiAtIGRlc2NyaXB0aW9uIGZvciB0aGUgcmFkaW8gYnV0dG9uXG4gKiBAcmV0dXJucyB7UmVhY3QuUmVhY3ROb2RlfSAtIHJldHVybnMgYSBSZWFjdCBub2RlXG4gKi9cbmNvbnN0IFJhZGlvQnV0dG9uR3JvdXAgPSAoe1xuICAgIGNoaWxkcmVuLFxuICAgIGxhYmVsLFxuICAgIGNsYXNzTmFtZSxcbiAgICBpc190aXRsZV9lbmFibGVkID0gdHJ1ZSxcbiAgICBpc19maWF0LFxuICAgIGl0ZW1fY291bnQsXG4gICAgZGVzY3JpcHRpb24sXG59OiBSZWFjdC5Qcm9wc1dpdGhDaGlsZHJlbjxUUmFkaW9CdXR0b25Hcm91cD4pID0+IHtcbiAgICByZXR1cm4gKFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT17Y2xhc3NOYW1lfT5cbiAgICAgICAgICAgIHtpc190aXRsZV9lbmFibGVkICYmIChcbiAgICAgICAgICAgICAgICA8aDJcbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPXtjbHN4KGAke2NsYXNzTmFtZX0tLWlzLWhlYWRlcmAsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICdjdXJyZW5jeS1zZWxlY3Rvcl9faXMtY3J5cHRvJzogIWlzX2ZpYXQsXG4gICAgICAgICAgICAgICAgICAgIH0pfVxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAge2xhYmVsfVxuICAgICAgICAgICAgICAgIDwvaDI+XG4gICAgICAgICAgICApfVxuICAgICAgICAgICAge2lzX2ZpYXQgJiYgPGRpdiBjbGFzc05hbWU9J2N1cnJlbmN5LXNlbGVjdG9yX19kZXNjcmlwdGlvbic+e2Rlc2NyaXB0aW9ufTwvZGl2Pn1cbiAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9e2Nsc3goJ2N1cnJlbmN5LWxpc3RfX2l0ZW1zJywge1xuICAgICAgICAgICAgICAgICAgICAnY3VycmVuY3ktbGlzdF9faXRlbXNfX2NlbnRlcic6IGl0ZW1fY291bnQgPCA0LFxuICAgICAgICAgICAgICAgICAgICAnY3VycmVuY3ktbGlzdF9faXRlbXNfX2lzLWZpYXQnOiBpc19maWF0LFxuICAgICAgICAgICAgICAgICAgICAnY3VycmVuY3ktbGlzdF9faXRlbXNfX2lzLWNyeXB0byc6ICFpc19maWF0LFxuICAgICAgICAgICAgICAgIH0pfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIHtjaGlsZHJlbn1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgUmFkaW9CdXR0b25Hcm91cDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///./Components/currency-selector/radio-button-group.tsx\\n\");\n\n/***/ }),\n\n/***/ \"../../../node_modules/object-assign/index.js\":\n/*!****************************************************!*\\\n  !*** ../../../node_modules/object-assign/index.js ***!\n  \\****************************************************/\n/***/ ((module) => {\n\neval(\"/*\\nobject-assign\\n(c) Sindre Sorhus\\n@license MIT\\n*/\\n\\n\\n/* eslint-disable no-unused-vars */\\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\\n\\nfunction toObject(val) {\\n\\tif (val === null || val === undefined) {\\n\\t\\tthrow new TypeError('Object.assign cannot be called with null or undefined');\\n\\t}\\n\\n\\treturn Object(val);\\n}\\n\\nfunction shouldUseNative() {\\n\\ttry {\\n\\t\\tif (!Object.assign) {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\t// Detect buggy property enumeration order in older V8 versions.\\n\\n\\t\\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\\n\\t\\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\\n\\t\\ttest1[5] = 'de';\\n\\t\\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\\n\\t\\tvar test2 = {};\\n\\t\\tfor (var i = 0; i < 10; i++) {\\n\\t\\t\\ttest2['_' + String.fromCharCode(i)] = i;\\n\\t\\t}\\n\\t\\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\\n\\t\\t\\treturn test2[n];\\n\\t\\t});\\n\\t\\tif (order2.join('') !== '0123456789') {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\\n\\t\\tvar test3 = {};\\n\\t\\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\\n\\t\\t\\ttest3[letter] = letter;\\n\\t\\t});\\n\\t\\tif (Object.keys(Object.assign({}, test3)).join('') !==\\n\\t\\t\\t\\t'abcdefghijklmnopqrst') {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\treturn true;\\n\\t} catch (err) {\\n\\t\\t// We don't expect any of the above to throw, but better to be safe.\\n\\t\\treturn false;\\n\\t}\\n}\\n\\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\\n\\tvar from;\\n\\tvar to = toObject(target);\\n\\tvar symbols;\\n\\n\\tfor (var s = 1; s < arguments.length; s++) {\\n\\t\\tfrom = Object(arguments[s]);\\n\\n\\t\\tfor (var key in from) {\\n\\t\\t\\tif (hasOwnProperty.call(from, key)) {\\n\\t\\t\\t\\tto[key] = from[key];\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tif (getOwnPropertySymbols) {\\n\\t\\t\\tsymbols = getOwnPropertySymbols(from);\\n\\t\\t\\tfor (var i = 0; i < symbols.length; i++) {\\n\\t\\t\\t\\tif (propIsEnumerable.call(from, symbols[i])) {\\n\\t\\t\\t\\t\\tto[symbols[i]] = from[symbols[i]];\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\treturn to;\\n};\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL29iamVjdC1hc3NpZ24vaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL29iamVjdC1hc3NpZ24vaW5kZXguanM/M2UxMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxub2JqZWN0LWFzc2lnblxuKGMpIFNpbmRyZSBTb3JodXNcbkBsaWNlbnNlIE1JVFxuKi9cblxuJ3VzZSBzdHJpY3QnO1xuLyogZXNsaW50LWRpc2FibGUgbm8tdW51c2VkLXZhcnMgKi9cbnZhciBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xudmFyIGhhc093blByb3BlcnR5ID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbnZhciBwcm9wSXNFbnVtZXJhYmxlID0gT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZTtcblxuZnVuY3Rpb24gdG9PYmplY3QodmFsKSB7XG5cdGlmICh2YWwgPT09IG51bGwgfHwgdmFsID09PSB1bmRlZmluZWQpIHtcblx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKCdPYmplY3QuYXNzaWduIGNhbm5vdCBiZSBjYWxsZWQgd2l0aCBudWxsIG9yIHVuZGVmaW5lZCcpO1xuXHR9XG5cblx0cmV0dXJuIE9iamVjdCh2YWwpO1xufVxuXG5mdW5jdGlvbiBzaG91bGRVc2VOYXRpdmUoKSB7XG5cdHRyeSB7XG5cdFx0aWYgKCFPYmplY3QuYXNzaWduKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gRGV0ZWN0IGJ1Z2d5IHByb3BlcnR5IGVudW1lcmF0aW9uIG9yZGVyIGluIG9sZGVyIFY4IHZlcnNpb25zLlxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9NDExOFxuXHRcdHZhciB0ZXN0MSA9IG5ldyBTdHJpbmcoJ2FiYycpOyAgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXctd3JhcHBlcnNcblx0XHR0ZXN0MVs1XSA9ICdkZSc7XG5cdFx0aWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QxKVswXSA9PT0gJzUnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MiA9IHt9O1xuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgMTA7IGkrKykge1xuXHRcdFx0dGVzdDJbJ18nICsgU3RyaW5nLmZyb21DaGFyQ29kZShpKV0gPSBpO1xuXHRcdH1cblx0XHR2YXIgb3JkZXIyID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDIpLm1hcChmdW5jdGlvbiAobikge1xuXHRcdFx0cmV0dXJuIHRlc3QyW25dO1xuXHRcdH0pO1xuXHRcdGlmIChvcmRlcjIuam9pbignJykgIT09ICcwMTIzNDU2Nzg5Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcblx0XHR2YXIgdGVzdDMgPSB7fTtcblx0XHQnYWJjZGVmZ2hpamtsbW5vcHFyc3QnLnNwbGl0KCcnKS5mb3JFYWNoKGZ1bmN0aW9uIChsZXR0ZXIpIHtcblx0XHRcdHRlc3QzW2xldHRlcl0gPSBsZXR0ZXI7XG5cdFx0fSk7XG5cdFx0aWYgKE9iamVjdC5rZXlzKE9iamVjdC5hc3NpZ24oe30sIHRlc3QzKSkuam9pbignJykgIT09XG5cdFx0XHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdHJ1ZTtcblx0fSBjYXRjaCAoZXJyKSB7XG5cdFx0Ly8gV2UgZG9uJ3QgZXhwZWN0IGFueSBvZiB0aGUgYWJvdmUgdG8gdGhyb3csIGJ1dCBiZXR0ZXIgdG8gYmUgc2FmZS5cblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzaG91bGRVc2VOYXRpdmUoKSA/IE9iamVjdC5hc3NpZ24gOiBmdW5jdGlvbiAodGFyZ2V0LCBzb3VyY2UpIHtcblx0dmFyIGZyb207XG5cdHZhciB0byA9IHRvT2JqZWN0KHRhcmdldCk7XG5cdHZhciBzeW1ib2xzO1xuXG5cdGZvciAodmFyIHMgPSAxOyBzIDwgYXJndW1lbnRzLmxlbmd0aDsgcysrKSB7XG5cdFx0ZnJvbSA9IE9iamVjdChhcmd1bWVudHNbc10pO1xuXG5cdFx0Zm9yICh2YXIga2V5IGluIGZyb20pIHtcblx0XHRcdGlmIChoYXNPd25Qcm9wZXJ0eS5jYWxsKGZyb20sIGtleSkpIHtcblx0XHRcdFx0dG9ba2V5XSA9IGZyb21ba2V5XTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRpZiAoZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7XG5cdFx0XHRzeW1ib2xzID0gZ2V0T3duUHJvcGVydHlTeW1ib2xzKGZyb20pO1xuXHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBzeW1ib2xzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRcdGlmIChwcm9wSXNFbnVtZXJhYmxlLmNhbGwoZnJvbSwgc3ltYm9sc1tpXSkpIHtcblx0XHRcdFx0XHR0b1tzeW1ib2xzW2ldXSA9IGZyb21bc3ltYm9sc1tpXV07XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gdG87XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///../../../node_modules/object-assign/index.js\\n\");\n\n/***/ }),\n\n/***/ \"../../../node_modules/react/cjs/react-jsx-runtime.development.js\":\n/*!************************************************************************!*\\\n  !*** ../../../node_modules/react/cjs/react-jsx-runtime.development.js ***!\n  \\************************************************************************/\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\neval(\"/** @license React v17.0.2\\n * react-jsx-runtime.development.js\\n *\\n * Copyright (c) Facebook, Inc. and its affiliates.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n\\n\\n\\nif (true) {\\n  (function() {\\n'use strict';\\n\\nvar React = __webpack_require__(/*! react */ \\\"react\\\");\\nvar _assign = __webpack_require__(/*! object-assign */ \\\"../../../node_modules/object-assign/index.js\\\");\\n\\n// ATTENTION\\n// When adding new symbols to this file,\\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\\n// nor polyfill, then a plain number is used for performance.\\nvar REACT_ELEMENT_TYPE = 0xeac7;\\nvar REACT_PORTAL_TYPE = 0xeaca;\\nexports.Fragment = 0xeacb;\\nvar REACT_STRICT_MODE_TYPE = 0xeacc;\\nvar REACT_PROFILER_TYPE = 0xead2;\\nvar REACT_PROVIDER_TYPE = 0xeacd;\\nvar REACT_CONTEXT_TYPE = 0xeace;\\nvar REACT_FORWARD_REF_TYPE = 0xead0;\\nvar REACT_SUSPENSE_TYPE = 0xead1;\\nvar REACT_SUSPENSE_LIST_TYPE = 0xead8;\\nvar REACT_MEMO_TYPE = 0xead3;\\nvar REACT_LAZY_TYPE = 0xead4;\\nvar REACT_BLOCK_TYPE = 0xead9;\\nvar REACT_SERVER_BLOCK_TYPE = 0xeada;\\nvar REACT_FUNDAMENTAL_TYPE = 0xead5;\\nvar REACT_SCOPE_TYPE = 0xead7;\\nvar REACT_OPAQUE_ID_TYPE = 0xeae0;\\nvar REACT_DEBUG_TRACING_MODE_TYPE = 0xeae1;\\nvar REACT_OFFSCREEN_TYPE = 0xeae2;\\nvar REACT_LEGACY_HIDDEN_TYPE = 0xeae3;\\n\\nif (typeof Symbol === 'function' && Symbol.for) {\\n  var symbolFor = Symbol.for;\\n  REACT_ELEMENT_TYPE = symbolFor('react.element');\\n  REACT_PORTAL_TYPE = symbolFor('react.portal');\\n  exports.Fragment = symbolFor('react.fragment');\\n  REACT_STRICT_MODE_TYPE = symbolFor('react.strict_mode');\\n  REACT_PROFILER_TYPE = symbolFor('react.profiler');\\n  REACT_PROVIDER_TYPE = symbolFor('react.provider');\\n  REACT_CONTEXT_TYPE = symbolFor('react.context');\\n  REACT_FORWARD_REF_TYPE = symbolFor('react.forward_ref');\\n  REACT_SUSPENSE_TYPE = symbolFor('react.suspense');\\n  REACT_SUSPENSE_LIST_TYPE = symbolFor('react.suspense_list');\\n  REACT_MEMO_TYPE = symbolFor('react.memo');\\n  REACT_LAZY_TYPE = symbolFor('react.lazy');\\n  REACT_BLOCK_TYPE = symbolFor('react.block');\\n  REACT_SERVER_BLOCK_TYPE = symbolFor('react.server.block');\\n  REACT_FUNDAMENTAL_TYPE = symbolFor('react.fundamental');\\n  REACT_SCOPE_TYPE = symbolFor('react.scope');\\n  REACT_OPAQUE_ID_TYPE = symbolFor('react.opaque.id');\\n  REACT_DEBUG_TRACING_MODE_TYPE = symbolFor('react.debug_trace_mode');\\n  REACT_OFFSCREEN_TYPE = symbolFor('react.offscreen');\\n  REACT_LEGACY_HIDDEN_TYPE = symbolFor('react.legacy_hidden');\\n}\\n\\nvar MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\\nfunction getIteratorFn(maybeIterable) {\\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\\n    return null;\\n  }\\n\\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\\n\\n  if (typeof maybeIterator === 'function') {\\n    return maybeIterator;\\n  }\\n\\n  return null;\\n}\\n\\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\\n\\nfunction error(format) {\\n  {\\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\\n      args[_key2 - 1] = arguments[_key2];\\n    }\\n\\n    printWarning('error', format, args);\\n  }\\n}\\n\\nfunction printWarning(level, format, args) {\\n  // When changing this logic, you might want to also\\n  // update consoleWithStackDev.www.js as well.\\n  {\\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\\n\\n    if (stack !== '') {\\n      format += '%s';\\n      args = args.concat([stack]);\\n    }\\n\\n    var argsWithFormat = args.map(function (item) {\\n      return '' + item;\\n    }); // Careful: RN currently depends on this prefix\\n\\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\\n    // breaks IE9: https://github.com/facebook/react/issues/13610\\n    // eslint-disable-next-line react-internal/no-production-logging\\n\\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\\n  }\\n}\\n\\n// Filter certain DOM attributes (e.g. src, href) if their values are empty strings.\\n\\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\\n\\nfunction isValidElementType(type) {\\n  if (typeof type === 'string' || typeof type === 'function') {\\n    return true;\\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\\n\\n\\n  if (type === exports.Fragment || type === REACT_PROFILER_TYPE || type === REACT_DEBUG_TRACING_MODE_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || type === REACT_LEGACY_HIDDEN_TYPE || enableScopeAPI ) {\\n    return true;\\n  }\\n\\n  if (typeof type === 'object' && type !== null) {\\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_BLOCK_TYPE || type[0] === REACT_SERVER_BLOCK_TYPE) {\\n      return true;\\n    }\\n  }\\n\\n  return false;\\n}\\n\\nfunction getWrappedName(outerType, innerType, wrapperName) {\\n  var functionName = innerType.displayName || innerType.name || '';\\n  return outerType.displayName || (functionName !== '' ? wrapperName + \\\"(\\\" + functionName + \\\")\\\" : wrapperName);\\n}\\n\\nfunction getContextName(type) {\\n  return type.displayName || 'Context';\\n}\\n\\nfunction getComponentName(type) {\\n  if (type == null) {\\n    // Host root, text node or just invalid type.\\n    return null;\\n  }\\n\\n  {\\n    if (typeof type.tag === 'number') {\\n      error('Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');\\n    }\\n  }\\n\\n  if (typeof type === 'function') {\\n    return type.displayName || type.name || null;\\n  }\\n\\n  if (typeof type === 'string') {\\n    return type;\\n  }\\n\\n  switch (type) {\\n    case exports.Fragment:\\n      return 'Fragment';\\n\\n    case REACT_PORTAL_TYPE:\\n      return 'Portal';\\n\\n    case REACT_PROFILER_TYPE:\\n      return 'Profiler';\\n\\n    case REACT_STRICT_MODE_TYPE:\\n      return 'StrictMode';\\n\\n    case REACT_SUSPENSE_TYPE:\\n      return 'Suspense';\\n\\n    case REACT_SUSPENSE_LIST_TYPE:\\n      return 'SuspenseList';\\n  }\\n\\n  if (typeof type === 'object') {\\n    switch (type.$$typeof) {\\n      case REACT_CONTEXT_TYPE:\\n        var context = type;\\n        return getContextName(context) + '.Consumer';\\n\\n      case REACT_PROVIDER_TYPE:\\n        var provider = type;\\n        return getContextName(provider._context) + '.Provider';\\n\\n      case REACT_FORWARD_REF_TYPE:\\n        return getWrappedName(type, type.render, 'ForwardRef');\\n\\n      case REACT_MEMO_TYPE:\\n        return getComponentName(type.type);\\n\\n      case REACT_BLOCK_TYPE:\\n        return getComponentName(type._render);\\n\\n      case REACT_LAZY_TYPE:\\n        {\\n          var lazyComponent = type;\\n          var payload = lazyComponent._payload;\\n          var init = lazyComponent._init;\\n\\n          try {\\n            return getComponentName(init(payload));\\n          } catch (x) {\\n            return null;\\n          }\\n        }\\n    }\\n  }\\n\\n  return null;\\n}\\n\\n// Helpers to patch console.logs to avoid logging during side-effect free\\n// replaying on render function. This currently only patches the object\\n// lazily which won't cover if the log function was extracted eagerly.\\n// We could also eagerly patch the method.\\nvar disabledDepth = 0;\\nvar prevLog;\\nvar prevInfo;\\nvar prevWarn;\\nvar prevError;\\nvar prevGroup;\\nvar prevGroupCollapsed;\\nvar prevGroupEnd;\\n\\nfunction disabledLog() {}\\n\\ndisabledLog.__reactDisabledLog = true;\\nfunction disableLogs() {\\n  {\\n    if (disabledDepth === 0) {\\n      /* eslint-disable react-internal/no-production-logging */\\n      prevLog = console.log;\\n      prevInfo = console.info;\\n      prevWarn = console.warn;\\n      prevError = console.error;\\n      prevGroup = console.group;\\n      prevGroupCollapsed = console.groupCollapsed;\\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\\n\\n      var props = {\\n        configurable: true,\\n        enumerable: true,\\n        value: disabledLog,\\n        writable: true\\n      }; // $FlowFixMe Flow thinks console is immutable.\\n\\n      Object.defineProperties(console, {\\n        info: props,\\n        log: props,\\n        warn: props,\\n        error: props,\\n        group: props,\\n        groupCollapsed: props,\\n        groupEnd: props\\n      });\\n      /* eslint-enable react-internal/no-production-logging */\\n    }\\n\\n    disabledDepth++;\\n  }\\n}\\nfunction reenableLogs() {\\n  {\\n    disabledDepth--;\\n\\n    if (disabledDepth === 0) {\\n      /* eslint-disable react-internal/no-production-logging */\\n      var props = {\\n        configurable: true,\\n        enumerable: true,\\n        writable: true\\n      }; // $FlowFixMe Flow thinks console is immutable.\\n\\n      Object.defineProperties(console, {\\n        log: _assign({}, props, {\\n          value: prevLog\\n        }),\\n        info: _assign({}, props, {\\n          value: prevInfo\\n        }),\\n        warn: _assign({}, props, {\\n          value: prevWarn\\n        }),\\n        error: _assign({}, props, {\\n          value: prevError\\n        }),\\n        group: _assign({}, props, {\\n          value: prevGroup\\n        }),\\n        groupCollapsed: _assign({}, props, {\\n          value: prevGroupCollapsed\\n        }),\\n        groupEnd: _assign({}, props, {\\n          value: prevGroupEnd\\n        })\\n      });\\n      /* eslint-enable react-internal/no-production-logging */\\n    }\\n\\n    if (disabledDepth < 0) {\\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\\n    }\\n  }\\n}\\n\\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\\nvar prefix;\\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\\n  {\\n    if (prefix === undefined) {\\n      // Extract the VM specific prefix used by each line.\\n      try {\\n        throw Error();\\n      } catch (x) {\\n        var match = x.stack.trim().match(/\\\\n( *(at )?)/);\\n        prefix = match && match[1] || '';\\n      }\\n    } // We use the prefix to ensure our stacks line up with native stack frames.\\n\\n\\n    return '\\\\n' + prefix + name;\\n  }\\n}\\nvar reentry = false;\\nvar componentFrameCache;\\n\\n{\\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\\n  componentFrameCache = new PossiblyWeakMap();\\n}\\n\\nfunction describeNativeComponentFrame(fn, construct) {\\n  // If something asked for a stack inside a fake render, it should get ignored.\\n  if (!fn || reentry) {\\n    return '';\\n  }\\n\\n  {\\n    var frame = componentFrameCache.get(fn);\\n\\n    if (frame !== undefined) {\\n      return frame;\\n    }\\n  }\\n\\n  var control;\\n  reentry = true;\\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\\n\\n  Error.prepareStackTrace = undefined;\\n  var previousDispatcher;\\n\\n  {\\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\\n    // for warnings.\\n\\n    ReactCurrentDispatcher.current = null;\\n    disableLogs();\\n  }\\n\\n  try {\\n    // This should throw.\\n    if (construct) {\\n      // Something should be setting the props in the constructor.\\n      var Fake = function () {\\n        throw Error();\\n      }; // $FlowFixMe\\n\\n\\n      Object.defineProperty(Fake.prototype, 'props', {\\n        set: function () {\\n          // We use a throwing setter instead of frozen or non-writable props\\n          // because that won't throw in a non-strict mode function.\\n          throw Error();\\n        }\\n      });\\n\\n      if (typeof Reflect === 'object' && Reflect.construct) {\\n        // We construct a different control for this case to include any extra\\n        // frames added by the construct call.\\n        try {\\n          Reflect.construct(Fake, []);\\n        } catch (x) {\\n          control = x;\\n        }\\n\\n        Reflect.construct(fn, [], Fake);\\n      } else {\\n        try {\\n          Fake.call();\\n        } catch (x) {\\n          control = x;\\n        }\\n\\n        fn.call(Fake.prototype);\\n      }\\n    } else {\\n      try {\\n        throw Error();\\n      } catch (x) {\\n        control = x;\\n      }\\n\\n      fn();\\n    }\\n  } catch (sample) {\\n    // This is inlined manually because closure doesn't do it for us.\\n    if (sample && control && typeof sample.stack === 'string') {\\n      // This extracts the first frame from the sample that isn't also in the control.\\n      // Skipping one frame that we assume is the frame that calls the two.\\n      var sampleLines = sample.stack.split('\\\\n');\\n      var controlLines = control.stack.split('\\\\n');\\n      var s = sampleLines.length - 1;\\n      var c = controlLines.length - 1;\\n\\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\\n        // We expect at least one stack frame to be shared.\\n        // Typically this will be the root most one. However, stack frames may be\\n        // cut off due to maximum stack limits. In this case, one maybe cut off\\n        // earlier than the other. We assume that the sample is longer or the same\\n        // and there for cut off earlier. So we should find the root most frame in\\n        // the sample somewhere in the control.\\n        c--;\\n      }\\n\\n      for (; s >= 1 && c >= 0; s--, c--) {\\n        // Next we find the first one that isn't the same which should be the\\n        // frame that called our sample function and the control.\\n        if (sampleLines[s] !== controlLines[c]) {\\n          // In V8, the first line is describing the message but other VMs don't.\\n          // If we're about to return the first line, and the control is also on the same\\n          // line, that's a pretty good indicator that our sample threw at same line as\\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\\n          // This can happen if you passed a class to function component, or non-function.\\n          if (s !== 1 || c !== 1) {\\n            do {\\n              s--;\\n              c--; // We may still have similar intermediate frames from the construct call.\\n              // The next one that isn't the same should be our match though.\\n\\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\\n                // V8 adds a \\\"new\\\" prefix for native classes. Let's remove it to make it prettier.\\n                var _frame = '\\\\n' + sampleLines[s].replace(' at new ', ' at ');\\n\\n                {\\n                  if (typeof fn === 'function') {\\n                    componentFrameCache.set(fn, _frame);\\n                  }\\n                } // Return the line we found.\\n\\n\\n                return _frame;\\n              }\\n            } while (s >= 1 && c >= 0);\\n          }\\n\\n          break;\\n        }\\n      }\\n    }\\n  } finally {\\n    reentry = false;\\n\\n    {\\n      ReactCurrentDispatcher.current = previousDispatcher;\\n      reenableLogs();\\n    }\\n\\n    Error.prepareStackTrace = previousPrepareStackTrace;\\n  } // Fallback to just using the name if we couldn't make it throw.\\n\\n\\n  var name = fn ? fn.displayName || fn.name : '';\\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\\n\\n  {\\n    if (typeof fn === 'function') {\\n      componentFrameCache.set(fn, syntheticFrame);\\n    }\\n  }\\n\\n  return syntheticFrame;\\n}\\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\\n  {\\n    return describeNativeComponentFrame(fn, false);\\n  }\\n}\\n\\nfunction shouldConstruct(Component) {\\n  var prototype = Component.prototype;\\n  return !!(prototype && prototype.isReactComponent);\\n}\\n\\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\\n\\n  if (type == null) {\\n    return '';\\n  }\\n\\n  if (typeof type === 'function') {\\n    {\\n      return describeNativeComponentFrame(type, shouldConstruct(type));\\n    }\\n  }\\n\\n  if (typeof type === 'string') {\\n    return describeBuiltInComponentFrame(type);\\n  }\\n\\n  switch (type) {\\n    case REACT_SUSPENSE_TYPE:\\n      return describeBuiltInComponentFrame('Suspense');\\n\\n    case REACT_SUSPENSE_LIST_TYPE:\\n      return describeBuiltInComponentFrame('SuspenseList');\\n  }\\n\\n  if (typeof type === 'object') {\\n    switch (type.$$typeof) {\\n      case REACT_FORWARD_REF_TYPE:\\n        return describeFunctionComponentFrame(type.render);\\n\\n      case REACT_MEMO_TYPE:\\n        // Memo may contain any component type so we recursively resolve it.\\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\\n\\n      case REACT_BLOCK_TYPE:\\n        return describeFunctionComponentFrame(type._render);\\n\\n      case REACT_LAZY_TYPE:\\n        {\\n          var lazyComponent = type;\\n          var payload = lazyComponent._payload;\\n          var init = lazyComponent._init;\\n\\n          try {\\n            // Lazy may contain any component type so we recursively resolve it.\\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\\n          } catch (x) {}\\n        }\\n    }\\n  }\\n\\n  return '';\\n}\\n\\nvar loggedTypeFailures = {};\\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\\n\\nfunction setCurrentlyValidatingElement(element) {\\n  {\\n    if (element) {\\n      var owner = element._owner;\\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\\n    } else {\\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\\n    }\\n  }\\n}\\n\\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\\n  {\\n    // $FlowFixMe This is okay but Flow doesn't know it.\\n    var has = Function.call.bind(Object.prototype.hasOwnProperty);\\n\\n    for (var typeSpecName in typeSpecs) {\\n      if (has(typeSpecs, typeSpecName)) {\\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\\n        // fail the render phase where it didn't fail before. So we log it.\\n        // After these have been cleaned up, we'll let them throw.\\n\\n        try {\\n          // This is intentionally an invariant that gets caught. It's the same\\n          // behavior as without this statement except with a better message.\\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\\n            err.name = 'Invariant Violation';\\n            throw err;\\n          }\\n\\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\\n        } catch (ex) {\\n          error$1 = ex;\\n        }\\n\\n        if (error$1 && !(error$1 instanceof Error)) {\\n          setCurrentlyValidatingElement(element);\\n\\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\\n\\n          setCurrentlyValidatingElement(null);\\n        }\\n\\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\\n          // Only monitor this failure once because there tends to be a lot of the\\n          // same error.\\n          loggedTypeFailures[error$1.message] = true;\\n          setCurrentlyValidatingElement(element);\\n\\n          error('Failed %s type: %s', location, error$1.message);\\n\\n          setCurrentlyValidatingElement(null);\\n        }\\n      }\\n    }\\n  }\\n}\\n\\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\\nvar RESERVED_PROPS = {\\n  key: true,\\n  ref: true,\\n  __self: true,\\n  __source: true\\n};\\nvar specialPropKeyWarningShown;\\nvar specialPropRefWarningShown;\\nvar didWarnAboutStringRefs;\\n\\n{\\n  didWarnAboutStringRefs = {};\\n}\\n\\nfunction hasValidRef(config) {\\n  {\\n    if (hasOwnProperty.call(config, 'ref')) {\\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\\n\\n      if (getter && getter.isReactWarning) {\\n        return false;\\n      }\\n    }\\n  }\\n\\n  return config.ref !== undefined;\\n}\\n\\nfunction hasValidKey(config) {\\n  {\\n    if (hasOwnProperty.call(config, 'key')) {\\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\\n\\n      if (getter && getter.isReactWarning) {\\n        return false;\\n      }\\n    }\\n  }\\n\\n  return config.key !== undefined;\\n}\\n\\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\\n  {\\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\\n      var componentName = getComponentName(ReactCurrentOwner.current.type);\\n\\n      if (!didWarnAboutStringRefs[componentName]) {\\n        error('Component \\\"%s\\\" contains the string ref \\\"%s\\\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentName(ReactCurrentOwner.current.type), config.ref);\\n\\n        didWarnAboutStringRefs[componentName] = true;\\n      }\\n    }\\n  }\\n}\\n\\nfunction defineKeyPropWarningGetter(props, displayName) {\\n  {\\n    var warnAboutAccessingKey = function () {\\n      if (!specialPropKeyWarningShown) {\\n        specialPropKeyWarningShown = true;\\n\\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\\n      }\\n    };\\n\\n    warnAboutAccessingKey.isReactWarning = true;\\n    Object.defineProperty(props, 'key', {\\n      get: warnAboutAccessingKey,\\n      configurable: true\\n    });\\n  }\\n}\\n\\nfunction defineRefPropWarningGetter(props, displayName) {\\n  {\\n    var warnAboutAccessingRef = function () {\\n      if (!specialPropRefWarningShown) {\\n        specialPropRefWarningShown = true;\\n\\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\\n      }\\n    };\\n\\n    warnAboutAccessingRef.isReactWarning = true;\\n    Object.defineProperty(props, 'ref', {\\n      get: warnAboutAccessingRef,\\n      configurable: true\\n    });\\n  }\\n}\\n/**\\n * Factory method to create a new React element. This no longer adheres to\\n * the class pattern, so do not use new to call it. Also, instanceof check\\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\\n * if something is a React Element.\\n *\\n * @param {*} type\\n * @param {*} props\\n * @param {*} key\\n * @param {string|object} ref\\n * @param {*} owner\\n * @param {*} self A *temporary* helper to detect places where `this` is\\n * different from the `owner` when React.createElement is called, so that we\\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\\n * functions, and as long as `this` and owner are the same, there will be no\\n * change in behavior.\\n * @param {*} source An annotation object (added by a transpiler or otherwise)\\n * indicating filename, line number, and/or other information.\\n * @internal\\n */\\n\\n\\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\\n  var element = {\\n    // This tag allows us to uniquely identify this as a React Element\\n    $$typeof: REACT_ELEMENT_TYPE,\\n    // Built-in properties that belong on the element\\n    type: type,\\n    key: key,\\n    ref: ref,\\n    props: props,\\n    // Record the component responsible for creating this element.\\n    _owner: owner\\n  };\\n\\n  {\\n    // The validation flag is currently mutative. We put it on\\n    // an external backing store so that we can freeze the whole object.\\n    // This can be replaced with a WeakMap once they are implemented in\\n    // commonly used development environments.\\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\\n    // the validation flag non-enumerable (where possible, which should\\n    // include every environment we run tests in), so the test framework\\n    // ignores it.\\n\\n    Object.defineProperty(element._store, 'validated', {\\n      configurable: false,\\n      enumerable: false,\\n      writable: true,\\n      value: false\\n    }); // self and source are DEV only properties.\\n\\n    Object.defineProperty(element, '_self', {\\n      configurable: false,\\n      enumerable: false,\\n      writable: false,\\n      value: self\\n    }); // Two elements created in two different places should be considered\\n    // equal for testing purposes and therefore we hide it from enumeration.\\n\\n    Object.defineProperty(element, '_source', {\\n      configurable: false,\\n      enumerable: false,\\n      writable: false,\\n      value: source\\n    });\\n\\n    if (Object.freeze) {\\n      Object.freeze(element.props);\\n      Object.freeze(element);\\n    }\\n  }\\n\\n  return element;\\n};\\n/**\\n * https://github.com/reactjs/rfcs/pull/107\\n * @param {*} type\\n * @param {object} props\\n * @param {string} key\\n */\\n\\nfunction jsxDEV(type, config, maybeKey, source, self) {\\n  {\\n    var propName; // Reserved names are extracted\\n\\n    var props = {};\\n    var key = null;\\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\\n    // issue if key is also explicitly declared (ie. <div {...props} key=\\\"Hi\\\" />\\n    // or <div key=\\\"Hi\\\" {...props} /> ). We want to deprecate key spread,\\n    // but as an intermediary step, we will use jsxDEV for everything except\\n    // <div {...props} key=\\\"Hi\\\" />, because we aren't currently able to tell if\\n    // key is explicitly declared to be undefined or not.\\n\\n    if (maybeKey !== undefined) {\\n      key = '' + maybeKey;\\n    }\\n\\n    if (hasValidKey(config)) {\\n      key = '' + config.key;\\n    }\\n\\n    if (hasValidRef(config)) {\\n      ref = config.ref;\\n      warnIfStringRefCannotBeAutoConverted(config, self);\\n    } // Remaining properties are added to a new props object\\n\\n\\n    for (propName in config) {\\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\\n        props[propName] = config[propName];\\n      }\\n    } // Resolve default props\\n\\n\\n    if (type && type.defaultProps) {\\n      var defaultProps = type.defaultProps;\\n\\n      for (propName in defaultProps) {\\n        if (props[propName] === undefined) {\\n          props[propName] = defaultProps[propName];\\n        }\\n      }\\n    }\\n\\n    if (key || ref) {\\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\\n\\n      if (key) {\\n        defineKeyPropWarningGetter(props, displayName);\\n      }\\n\\n      if (ref) {\\n        defineRefPropWarningGetter(props, displayName);\\n      }\\n    }\\n\\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\\n  }\\n}\\n\\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\\n\\nfunction setCurrentlyValidatingElement$1(element) {\\n  {\\n    if (element) {\\n      var owner = element._owner;\\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\\n    } else {\\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\\n    }\\n  }\\n}\\n\\nvar propTypesMisspellWarningShown;\\n\\n{\\n  propTypesMisspellWarningShown = false;\\n}\\n/**\\n * Verifies the object is a ReactElement.\\n * See https://reactjs.org/docs/react-api.html#isvalidelement\\n * @param {?object} object\\n * @return {boolean} True if `object` is a ReactElement.\\n * @final\\n */\\n\\nfunction isValidElement(object) {\\n  {\\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\\n  }\\n}\\n\\nfunction getDeclarationErrorAddendum() {\\n  {\\n    if (ReactCurrentOwner$1.current) {\\n      var name = getComponentName(ReactCurrentOwner$1.current.type);\\n\\n      if (name) {\\n        return '\\\\n\\\\nCheck the render method of `' + name + '`.';\\n      }\\n    }\\n\\n    return '';\\n  }\\n}\\n\\nfunction getSourceInfoErrorAddendum(source) {\\n  {\\n    if (source !== undefined) {\\n      var fileName = source.fileName.replace(/^.*[\\\\\\\\\\\\/]/, '');\\n      var lineNumber = source.lineNumber;\\n      return '\\\\n\\\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\\n    }\\n\\n    return '';\\n  }\\n}\\n/**\\n * Warn if there's no key explicitly set on dynamic arrays of children or\\n * object keys are not valid. This allows us to keep track of children between\\n * updates.\\n */\\n\\n\\nvar ownerHasKeyUseWarning = {};\\n\\nfunction getCurrentComponentErrorInfo(parentType) {\\n  {\\n    var info = getDeclarationErrorAddendum();\\n\\n    if (!info) {\\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\\n\\n      if (parentName) {\\n        info = \\\"\\\\n\\\\nCheck the top-level render call using <\\\" + parentName + \\\">.\\\";\\n      }\\n    }\\n\\n    return info;\\n  }\\n}\\n/**\\n * Warn if the element doesn't have an explicit key assigned to it.\\n * This element is in an array. The array could grow and shrink or be\\n * reordered. All children that haven't already been validated are required to\\n * have a \\\"key\\\" property assigned to it. Error statuses are cached so a warning\\n * will only be shown once.\\n *\\n * @internal\\n * @param {ReactElement} element Element that requires a key.\\n * @param {*} parentType element's parent's type.\\n */\\n\\n\\nfunction validateExplicitKey(element, parentType) {\\n  {\\n    if (!element._store || element._store.validated || element.key != null) {\\n      return;\\n    }\\n\\n    element._store.validated = true;\\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\\n\\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\\n      return;\\n    }\\n\\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\\n    // property, it may be the creator of the child that's responsible for\\n    // assigning it a key.\\n\\n    var childOwner = '';\\n\\n    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {\\n      // Give the component that originally created this child.\\n      childOwner = \\\" It was passed a child from \\\" + getComponentName(element._owner.type) + \\\".\\\";\\n    }\\n\\n    setCurrentlyValidatingElement$1(element);\\n\\n    error('Each child in a list should have a unique \\\"key\\\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\\n\\n    setCurrentlyValidatingElement$1(null);\\n  }\\n}\\n/**\\n * Ensure that every element either is passed in a static location, in an\\n * array with an explicit keys property defined, or in an object literal\\n * with valid key property.\\n *\\n * @internal\\n * @param {ReactNode} node Statically passed child of any type.\\n * @param {*} parentType node's parent's type.\\n */\\n\\n\\nfunction validateChildKeys(node, parentType) {\\n  {\\n    if (typeof node !== 'object') {\\n      return;\\n    }\\n\\n    if (Array.isArray(node)) {\\n      for (var i = 0; i < node.length; i++) {\\n        var child = node[i];\\n\\n        if (isValidElement(child)) {\\n          validateExplicitKey(child, parentType);\\n        }\\n      }\\n    } else if (isValidElement(node)) {\\n      // This element was passed in a valid location.\\n      if (node._store) {\\n        node._store.validated = true;\\n      }\\n    } else if (node) {\\n      var iteratorFn = getIteratorFn(node);\\n\\n      if (typeof iteratorFn === 'function') {\\n        // Entry iterators used to provide implicit keys,\\n        // but now we print a separate warning for them later.\\n        if (iteratorFn !== node.entries) {\\n          var iterator = iteratorFn.call(node);\\n          var step;\\n\\n          while (!(step = iterator.next()).done) {\\n            if (isValidElement(step.value)) {\\n              validateExplicitKey(step.value, parentType);\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\n/**\\n * Given an element, validate that its props follow the propTypes definition,\\n * provided by the type.\\n *\\n * @param {ReactElement} element\\n */\\n\\n\\nfunction validatePropTypes(element) {\\n  {\\n    var type = element.type;\\n\\n    if (type === null || type === undefined || typeof type === 'string') {\\n      return;\\n    }\\n\\n    var propTypes;\\n\\n    if (typeof type === 'function') {\\n      propTypes = type.propTypes;\\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\\n    // Inner props are checked in the reconciler.\\n    type.$$typeof === REACT_MEMO_TYPE)) {\\n      propTypes = type.propTypes;\\n    } else {\\n      return;\\n    }\\n\\n    if (propTypes) {\\n      // Intentionally inside to avoid triggering lazy initializers:\\n      var name = getComponentName(type);\\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\\n\\n      var _name = getComponentName(type);\\n\\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\\n    }\\n\\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\\n    }\\n  }\\n}\\n/**\\n * Given a fragment, validate that it can only be provided with fragment props\\n * @param {ReactElement} fragment\\n */\\n\\n\\nfunction validateFragmentProps(fragment) {\\n  {\\n    var keys = Object.keys(fragment.props);\\n\\n    for (var i = 0; i < keys.length; i++) {\\n      var key = keys[i];\\n\\n      if (key !== 'children' && key !== 'key') {\\n        setCurrentlyValidatingElement$1(fragment);\\n\\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\\n\\n        setCurrentlyValidatingElement$1(null);\\n        break;\\n      }\\n    }\\n\\n    if (fragment.ref !== null) {\\n      setCurrentlyValidatingElement$1(fragment);\\n\\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\\n\\n      setCurrentlyValidatingElement$1(null);\\n    }\\n  }\\n}\\n\\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\\n  {\\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\\n    // succeed and there will likely be errors in render.\\n\\n    if (!validType) {\\n      var info = '';\\n\\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\\n        info += ' You likely forgot to export your component from the file ' + \\\"it's defined in, or you might have mixed up default and named imports.\\\";\\n      }\\n\\n      var sourceInfo = getSourceInfoErrorAddendum(source);\\n\\n      if (sourceInfo) {\\n        info += sourceInfo;\\n      } else {\\n        info += getDeclarationErrorAddendum();\\n      }\\n\\n      var typeString;\\n\\n      if (type === null) {\\n        typeString = 'null';\\n      } else if (Array.isArray(type)) {\\n        typeString = 'array';\\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\\n        typeString = \\\"<\\\" + (getComponentName(type.type) || 'Unknown') + \\\" />\\\";\\n        info = ' Did you accidentally export a JSX literal instead of a component?';\\n      } else {\\n        typeString = typeof type;\\n      }\\n\\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\\n    }\\n\\n    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\\n    // TODO: Drop this when these are no longer allowed as the type argument.\\n\\n    if (element == null) {\\n      return element;\\n    } // Skip key warning if the type isn't valid since our key validation logic\\n    // doesn't expect a non-string/function type and can throw confusing errors.\\n    // We don't want exception behavior to differ between dev and prod.\\n    // (Rendering will throw with a helpful message and as soon as the type is\\n    // fixed, the key warnings will appear.)\\n\\n\\n    if (validType) {\\n      var children = props.children;\\n\\n      if (children !== undefined) {\\n        if (isStaticChildren) {\\n          if (Array.isArray(children)) {\\n            for (var i = 0; i < children.length; i++) {\\n              validateChildKeys(children[i], type);\\n            }\\n\\n            if (Object.freeze) {\\n              Object.freeze(children);\\n            }\\n          } else {\\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\\n          }\\n        } else {\\n          validateChildKeys(children, type);\\n        }\\n      }\\n    }\\n\\n    if (type === exports.Fragment) {\\n      validateFragmentProps(element);\\n    } else {\\n      validatePropTypes(element);\\n    }\\n\\n    return element;\\n  }\\n} // These two functions exist to still get child warnings in dev\\n// even with the prod transform. This means that jsxDEV is purely\\n// opt-in behavior for better messages but that we won't stop\\n// giving you warnings if you use production apis.\\n\\nfunction jsxWithValidationStatic(type, props, key) {\\n  {\\n    return jsxWithValidation(type, props, key, true);\\n  }\\n}\\nfunction jsxWithValidationDynamic(type, props, key) {\\n  {\\n    return jsxWithValidation(type, props, key, false);\\n  }\\n}\\n\\nvar jsx =  jsxWithValidationDynamic ; // we may want to special case jsxs internally to take advantage of static children.\\n// for now we can ship identical prod functions\\n\\nvar jsxs =  jsxWithValidationStatic ;\\n\\nexports.jsx = jsx;\\nexports.jsxs = jsxs;\\n  })();\\n}\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///../../../node_modules/react/cjs/react-jsx-runtime.development.js\\n\");\n\n/***/ }),\n\n/***/ \"../../../node_modules/react/jsx-runtime.js\":\n/*!**************************************************!*\\\n  !*** ../../../node_modules/react/jsx-runtime.js ***!\n  \\**************************************************/\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\neval(\"\\n\\nif (false) {} else {\\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-runtime.development.js */ \\\"../../../node_modules/react/cjs/react-jsx-runtime.development.js\\\");\\n}\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3JlYWN0L2pzeC1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUdBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvcmVhY3QvanN4LXJ1bnRpbWUuanM/MDZhYyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LXJ1bnRpbWUucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LXJ1bnRpbWUuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///../../../node_modules/react/jsx-runtime.js\\n\");\n\n/***/ }),\n\n/***/ \"react\":\n/*!************************!*\\\n  !*** external \"react\" ***!\n  \\************************/\n/***/ ((module) => {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_react__;\n\n/***/ }),\n\n/***/ \"../../../node_modules/clsx/dist/clsx.mjs\":\n/*!************************************************!*\\\n  !*** ../../../node_modules/clsx/dist/clsx.mjs ***!\n  \\************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   clsx: () => (/* binding */ clsx),\\n/* harmony export */   \\\"default\\\": () => (__WEBPACK_DEFAULT_EXPORT__)\\n/* harmony export */ });\\nfunction r(e){var t,f,n=\\\"\\\";if(\\\"string\\\"==typeof e||\\\"number\\\"==typeof e)n+=e;else if(\\\"object\\\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\\\" \\\"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\\\" \\\"),n+=f);return n}function clsx(){for(var e,t,f=0,n=\\\"\\\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\\\" \\\"),n+=t);return n}/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (clsx);//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nsc3gvZGlzdC9jbHN4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nsc3gvZGlzdC9jbHN4Lm1qcz8yNmMzIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIHIoZSl7dmFyIHQsZixuPVwiXCI7aWYoXCJzdHJpbmdcIj09dHlwZW9mIGV8fFwibnVtYmVyXCI9PXR5cGVvZiBlKW4rPWU7ZWxzZSBpZihcIm9iamVjdFwiPT10eXBlb2YgZSlpZihBcnJheS5pc0FycmF5KGUpKXt2YXIgbz1lLmxlbmd0aDtmb3IodD0wO3Q8bzt0KyspZVt0XSYmKGY9cihlW3RdKSkmJihuJiYobis9XCIgXCIpLG4rPWYpfWVsc2UgZm9yKGYgaW4gZSllW2ZdJiYobiYmKG4rPVwiIFwiKSxuKz1mKTtyZXR1cm4gbn1leHBvcnQgZnVuY3Rpb24gY2xzeCgpe2Zvcih2YXIgZSx0LGY9MCxuPVwiXCIsbz1hcmd1bWVudHMubGVuZ3RoO2Y8bztmKyspKGU9YXJndW1lbnRzW2ZdKSYmKHQ9cihlKSkmJihuJiYobis9XCIgXCIpLG4rPXQpO3JldHVybiBufWV4cG9ydCBkZWZhdWx0IGNsc3g7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///../../../node_modules/clsx/dist/clsx.mjs\\n\");\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __nested_webpack_require_119253__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __nested_webpack_require_119253__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t/* webpack/runtime/compat get default export */\n/******/ \t(() => {\n/******/ \t\t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t\t__nested_webpack_require_119253__.n = (module) => {\n/******/ \t\t\tvar getter = module && module.__esModule ?\n/******/ \t\t\t\t() => (module['default']) :\n/******/ \t\t\t\t() => (module);\n/******/ \t\t\t__nested_webpack_require_119253__.d(getter, { a: getter });\n/******/ \t\t\treturn getter;\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/define property getters */\n/******/ \t(() => {\n/******/ \t\t// define getter functions for harmony exports\n/******/ \t\t__nested_webpack_require_119253__.d = (exports, definition) => {\n/******/ \t\t\tfor(var key in definition) {\n/******/ \t\t\t\tif(__nested_webpack_require_119253__.o(definition, key) && !__nested_webpack_require_119253__.o(exports, key)) {\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\n/******/ \t(() => {\n/******/ \t\t__nested_webpack_require_119253__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/make namespace object */\n/******/ \t(() => {\n/******/ \t\t// define __esModule on exports\n/******/ \t\t__nested_webpack_require_119253__.r = (exports) => {\n/******/ \t\t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t\t}\n/******/ \t\t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/************************************************************************/\n/******/ \t\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \t// This entry module can't be inlined because the eval-source-map devtool is used.\n/******/ \tvar __nested_webpack_exports__ = __nested_webpack_require_119253__(\"./Components/currency-selector/radio-button-group.tsx\");\n/******/ \t__nested_webpack_exports__ = __nested_webpack_exports__[\"default\"];\n/******/ \t\n/******/ \treturn __nested_webpack_exports__;\n/******/ })()\n;\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../account/dist/account/js/currency-radio-button-group.js\n"
                );

                /***/
            },

        /***/ '../../account/dist/account/js/currency-radio-button.js':
            /*!**************************************************************!*\
  !*** ../../account/dist/account/js/currency-radio-button.js ***!
  \**************************************************************/
            /***/ (module, __unused_webpack_exports, __webpack_require__) => {
                eval(
                    "/*\n * ATTENTION: An \"eval-source-map\" devtool has been used.\n * This devtool is neither made for production nor for readable output files.\n * It uses \"eval()\" calls to create a separate source file with attached SourceMaps in the browser devtools.\n * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)\n * or disable the default devtool with \"devtool: false\".\n * If you are looking for production-ready output files, see mode: \"production\" (https://webpack.js.org/configuration/mode/).\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory(__webpack_require__(/*! @deriv/components */ \"../../components/src/index.ts\"), __webpack_require__(/*! @deriv/shared */ \"../../shared/src/index.ts\"), __webpack_require__(/*! @deriv/translations */ \"../../translations/src/index.js\"), __webpack_require__(/*! react */ \"../../../node_modules/react/index.js\"));\n\telse {}\n})(self, (__WEBPACK_EXTERNAL_MODULE__deriv_components__, __WEBPACK_EXTERNAL_MODULE__deriv_shared__, __WEBPACK_EXTERNAL_MODULE__deriv_translations__, __WEBPACK_EXTERNAL_MODULE_react__) => {\nreturn /******/ (() => { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ \"./Components/currency-selector/radio-button.tsx\":\n/*!*******************************************************!*\\\n  !*** ./Components/currency-selector/radio-button.tsx ***!\n  \\*******************************************************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"default\\\": () => (__WEBPACK_DEFAULT_EXPORT__)\\n/* harmony export */ });\\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \\\"react\\\");\\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! clsx */ \\\"../../../node_modules/clsx/dist/clsx.mjs\\\");\\n/* harmony import */ var _deriv_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @deriv/components */ \\\"@deriv/components\\\");\\n/* harmony import */ var _deriv_components__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_deriv_components__WEBPACK_IMPORTED_MODULE_2__);\\n/* harmony import */ var _deriv_shared__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @deriv/shared */ \\\"@deriv/shared\\\");\\n/* harmony import */ var _deriv_shared__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_deriv_shared__WEBPACK_IMPORTED_MODULE_3__);\\n/* harmony import */ var _ust_popover__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ust-popover */ \\\"./Components/currency-selector/ust-popover.tsx\\\");\\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react/jsx-runtime */ \\\"../../../node_modules/react/jsx-runtime.js\\\");\\n\\n\\n\\n\\n\\n\\n/**\\n *  RadioButton component to select currency\\n * @name RadioButton\\n * @param {React.InputHTMLAttributes<HTMLInputElement>} field - field props given by Formik\\n * @param {string} icon - icon name\\n * @param {string} id - currency id\\n * @param {string} label - currency name\\n * @param {string} second_line_label - currency code\\n * @param {Function} onClick - function to be called on click\\n * @param {AllHTMLAttributes<HTMLInputElement | HTMLLabelElement>} props - other props to be passed\\n * @returns {React.ReactNode} - returns a React node\\n */\\n\\nconst RadioButton = _ref => {\\n  let {\\n    field: {\\n      name,\\n      value,\\n      onChange,\\n      onBlur\\n    },\\n    icon,\\n    id,\\n    label,\\n    second_line_label,\\n    onClick,\\n    className,\\n    ...props\\n  } = _ref;\\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), {\\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\\\"input\\\", {\\n      name: name,\\n      id: id,\\n      type: \\\"radio\\\",\\n      value: id // could be something else for output?\\n      ,\\n      checked: id === value,\\n      onChange: onChange,\\n      onBlur: onBlur,\\n      disabled: props.selected,\\n      className: (0,clsx__WEBPACK_IMPORTED_MODULE_1__[\\\"default\\\"])(className, 'currency-list__radio-button'),\\n      ...props\\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\\\"label\\\", {\\n      htmlFor: id,\\n      className: (0,clsx__WEBPACK_IMPORTED_MODULE_1__[\\\"default\\\"])('currency-list__item', {\\n        'currency-list__item--selected': id === value,\\n        'currency-list__item--current': props.selected\\n      }),\\n      onClick: onClick,\\n      children: icon ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), {\\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.Icon, {\\n          className: \\\"currency-list__icon\\\",\\n          icon: icon\\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(\\\"div\\\", {\\n          className: \\\"label currency-list__item-text\\\",\\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\\\"div\\\", {\\n            className: \\\"currency-list__item-label\\\",\\n            children: label\\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\\\"div\\\", {\\n            className: \\\"currency-list__item-code\\\",\\n            children: second_line_label\\n          })]\\n        })]\\n      }) : /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), {\\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.Icon, {\\n          className: \\\"currency-list__icon\\\",\\n          icon: `IcCurrency-${id?.toLowerCase()}`\\n        }), id && /^(UST|eUSDT|tUSDT)$/i.test(id) && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_ust_popover__WEBPACK_IMPORTED_MODULE_4__[\\\"default\\\"], {\\n          id: id\\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(\\\"div\\\", {\\n          className: \\\"label currency-list__item-text\\\",\\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\\\"div\\\", {\\n            className: \\\"currency-list__item-label\\\",\\n            children: label\\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(\\\"div\\\", {\\n            className: \\\"currency-list__item-code\\\",\\n            children: [\\\"(\\\", (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_3__.getCurrencyDisplayCode)(id), \\\")\\\"]\\n          })]\\n        })]\\n      })\\n    })]\\n  });\\n};\\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (RadioButton);//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9Db21wb25lbnRzL2N1cnJlbmN5LXNlbGVjdG9yL3JhZGlvLWJ1dHRvbi50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQWFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQVNBO0FBUkE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUdBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFHQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUVBO0FBQ0E7QUFHQTtBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi9Db21wb25lbnRzL2N1cnJlbmN5LXNlbGVjdG9yL3JhZGlvLWJ1dHRvbi50c3g/ODhhMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgQWxsSFRNTEF0dHJpYnV0ZXMgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgY2xzeCBmcm9tICdjbHN4JztcbmltcG9ydCB7IEljb24gfSBmcm9tICdAZGVyaXYvY29tcG9uZW50cyc7XG5pbXBvcnQgeyBnZXRDdXJyZW5jeURpc3BsYXlDb2RlIH0gZnJvbSAnQGRlcml2L3NoYXJlZCc7XG5pbXBvcnQgVVNUUG9wb3ZlciBmcm9tICcuL3VzdC1wb3BvdmVyJztcblxudHlwZSBUUmFkaW9CdXR0b25FeHRlbmQgPSB7XG4gICAgZmllbGQ6IFJlYWN0LklucHV0SFRNTEF0dHJpYnV0ZXM8SFRNTElucHV0RWxlbWVudD47XG4gICAgaWNvbj86IHN0cmluZztcbiAgICBzZWNvbmRfbGluZV9sYWJlbD86IHN0cmluZztcbiAgICBpZDogc3RyaW5nO1xuICAgIGxhYmVsOiBzdHJpbmc7XG4gICAgb25DbGljaz86IChlOiBSZWFjdC5Nb3VzZUV2ZW50PEhUTUxMYWJlbEVsZW1lbnQsIE1vdXNlRXZlbnQ+KSA9PiB2b2lkO1xufTtcblxuZXhwb3J0IHR5cGUgVFJhZGlvQnV0dG9uID0gQWxsSFRNTEF0dHJpYnV0ZXM8SFRNTElucHV0RWxlbWVudCB8IEhUTUxMYWJlbEVsZW1lbnQ+ICYgVFJhZGlvQnV0dG9uRXh0ZW5kO1xuXG4vKipcbiAqICBSYWRpb0J1dHRvbiBjb21wb25lbnQgdG8gc2VsZWN0IGN1cnJlbmN5XG4gKiBAbmFtZSBSYWRpb0J1dHRvblxuICogQHBhcmFtIHtSZWFjdC5JbnB1dEhUTUxBdHRyaWJ1dGVzPEhUTUxJbnB1dEVsZW1lbnQ+fSBmaWVsZCAtIGZpZWxkIHByb3BzIGdpdmVuIGJ5IEZvcm1pa1xuICogQHBhcmFtIHtzdHJpbmd9IGljb24gLSBpY29uIG5hbWVcbiAqIEBwYXJhbSB7c3RyaW5nfSBpZCAtIGN1cnJlbmN5IGlkXG4gKiBAcGFyYW0ge3N0cmluZ30gbGFiZWwgLSBjdXJyZW5jeSBuYW1lXG4gKiBAcGFyYW0ge3N0cmluZ30gc2Vjb25kX2xpbmVfbGFiZWwgLSBjdXJyZW5jeSBjb2RlXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBvbkNsaWNrIC0gZnVuY3Rpb24gdG8gYmUgY2FsbGVkIG9uIGNsaWNrXG4gKiBAcGFyYW0ge0FsbEhUTUxBdHRyaWJ1dGVzPEhUTUxJbnB1dEVsZW1lbnQgfCBIVE1MTGFiZWxFbGVtZW50Pn0gcHJvcHMgLSBvdGhlciBwcm9wcyB0byBiZSBwYXNzZWRcbiAqIEByZXR1cm5zIHtSZWFjdC5SZWFjdE5vZGV9IC0gcmV0dXJucyBhIFJlYWN0IG5vZGVcbiAqL1xuXG5jb25zdCBSYWRpb0J1dHRvbiA9ICh7XG4gICAgZmllbGQ6IHsgbmFtZSwgdmFsdWUsIG9uQ2hhbmdlLCBvbkJsdXIgfSxcbiAgICBpY29uLFxuICAgIGlkLFxuICAgIGxhYmVsLFxuICAgIHNlY29uZF9saW5lX2xhYmVsLFxuICAgIG9uQ2xpY2ssXG4gICAgY2xhc3NOYW1lLFxuICAgIC4uLnByb3BzXG59OiBUUmFkaW9CdXR0b24pID0+IHtcbiAgICByZXR1cm4gKFxuICAgICAgICA8UmVhY3QuRnJhZ21lbnQ+XG4gICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICBuYW1lPXtuYW1lfVxuICAgICAgICAgICAgICAgIGlkPXtpZH1cbiAgICAgICAgICAgICAgICB0eXBlPSdyYWRpbydcbiAgICAgICAgICAgICAgICB2YWx1ZT17aWR9IC8vIGNvdWxkIGJlIHNvbWV0aGluZyBlbHNlIGZvciBvdXRwdXQ/XG4gICAgICAgICAgICAgICAgY2hlY2tlZD17aWQgPT09IHZhbHVlfVxuICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXtvbkNoYW5nZX1cbiAgICAgICAgICAgICAgICBvbkJsdXI9e29uQmx1cn1cbiAgICAgICAgICAgICAgICBkaXNhYmxlZD17cHJvcHMuc2VsZWN0ZWR9XG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPXtjbHN4KGNsYXNzTmFtZSwgJ2N1cnJlbmN5LWxpc3RfX3JhZGlvLWJ1dHRvbicpfVxuICAgICAgICAgICAgICAgIHsuLi5wcm9wc31cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8bGFiZWxcbiAgICAgICAgICAgICAgICBodG1sRm9yPXtpZH1cbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9e2Nsc3goJ2N1cnJlbmN5LWxpc3RfX2l0ZW0nLCB7XG4gICAgICAgICAgICAgICAgICAgICdjdXJyZW5jeS1saXN0X19pdGVtLS1zZWxlY3RlZCc6IGlkID09PSB2YWx1ZSxcbiAgICAgICAgICAgICAgICAgICAgJ2N1cnJlbmN5LWxpc3RfX2l0ZW0tLWN1cnJlbnQnOiBwcm9wcy5zZWxlY3RlZCxcbiAgICAgICAgICAgICAgICB9KX1cbiAgICAgICAgICAgICAgICBvbkNsaWNrPXtvbkNsaWNrfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIHtpY29uID8gKFxuICAgICAgICAgICAgICAgICAgICA8UmVhY3QuRnJhZ21lbnQ+XG4gICAgICAgICAgICAgICAgICAgICAgICA8SWNvbiBjbGFzc05hbWU9J2N1cnJlbmN5LWxpc3RfX2ljb24nIGljb249e2ljb259IC8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nbGFiZWwgY3VycmVuY3ktbGlzdF9faXRlbS10ZXh0Jz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nY3VycmVuY3ktbGlzdF9faXRlbS1sYWJlbCc+e2xhYmVsfTwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdjdXJyZW5jeS1saXN0X19pdGVtLWNvZGUnPntzZWNvbmRfbGluZV9sYWJlbH08L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8L1JlYWN0LkZyYWdtZW50PlxuICAgICAgICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICAgICAgICAgIDxSZWFjdC5GcmFnbWVudD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxJY29uIGNsYXNzTmFtZT0nY3VycmVuY3ktbGlzdF9faWNvbicgaWNvbj17YEljQ3VycmVuY3ktJHtpZD8udG9Mb3dlckNhc2UoKX1gfSAvPlxuICAgICAgICAgICAgICAgICAgICAgICAge2lkICYmIC9eKFVTVHxlVVNEVHx0VVNEVCkkL2kudGVzdChpZCkgJiYgPFVTVFBvcG92ZXIgaWQ9e2lkfSAvPn1cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdsYWJlbCBjdXJyZW5jeS1saXN0X19pdGVtLXRleHQnPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdjdXJyZW5jeS1saXN0X19pdGVtLWxhYmVsJz57bGFiZWx9PC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2N1cnJlbmN5LWxpc3RfX2l0ZW0tY29kZSc+KHtnZXRDdXJyZW5jeURpc3BsYXlDb2RlKGlkKX0pPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPC9SZWFjdC5GcmFnbWVudD5cbiAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgPC9SZWFjdC5GcmFnbWVudD5cbiAgICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgUmFkaW9CdXR0b247XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///./Components/currency-selector/radio-button.tsx\\n\");\n\n/***/ }),\n\n/***/ \"./Components/currency-selector/ust-popover.tsx\":\n/*!******************************************************!*\\\n  !*** ./Components/currency-selector/ust-popover.tsx ***!\n  \\******************************************************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"default\\\": () => (__WEBPACK_DEFAULT_EXPORT__)\\n/* harmony export */ });\\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \\\"react\\\");\\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\\n/* harmony import */ var _deriv_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @deriv/components */ \\\"@deriv/components\\\");\\n/* harmony import */ var _deriv_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_deriv_components__WEBPACK_IMPORTED_MODULE_1__);\\n/* harmony import */ var _deriv_translations__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @deriv/translations */ \\\"@deriv/translations\\\");\\n/* harmony import */ var _deriv_translations__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_deriv_translations__WEBPACK_IMPORTED_MODULE_2__);\\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react/jsx-runtime */ \\\"../../../node_modules/react/jsx-runtime.js\\\");\\n\\n\\n\\n\\nconst USTPopover = _ref => {\\n  let {\\n    id\\n  } = _ref;\\n  let popover_message;\\n  if (/^UST$/i.test(id)) {\\n    popover_message = /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_deriv_translations__WEBPACK_IMPORTED_MODULE_2__.Localize, {\\n      i18n_default_text: 'Tether as an Omni token (USDT) is a version of Tether that is hosted on the Omni layer on the Bitcoin blockchain.',\\n      components: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\\\"br\\\", {}, 0)]\\n    });\\n  } else if (/^tUSDT$/i.test(id)) {\\n    popover_message = /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_deriv_translations__WEBPACK_IMPORTED_MODULE_2__.Localize, {\\n      i18n_default_text: 'Tether as a TRC20 token (tUSDT) is a version of Tether that is hosted on Tron.'\\n    });\\n  } else {\\n    popover_message = /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_deriv_translations__WEBPACK_IMPORTED_MODULE_2__.Localize, {\\n      i18n_default_text: 'Tether as an ERC20 token (eUSDT) is a version of Tether that is hosted on Ethereum.'\\n    });\\n  }\\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_1__.Popover, {\\n    alignment: \\\"top\\\",\\n    className: \\\"currency-list__popover\\\",\\n    disable_message_icon: true,\\n    icon: \\\"info\\\",\\n    is_bubble_hover_enabled: true,\\n    message: popover_message,\\n    zIndex: \\\"9999\\\"\\n  });\\n};\\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (USTPopover);//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9Db21wb25lbnRzL2N1cnJlbmN5LXNlbGVjdG9yL3VzdC1wb3BvdmVyLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBTUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUdBO0FBQUE7QUFHQTtBQUNBO0FBRUE7QUFBQTtBQUdBO0FBQ0E7QUFFQTtBQUVBO0FBR0E7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFHQTtBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi9Db21wb25lbnRzL2N1cnJlbmN5LXNlbGVjdG9yL3VzdC1wb3BvdmVyLnRzeD9jMTY3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBQb3BvdmVyIH0gZnJvbSAnQGRlcml2L2NvbXBvbmVudHMnO1xuaW1wb3J0IHsgTG9jYWxpemUgfSBmcm9tICdAZGVyaXYvdHJhbnNsYXRpb25zJztcblxuZXhwb3J0IHR5cGUgVFVTVFBvcG92ZXIgPSB7XG4gICAgaWQ6IHN0cmluZztcbn07XG5cbmNvbnN0IFVTVFBvcG92ZXIgPSAoeyBpZCB9OiBUVVNUUG9wb3ZlcikgPT4ge1xuICAgIGxldCBwb3BvdmVyX21lc3NhZ2U6IFJlYWN0LlJlYWN0RWxlbWVudDtcbiAgICBpZiAoL15VU1QkL2kudGVzdChpZCkpIHtcbiAgICAgICAgcG9wb3Zlcl9tZXNzYWdlID0gKFxuICAgICAgICAgICAgPExvY2FsaXplXG4gICAgICAgICAgICAgICAgaTE4bl9kZWZhdWx0X3RleHQ9e1xuICAgICAgICAgICAgICAgICAgICAnVGV0aGVyIGFzIGFuIE9tbmkgdG9rZW4gKFVTRFQpIGlzIGEgdmVyc2lvbiBvZiBUZXRoZXIgdGhhdCBpcyBob3N0ZWQgb24gdGhlIE9tbmkgbGF5ZXIgb24gdGhlIEJpdGNvaW4gYmxvY2tjaGFpbi4nXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbXBvbmVudHM9e1s8YnIga2V5PXswfSAvPl19XG4gICAgICAgICAgICAvPlxuICAgICAgICApO1xuICAgIH0gZWxzZSBpZiAoL150VVNEVCQvaS50ZXN0KGlkKSkge1xuICAgICAgICBwb3BvdmVyX21lc3NhZ2UgPSAoXG4gICAgICAgICAgICA8TG9jYWxpemVcbiAgICAgICAgICAgICAgICBpMThuX2RlZmF1bHRfdGV4dD17J1RldGhlciBhcyBhIFRSQzIwIHRva2VuICh0VVNEVCkgaXMgYSB2ZXJzaW9uIG9mIFRldGhlciB0aGF0IGlzIGhvc3RlZCBvbiBUcm9uLid9XG4gICAgICAgICAgICAvPlxuICAgICAgICApO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHBvcG92ZXJfbWVzc2FnZSA9IChcbiAgICAgICAgICAgIDxMb2NhbGl6ZVxuICAgICAgICAgICAgICAgIGkxOG5fZGVmYXVsdF90ZXh0PXtcbiAgICAgICAgICAgICAgICAgICAgJ1RldGhlciBhcyBhbiBFUkMyMCB0b2tlbiAoZVVTRFQpIGlzIGEgdmVyc2lvbiBvZiBUZXRoZXIgdGhhdCBpcyBob3N0ZWQgb24gRXRoZXJldW0uJ1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICk7XG4gICAgfVxuXG4gICAgcmV0dXJuIChcbiAgICAgICAgPFBvcG92ZXJcbiAgICAgICAgICAgIGFsaWdubWVudD0ndG9wJ1xuICAgICAgICAgICAgY2xhc3NOYW1lPSdjdXJyZW5jeS1saXN0X19wb3BvdmVyJ1xuICAgICAgICAgICAgZGlzYWJsZV9tZXNzYWdlX2ljb25cbiAgICAgICAgICAgIGljb249J2luZm8nXG4gICAgICAgICAgICBpc19idWJibGVfaG92ZXJfZW5hYmxlZFxuICAgICAgICAgICAgbWVzc2FnZT17cG9wb3Zlcl9tZXNzYWdlfVxuICAgICAgICAgICAgekluZGV4PSc5OTk5J1xuICAgICAgICAvPlxuICAgICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBVU1RQb3BvdmVyO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///./Components/currency-selector/ust-popover.tsx\\n\");\n\n/***/ }),\n\n/***/ \"../../../node_modules/object-assign/index.js\":\n/*!****************************************************!*\\\n  !*** ../../../node_modules/object-assign/index.js ***!\n  \\****************************************************/\n/***/ ((module) => {\n\neval(\"/*\\nobject-assign\\n(c) Sindre Sorhus\\n@license MIT\\n*/\\n\\n\\n/* eslint-disable no-unused-vars */\\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\\n\\nfunction toObject(val) {\\n\\tif (val === null || val === undefined) {\\n\\t\\tthrow new TypeError('Object.assign cannot be called with null or undefined');\\n\\t}\\n\\n\\treturn Object(val);\\n}\\n\\nfunction shouldUseNative() {\\n\\ttry {\\n\\t\\tif (!Object.assign) {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\t// Detect buggy property enumeration order in older V8 versions.\\n\\n\\t\\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\\n\\t\\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\\n\\t\\ttest1[5] = 'de';\\n\\t\\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\\n\\t\\tvar test2 = {};\\n\\t\\tfor (var i = 0; i < 10; i++) {\\n\\t\\t\\ttest2['_' + String.fromCharCode(i)] = i;\\n\\t\\t}\\n\\t\\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\\n\\t\\t\\treturn test2[n];\\n\\t\\t});\\n\\t\\tif (order2.join('') !== '0123456789') {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\\n\\t\\tvar test3 = {};\\n\\t\\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\\n\\t\\t\\ttest3[letter] = letter;\\n\\t\\t});\\n\\t\\tif (Object.keys(Object.assign({}, test3)).join('') !==\\n\\t\\t\\t\\t'abcdefghijklmnopqrst') {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\treturn true;\\n\\t} catch (err) {\\n\\t\\t// We don't expect any of the above to throw, but better to be safe.\\n\\t\\treturn false;\\n\\t}\\n}\\n\\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\\n\\tvar from;\\n\\tvar to = toObject(target);\\n\\tvar symbols;\\n\\n\\tfor (var s = 1; s < arguments.length; s++) {\\n\\t\\tfrom = Object(arguments[s]);\\n\\n\\t\\tfor (var key in from) {\\n\\t\\t\\tif (hasOwnProperty.call(from, key)) {\\n\\t\\t\\t\\tto[key] = from[key];\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tif (getOwnPropertySymbols) {\\n\\t\\t\\tsymbols = getOwnPropertySymbols(from);\\n\\t\\t\\tfor (var i = 0; i < symbols.length; i++) {\\n\\t\\t\\t\\tif (propIsEnumerable.call(from, symbols[i])) {\\n\\t\\t\\t\\t\\tto[symbols[i]] = from[symbols[i]];\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\treturn to;\\n};\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL29iamVjdC1hc3NpZ24vaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL29iamVjdC1hc3NpZ24vaW5kZXguanM/M2UxMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxub2JqZWN0LWFzc2lnblxuKGMpIFNpbmRyZSBTb3JodXNcbkBsaWNlbnNlIE1JVFxuKi9cblxuJ3VzZSBzdHJpY3QnO1xuLyogZXNsaW50LWRpc2FibGUgbm8tdW51c2VkLXZhcnMgKi9cbnZhciBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xudmFyIGhhc093blByb3BlcnR5ID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbnZhciBwcm9wSXNFbnVtZXJhYmxlID0gT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZTtcblxuZnVuY3Rpb24gdG9PYmplY3QodmFsKSB7XG5cdGlmICh2YWwgPT09IG51bGwgfHwgdmFsID09PSB1bmRlZmluZWQpIHtcblx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKCdPYmplY3QuYXNzaWduIGNhbm5vdCBiZSBjYWxsZWQgd2l0aCBudWxsIG9yIHVuZGVmaW5lZCcpO1xuXHR9XG5cblx0cmV0dXJuIE9iamVjdCh2YWwpO1xufVxuXG5mdW5jdGlvbiBzaG91bGRVc2VOYXRpdmUoKSB7XG5cdHRyeSB7XG5cdFx0aWYgKCFPYmplY3QuYXNzaWduKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gRGV0ZWN0IGJ1Z2d5IHByb3BlcnR5IGVudW1lcmF0aW9uIG9yZGVyIGluIG9sZGVyIFY4IHZlcnNpb25zLlxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9NDExOFxuXHRcdHZhciB0ZXN0MSA9IG5ldyBTdHJpbmcoJ2FiYycpOyAgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXctd3JhcHBlcnNcblx0XHR0ZXN0MVs1XSA9ICdkZSc7XG5cdFx0aWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QxKVswXSA9PT0gJzUnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MiA9IHt9O1xuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgMTA7IGkrKykge1xuXHRcdFx0dGVzdDJbJ18nICsgU3RyaW5nLmZyb21DaGFyQ29kZShpKV0gPSBpO1xuXHRcdH1cblx0XHR2YXIgb3JkZXIyID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDIpLm1hcChmdW5jdGlvbiAobikge1xuXHRcdFx0cmV0dXJuIHRlc3QyW25dO1xuXHRcdH0pO1xuXHRcdGlmIChvcmRlcjIuam9pbignJykgIT09ICcwMTIzNDU2Nzg5Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcblx0XHR2YXIgdGVzdDMgPSB7fTtcblx0XHQnYWJjZGVmZ2hpamtsbW5vcHFyc3QnLnNwbGl0KCcnKS5mb3JFYWNoKGZ1bmN0aW9uIChsZXR0ZXIpIHtcblx0XHRcdHRlc3QzW2xldHRlcl0gPSBsZXR0ZXI7XG5cdFx0fSk7XG5cdFx0aWYgKE9iamVjdC5rZXlzKE9iamVjdC5hc3NpZ24oe30sIHRlc3QzKSkuam9pbignJykgIT09XG5cdFx0XHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdHJ1ZTtcblx0fSBjYXRjaCAoZXJyKSB7XG5cdFx0Ly8gV2UgZG9uJ3QgZXhwZWN0IGFueSBvZiB0aGUgYWJvdmUgdG8gdGhyb3csIGJ1dCBiZXR0ZXIgdG8gYmUgc2FmZS5cblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzaG91bGRVc2VOYXRpdmUoKSA/IE9iamVjdC5hc3NpZ24gOiBmdW5jdGlvbiAodGFyZ2V0LCBzb3VyY2UpIHtcblx0dmFyIGZyb207XG5cdHZhciB0byA9IHRvT2JqZWN0KHRhcmdldCk7XG5cdHZhciBzeW1ib2xzO1xuXG5cdGZvciAodmFyIHMgPSAxOyBzIDwgYXJndW1lbnRzLmxlbmd0aDsgcysrKSB7XG5cdFx0ZnJvbSA9IE9iamVjdChhcmd1bWVudHNbc10pO1xuXG5cdFx0Zm9yICh2YXIga2V5IGluIGZyb20pIHtcblx0XHRcdGlmIChoYXNPd25Qcm9wZXJ0eS5jYWxsKGZyb20sIGtleSkpIHtcblx0XHRcdFx0dG9ba2V5XSA9IGZyb21ba2V5XTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRpZiAoZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7XG5cdFx0XHRzeW1ib2xzID0gZ2V0T3duUHJvcGVydHlTeW1ib2xzKGZyb20pO1xuXHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBzeW1ib2xzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRcdGlmIChwcm9wSXNFbnVtZXJhYmxlLmNhbGwoZnJvbSwgc3ltYm9sc1tpXSkpIHtcblx0XHRcdFx0XHR0b1tzeW1ib2xzW2ldXSA9IGZyb21bc3ltYm9sc1tpXV07XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gdG87XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///../../../node_modules/object-assign/index.js\\n\");\n\n/***/ }),\n\n/***/ \"../../../node_modules/react/cjs/react-jsx-runtime.development.js\":\n/*!************************************************************************!*\\\n  !*** ../../../node_modules/react/cjs/react-jsx-runtime.development.js ***!\n  \\************************************************************************/\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\neval(\"/** @license React v17.0.2\\n * react-jsx-runtime.development.js\\n *\\n * Copyright (c) Facebook, Inc. and its affiliates.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n\\n\\n\\nif (true) {\\n  (function() {\\n'use strict';\\n\\nvar React = __webpack_require__(/*! react */ \\\"react\\\");\\nvar _assign = __webpack_require__(/*! object-assign */ \\\"../../../node_modules/object-assign/index.js\\\");\\n\\n// ATTENTION\\n// When adding new symbols to this file,\\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\\n// nor polyfill, then a plain number is used for performance.\\nvar REACT_ELEMENT_TYPE = 0xeac7;\\nvar REACT_PORTAL_TYPE = 0xeaca;\\nexports.Fragment = 0xeacb;\\nvar REACT_STRICT_MODE_TYPE = 0xeacc;\\nvar REACT_PROFILER_TYPE = 0xead2;\\nvar REACT_PROVIDER_TYPE = 0xeacd;\\nvar REACT_CONTEXT_TYPE = 0xeace;\\nvar REACT_FORWARD_REF_TYPE = 0xead0;\\nvar REACT_SUSPENSE_TYPE = 0xead1;\\nvar REACT_SUSPENSE_LIST_TYPE = 0xead8;\\nvar REACT_MEMO_TYPE = 0xead3;\\nvar REACT_LAZY_TYPE = 0xead4;\\nvar REACT_BLOCK_TYPE = 0xead9;\\nvar REACT_SERVER_BLOCK_TYPE = 0xeada;\\nvar REACT_FUNDAMENTAL_TYPE = 0xead5;\\nvar REACT_SCOPE_TYPE = 0xead7;\\nvar REACT_OPAQUE_ID_TYPE = 0xeae0;\\nvar REACT_DEBUG_TRACING_MODE_TYPE = 0xeae1;\\nvar REACT_OFFSCREEN_TYPE = 0xeae2;\\nvar REACT_LEGACY_HIDDEN_TYPE = 0xeae3;\\n\\nif (typeof Symbol === 'function' && Symbol.for) {\\n  var symbolFor = Symbol.for;\\n  REACT_ELEMENT_TYPE = symbolFor('react.element');\\n  REACT_PORTAL_TYPE = symbolFor('react.portal');\\n  exports.Fragment = symbolFor('react.fragment');\\n  REACT_STRICT_MODE_TYPE = symbolFor('react.strict_mode');\\n  REACT_PROFILER_TYPE = symbolFor('react.profiler');\\n  REACT_PROVIDER_TYPE = symbolFor('react.provider');\\n  REACT_CONTEXT_TYPE = symbolFor('react.context');\\n  REACT_FORWARD_REF_TYPE = symbolFor('react.forward_ref');\\n  REACT_SUSPENSE_TYPE = symbolFor('react.suspense');\\n  REACT_SUSPENSE_LIST_TYPE = symbolFor('react.suspense_list');\\n  REACT_MEMO_TYPE = symbolFor('react.memo');\\n  REACT_LAZY_TYPE = symbolFor('react.lazy');\\n  REACT_BLOCK_TYPE = symbolFor('react.block');\\n  REACT_SERVER_BLOCK_TYPE = symbolFor('react.server.block');\\n  REACT_FUNDAMENTAL_TYPE = symbolFor('react.fundamental');\\n  REACT_SCOPE_TYPE = symbolFor('react.scope');\\n  REACT_OPAQUE_ID_TYPE = symbolFor('react.opaque.id');\\n  REACT_DEBUG_TRACING_MODE_TYPE = symbolFor('react.debug_trace_mode');\\n  REACT_OFFSCREEN_TYPE = symbolFor('react.offscreen');\\n  REACT_LEGACY_HIDDEN_TYPE = symbolFor('react.legacy_hidden');\\n}\\n\\nvar MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\\nfunction getIteratorFn(maybeIterable) {\\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\\n    return null;\\n  }\\n\\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\\n\\n  if (typeof maybeIterator === 'function') {\\n    return maybeIterator;\\n  }\\n\\n  return null;\\n}\\n\\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\\n\\nfunction error(format) {\\n  {\\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\\n      args[_key2 - 1] = arguments[_key2];\\n    }\\n\\n    printWarning('error', format, args);\\n  }\\n}\\n\\nfunction printWarning(level, format, args) {\\n  // When changing this logic, you might want to also\\n  // update consoleWithStackDev.www.js as well.\\n  {\\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\\n\\n    if (stack !== '') {\\n      format += '%s';\\n      args = args.concat([stack]);\\n    }\\n\\n    var argsWithFormat = args.map(function (item) {\\n      return '' + item;\\n    }); // Careful: RN currently depends on this prefix\\n\\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\\n    // breaks IE9: https://github.com/facebook/react/issues/13610\\n    // eslint-disable-next-line react-internal/no-production-logging\\n\\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\\n  }\\n}\\n\\n// Filter certain DOM attributes (e.g. src, href) if their values are empty strings.\\n\\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\\n\\nfunction isValidElementType(type) {\\n  if (typeof type === 'string' || typeof type === 'function') {\\n    return true;\\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\\n\\n\\n  if (type === exports.Fragment || type === REACT_PROFILER_TYPE || type === REACT_DEBUG_TRACING_MODE_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || type === REACT_LEGACY_HIDDEN_TYPE || enableScopeAPI ) {\\n    return true;\\n  }\\n\\n  if (typeof type === 'object' && type !== null) {\\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_BLOCK_TYPE || type[0] === REACT_SERVER_BLOCK_TYPE) {\\n      return true;\\n    }\\n  }\\n\\n  return false;\\n}\\n\\nfunction getWrappedName(outerType, innerType, wrapperName) {\\n  var functionName = innerType.displayName || innerType.name || '';\\n  return outerType.displayName || (functionName !== '' ? wrapperName + \\\"(\\\" + functionName + \\\")\\\" : wrapperName);\\n}\\n\\nfunction getContextName(type) {\\n  return type.displayName || 'Context';\\n}\\n\\nfunction getComponentName(type) {\\n  if (type == null) {\\n    // Host root, text node or just invalid type.\\n    return null;\\n  }\\n\\n  {\\n    if (typeof type.tag === 'number') {\\n      error('Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');\\n    }\\n  }\\n\\n  if (typeof type === 'function') {\\n    return type.displayName || type.name || null;\\n  }\\n\\n  if (typeof type === 'string') {\\n    return type;\\n  }\\n\\n  switch (type) {\\n    case exports.Fragment:\\n      return 'Fragment';\\n\\n    case REACT_PORTAL_TYPE:\\n      return 'Portal';\\n\\n    case REACT_PROFILER_TYPE:\\n      return 'Profiler';\\n\\n    case REACT_STRICT_MODE_TYPE:\\n      return 'StrictMode';\\n\\n    case REACT_SUSPENSE_TYPE:\\n      return 'Suspense';\\n\\n    case REACT_SUSPENSE_LIST_TYPE:\\n      return 'SuspenseList';\\n  }\\n\\n  if (typeof type === 'object') {\\n    switch (type.$$typeof) {\\n      case REACT_CONTEXT_TYPE:\\n        var context = type;\\n        return getContextName(context) + '.Consumer';\\n\\n      case REACT_PROVIDER_TYPE:\\n        var provider = type;\\n        return getContextName(provider._context) + '.Provider';\\n\\n      case REACT_FORWARD_REF_TYPE:\\n        return getWrappedName(type, type.render, 'ForwardRef');\\n\\n      case REACT_MEMO_TYPE:\\n        return getComponentName(type.type);\\n\\n      case REACT_BLOCK_TYPE:\\n        return getComponentName(type._render);\\n\\n      case REACT_LAZY_TYPE:\\n        {\\n          var lazyComponent = type;\\n          var payload = lazyComponent._payload;\\n          var init = lazyComponent._init;\\n\\n          try {\\n            return getComponentName(init(payload));\\n          } catch (x) {\\n            return null;\\n          }\\n        }\\n    }\\n  }\\n\\n  return null;\\n}\\n\\n// Helpers to patch console.logs to avoid logging during side-effect free\\n// replaying on render function. This currently only patches the object\\n// lazily which won't cover if the log function was extracted eagerly.\\n// We could also eagerly patch the method.\\nvar disabledDepth = 0;\\nvar prevLog;\\nvar prevInfo;\\nvar prevWarn;\\nvar prevError;\\nvar prevGroup;\\nvar prevGroupCollapsed;\\nvar prevGroupEnd;\\n\\nfunction disabledLog() {}\\n\\ndisabledLog.__reactDisabledLog = true;\\nfunction disableLogs() {\\n  {\\n    if (disabledDepth === 0) {\\n      /* eslint-disable react-internal/no-production-logging */\\n      prevLog = console.log;\\n      prevInfo = console.info;\\n      prevWarn = console.warn;\\n      prevError = console.error;\\n      prevGroup = console.group;\\n      prevGroupCollapsed = console.groupCollapsed;\\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\\n\\n      var props = {\\n        configurable: true,\\n        enumerable: true,\\n        value: disabledLog,\\n        writable: true\\n      }; // $FlowFixMe Flow thinks console is immutable.\\n\\n      Object.defineProperties(console, {\\n        info: props,\\n        log: props,\\n        warn: props,\\n        error: props,\\n        group: props,\\n        groupCollapsed: props,\\n        groupEnd: props\\n      });\\n      /* eslint-enable react-internal/no-production-logging */\\n    }\\n\\n    disabledDepth++;\\n  }\\n}\\nfunction reenableLogs() {\\n  {\\n    disabledDepth--;\\n\\n    if (disabledDepth === 0) {\\n      /* eslint-disable react-internal/no-production-logging */\\n      var props = {\\n        configurable: true,\\n        enumerable: true,\\n        writable: true\\n      }; // $FlowFixMe Flow thinks console is immutable.\\n\\n      Object.defineProperties(console, {\\n        log: _assign({}, props, {\\n          value: prevLog\\n        }),\\n        info: _assign({}, props, {\\n          value: prevInfo\\n        }),\\n        warn: _assign({}, props, {\\n          value: prevWarn\\n        }),\\n        error: _assign({}, props, {\\n          value: prevError\\n        }),\\n        group: _assign({}, props, {\\n          value: prevGroup\\n        }),\\n        groupCollapsed: _assign({}, props, {\\n          value: prevGroupCollapsed\\n        }),\\n        groupEnd: _assign({}, props, {\\n          value: prevGroupEnd\\n        })\\n      });\\n      /* eslint-enable react-internal/no-production-logging */\\n    }\\n\\n    if (disabledDepth < 0) {\\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\\n    }\\n  }\\n}\\n\\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\\nvar prefix;\\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\\n  {\\n    if (prefix === undefined) {\\n      // Extract the VM specific prefix used by each line.\\n      try {\\n        throw Error();\\n      } catch (x) {\\n        var match = x.stack.trim().match(/\\\\n( *(at )?)/);\\n        prefix = match && match[1] || '';\\n      }\\n    } // We use the prefix to ensure our stacks line up with native stack frames.\\n\\n\\n    return '\\\\n' + prefix + name;\\n  }\\n}\\nvar reentry = false;\\nvar componentFrameCache;\\n\\n{\\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\\n  componentFrameCache = new PossiblyWeakMap();\\n}\\n\\nfunction describeNativeComponentFrame(fn, construct) {\\n  // If something asked for a stack inside a fake render, it should get ignored.\\n  if (!fn || reentry) {\\n    return '';\\n  }\\n\\n  {\\n    var frame = componentFrameCache.get(fn);\\n\\n    if (frame !== undefined) {\\n      return frame;\\n    }\\n  }\\n\\n  var control;\\n  reentry = true;\\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\\n\\n  Error.prepareStackTrace = undefined;\\n  var previousDispatcher;\\n\\n  {\\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\\n    // for warnings.\\n\\n    ReactCurrentDispatcher.current = null;\\n    disableLogs();\\n  }\\n\\n  try {\\n    // This should throw.\\n    if (construct) {\\n      // Something should be setting the props in the constructor.\\n      var Fake = function () {\\n        throw Error();\\n      }; // $FlowFixMe\\n\\n\\n      Object.defineProperty(Fake.prototype, 'props', {\\n        set: function () {\\n          // We use a throwing setter instead of frozen or non-writable props\\n          // because that won't throw in a non-strict mode function.\\n          throw Error();\\n        }\\n      });\\n\\n      if (typeof Reflect === 'object' && Reflect.construct) {\\n        // We construct a different control for this case to include any extra\\n        // frames added by the construct call.\\n        try {\\n          Reflect.construct(Fake, []);\\n        } catch (x) {\\n          control = x;\\n        }\\n\\n        Reflect.construct(fn, [], Fake);\\n      } else {\\n        try {\\n          Fake.call();\\n        } catch (x) {\\n          control = x;\\n        }\\n\\n        fn.call(Fake.prototype);\\n      }\\n    } else {\\n      try {\\n        throw Error();\\n      } catch (x) {\\n        control = x;\\n      }\\n\\n      fn();\\n    }\\n  } catch (sample) {\\n    // This is inlined manually because closure doesn't do it for us.\\n    if (sample && control && typeof sample.stack === 'string') {\\n      // This extracts the first frame from the sample that isn't also in the control.\\n      // Skipping one frame that we assume is the frame that calls the two.\\n      var sampleLines = sample.stack.split('\\\\n');\\n      var controlLines = control.stack.split('\\\\n');\\n      var s = sampleLines.length - 1;\\n      var c = controlLines.length - 1;\\n\\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\\n        // We expect at least one stack frame to be shared.\\n        // Typically this will be the root most one. However, stack frames may be\\n        // cut off due to maximum stack limits. In this case, one maybe cut off\\n        // earlier than the other. We assume that the sample is longer or the same\\n        // and there for cut off earlier. So we should find the root most frame in\\n        // the sample somewhere in the control.\\n        c--;\\n      }\\n\\n      for (; s >= 1 && c >= 0; s--, c--) {\\n        // Next we find the first one that isn't the same which should be the\\n        // frame that called our sample function and the control.\\n        if (sampleLines[s] !== controlLines[c]) {\\n          // In V8, the first line is describing the message but other VMs don't.\\n          // If we're about to return the first line, and the control is also on the same\\n          // line, that's a pretty good indicator that our sample threw at same line as\\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\\n          // This can happen if you passed a class to function component, or non-function.\\n          if (s !== 1 || c !== 1) {\\n            do {\\n              s--;\\n              c--; // We may still have similar intermediate frames from the construct call.\\n              // The next one that isn't the same should be our match though.\\n\\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\\n                // V8 adds a \\\"new\\\" prefix for native classes. Let's remove it to make it prettier.\\n                var _frame = '\\\\n' + sampleLines[s].replace(' at new ', ' at ');\\n\\n                {\\n                  if (typeof fn === 'function') {\\n                    componentFrameCache.set(fn, _frame);\\n                  }\\n                } // Return the line we found.\\n\\n\\n                return _frame;\\n              }\\n            } while (s >= 1 && c >= 0);\\n          }\\n\\n          break;\\n        }\\n      }\\n    }\\n  } finally {\\n    reentry = false;\\n\\n    {\\n      ReactCurrentDispatcher.current = previousDispatcher;\\n      reenableLogs();\\n    }\\n\\n    Error.prepareStackTrace = previousPrepareStackTrace;\\n  } // Fallback to just using the name if we couldn't make it throw.\\n\\n\\n  var name = fn ? fn.displayName || fn.name : '';\\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\\n\\n  {\\n    if (typeof fn === 'function') {\\n      componentFrameCache.set(fn, syntheticFrame);\\n    }\\n  }\\n\\n  return syntheticFrame;\\n}\\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\\n  {\\n    return describeNativeComponentFrame(fn, false);\\n  }\\n}\\n\\nfunction shouldConstruct(Component) {\\n  var prototype = Component.prototype;\\n  return !!(prototype && prototype.isReactComponent);\\n}\\n\\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\\n\\n  if (type == null) {\\n    return '';\\n  }\\n\\n  if (typeof type === 'function') {\\n    {\\n      return describeNativeComponentFrame(type, shouldConstruct(type));\\n    }\\n  }\\n\\n  if (typeof type === 'string') {\\n    return describeBuiltInComponentFrame(type);\\n  }\\n\\n  switch (type) {\\n    case REACT_SUSPENSE_TYPE:\\n      return describeBuiltInComponentFrame('Suspense');\\n\\n    case REACT_SUSPENSE_LIST_TYPE:\\n      return describeBuiltInComponentFrame('SuspenseList');\\n  }\\n\\n  if (typeof type === 'object') {\\n    switch (type.$$typeof) {\\n      case REACT_FORWARD_REF_TYPE:\\n        return describeFunctionComponentFrame(type.render);\\n\\n      case REACT_MEMO_TYPE:\\n        // Memo may contain any component type so we recursively resolve it.\\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\\n\\n      case REACT_BLOCK_TYPE:\\n        return describeFunctionComponentFrame(type._render);\\n\\n      case REACT_LAZY_TYPE:\\n        {\\n          var lazyComponent = type;\\n          var payload = lazyComponent._payload;\\n          var init = lazyComponent._init;\\n\\n          try {\\n            // Lazy may contain any component type so we recursively resolve it.\\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\\n          } catch (x) {}\\n        }\\n    }\\n  }\\n\\n  return '';\\n}\\n\\nvar loggedTypeFailures = {};\\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\\n\\nfunction setCurrentlyValidatingElement(element) {\\n  {\\n    if (element) {\\n      var owner = element._owner;\\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\\n    } else {\\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\\n    }\\n  }\\n}\\n\\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\\n  {\\n    // $FlowFixMe This is okay but Flow doesn't know it.\\n    var has = Function.call.bind(Object.prototype.hasOwnProperty);\\n\\n    for (var typeSpecName in typeSpecs) {\\n      if (has(typeSpecs, typeSpecName)) {\\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\\n        // fail the render phase where it didn't fail before. So we log it.\\n        // After these have been cleaned up, we'll let them throw.\\n\\n        try {\\n          // This is intentionally an invariant that gets caught. It's the same\\n          // behavior as without this statement except with a better message.\\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\\n            err.name = 'Invariant Violation';\\n            throw err;\\n          }\\n\\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\\n        } catch (ex) {\\n          error$1 = ex;\\n        }\\n\\n        if (error$1 && !(error$1 instanceof Error)) {\\n          setCurrentlyValidatingElement(element);\\n\\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\\n\\n          setCurrentlyValidatingElement(null);\\n        }\\n\\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\\n          // Only monitor this failure once because there tends to be a lot of the\\n          // same error.\\n          loggedTypeFailures[error$1.message] = true;\\n          setCurrentlyValidatingElement(element);\\n\\n          error('Failed %s type: %s', location, error$1.message);\\n\\n          setCurrentlyValidatingElement(null);\\n        }\\n      }\\n    }\\n  }\\n}\\n\\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\\nvar RESERVED_PROPS = {\\n  key: true,\\n  ref: true,\\n  __self: true,\\n  __source: true\\n};\\nvar specialPropKeyWarningShown;\\nvar specialPropRefWarningShown;\\nvar didWarnAboutStringRefs;\\n\\n{\\n  didWarnAboutStringRefs = {};\\n}\\n\\nfunction hasValidRef(config) {\\n  {\\n    if (hasOwnProperty.call(config, 'ref')) {\\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\\n\\n      if (getter && getter.isReactWarning) {\\n        return false;\\n      }\\n    }\\n  }\\n\\n  return config.ref !== undefined;\\n}\\n\\nfunction hasValidKey(config) {\\n  {\\n    if (hasOwnProperty.call(config, 'key')) {\\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\\n\\n      if (getter && getter.isReactWarning) {\\n        return false;\\n      }\\n    }\\n  }\\n\\n  return config.key !== undefined;\\n}\\n\\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\\n  {\\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\\n      var componentName = getComponentName(ReactCurrentOwner.current.type);\\n\\n      if (!didWarnAboutStringRefs[componentName]) {\\n        error('Component \\\"%s\\\" contains the string ref \\\"%s\\\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentName(ReactCurrentOwner.current.type), config.ref);\\n\\n        didWarnAboutStringRefs[componentName] = true;\\n      }\\n    }\\n  }\\n}\\n\\nfunction defineKeyPropWarningGetter(props, displayName) {\\n  {\\n    var warnAboutAccessingKey = function () {\\n      if (!specialPropKeyWarningShown) {\\n        specialPropKeyWarningShown = true;\\n\\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\\n      }\\n    };\\n\\n    warnAboutAccessingKey.isReactWarning = true;\\n    Object.defineProperty(props, 'key', {\\n      get: warnAboutAccessingKey,\\n      configurable: true\\n    });\\n  }\\n}\\n\\nfunction defineRefPropWarningGetter(props, displayName) {\\n  {\\n    var warnAboutAccessingRef = function () {\\n      if (!specialPropRefWarningShown) {\\n        specialPropRefWarningShown = true;\\n\\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\\n      }\\n    };\\n\\n    warnAboutAccessingRef.isReactWarning = true;\\n    Object.defineProperty(props, 'ref', {\\n      get: warnAboutAccessingRef,\\n      configurable: true\\n    });\\n  }\\n}\\n/**\\n * Factory method to create a new React element. This no longer adheres to\\n * the class pattern, so do not use new to call it. Also, instanceof check\\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\\n * if something is a React Element.\\n *\\n * @param {*} type\\n * @param {*} props\\n * @param {*} key\\n * @param {string|object} ref\\n * @param {*} owner\\n * @param {*} self A *temporary* helper to detect places where `this` is\\n * different from the `owner` when React.createElement is called, so that we\\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\\n * functions, and as long as `this` and owner are the same, there will be no\\n * change in behavior.\\n * @param {*} source An annotation object (added by a transpiler or otherwise)\\n * indicating filename, line number, and/or other information.\\n * @internal\\n */\\n\\n\\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\\n  var element = {\\n    // This tag allows us to uniquely identify this as a React Element\\n    $$typeof: REACT_ELEMENT_TYPE,\\n    // Built-in properties that belong on the element\\n    type: type,\\n    key: key,\\n    ref: ref,\\n    props: props,\\n    // Record the component responsible for creating this element.\\n    _owner: owner\\n  };\\n\\n  {\\n    // The validation flag is currently mutative. We put it on\\n    // an external backing store so that we can freeze the whole object.\\n    // This can be replaced with a WeakMap once they are implemented in\\n    // commonly used development environments.\\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\\n    // the validation flag non-enumerable (where possible, which should\\n    // include every environment we run tests in), so the test framework\\n    // ignores it.\\n\\n    Object.defineProperty(element._store, 'validated', {\\n      configurable: false,\\n      enumerable: false,\\n      writable: true,\\n      value: false\\n    }); // self and source are DEV only properties.\\n\\n    Object.defineProperty(element, '_self', {\\n      configurable: false,\\n      enumerable: false,\\n      writable: false,\\n      value: self\\n    }); // Two elements created in two different places should be considered\\n    // equal for testing purposes and therefore we hide it from enumeration.\\n\\n    Object.defineProperty(element, '_source', {\\n      configurable: false,\\n      enumerable: false,\\n      writable: false,\\n      value: source\\n    });\\n\\n    if (Object.freeze) {\\n      Object.freeze(element.props);\\n      Object.freeze(element);\\n    }\\n  }\\n\\n  return element;\\n};\\n/**\\n * https://github.com/reactjs/rfcs/pull/107\\n * @param {*} type\\n * @param {object} props\\n * @param {string} key\\n */\\n\\nfunction jsxDEV(type, config, maybeKey, source, self) {\\n  {\\n    var propName; // Reserved names are extracted\\n\\n    var props = {};\\n    var key = null;\\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\\n    // issue if key is also explicitly declared (ie. <div {...props} key=\\\"Hi\\\" />\\n    // or <div key=\\\"Hi\\\" {...props} /> ). We want to deprecate key spread,\\n    // but as an intermediary step, we will use jsxDEV for everything except\\n    // <div {...props} key=\\\"Hi\\\" />, because we aren't currently able to tell if\\n    // key is explicitly declared to be undefined or not.\\n\\n    if (maybeKey !== undefined) {\\n      key = '' + maybeKey;\\n    }\\n\\n    if (hasValidKey(config)) {\\n      key = '' + config.key;\\n    }\\n\\n    if (hasValidRef(config)) {\\n      ref = config.ref;\\n      warnIfStringRefCannotBeAutoConverted(config, self);\\n    } // Remaining properties are added to a new props object\\n\\n\\n    for (propName in config) {\\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\\n        props[propName] = config[propName];\\n      }\\n    } // Resolve default props\\n\\n\\n    if (type && type.defaultProps) {\\n      var defaultProps = type.defaultProps;\\n\\n      for (propName in defaultProps) {\\n        if (props[propName] === undefined) {\\n          props[propName] = defaultProps[propName];\\n        }\\n      }\\n    }\\n\\n    if (key || ref) {\\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\\n\\n      if (key) {\\n        defineKeyPropWarningGetter(props, displayName);\\n      }\\n\\n      if (ref) {\\n        defineRefPropWarningGetter(props, displayName);\\n      }\\n    }\\n\\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\\n  }\\n}\\n\\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\\n\\nfunction setCurrentlyValidatingElement$1(element) {\\n  {\\n    if (element) {\\n      var owner = element._owner;\\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\\n    } else {\\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\\n    }\\n  }\\n}\\n\\nvar propTypesMisspellWarningShown;\\n\\n{\\n  propTypesMisspellWarningShown = false;\\n}\\n/**\\n * Verifies the object is a ReactElement.\\n * See https://reactjs.org/docs/react-api.html#isvalidelement\\n * @param {?object} object\\n * @return {boolean} True if `object` is a ReactElement.\\n * @final\\n */\\n\\nfunction isValidElement(object) {\\n  {\\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\\n  }\\n}\\n\\nfunction getDeclarationErrorAddendum() {\\n  {\\n    if (ReactCurrentOwner$1.current) {\\n      var name = getComponentName(ReactCurrentOwner$1.current.type);\\n\\n      if (name) {\\n        return '\\\\n\\\\nCheck the render method of `' + name + '`.';\\n      }\\n    }\\n\\n    return '';\\n  }\\n}\\n\\nfunction getSourceInfoErrorAddendum(source) {\\n  {\\n    if (source !== undefined) {\\n      var fileName = source.fileName.replace(/^.*[\\\\\\\\\\\\/]/, '');\\n      var lineNumber = source.lineNumber;\\n      return '\\\\n\\\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\\n    }\\n\\n    return '';\\n  }\\n}\\n/**\\n * Warn if there's no key explicitly set on dynamic arrays of children or\\n * object keys are not valid. This allows us to keep track of children between\\n * updates.\\n */\\n\\n\\nvar ownerHasKeyUseWarning = {};\\n\\nfunction getCurrentComponentErrorInfo(parentType) {\\n  {\\n    var info = getDeclarationErrorAddendum();\\n\\n    if (!info) {\\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\\n\\n      if (parentName) {\\n        info = \\\"\\\\n\\\\nCheck the top-level render call using <\\\" + parentName + \\\">.\\\";\\n      }\\n    }\\n\\n    return info;\\n  }\\n}\\n/**\\n * Warn if the element doesn't have an explicit key assigned to it.\\n * This element is in an array. The array could grow and shrink or be\\n * reordered. All children that haven't already been validated are required to\\n * have a \\\"key\\\" property assigned to it. Error statuses are cached so a warning\\n * will only be shown once.\\n *\\n * @internal\\n * @param {ReactElement} element Element that requires a key.\\n * @param {*} parentType element's parent's type.\\n */\\n\\n\\nfunction validateExplicitKey(element, parentType) {\\n  {\\n    if (!element._store || element._store.validated || element.key != null) {\\n      return;\\n    }\\n\\n    element._store.validated = true;\\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\\n\\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\\n      return;\\n    }\\n\\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\\n    // property, it may be the creator of the child that's responsible for\\n    // assigning it a key.\\n\\n    var childOwner = '';\\n\\n    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {\\n      // Give the component that originally created this child.\\n      childOwner = \\\" It was passed a child from \\\" + getComponentName(element._owner.type) + \\\".\\\";\\n    }\\n\\n    setCurrentlyValidatingElement$1(element);\\n\\n    error('Each child in a list should have a unique \\\"key\\\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\\n\\n    setCurrentlyValidatingElement$1(null);\\n  }\\n}\\n/**\\n * Ensure that every element either is passed in a static location, in an\\n * array with an explicit keys property defined, or in an object literal\\n * with valid key property.\\n *\\n * @internal\\n * @param {ReactNode} node Statically passed child of any type.\\n * @param {*} parentType node's parent's type.\\n */\\n\\n\\nfunction validateChildKeys(node, parentType) {\\n  {\\n    if (typeof node !== 'object') {\\n      return;\\n    }\\n\\n    if (Array.isArray(node)) {\\n      for (var i = 0; i < node.length; i++) {\\n        var child = node[i];\\n\\n        if (isValidElement(child)) {\\n          validateExplicitKey(child, parentType);\\n        }\\n      }\\n    } else if (isValidElement(node)) {\\n      // This element was passed in a valid location.\\n      if (node._store) {\\n        node._store.validated = true;\\n      }\\n    } else if (node) {\\n      var iteratorFn = getIteratorFn(node);\\n\\n      if (typeof iteratorFn === 'function') {\\n        // Entry iterators used to provide implicit keys,\\n        // but now we print a separate warning for them later.\\n        if (iteratorFn !== node.entries) {\\n          var iterator = iteratorFn.call(node);\\n          var step;\\n\\n          while (!(step = iterator.next()).done) {\\n            if (isValidElement(step.value)) {\\n              validateExplicitKey(step.value, parentType);\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\n/**\\n * Given an element, validate that its props follow the propTypes definition,\\n * provided by the type.\\n *\\n * @param {ReactElement} element\\n */\\n\\n\\nfunction validatePropTypes(element) {\\n  {\\n    var type = element.type;\\n\\n    if (type === null || type === undefined || typeof type === 'string') {\\n      return;\\n    }\\n\\n    var propTypes;\\n\\n    if (typeof type === 'function') {\\n      propTypes = type.propTypes;\\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\\n    // Inner props are checked in the reconciler.\\n    type.$$typeof === REACT_MEMO_TYPE)) {\\n      propTypes = type.propTypes;\\n    } else {\\n      return;\\n    }\\n\\n    if (propTypes) {\\n      // Intentionally inside to avoid triggering lazy initializers:\\n      var name = getComponentName(type);\\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\\n\\n      var _name = getComponentName(type);\\n\\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\\n    }\\n\\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\\n    }\\n  }\\n}\\n/**\\n * Given a fragment, validate that it can only be provided with fragment props\\n * @param {ReactElement} fragment\\n */\\n\\n\\nfunction validateFragmentProps(fragment) {\\n  {\\n    var keys = Object.keys(fragment.props);\\n\\n    for (var i = 0; i < keys.length; i++) {\\n      var key = keys[i];\\n\\n      if (key !== 'children' && key !== 'key') {\\n        setCurrentlyValidatingElement$1(fragment);\\n\\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\\n\\n        setCurrentlyValidatingElement$1(null);\\n        break;\\n      }\\n    }\\n\\n    if (fragment.ref !== null) {\\n      setCurrentlyValidatingElement$1(fragment);\\n\\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\\n\\n      setCurrentlyValidatingElement$1(null);\\n    }\\n  }\\n}\\n\\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\\n  {\\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\\n    // succeed and there will likely be errors in render.\\n\\n    if (!validType) {\\n      var info = '';\\n\\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\\n        info += ' You likely forgot to export your component from the file ' + \\\"it's defined in, or you might have mixed up default and named imports.\\\";\\n      }\\n\\n      var sourceInfo = getSourceInfoErrorAddendum(source);\\n\\n      if (sourceInfo) {\\n        info += sourceInfo;\\n      } else {\\n        info += getDeclarationErrorAddendum();\\n      }\\n\\n      var typeString;\\n\\n      if (type === null) {\\n        typeString = 'null';\\n      } else if (Array.isArray(type)) {\\n        typeString = 'array';\\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\\n        typeString = \\\"<\\\" + (getComponentName(type.type) || 'Unknown') + \\\" />\\\";\\n        info = ' Did you accidentally export a JSX literal instead of a component?';\\n      } else {\\n        typeString = typeof type;\\n      }\\n\\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\\n    }\\n\\n    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\\n    // TODO: Drop this when these are no longer allowed as the type argument.\\n\\n    if (element == null) {\\n      return element;\\n    } // Skip key warning if the type isn't valid since our key validation logic\\n    // doesn't expect a non-string/function type and can throw confusing errors.\\n    // We don't want exception behavior to differ between dev and prod.\\n    // (Rendering will throw with a helpful message and as soon as the type is\\n    // fixed, the key warnings will appear.)\\n\\n\\n    if (validType) {\\n      var children = props.children;\\n\\n      if (children !== undefined) {\\n        if (isStaticChildren) {\\n          if (Array.isArray(children)) {\\n            for (var i = 0; i < children.length; i++) {\\n              validateChildKeys(children[i], type);\\n            }\\n\\n            if (Object.freeze) {\\n              Object.freeze(children);\\n            }\\n          } else {\\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\\n          }\\n        } else {\\n          validateChildKeys(children, type);\\n        }\\n      }\\n    }\\n\\n    if (type === exports.Fragment) {\\n      validateFragmentProps(element);\\n    } else {\\n      validatePropTypes(element);\\n    }\\n\\n    return element;\\n  }\\n} // These two functions exist to still get child warnings in dev\\n// even with the prod transform. This means that jsxDEV is purely\\n// opt-in behavior for better messages but that we won't stop\\n// giving you warnings if you use production apis.\\n\\nfunction jsxWithValidationStatic(type, props, key) {\\n  {\\n    return jsxWithValidation(type, props, key, true);\\n  }\\n}\\nfunction jsxWithValidationDynamic(type, props, key) {\\n  {\\n    return jsxWithValidation(type, props, key, false);\\n  }\\n}\\n\\nvar jsx =  jsxWithValidationDynamic ; // we may want to special case jsxs internally to take advantage of static children.\\n// for now we can ship identical prod functions\\n\\nvar jsxs =  jsxWithValidationStatic ;\\n\\nexports.jsx = jsx;\\nexports.jsxs = jsxs;\\n  })();\\n}\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///../../../node_modules/react/cjs/react-jsx-runtime.development.js\\n\");\n\n/***/ }),\n\n/***/ \"../../../node_modules/react/jsx-runtime.js\":\n/*!**************************************************!*\\\n  !*** ../../../node_modules/react/jsx-runtime.js ***!\n  \\**************************************************/\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\neval(\"\\n\\nif (false) {} else {\\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-runtime.development.js */ \\\"../../../node_modules/react/cjs/react-jsx-runtime.development.js\\\");\\n}\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3JlYWN0L2pzeC1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUdBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvcmVhY3QvanN4LXJ1bnRpbWUuanM/MDZhYyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LXJ1bnRpbWUucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LXJ1bnRpbWUuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///../../../node_modules/react/jsx-runtime.js\\n\");\n\n/***/ }),\n\n/***/ \"@deriv/components\":\n/*!************************************!*\\\n  !*** external \"@deriv/components\" ***!\n  \\************************************/\n/***/ ((module) => {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__deriv_components__;\n\n/***/ }),\n\n/***/ \"@deriv/shared\":\n/*!********************************!*\\\n  !*** external \"@deriv/shared\" ***!\n  \\********************************/\n/***/ ((module) => {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__deriv_shared__;\n\n/***/ }),\n\n/***/ \"@deriv/translations\":\n/*!**************************************!*\\\n  !*** external \"@deriv/translations\" ***!\n  \\**************************************/\n/***/ ((module) => {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__deriv_translations__;\n\n/***/ }),\n\n/***/ \"react\":\n/*!************************!*\\\n  !*** external \"react\" ***!\n  \\************************/\n/***/ ((module) => {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_react__;\n\n/***/ }),\n\n/***/ \"../../../node_modules/clsx/dist/clsx.mjs\":\n/*!************************************************!*\\\n  !*** ../../../node_modules/clsx/dist/clsx.mjs ***!\n  \\************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   clsx: () => (/* binding */ clsx),\\n/* harmony export */   \\\"default\\\": () => (__WEBPACK_DEFAULT_EXPORT__)\\n/* harmony export */ });\\nfunction r(e){var t,f,n=\\\"\\\";if(\\\"string\\\"==typeof e||\\\"number\\\"==typeof e)n+=e;else if(\\\"object\\\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\\\" \\\"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\\\" \\\"),n+=f);return n}function clsx(){for(var e,t,f=0,n=\\\"\\\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\\\" \\\"),n+=t);return n}/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (clsx);//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nsc3gvZGlzdC9jbHN4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nsc3gvZGlzdC9jbHN4Lm1qcz8yNmMzIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIHIoZSl7dmFyIHQsZixuPVwiXCI7aWYoXCJzdHJpbmdcIj09dHlwZW9mIGV8fFwibnVtYmVyXCI9PXR5cGVvZiBlKW4rPWU7ZWxzZSBpZihcIm9iamVjdFwiPT10eXBlb2YgZSlpZihBcnJheS5pc0FycmF5KGUpKXt2YXIgbz1lLmxlbmd0aDtmb3IodD0wO3Q8bzt0KyspZVt0XSYmKGY9cihlW3RdKSkmJihuJiYobis9XCIgXCIpLG4rPWYpfWVsc2UgZm9yKGYgaW4gZSllW2ZdJiYobiYmKG4rPVwiIFwiKSxuKz1mKTtyZXR1cm4gbn1leHBvcnQgZnVuY3Rpb24gY2xzeCgpe2Zvcih2YXIgZSx0LGY9MCxuPVwiXCIsbz1hcmd1bWVudHMubGVuZ3RoO2Y8bztmKyspKGU9YXJndW1lbnRzW2ZdKSYmKHQ9cihlKSkmJihuJiYobis9XCIgXCIpLG4rPXQpO3JldHVybiBufWV4cG9ydCBkZWZhdWx0IGNsc3g7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///../../../node_modules/clsx/dist/clsx.mjs\\n\");\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __nested_webpack_require_131545__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __nested_webpack_require_131545__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t/* webpack/runtime/compat get default export */\n/******/ \t(() => {\n/******/ \t\t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t\t__nested_webpack_require_131545__.n = (module) => {\n/******/ \t\t\tvar getter = module && module.__esModule ?\n/******/ \t\t\t\t() => (module['default']) :\n/******/ \t\t\t\t() => (module);\n/******/ \t\t\t__nested_webpack_require_131545__.d(getter, { a: getter });\n/******/ \t\t\treturn getter;\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/define property getters */\n/******/ \t(() => {\n/******/ \t\t// define getter functions for harmony exports\n/******/ \t\t__nested_webpack_require_131545__.d = (exports, definition) => {\n/******/ \t\t\tfor(var key in definition) {\n/******/ \t\t\t\tif(__nested_webpack_require_131545__.o(definition, key) && !__nested_webpack_require_131545__.o(exports, key)) {\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\n/******/ \t(() => {\n/******/ \t\t__nested_webpack_require_131545__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/make namespace object */\n/******/ \t(() => {\n/******/ \t\t// define __esModule on exports\n/******/ \t\t__nested_webpack_require_131545__.r = (exports) => {\n/******/ \t\t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t\t}\n/******/ \t\t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/************************************************************************/\n/******/ \t\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \t// This entry module can't be inlined because the eval-source-map devtool is used.\n/******/ \tvar __nested_webpack_exports__ = __nested_webpack_require_131545__(\"./Components/currency-selector/radio-button.tsx\");\n/******/ \t__nested_webpack_exports__ = __nested_webpack_exports__[\"default\"];\n/******/ \t\n/******/ \treturn __nested_webpack_exports__;\n/******/ })()\n;\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../account/dist/account/js/currency-radio-button.js\n"
                );

                /***/
            },

        /***/ '../../account/dist/account/js/currency-selector-config.js':
            /*!*****************************************************************!*\
  !*** ../../account/dist/account/js/currency-selector-config.js ***!
  \*****************************************************************/
            /***/ (module, __unused_webpack_exports, __webpack_require__) => {
                eval(
                    '/*\n * ATTENTION: An "eval-source-map" devtool has been used.\n * This devtool is neither made for production nor for readable output files.\n * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.\n * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)\n * or disable the default devtool with "devtool: false".\n * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory(__webpack_require__(/*! @deriv/shared */ "../../shared/src/index.ts"), __webpack_require__(/*! @deriv/translations */ "../../translations/src/index.js"));\n\telse {}\n})(self, (__WEBPACK_EXTERNAL_MODULE__deriv_shared__, __WEBPACK_EXTERNAL_MODULE__deriv_translations__) => {\nreturn /******/ (() => { // webpackBootstrap\n/******/ \t"use strict";\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ "./Configs/currency-selector-config.ts":\n/*!*********************************************!*\\\n  !*** ./Configs/currency-selector-config.ts ***!\n  \\*********************************************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\neval("__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\"default\\": () => (__WEBPACK_DEFAULT_EXPORT__)\\n/* harmony export */ });\\n/* harmony import */ var _deriv_shared__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @deriv/shared */ \\"@deriv/shared\\");\\n/* harmony import */ var _deriv_shared__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_deriv_shared__WEBPACK_IMPORTED_MODULE_0__);\\n/* harmony import */ var _deriv_translations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @deriv/translations */ \\"@deriv/translations\\");\\n/* harmony import */ var _deriv_translations__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_deriv_translations__WEBPACK_IMPORTED_MODULE_1__);\\n\\n\\nconst currency_selector_config = {\\n  currency: {\\n    supported_in: [\'maltainvest\', \'svg\'],\\n    default_value: \'\',\\n    rules: [[\'req\', (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_1__.localize)(\'Select an item\')]]\\n  }\\n};\\nconst currencySelectorConfig = (_ref, CurrencySelector) => {\\n  let {\\n    real_account_signup_target\\n  } = _ref;\\n  return {\\n    header: {\\n      active_title: (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_1__.localize)(\'Select your preferred currency\'),\\n      title: (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_1__.localize)(\'Account currency\')\\n    },\\n    body: CurrencySelector,\\n    form_value: (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_0__.getDefaultFields)(real_account_signup_target, currency_selector_config),\\n    props: {\\n      validate: (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_0__.generateValidationFunction)(real_account_signup_target, currency_selector_config)\\n    },\\n    passthrough: [\'legal_allowed_currencies\'],\\n    icon: \'IcDashboardCurrency\'\\n  };\\n};\\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (currencySelectorConfig);//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9Db25maWdzL2N1cnJlbmN5LXNlbGVjdG9yLWNvbmZpZy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBR0E7QUFGQTtBQUFBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi9Db25maWdzL2N1cnJlbmN5LXNlbGVjdG9yLWNvbmZpZy50cz8xNWE4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBnZW5lcmF0ZVZhbGlkYXRpb25GdW5jdGlvbiwgZ2V0RGVmYXVsdEZpZWxkcywgVFNjaGVtYSB9IGZyb20gJ0BkZXJpdi9zaGFyZWQnO1xuaW1wb3J0IHsgbG9jYWxpemUgfSBmcm9tICdAZGVyaXYvdHJhbnNsYXRpb25zJztcblxuY29uc3QgY3VycmVuY3lfc2VsZWN0b3JfY29uZmlnOiBUU2NoZW1hID0ge1xuICAgIGN1cnJlbmN5OiB7XG4gICAgICAgIHN1cHBvcnRlZF9pbjogWydtYWx0YWludmVzdCcsICdzdmcnXSxcbiAgICAgICAgZGVmYXVsdF92YWx1ZTogJycsXG4gICAgICAgIHJ1bGVzOiBbWydyZXEnLCBsb2NhbGl6ZSgnU2VsZWN0IGFuIGl0ZW0nKV1dLFxuICAgIH0sXG59O1xuXG5jb25zdCBjdXJyZW5jeVNlbGVjdG9yQ29uZmlnID0gKFxuICAgIHsgcmVhbF9hY2NvdW50X3NpZ251cF90YXJnZXQgfTogeyByZWFsX2FjY291bnRfc2lnbnVwX3RhcmdldDogc3RyaW5nIH0sXG4gICAgQ3VycmVuY3lTZWxlY3RvcjogUmVhY3QuQ29tcG9uZW50XG4pID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgICBoZWFkZXI6IHtcbiAgICAgICAgICAgIGFjdGl2ZV90aXRsZTogbG9jYWxpemUoJ1NlbGVjdCB5b3VyIHByZWZlcnJlZCBjdXJyZW5jeScpLFxuICAgICAgICAgICAgdGl0bGU6IGxvY2FsaXplKCdBY2NvdW50IGN1cnJlbmN5JyksXG4gICAgICAgIH0sXG4gICAgICAgIGJvZHk6IEN1cnJlbmN5U2VsZWN0b3IsXG4gICAgICAgIGZvcm1fdmFsdWU6IGdldERlZmF1bHRGaWVsZHMocmVhbF9hY2NvdW50X3NpZ251cF90YXJnZXQsIGN1cnJlbmN5X3NlbGVjdG9yX2NvbmZpZyksXG4gICAgICAgIHByb3BzOiB7XG4gICAgICAgICAgICB2YWxpZGF0ZTogZ2VuZXJhdGVWYWxpZGF0aW9uRnVuY3Rpb24ocmVhbF9hY2NvdW50X3NpZ251cF90YXJnZXQsIGN1cnJlbmN5X3NlbGVjdG9yX2NvbmZpZyksXG4gICAgICAgIH0sXG4gICAgICAgIHBhc3N0aHJvdWdoOiBbJ2xlZ2FsX2FsbG93ZWRfY3VycmVuY2llcyddLFxuICAgICAgICBpY29uOiAnSWNEYXNoYm9hcmRDdXJyZW5jeScsXG4gICAgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGN1cnJlbmN5U2VsZWN0b3JDb25maWc7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///./Configs/currency-selector-config.ts\\n");\n\n/***/ }),\n\n/***/ "@deriv/shared":\n/*!********************************!*\\\n  !*** external "@deriv/shared" ***!\n  \\********************************/\n/***/ ((module) => {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__deriv_shared__;\n\n/***/ }),\n\n/***/ "@deriv/translations":\n/*!**************************************!*\\\n  !*** external "@deriv/translations" ***!\n  \\**************************************/\n/***/ ((module) => {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__deriv_translations__;\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __nested_webpack_require_6370__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __nested_webpack_require_6370__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t/* webpack/runtime/compat get default export */\n/******/ \t(() => {\n/******/ \t\t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t\t__nested_webpack_require_6370__.n = (module) => {\n/******/ \t\t\tvar getter = module && module.__esModule ?\n/******/ \t\t\t\t() => (module[\'default\']) :\n/******/ \t\t\t\t() => (module);\n/******/ \t\t\t__nested_webpack_require_6370__.d(getter, { a: getter });\n/******/ \t\t\treturn getter;\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/define property getters */\n/******/ \t(() => {\n/******/ \t\t// define getter functions for harmony exports\n/******/ \t\t__nested_webpack_require_6370__.d = (exports, definition) => {\n/******/ \t\t\tfor(var key in definition) {\n/******/ \t\t\t\tif(__nested_webpack_require_6370__.o(definition, key) && !__nested_webpack_require_6370__.o(exports, key)) {\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\n/******/ \t(() => {\n/******/ \t\t__nested_webpack_require_6370__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/make namespace object */\n/******/ \t(() => {\n/******/ \t\t// define __esModule on exports\n/******/ \t\t__nested_webpack_require_6370__.r = (exports) => {\n/******/ \t\t\tif(typeof Symbol !== \'undefined\' && Symbol.toStringTag) {\n/******/ \t\t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: \'Module\' });\n/******/ \t\t\t}\n/******/ \t\t\tObject.defineProperty(exports, \'__esModule\', { value: true });\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/************************************************************************/\n/******/ \t\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \t// This entry module can\'t be inlined because the eval-source-map devtool is used.\n/******/ \tvar __nested_webpack_exports__ = __nested_webpack_require_6370__("./Configs/currency-selector-config.ts");\n/******/ \t__nested_webpack_exports__ = __nested_webpack_exports__["default"];\n/******/ \t\n/******/ \treturn __nested_webpack_exports__;\n/******/ })()\n;\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vYWNjb3VudC9kaXN0L2FjY291bnQvanMvY3VycmVuY3ktc2VsZWN0b3ItY29uZmlnLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi8uLi9hY2NvdW50L2Rpc3QvYWNjb3VudC9qcy9jdXJyZW5jeS1zZWxlY3Rvci1jb25maWcuanM/MzhiZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQVRURU5USU9OOiBBbiBcImV2YWwtc291cmNlLW1hcFwiIGRldnRvb2wgaGFzIGJlZW4gdXNlZC5cbiAqIFRoaXMgZGV2dG9vbCBpcyBuZWl0aGVyIG1hZGUgZm9yIHByb2R1Y3Rpb24gbm9yIGZvciByZWFkYWJsZSBvdXRwdXQgZmlsZXMuXG4gKiBJdCB1c2VzIFwiZXZhbCgpXCIgY2FsbHMgdG8gY3JlYXRlIGEgc2VwYXJhdGUgc291cmNlIGZpbGUgd2l0aCBhdHRhY2hlZCBTb3VyY2VNYXBzIGluIHRoZSBicm93c2VyIGRldnRvb2xzLlxuICogSWYgeW91IGFyZSB0cnlpbmcgdG8gcmVhZCB0aGUgb3V0cHV0IGZpbGUsIHNlbGVjdCBhIGRpZmZlcmVudCBkZXZ0b29sIChodHRwczovL3dlYnBhY2suanMub3JnL2NvbmZpZ3VyYXRpb24vZGV2dG9vbC8pXG4gKiBvciBkaXNhYmxlIHRoZSBkZWZhdWx0IGRldnRvb2wgd2l0aCBcImRldnRvb2w6IGZhbHNlXCIuXG4gKiBJZiB5b3UgYXJlIGxvb2tpbmcgZm9yIHByb2R1Y3Rpb24tcmVhZHkgb3V0cHV0IGZpbGVzLCBzZWUgbW9kZTogXCJwcm9kdWN0aW9uXCIgKGh0dHBzOi8vd2VicGFjay5qcy5vcmcvY29uZmlndXJhdGlvbi9tb2RlLykuXG4gKi9cbihmdW5jdGlvbiB3ZWJwYWNrVW5pdmVyc2FsTW9kdWxlRGVmaW5pdGlvbihyb290LCBmYWN0b3J5KSB7XG5cdGlmKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgbW9kdWxlID09PSAnb2JqZWN0Jylcblx0XHRtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkocmVxdWlyZShcIkBkZXJpdi9zaGFyZWRcIiksIHJlcXVpcmUoXCJAZGVyaXYvdHJhbnNsYXRpb25zXCIpKTtcblx0ZWxzZSBpZih0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpXG5cdFx0ZGVmaW5lKFtcIkBkZXJpdi9zaGFyZWRcIiwgXCJAZGVyaXYvdHJhbnNsYXRpb25zXCJdLCBmYWN0b3J5KTtcblx0ZWxzZSBpZih0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcpXG5cdFx0ZXhwb3J0c1tcIkBkZXJpdi9hY2NvdW50XCJdID0gZmFjdG9yeShyZXF1aXJlKFwiQGRlcml2L3NoYXJlZFwiKSwgcmVxdWlyZShcIkBkZXJpdi90cmFuc2xhdGlvbnNcIikpO1xuXHRlbHNlXG5cdFx0cm9vdFtcIkBkZXJpdi9hY2NvdW50XCJdID0gZmFjdG9yeShyb290W1wiQGRlcml2L3NoYXJlZFwiXSwgcm9vdFtcIkBkZXJpdi90cmFuc2xhdGlvbnNcIl0pO1xufSkoc2VsZiwgKF9fV0VCUEFDS19FWFRFUk5BTF9NT0RVTEVfX2Rlcml2X3NoYXJlZF9fLCBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFX19kZXJpdl90cmFuc2xhdGlvbnNfXykgPT4ge1xucmV0dXJuIC8qKioqKiovICgoKSA9PiB7IC8vIHdlYnBhY2tCb290c3RyYXBcbi8qKioqKiovIFx0XCJ1c2Ugc3RyaWN0XCI7XG4vKioqKioqLyBcdHZhciBfX3dlYnBhY2tfbW9kdWxlc19fID0gKHtcblxuLyoqKi8gXCIuL0NvbmZpZ3MvY3VycmVuY3ktc2VsZWN0b3ItY29uZmlnLnRzXCI6XG4vKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlxcXG4gICEqKiogLi9Db25maWdzL2N1cnJlbmN5LXNlbGVjdG9yLWNvbmZpZy50cyAqKiohXG4gIFxcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyoqKi8gKChfX3VudXNlZF93ZWJwYWNrX21vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykgPT4ge1xuXG5ldmFsKFwiX193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pO1xcbi8qIGhhcm1vbnkgZXhwb3J0ICovIF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCB7XFxuLyogaGFybW9ueSBleHBvcnQgKi8gICBcXFwiZGVmYXVsdFxcXCI6ICgpID0+IChfX1dFQlBBQ0tfREVGQVVMVF9FWFBPUlRfXylcXG4vKiBoYXJtb255IGV4cG9ydCAqLyB9KTtcXG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX2Rlcml2X3NoYXJlZF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgQGRlcml2L3NoYXJlZCAqLyBcXFwiQGRlcml2L3NoYXJlZFxcXCIpO1xcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfZGVyaXZfc2hhcmVkX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdCA9IC8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4oX2Rlcml2X3NoYXJlZF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fKTtcXG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX2Rlcml2X3RyYW5zbGF0aW9uc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgQGRlcml2L3RyYW5zbGF0aW9ucyAqLyBcXFwiQGRlcml2L3RyYW5zbGF0aW9uc1xcXCIpO1xcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfZGVyaXZfdHJhbnNsYXRpb25zX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19fZGVmYXVsdCA9IC8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4oX2Rlcml2X3RyYW5zbGF0aW9uc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fKTtcXG5cXG5cXG5jb25zdCBjdXJyZW5jeV9zZWxlY3Rvcl9jb25maWcgPSB7XFxuICBjdXJyZW5jeToge1xcbiAgICBzdXBwb3J0ZWRfaW46IFsnbWFsdGFpbnZlc3QnLCAnc3ZnJ10sXFxuICAgIGRlZmF1bHRfdmFsdWU6ICcnLFxcbiAgICBydWxlczogW1sncmVxJywgKDAsX2Rlcml2X3RyYW5zbGF0aW9uc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fLmxvY2FsaXplKSgnU2VsZWN0IGFuIGl0ZW0nKV1dXFxuICB9XFxufTtcXG5jb25zdCBjdXJyZW5jeVNlbGVjdG9yQ29uZmlnID0gKF9yZWYsIEN1cnJlbmN5U2VsZWN0b3IpID0+IHtcXG4gIGxldCB7XFxuICAgIHJlYWxfYWNjb3VudF9zaWdudXBfdGFyZ2V0XFxuICB9ID0gX3JlZjtcXG4gIHJldHVybiB7XFxuICAgIGhlYWRlcjoge1xcbiAgICAgIGFjdGl2ZV90aXRsZTogKDAsX2Rlcml2X3RyYW5zbGF0aW9uc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fLmxvY2FsaXplKSgnU2VsZWN0IHlvdXIgcHJlZmVycmVkIGN1cnJlbmN5JyksXFxuICAgICAgdGl0bGU6ICgwLF9kZXJpdl90cmFuc2xhdGlvbnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXy5sb2NhbGl6ZSkoJ0FjY291bnQgY3VycmVuY3knKVxcbiAgICB9LFxcbiAgICBib2R5OiBDdXJyZW5jeVNlbGVjdG9yLFxcbiAgICBmb3JtX3ZhbHVlOiAoMCxfZGVyaXZfc2hhcmVkX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18uZ2V0RGVmYXVsdEZpZWxkcykocmVhbF9hY2NvdW50X3NpZ251cF90YXJnZXQsIGN1cnJlbmN5X3NlbGVjdG9yX2NvbmZpZyksXFxuICAgIHByb3BzOiB7XFxuICAgICAgdmFsaWRhdGU6ICgwLF9kZXJpdl9zaGFyZWRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy5nZW5lcmF0ZVZhbGlkYXRpb25GdW5jdGlvbikocmVhbF9hY2NvdW50X3NpZ251cF90YXJnZXQsIGN1cnJlbmN5X3NlbGVjdG9yX2NvbmZpZylcXG4gICAgfSxcXG4gICAgcGFzc3Rocm91Z2g6IFsnbGVnYWxfYWxsb3dlZF9jdXJyZW5jaWVzJ10sXFxuICAgIGljb246ICdJY0Rhc2hib2FyZEN1cnJlbmN5J1xcbiAgfTtcXG59O1xcbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gY29uc3QgX19XRUJQQUNLX0RFRkFVTFRfRVhQT1JUX18gPSAoY3VycmVuY3lTZWxlY3RvckNvbmZpZyk7Ly8jIHNvdXJjZVVSTD1bbW9kdWxlXVxcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pTGk5RGIyNW1hV2R6TDJOMWNuSmxibU41TFhObGJHVmpkRzl5TFdOdmJtWnBaeTUwY3lJc0ltMWhjSEJwYm1keklqb2lPenM3T3pzN096dEJRVU5CTzBGQlEwRTdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVVZCTzBGQlIwRTdRVUZHUVR0QlFVRkJPMEZCUjBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVVZCSWl3aWMyOTFjbU5sY3lJNld5SjNaV0p3WVdOck9pOHZRR1JsY21sMkwyRmpZMjkxYm5RdkxpOURiMjVtYVdkekwyTjFjbkpsYm1ONUxYTmxiR1ZqZEc5eUxXTnZibVpwWnk1MGN6OHhOV0U0SWwwc0luTnZkWEpqWlhORGIyNTBaVzUwSWpwYkltbHRjRzl5ZENCU1pXRmpkQ0JtY205dElDZHlaV0ZqZENjN1hHNXBiWEJ2Y25RZ2V5Qm5aVzVsY21GMFpWWmhiR2xrWVhScGIyNUdkVzVqZEdsdmJpd2daMlYwUkdWbVlYVnNkRVpwWld4a2N5d2dWRk5qYUdWdFlTQjlJR1p5YjIwZ0owQmtaWEpwZGk5emFHRnlaV1FuTzF4dWFXMXdiM0owSUhzZ2JHOWpZV3hwZW1VZ2ZTQm1jbTl0SUNkQVpHVnlhWFl2ZEhKaGJuTnNZWFJwYjI1ekp6dGNibHh1WTI5dWMzUWdZM1Z5Y21WdVkzbGZjMlZzWldOMGIzSmZZMjl1Wm1sbk9pQlVVMk5vWlcxaElEMGdlMXh1SUNBZ0lHTjFjbkpsYm1ONU9pQjdYRzRnSUNBZ0lDQWdJSE4xY0hCdmNuUmxaRjlwYmpvZ1d5ZHRZV3gwWVdsdWRtVnpkQ2NzSUNkemRtY25YU3hjYmlBZ0lDQWdJQ0FnWkdWbVlYVnNkRjkyWVd4MVpUb2dKeWNzWEc0Z0lDQWdJQ0FnSUhKMWJHVnpPaUJiV3lkeVpYRW5MQ0JzYjJOaGJHbDZaU2duVTJWc1pXTjBJR0Z1SUdsMFpXMG5LVjFkTEZ4dUlDQWdJSDBzWEc1OU8xeHVYRzVqYjI1emRDQmpkWEp5Wlc1amVWTmxiR1ZqZEc5eVEyOXVabWxuSUQwZ0tGeHVJQ0FnSUhzZ2NtVmhiRjloWTJOdmRXNTBYM05wWjI1MWNGOTBZWEpuWlhRZ2ZUb2dleUJ5WldGc1gyRmpZMjkxYm5SZmMybG5iblZ3WDNSaGNtZGxkRG9nYzNSeWFXNW5JSDBzWEc0Z0lDQWdRM1Z5Y21WdVkzbFRaV3hsWTNSdmNqb2dVbVZoWTNRdVEyOXRjRzl1Wlc1MFhHNHBJRDArSUh0Y2JpQWdJQ0J5WlhSMWNtNGdlMXh1SUNBZ0lDQWdJQ0JvWldGa1pYSTZJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHRmpkR2wyWlY5MGFYUnNaVG9nYkc5allXeHBlbVVvSjFObGJHVmpkQ0I1YjNWeUlIQnlaV1psY25KbFpDQmpkWEp5Wlc1amVTY3BMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2RHbDBiR1U2SUd4dlkyRnNhWHBsS0NkQlkyTnZkVzUwSUdOMWNuSmxibU41Snlrc1hHNGdJQ0FnSUNBZ0lIMHNYRzRnSUNBZ0lDQWdJR0p2WkhrNklFTjFjbkpsYm1ONVUyVnNaV04wYjNJc1hHNGdJQ0FnSUNBZ0lHWnZjbTFmZG1Gc2RXVTZJR2RsZEVSbFptRjFiSFJHYVdWc1pITW9jbVZoYkY5aFkyTnZkVzUwWDNOcFoyNTFjRjkwWVhKblpYUXNJR04xY25KbGJtTjVYM05sYkdWamRHOXlYMk52Ym1acFp5a3NYRzRnSUNBZ0lDQWdJSEJ5YjNCek9pQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMllXeHBaR0YwWlRvZ1oyVnVaWEpoZEdWV1lXeHBaR0YwYVc5dVJuVnVZM1JwYjI0b2NtVmhiRjloWTJOdmRXNTBYM05wWjI1MWNGOTBZWEpuWlhRc0lHTjFjbkpsYm1ONVgzTmxiR1ZqZEc5eVgyTnZibVpwWnlrc1hHNGdJQ0FnSUNBZ0lIMHNYRzRnSUNBZ0lDQWdJSEJoYzNOMGFISnZkV2RvT2lCYkoyeGxaMkZzWDJGc2JHOTNaV1JmWTNWeWNtVnVZMmxsY3lkZExGeHVJQ0FnSUNBZ0lDQnBZMjl1T2lBblNXTkVZWE5vWW05aGNtUkRkWEp5Wlc1amVTY3NYRzRnSUNBZ2ZUdGNibjA3WEc1Y2JtVjRjRzl5ZENCa1pXWmhkV3gwSUdOMWNuSmxibU41VTJWc1pXTjBiM0pEYjI1bWFXYzdYRzRpWFN3aWJtRnRaWE1pT2x0ZExDSnpiM1Z5WTJWU2IyOTBJam9pSW4wPVxcbi8vIyBzb3VyY2VVUkw9d2VicGFjay1pbnRlcm5hbDovLy8uL0NvbmZpZ3MvY3VycmVuY3ktc2VsZWN0b3ItY29uZmlnLnRzXFxuXCIpO1xuXG4vKioqLyB9KSxcblxuLyoqKi8gXCJAZGVyaXYvc2hhcmVkXCI6XG4vKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXFxcbiAgISoqKiBleHRlcm5hbCBcIkBkZXJpdi9zaGFyZWRcIiAqKiohXG4gIFxcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKioqLyAoKG1vZHVsZSkgPT4ge1xuXG5tb2R1bGUuZXhwb3J0cyA9IF9fV0VCUEFDS19FWFRFUk5BTF9NT0RVTEVfX2Rlcml2X3NoYXJlZF9fO1xuXG4vKioqLyB9KSxcblxuLyoqKi8gXCJAZGVyaXYvdHJhbnNsYXRpb25zXCI6XG4vKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXFxcbiAgISoqKiBleHRlcm5hbCBcIkBkZXJpdi90cmFuc2xhdGlvbnNcIiAqKiohXG4gIFxcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKioqLyAoKG1vZHVsZSkgPT4ge1xuXG5tb2R1bGUuZXhwb3J0cyA9IF9fV0VCUEFDS19FWFRFUk5BTF9NT0RVTEVfX2Rlcml2X3RyYW5zbGF0aW9uc19fO1xuXG4vKioqLyB9KVxuXG4vKioqKioqLyBcdH0pO1xuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qKioqKiovIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuLyoqKioqKi8gXHR2YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG4vKioqKioqLyBcdFxuLyoqKioqKi8gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuLyoqKioqKi8gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG4vKioqKioqLyBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4vKioqKioqLyBcdFx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG4vKioqKioqLyBcdFx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG4vKioqKioqLyBcdFx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG4vKioqKioqLyBcdFx0fVxuLyoqKioqKi8gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4vKioqKioqLyBcdFx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG4vKioqKioqLyBcdFx0XHQvLyBubyBtb2R1bGUuaWQgbmVlZGVkXG4vKioqKioqLyBcdFx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuLyoqKioqKi8gXHRcdFx0ZXhwb3J0czoge31cbi8qKioqKiovIFx0XHR9O1xuLyoqKioqKi8gXHRcbi8qKioqKiovIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbi8qKioqKiovIFx0XHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcbi8qKioqKiovIFx0XG4vKioqKioqLyBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbi8qKioqKiovIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4vKioqKioqLyBcdH1cbi8qKioqKiovIFx0XG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyoqKioqKi8gXHQvKiB3ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCAqL1xuLyoqKioqKi8gXHQoKCkgPT4ge1xuLyoqKioqKi8gXHRcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4vKioqKioqLyBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuLyoqKioqKi8gXHRcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4vKioqKioqLyBcdFx0XHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuLyoqKioqKi8gXHRcdFx0XHQoKSA9PiAobW9kdWxlKTtcbi8qKioqKiovIFx0XHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuLyoqKioqKi8gXHRcdFx0cmV0dXJuIGdldHRlcjtcbi8qKioqKiovIFx0XHR9O1xuLyoqKioqKi8gXHR9KSgpO1xuLyoqKioqKi8gXHRcbi8qKioqKiovIFx0Lyogd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzICovXG4vKioqKioqLyBcdCgoKSA9PiB7XG4vKioqKioqLyBcdFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuLyoqKioqKi8gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG4vKioqKioqLyBcdFx0XHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG4vKioqKioqLyBcdFx0XHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuLyoqKioqKi8gXHRcdFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG4vKioqKioqLyBcdFx0XHRcdH1cbi8qKioqKiovIFx0XHRcdH1cbi8qKioqKiovIFx0XHR9O1xuLyoqKioqKi8gXHR9KSgpO1xuLyoqKioqKi8gXHRcbi8qKioqKiovIFx0Lyogd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCAqL1xuLyoqKioqKi8gXHQoKCkgPT4ge1xuLyoqKioqKi8gXHRcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSlcbi8qKioqKiovIFx0fSkoKTtcbi8qKioqKiovIFx0XG4vKioqKioqLyBcdC8qIHdlYnBhY2svcnVudGltZS9tYWtlIG5hbWVzcGFjZSBvYmplY3QgKi9cbi8qKioqKiovIFx0KCgpID0+IHtcbi8qKioqKiovIFx0XHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4vKioqKioqLyBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yID0gKGV4cG9ydHMpID0+IHtcbi8qKioqKiovIFx0XHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuLyoqKioqKi8gXHRcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcbi8qKioqKiovIFx0XHRcdH1cbi8qKioqKiovIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4vKioqKioqLyBcdFx0fTtcbi8qKioqKiovIFx0fSkoKTtcbi8qKioqKiovIFx0XG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyoqKioqKi8gXHRcbi8qKioqKiovIFx0Ly8gc3RhcnR1cFxuLyoqKioqKi8gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbi8qKioqKiovIFx0Ly8gVGhpcyBlbnRyeSBtb2R1bGUgY2FuJ3QgYmUgaW5saW5lZCBiZWNhdXNlIHRoZSBldmFsLXNvdXJjZS1tYXAgZGV2dG9vbCBpcyB1c2VkLlxuLyoqKioqKi8gXHR2YXIgX193ZWJwYWNrX2V4cG9ydHNfXyA9IF9fd2VicGFja19yZXF1aXJlX18oXCIuL0NvbmZpZ3MvY3VycmVuY3ktc2VsZWN0b3ItY29uZmlnLnRzXCIpO1xuLyoqKioqKi8gXHRfX3dlYnBhY2tfZXhwb3J0c19fID0gX193ZWJwYWNrX2V4cG9ydHNfX1tcImRlZmF1bHRcIl07XG4vKioqKioqLyBcdFxuLyoqKioqKi8gXHRyZXR1cm4gX193ZWJwYWNrX2V4cG9ydHNfXztcbi8qKioqKiovIH0pKClcbjtcbn0pOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../account/dist/account/js/currency-selector-config.js\n'
                );

                /***/
            },

        /***/ '../../account/dist/account/js/risk-tolerance-warning-modal.js':
            /*!*********************************************************************!*\
  !*** ../../account/dist/account/js/risk-tolerance-warning-modal.js ***!
  \*********************************************************************/
            /***/ (module, __unused_webpack_exports, __webpack_require__) => {
                eval(
                    "/*\n * ATTENTION: An \"eval-source-map\" devtool has been used.\n * This devtool is neither made for production nor for readable output files.\n * It uses \"eval()\" calls to create a separate source file with attached SourceMaps in the browser devtools.\n * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)\n * or disable the default devtool with \"devtool: false\".\n * If you are looking for production-ready output files, see mode: \"production\" (https://webpack.js.org/configuration/mode/).\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory(__webpack_require__(/*! @deriv-com/translations */ \"../../../node_modules/@deriv-com/translations/dist/index.js\"), __webpack_require__(/*! @deriv/components */ \"../../components/src/index.ts\"), __webpack_require__(/*! react */ \"../../../node_modules/react/index.js\"));\n\telse {}\n})(self, (__WEBPACK_EXTERNAL_MODULE__deriv_com_translations__, __WEBPACK_EXTERNAL_MODULE__deriv_components__, __WEBPACK_EXTERNAL_MODULE_react__) => {\nreturn /******/ (() => { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ \"./Components/trading-assessment/risk-tolerance-warning-modal.tsx\":\n/*!************************************************************************!*\\\n  !*** ./Components/trading-assessment/risk-tolerance-warning-modal.tsx ***!\n  \\************************************************************************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"default\\\": () => (__WEBPACK_DEFAULT_EXPORT__)\\n/* harmony export */ });\\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \\\"react\\\");\\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\\n/* harmony import */ var _deriv_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @deriv/components */ \\\"@deriv/components\\\");\\n/* harmony import */ var _deriv_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_deriv_components__WEBPACK_IMPORTED_MODULE_1__);\\n/* harmony import */ var _deriv_com_translations__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @deriv-com/translations */ \\\"@deriv-com/translations\\\");\\n/* harmony import */ var _deriv_com_translations__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_deriv_com_translations__WEBPACK_IMPORTED_MODULE_2__);\\n/* harmony import */ var _deriv_com_ui__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @deriv-com/ui */ \\\"../../../node_modules/@deriv-com/ui/dist/hooks/useDevice.js\\\");\\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react/jsx-runtime */ \\\"../../../node_modules/react/jsx-runtime.js\\\");\\n\\n\\n\\n\\n\\nconst RiskToleranceWarningModal = _ref => {\\n  let {\\n    show_risk_modal,\\n    handleAcceptRisk,\\n    title,\\n    button_text,\\n    body_content,\\n    has_sub_header = false\\n  } = _ref;\\n  const {\\n    isDesktop\\n  } = (0,_deriv_com_ui__WEBPACK_IMPORTED_MODULE_4__.useDevice)();\\n  const {\\n    localize\\n  } = (0,_deriv_com_translations__WEBPACK_IMPORTED_MODULE_2__.useTranslations)();\\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), {\\n    children: isDesktop ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(_deriv_components__WEBPACK_IMPORTED_MODULE_1__.Modal, {\\n      width: \\\"44rem\\\",\\n      title: title,\\n      height: \\\"41rem\\\",\\n      is_open: show_risk_modal,\\n      className: \\\"center-risk-modal\\\",\\n      toggleModal: handleAcceptRisk,\\n      has_close_icon: false,\\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(_deriv_components__WEBPACK_IMPORTED_MODULE_1__.Modal.Body, {\\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_1__.Icon, {\\n          icon: \\\"IcRedWarning\\\",\\n          size: \\\"63\\\"\\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_1__.Text, {\\n          as: \\\"p\\\",\\n          size: \\\"xs\\\",\\n          align: \\\"center\\\",\\n          line_height: \\\"s\\\",\\n          className: \\\"risk-acceptance__text\\\",\\n          children: body_content\\n        })]\\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_1__.Modal.Footer, {\\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_1__.Button, {\\n          type: \\\"button\\\",\\n          large: true,\\n          text: button_text ?? localize('OK'),\\n          primary: true,\\n          onClick: handleAcceptRisk\\n        })\\n      })]\\n    }) : /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(_deriv_components__WEBPACK_IMPORTED_MODULE_1__.MobileDialog, {\\n      visible: show_risk_modal,\\n      title: has_sub_header ? localize('Trading Experience Assessment') : title,\\n      portal_element_id: \\\"modal_root\\\",\\n      has_close_icon: false,\\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(_deriv_components__WEBPACK_IMPORTED_MODULE_1__.Modal.Body, {\\n        className: \\\"risk-tolerance-modal\\\",\\n        children: [has_sub_header ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(_deriv_components__WEBPACK_IMPORTED_MODULE_1__.Text, {\\n          size: \\\"xs\\\",\\n          line_height: \\\"s\\\",\\n          weight: \\\"bold\\\",\\n          as: \\\"p\\\",\\n          className: \\\"risk-tolerance-modal__title\\\",\\n          children: [title, /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\\\"div\\\", {\\n            className: \\\"risk-tolerance-modal__title--separator\\\"\\n          })]\\n        }) : null, /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(\\\"div\\\", {\\n          className: \\\"risk-tolerance-modal__wrapper\\\",\\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_1__.Icon, {\\n            icon: \\\"IcRedWarning\\\",\\n            size: \\\"65\\\"\\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_1__.Text, {\\n            as: \\\"p\\\",\\n            size: \\\"xs\\\",\\n            align: \\\"center\\\",\\n            line_height: \\\"l\\\",\\n            className: \\\"risk-acceptance__text\\\",\\n            children: body_content\\n          })]\\n        })]\\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_1__.Modal.Footer, {\\n        className: \\\"risk-tolerance-modal__footer\\\",\\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_1__.Button, {\\n          type: \\\"button\\\",\\n          large: true,\\n          text: button_text ?? localize('OK'),\\n          primary: true,\\n          onClick: handleAcceptRisk\\n        })\\n      })]\\n    })\\n  });\\n};\\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (RiskToleranceWarningModal);//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9Db21wb25lbnRzL3RyYWRpbmctYXNzZXNzbWVudC9yaXNrLXRvbGVyYW5jZS13YXJuaW5nLW1vZGFsLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBV0E7QUFPQTtBQU5BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBRUE7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFFQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBRUE7QUFBQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUdBO0FBQUE7QUFBQTtBQUdBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUVBO0FBR0E7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4vQ29tcG9uZW50cy90cmFkaW5nLWFzc2Vzc21lbnQvcmlzay10b2xlcmFuY2Utd2FybmluZy1tb2RhbC50c3g/MDEzNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgQnV0dG9uLCBJY29uLCBNb2RhbCwgVGV4dCwgTW9iaWxlRGlhbG9nIH0gZnJvbSAnQGRlcml2L2NvbXBvbmVudHMnO1xuaW1wb3J0IHsgdXNlVHJhbnNsYXRpb25zIH0gZnJvbSAnQGRlcml2LWNvbS90cmFuc2xhdGlvbnMnO1xuaW1wb3J0IHsgdXNlRGV2aWNlIH0gZnJvbSAnQGRlcml2LWNvbS91aSc7XG5cbnR5cGUgUmlza1RvbGVyYW5jZVdhcm5pbmdNb2RhbFByb3BzID0ge1xuICAgIHNob3dfcmlza19tb2RhbDogYm9vbGVhbjtcbiAgICBoYW5kbGVBY2NlcHRSaXNrOiAoKSA9PiB2b2lkO1xuICAgIHRpdGxlOiBzdHJpbmc7XG4gICAgYnV0dG9uX3RleHQ/OiBzdHJpbmc7XG4gICAgYm9keV9jb250ZW50OiBKU1guRWxlbWVudDtcbiAgICBoYXNfc3ViX2hlYWRlcj86IGJvb2xlYW47XG59O1xuXG5jb25zdCBSaXNrVG9sZXJhbmNlV2FybmluZ01vZGFsID0gKHtcbiAgICBzaG93X3Jpc2tfbW9kYWwsXG4gICAgaGFuZGxlQWNjZXB0UmlzayxcbiAgICB0aXRsZSxcbiAgICBidXR0b25fdGV4dCxcbiAgICBib2R5X2NvbnRlbnQsXG4gICAgaGFzX3N1Yl9oZWFkZXIgPSBmYWxzZSxcbn06IFJpc2tUb2xlcmFuY2VXYXJuaW5nTW9kYWxQcm9wcykgPT4ge1xuICAgIGNvbnN0IHsgaXNEZXNrdG9wIH0gPSB1c2VEZXZpY2UoKTtcbiAgICBjb25zdCB7IGxvY2FsaXplIH0gPSB1c2VUcmFuc2xhdGlvbnMoKTtcblxuICAgIHJldHVybiAoXG4gICAgICAgIDxSZWFjdC5GcmFnbWVudD5cbiAgICAgICAgICAgIHtpc0Rlc2t0b3AgPyAoXG4gICAgICAgICAgICAgICAgPE1vZGFsXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoPSc0NHJlbSdcbiAgICAgICAgICAgICAgICAgICAgdGl0bGU9e3RpdGxlfVxuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ9JzQxcmVtJ1xuICAgICAgICAgICAgICAgICAgICBpc19vcGVuPXtzaG93X3Jpc2tfbW9kYWx9XG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT0nY2VudGVyLXJpc2stbW9kYWwnXG4gICAgICAgICAgICAgICAgICAgIHRvZ2dsZU1vZGFsPXtoYW5kbGVBY2NlcHRSaXNrfVxuICAgICAgICAgICAgICAgICAgICBoYXNfY2xvc2VfaWNvbj17ZmFsc2V9XG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICA8TW9kYWwuQm9keT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxJY29uIGljb249J0ljUmVkV2FybmluZycgc2l6ZT0nNjMnIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8VGV4dCBhcz0ncCcgc2l6ZT0neHMnIGFsaWduPSdjZW50ZXInIGxpbmVfaGVpZ2h0PSdzJyBjbGFzc05hbWU9J3Jpc2stYWNjZXB0YW5jZV9fdGV4dCc+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge2JvZHlfY29udGVudH1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvVGV4dD5cbiAgICAgICAgICAgICAgICAgICAgPC9Nb2RhbC5Cb2R5PlxuICAgICAgICAgICAgICAgICAgICA8TW9kYWwuRm9vdGVyPlxuICAgICAgICAgICAgICAgICAgICAgICAgPEJ1dHRvblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9J2J1dHRvbidcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYXJnZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRleHQ9e2J1dHRvbl90ZXh0ID8/IGxvY2FsaXplKCdPSycpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByaW1hcnlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXtoYW5kbGVBY2NlcHRSaXNrfVxuICAgICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgPC9Nb2RhbC5Gb290ZXI+XG4gICAgICAgICAgICAgICAgPC9Nb2RhbD5cbiAgICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICAgICAgPE1vYmlsZURpYWxvZ1xuICAgICAgICAgICAgICAgICAgICB2aXNpYmxlPXtzaG93X3Jpc2tfbW9kYWx9XG4gICAgICAgICAgICAgICAgICAgIHRpdGxlPXtoYXNfc3ViX2hlYWRlciA/IGxvY2FsaXplKCdUcmFkaW5nIEV4cGVyaWVuY2UgQXNzZXNzbWVudCcpIDogdGl0bGV9XG4gICAgICAgICAgICAgICAgICAgIHBvcnRhbF9lbGVtZW50X2lkPSdtb2RhbF9yb290J1xuICAgICAgICAgICAgICAgICAgICBoYXNfY2xvc2VfaWNvbj17ZmFsc2V9XG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICA8TW9kYWwuQm9keSBjbGFzc05hbWU9J3Jpc2stdG9sZXJhbmNlLW1vZGFsJz5cbiAgICAgICAgICAgICAgICAgICAgICAgIHtoYXNfc3ViX2hlYWRlciA/IChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8VGV4dFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaXplPSd4cydcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGluZV9oZWlnaHQ9J3MnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdlaWdodD0nYm9sZCdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXM9J3AnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT0ncmlzay10b2xlcmFuY2UtbW9kYWxfX3RpdGxlJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3RpdGxlfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0ncmlzay10b2xlcmFuY2UtbW9kYWxfX3RpdGxlLS1zZXBhcmF0b3InIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9UZXh0PlxuICAgICAgICAgICAgICAgICAgICAgICAgKSA6IG51bGx9XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0ncmlzay10b2xlcmFuY2UtbW9kYWxfX3dyYXBwZXInPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxJY29uIGljb249J0ljUmVkV2FybmluZycgc2l6ZT0nNjUnIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPFRleHQgYXM9J3AnIHNpemU9J3hzJyBhbGlnbj0nY2VudGVyJyBsaW5lX2hlaWdodD0nbCcgY2xhc3NOYW1lPSdyaXNrLWFjY2VwdGFuY2VfX3RleHQnPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7Ym9keV9jb250ZW50fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvVGV4dD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8L01vZGFsLkJvZHk+XG4gICAgICAgICAgICAgICAgICAgIDxNb2RhbC5Gb290ZXIgY2xhc3NOYW1lPSdyaXNrLXRvbGVyYW5jZS1tb2RhbF9fZm9vdGVyJz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxCdXR0b25cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlPSdidXR0b24nXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFyZ2VcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZXh0PXtidXR0b25fdGV4dCA/PyBsb2NhbGl6ZSgnT0snKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmltYXJ5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17aGFuZGxlQWNjZXB0Umlza31cbiAgICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgIDwvTW9kYWwuRm9vdGVyPlxuICAgICAgICAgICAgICAgIDwvTW9iaWxlRGlhbG9nPlxuICAgICAgICAgICAgKX1cbiAgICAgICAgPC9SZWFjdC5GcmFnbWVudD5cbiAgICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgUmlza1RvbGVyYW5jZVdhcm5pbmdNb2RhbDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///./Components/trading-assessment/risk-tolerance-warning-modal.tsx\\n\");\n\n/***/ }),\n\n/***/ \"../../../node_modules/object-assign/index.js\":\n/*!****************************************************!*\\\n  !*** ../../../node_modules/object-assign/index.js ***!\n  \\****************************************************/\n/***/ ((module) => {\n\neval(\"/*\\nobject-assign\\n(c) Sindre Sorhus\\n@license MIT\\n*/\\n\\n\\n/* eslint-disable no-unused-vars */\\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\\n\\nfunction toObject(val) {\\n\\tif (val === null || val === undefined) {\\n\\t\\tthrow new TypeError('Object.assign cannot be called with null or undefined');\\n\\t}\\n\\n\\treturn Object(val);\\n}\\n\\nfunction shouldUseNative() {\\n\\ttry {\\n\\t\\tif (!Object.assign) {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\t// Detect buggy property enumeration order in older V8 versions.\\n\\n\\t\\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\\n\\t\\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\\n\\t\\ttest1[5] = 'de';\\n\\t\\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\\n\\t\\tvar test2 = {};\\n\\t\\tfor (var i = 0; i < 10; i++) {\\n\\t\\t\\ttest2['_' + String.fromCharCode(i)] = i;\\n\\t\\t}\\n\\t\\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\\n\\t\\t\\treturn test2[n];\\n\\t\\t});\\n\\t\\tif (order2.join('') !== '0123456789') {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\\n\\t\\tvar test3 = {};\\n\\t\\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\\n\\t\\t\\ttest3[letter] = letter;\\n\\t\\t});\\n\\t\\tif (Object.keys(Object.assign({}, test3)).join('') !==\\n\\t\\t\\t\\t'abcdefghijklmnopqrst') {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\treturn true;\\n\\t} catch (err) {\\n\\t\\t// We don't expect any of the above to throw, but better to be safe.\\n\\t\\treturn false;\\n\\t}\\n}\\n\\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\\n\\tvar from;\\n\\tvar to = toObject(target);\\n\\tvar symbols;\\n\\n\\tfor (var s = 1; s < arguments.length; s++) {\\n\\t\\tfrom = Object(arguments[s]);\\n\\n\\t\\tfor (var key in from) {\\n\\t\\t\\tif (hasOwnProperty.call(from, key)) {\\n\\t\\t\\t\\tto[key] = from[key];\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tif (getOwnPropertySymbols) {\\n\\t\\t\\tsymbols = getOwnPropertySymbols(from);\\n\\t\\t\\tfor (var i = 0; i < symbols.length; i++) {\\n\\t\\t\\t\\tif (propIsEnumerable.call(from, symbols[i])) {\\n\\t\\t\\t\\t\\tto[symbols[i]] = from[symbols[i]];\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\treturn to;\\n};\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL29iamVjdC1hc3NpZ24vaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL29iamVjdC1hc3NpZ24vaW5kZXguanM/M2UxMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxub2JqZWN0LWFzc2lnblxuKGMpIFNpbmRyZSBTb3JodXNcbkBsaWNlbnNlIE1JVFxuKi9cblxuJ3VzZSBzdHJpY3QnO1xuLyogZXNsaW50LWRpc2FibGUgbm8tdW51c2VkLXZhcnMgKi9cbnZhciBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xudmFyIGhhc093blByb3BlcnR5ID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbnZhciBwcm9wSXNFbnVtZXJhYmxlID0gT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZTtcblxuZnVuY3Rpb24gdG9PYmplY3QodmFsKSB7XG5cdGlmICh2YWwgPT09IG51bGwgfHwgdmFsID09PSB1bmRlZmluZWQpIHtcblx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKCdPYmplY3QuYXNzaWduIGNhbm5vdCBiZSBjYWxsZWQgd2l0aCBudWxsIG9yIHVuZGVmaW5lZCcpO1xuXHR9XG5cblx0cmV0dXJuIE9iamVjdCh2YWwpO1xufVxuXG5mdW5jdGlvbiBzaG91bGRVc2VOYXRpdmUoKSB7XG5cdHRyeSB7XG5cdFx0aWYgKCFPYmplY3QuYXNzaWduKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gRGV0ZWN0IGJ1Z2d5IHByb3BlcnR5IGVudW1lcmF0aW9uIG9yZGVyIGluIG9sZGVyIFY4IHZlcnNpb25zLlxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9NDExOFxuXHRcdHZhciB0ZXN0MSA9IG5ldyBTdHJpbmcoJ2FiYycpOyAgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXctd3JhcHBlcnNcblx0XHR0ZXN0MVs1XSA9ICdkZSc7XG5cdFx0aWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QxKVswXSA9PT0gJzUnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MiA9IHt9O1xuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgMTA7IGkrKykge1xuXHRcdFx0dGVzdDJbJ18nICsgU3RyaW5nLmZyb21DaGFyQ29kZShpKV0gPSBpO1xuXHRcdH1cblx0XHR2YXIgb3JkZXIyID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDIpLm1hcChmdW5jdGlvbiAobikge1xuXHRcdFx0cmV0dXJuIHRlc3QyW25dO1xuXHRcdH0pO1xuXHRcdGlmIChvcmRlcjIuam9pbignJykgIT09ICcwMTIzNDU2Nzg5Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcblx0XHR2YXIgdGVzdDMgPSB7fTtcblx0XHQnYWJjZGVmZ2hpamtsbW5vcHFyc3QnLnNwbGl0KCcnKS5mb3JFYWNoKGZ1bmN0aW9uIChsZXR0ZXIpIHtcblx0XHRcdHRlc3QzW2xldHRlcl0gPSBsZXR0ZXI7XG5cdFx0fSk7XG5cdFx0aWYgKE9iamVjdC5rZXlzKE9iamVjdC5hc3NpZ24oe30sIHRlc3QzKSkuam9pbignJykgIT09XG5cdFx0XHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdHJ1ZTtcblx0fSBjYXRjaCAoZXJyKSB7XG5cdFx0Ly8gV2UgZG9uJ3QgZXhwZWN0IGFueSBvZiB0aGUgYWJvdmUgdG8gdGhyb3csIGJ1dCBiZXR0ZXIgdG8gYmUgc2FmZS5cblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzaG91bGRVc2VOYXRpdmUoKSA/IE9iamVjdC5hc3NpZ24gOiBmdW5jdGlvbiAodGFyZ2V0LCBzb3VyY2UpIHtcblx0dmFyIGZyb207XG5cdHZhciB0byA9IHRvT2JqZWN0KHRhcmdldCk7XG5cdHZhciBzeW1ib2xzO1xuXG5cdGZvciAodmFyIHMgPSAxOyBzIDwgYXJndW1lbnRzLmxlbmd0aDsgcysrKSB7XG5cdFx0ZnJvbSA9IE9iamVjdChhcmd1bWVudHNbc10pO1xuXG5cdFx0Zm9yICh2YXIga2V5IGluIGZyb20pIHtcblx0XHRcdGlmIChoYXNPd25Qcm9wZXJ0eS5jYWxsKGZyb20sIGtleSkpIHtcblx0XHRcdFx0dG9ba2V5XSA9IGZyb21ba2V5XTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRpZiAoZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7XG5cdFx0XHRzeW1ib2xzID0gZ2V0T3duUHJvcGVydHlTeW1ib2xzKGZyb20pO1xuXHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBzeW1ib2xzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRcdGlmIChwcm9wSXNFbnVtZXJhYmxlLmNhbGwoZnJvbSwgc3ltYm9sc1tpXSkpIHtcblx0XHRcdFx0XHR0b1tzeW1ib2xzW2ldXSA9IGZyb21bc3ltYm9sc1tpXV07XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gdG87XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///../../../node_modules/object-assign/index.js\\n\");\n\n/***/ }),\n\n/***/ \"../../../node_modules/react/cjs/react-jsx-runtime.development.js\":\n/*!************************************************************************!*\\\n  !*** ../../../node_modules/react/cjs/react-jsx-runtime.development.js ***!\n  \\************************************************************************/\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\neval(\"/** @license React v17.0.2\\n * react-jsx-runtime.development.js\\n *\\n * Copyright (c) Facebook, Inc. and its affiliates.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n\\n\\n\\nif (true) {\\n  (function() {\\n'use strict';\\n\\nvar React = __webpack_require__(/*! react */ \\\"react\\\");\\nvar _assign = __webpack_require__(/*! object-assign */ \\\"../../../node_modules/object-assign/index.js\\\");\\n\\n// ATTENTION\\n// When adding new symbols to this file,\\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\\n// nor polyfill, then a plain number is used for performance.\\nvar REACT_ELEMENT_TYPE = 0xeac7;\\nvar REACT_PORTAL_TYPE = 0xeaca;\\nexports.Fragment = 0xeacb;\\nvar REACT_STRICT_MODE_TYPE = 0xeacc;\\nvar REACT_PROFILER_TYPE = 0xead2;\\nvar REACT_PROVIDER_TYPE = 0xeacd;\\nvar REACT_CONTEXT_TYPE = 0xeace;\\nvar REACT_FORWARD_REF_TYPE = 0xead0;\\nvar REACT_SUSPENSE_TYPE = 0xead1;\\nvar REACT_SUSPENSE_LIST_TYPE = 0xead8;\\nvar REACT_MEMO_TYPE = 0xead3;\\nvar REACT_LAZY_TYPE = 0xead4;\\nvar REACT_BLOCK_TYPE = 0xead9;\\nvar REACT_SERVER_BLOCK_TYPE = 0xeada;\\nvar REACT_FUNDAMENTAL_TYPE = 0xead5;\\nvar REACT_SCOPE_TYPE = 0xead7;\\nvar REACT_OPAQUE_ID_TYPE = 0xeae0;\\nvar REACT_DEBUG_TRACING_MODE_TYPE = 0xeae1;\\nvar REACT_OFFSCREEN_TYPE = 0xeae2;\\nvar REACT_LEGACY_HIDDEN_TYPE = 0xeae3;\\n\\nif (typeof Symbol === 'function' && Symbol.for) {\\n  var symbolFor = Symbol.for;\\n  REACT_ELEMENT_TYPE = symbolFor('react.element');\\n  REACT_PORTAL_TYPE = symbolFor('react.portal');\\n  exports.Fragment = symbolFor('react.fragment');\\n  REACT_STRICT_MODE_TYPE = symbolFor('react.strict_mode');\\n  REACT_PROFILER_TYPE = symbolFor('react.profiler');\\n  REACT_PROVIDER_TYPE = symbolFor('react.provider');\\n  REACT_CONTEXT_TYPE = symbolFor('react.context');\\n  REACT_FORWARD_REF_TYPE = symbolFor('react.forward_ref');\\n  REACT_SUSPENSE_TYPE = symbolFor('react.suspense');\\n  REACT_SUSPENSE_LIST_TYPE = symbolFor('react.suspense_list');\\n  REACT_MEMO_TYPE = symbolFor('react.memo');\\n  REACT_LAZY_TYPE = symbolFor('react.lazy');\\n  REACT_BLOCK_TYPE = symbolFor('react.block');\\n  REACT_SERVER_BLOCK_TYPE = symbolFor('react.server.block');\\n  REACT_FUNDAMENTAL_TYPE = symbolFor('react.fundamental');\\n  REACT_SCOPE_TYPE = symbolFor('react.scope');\\n  REACT_OPAQUE_ID_TYPE = symbolFor('react.opaque.id');\\n  REACT_DEBUG_TRACING_MODE_TYPE = symbolFor('react.debug_trace_mode');\\n  REACT_OFFSCREEN_TYPE = symbolFor('react.offscreen');\\n  REACT_LEGACY_HIDDEN_TYPE = symbolFor('react.legacy_hidden');\\n}\\n\\nvar MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\\nfunction getIteratorFn(maybeIterable) {\\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\\n    return null;\\n  }\\n\\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\\n\\n  if (typeof maybeIterator === 'function') {\\n    return maybeIterator;\\n  }\\n\\n  return null;\\n}\\n\\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\\n\\nfunction error(format) {\\n  {\\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\\n      args[_key2 - 1] = arguments[_key2];\\n    }\\n\\n    printWarning('error', format, args);\\n  }\\n}\\n\\nfunction printWarning(level, format, args) {\\n  // When changing this logic, you might want to also\\n  // update consoleWithStackDev.www.js as well.\\n  {\\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\\n\\n    if (stack !== '') {\\n      format += '%s';\\n      args = args.concat([stack]);\\n    }\\n\\n    var argsWithFormat = args.map(function (item) {\\n      return '' + item;\\n    }); // Careful: RN currently depends on this prefix\\n\\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\\n    // breaks IE9: https://github.com/facebook/react/issues/13610\\n    // eslint-disable-next-line react-internal/no-production-logging\\n\\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\\n  }\\n}\\n\\n// Filter certain DOM attributes (e.g. src, href) if their values are empty strings.\\n\\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\\n\\nfunction isValidElementType(type) {\\n  if (typeof type === 'string' || typeof type === 'function') {\\n    return true;\\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\\n\\n\\n  if (type === exports.Fragment || type === REACT_PROFILER_TYPE || type === REACT_DEBUG_TRACING_MODE_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || type === REACT_LEGACY_HIDDEN_TYPE || enableScopeAPI ) {\\n    return true;\\n  }\\n\\n  if (typeof type === 'object' && type !== null) {\\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_BLOCK_TYPE || type[0] === REACT_SERVER_BLOCK_TYPE) {\\n      return true;\\n    }\\n  }\\n\\n  return false;\\n}\\n\\nfunction getWrappedName(outerType, innerType, wrapperName) {\\n  var functionName = innerType.displayName || innerType.name || '';\\n  return outerType.displayName || (functionName !== '' ? wrapperName + \\\"(\\\" + functionName + \\\")\\\" : wrapperName);\\n}\\n\\nfunction getContextName(type) {\\n  return type.displayName || 'Context';\\n}\\n\\nfunction getComponentName(type) {\\n  if (type == null) {\\n    // Host root, text node or just invalid type.\\n    return null;\\n  }\\n\\n  {\\n    if (typeof type.tag === 'number') {\\n      error('Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');\\n    }\\n  }\\n\\n  if (typeof type === 'function') {\\n    return type.displayName || type.name || null;\\n  }\\n\\n  if (typeof type === 'string') {\\n    return type;\\n  }\\n\\n  switch (type) {\\n    case exports.Fragment:\\n      return 'Fragment';\\n\\n    case REACT_PORTAL_TYPE:\\n      return 'Portal';\\n\\n    case REACT_PROFILER_TYPE:\\n      return 'Profiler';\\n\\n    case REACT_STRICT_MODE_TYPE:\\n      return 'StrictMode';\\n\\n    case REACT_SUSPENSE_TYPE:\\n      return 'Suspense';\\n\\n    case REACT_SUSPENSE_LIST_TYPE:\\n      return 'SuspenseList';\\n  }\\n\\n  if (typeof type === 'object') {\\n    switch (type.$$typeof) {\\n      case REACT_CONTEXT_TYPE:\\n        var context = type;\\n        return getContextName(context) + '.Consumer';\\n\\n      case REACT_PROVIDER_TYPE:\\n        var provider = type;\\n        return getContextName(provider._context) + '.Provider';\\n\\n      case REACT_FORWARD_REF_TYPE:\\n        return getWrappedName(type, type.render, 'ForwardRef');\\n\\n      case REACT_MEMO_TYPE:\\n        return getComponentName(type.type);\\n\\n      case REACT_BLOCK_TYPE:\\n        return getComponentName(type._render);\\n\\n      case REACT_LAZY_TYPE:\\n        {\\n          var lazyComponent = type;\\n          var payload = lazyComponent._payload;\\n          var init = lazyComponent._init;\\n\\n          try {\\n            return getComponentName(init(payload));\\n          } catch (x) {\\n            return null;\\n          }\\n        }\\n    }\\n  }\\n\\n  return null;\\n}\\n\\n// Helpers to patch console.logs to avoid logging during side-effect free\\n// replaying on render function. This currently only patches the object\\n// lazily which won't cover if the log function was extracted eagerly.\\n// We could also eagerly patch the method.\\nvar disabledDepth = 0;\\nvar prevLog;\\nvar prevInfo;\\nvar prevWarn;\\nvar prevError;\\nvar prevGroup;\\nvar prevGroupCollapsed;\\nvar prevGroupEnd;\\n\\nfunction disabledLog() {}\\n\\ndisabledLog.__reactDisabledLog = true;\\nfunction disableLogs() {\\n  {\\n    if (disabledDepth === 0) {\\n      /* eslint-disable react-internal/no-production-logging */\\n      prevLog = console.log;\\n      prevInfo = console.info;\\n      prevWarn = console.warn;\\n      prevError = console.error;\\n      prevGroup = console.group;\\n      prevGroupCollapsed = console.groupCollapsed;\\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\\n\\n      var props = {\\n        configurable: true,\\n        enumerable: true,\\n        value: disabledLog,\\n        writable: true\\n      }; // $FlowFixMe Flow thinks console is immutable.\\n\\n      Object.defineProperties(console, {\\n        info: props,\\n        log: props,\\n        warn: props,\\n        error: props,\\n        group: props,\\n        groupCollapsed: props,\\n        groupEnd: props\\n      });\\n      /* eslint-enable react-internal/no-production-logging */\\n    }\\n\\n    disabledDepth++;\\n  }\\n}\\nfunction reenableLogs() {\\n  {\\n    disabledDepth--;\\n\\n    if (disabledDepth === 0) {\\n      /* eslint-disable react-internal/no-production-logging */\\n      var props = {\\n        configurable: true,\\n        enumerable: true,\\n        writable: true\\n      }; // $FlowFixMe Flow thinks console is immutable.\\n\\n      Object.defineProperties(console, {\\n        log: _assign({}, props, {\\n          value: prevLog\\n        }),\\n        info: _assign({}, props, {\\n          value: prevInfo\\n        }),\\n        warn: _assign({}, props, {\\n          value: prevWarn\\n        }),\\n        error: _assign({}, props, {\\n          value: prevError\\n        }),\\n        group: _assign({}, props, {\\n          value: prevGroup\\n        }),\\n        groupCollapsed: _assign({}, props, {\\n          value: prevGroupCollapsed\\n        }),\\n        groupEnd: _assign({}, props, {\\n          value: prevGroupEnd\\n        })\\n      });\\n      /* eslint-enable react-internal/no-production-logging */\\n    }\\n\\n    if (disabledDepth < 0) {\\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\\n    }\\n  }\\n}\\n\\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\\nvar prefix;\\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\\n  {\\n    if (prefix === undefined) {\\n      // Extract the VM specific prefix used by each line.\\n      try {\\n        throw Error();\\n      } catch (x) {\\n        var match = x.stack.trim().match(/\\\\n( *(at )?)/);\\n        prefix = match && match[1] || '';\\n      }\\n    } // We use the prefix to ensure our stacks line up with native stack frames.\\n\\n\\n    return '\\\\n' + prefix + name;\\n  }\\n}\\nvar reentry = false;\\nvar componentFrameCache;\\n\\n{\\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\\n  componentFrameCache = new PossiblyWeakMap();\\n}\\n\\nfunction describeNativeComponentFrame(fn, construct) {\\n  // If something asked for a stack inside a fake render, it should get ignored.\\n  if (!fn || reentry) {\\n    return '';\\n  }\\n\\n  {\\n    var frame = componentFrameCache.get(fn);\\n\\n    if (frame !== undefined) {\\n      return frame;\\n    }\\n  }\\n\\n  var control;\\n  reentry = true;\\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\\n\\n  Error.prepareStackTrace = undefined;\\n  var previousDispatcher;\\n\\n  {\\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\\n    // for warnings.\\n\\n    ReactCurrentDispatcher.current = null;\\n    disableLogs();\\n  }\\n\\n  try {\\n    // This should throw.\\n    if (construct) {\\n      // Something should be setting the props in the constructor.\\n      var Fake = function () {\\n        throw Error();\\n      }; // $FlowFixMe\\n\\n\\n      Object.defineProperty(Fake.prototype, 'props', {\\n        set: function () {\\n          // We use a throwing setter instead of frozen or non-writable props\\n          // because that won't throw in a non-strict mode function.\\n          throw Error();\\n        }\\n      });\\n\\n      if (typeof Reflect === 'object' && Reflect.construct) {\\n        // We construct a different control for this case to include any extra\\n        // frames added by the construct call.\\n        try {\\n          Reflect.construct(Fake, []);\\n        } catch (x) {\\n          control = x;\\n        }\\n\\n        Reflect.construct(fn, [], Fake);\\n      } else {\\n        try {\\n          Fake.call();\\n        } catch (x) {\\n          control = x;\\n        }\\n\\n        fn.call(Fake.prototype);\\n      }\\n    } else {\\n      try {\\n        throw Error();\\n      } catch (x) {\\n        control = x;\\n      }\\n\\n      fn();\\n    }\\n  } catch (sample) {\\n    // This is inlined manually because closure doesn't do it for us.\\n    if (sample && control && typeof sample.stack === 'string') {\\n      // This extracts the first frame from the sample that isn't also in the control.\\n      // Skipping one frame that we assume is the frame that calls the two.\\n      var sampleLines = sample.stack.split('\\\\n');\\n      var controlLines = control.stack.split('\\\\n');\\n      var s = sampleLines.length - 1;\\n      var c = controlLines.length - 1;\\n\\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\\n        // We expect at least one stack frame to be shared.\\n        // Typically this will be the root most one. However, stack frames may be\\n        // cut off due to maximum stack limits. In this case, one maybe cut off\\n        // earlier than the other. We assume that the sample is longer or the same\\n        // and there for cut off earlier. So we should find the root most frame in\\n        // the sample somewhere in the control.\\n        c--;\\n      }\\n\\n      for (; s >= 1 && c >= 0; s--, c--) {\\n        // Next we find the first one that isn't the same which should be the\\n        // frame that called our sample function and the control.\\n        if (sampleLines[s] !== controlLines[c]) {\\n          // In V8, the first line is describing the message but other VMs don't.\\n          // If we're about to return the first line, and the control is also on the same\\n          // line, that's a pretty good indicator that our sample threw at same line as\\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\\n          // This can happen if you passed a class to function component, or non-function.\\n          if (s !== 1 || c !== 1) {\\n            do {\\n              s--;\\n              c--; // We may still have similar intermediate frames from the construct call.\\n              // The next one that isn't the same should be our match though.\\n\\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\\n                // V8 adds a \\\"new\\\" prefix for native classes. Let's remove it to make it prettier.\\n                var _frame = '\\\\n' + sampleLines[s].replace(' at new ', ' at ');\\n\\n                {\\n                  if (typeof fn === 'function') {\\n                    componentFrameCache.set(fn, _frame);\\n                  }\\n                } // Return the line we found.\\n\\n\\n                return _frame;\\n              }\\n            } while (s >= 1 && c >= 0);\\n          }\\n\\n          break;\\n        }\\n      }\\n    }\\n  } finally {\\n    reentry = false;\\n\\n    {\\n      ReactCurrentDispatcher.current = previousDispatcher;\\n      reenableLogs();\\n    }\\n\\n    Error.prepareStackTrace = previousPrepareStackTrace;\\n  } // Fallback to just using the name if we couldn't make it throw.\\n\\n\\n  var name = fn ? fn.displayName || fn.name : '';\\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\\n\\n  {\\n    if (typeof fn === 'function') {\\n      componentFrameCache.set(fn, syntheticFrame);\\n    }\\n  }\\n\\n  return syntheticFrame;\\n}\\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\\n  {\\n    return describeNativeComponentFrame(fn, false);\\n  }\\n}\\n\\nfunction shouldConstruct(Component) {\\n  var prototype = Component.prototype;\\n  return !!(prototype && prototype.isReactComponent);\\n}\\n\\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\\n\\n  if (type == null) {\\n    return '';\\n  }\\n\\n  if (typeof type === 'function') {\\n    {\\n      return describeNativeComponentFrame(type, shouldConstruct(type));\\n    }\\n  }\\n\\n  if (typeof type === 'string') {\\n    return describeBuiltInComponentFrame(type);\\n  }\\n\\n  switch (type) {\\n    case REACT_SUSPENSE_TYPE:\\n      return describeBuiltInComponentFrame('Suspense');\\n\\n    case REACT_SUSPENSE_LIST_TYPE:\\n      return describeBuiltInComponentFrame('SuspenseList');\\n  }\\n\\n  if (typeof type === 'object') {\\n    switch (type.$$typeof) {\\n      case REACT_FORWARD_REF_TYPE:\\n        return describeFunctionComponentFrame(type.render);\\n\\n      case REACT_MEMO_TYPE:\\n        // Memo may contain any component type so we recursively resolve it.\\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\\n\\n      case REACT_BLOCK_TYPE:\\n        return describeFunctionComponentFrame(type._render);\\n\\n      case REACT_LAZY_TYPE:\\n        {\\n          var lazyComponent = type;\\n          var payload = lazyComponent._payload;\\n          var init = lazyComponent._init;\\n\\n          try {\\n            // Lazy may contain any component type so we recursively resolve it.\\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\\n          } catch (x) {}\\n        }\\n    }\\n  }\\n\\n  return '';\\n}\\n\\nvar loggedTypeFailures = {};\\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\\n\\nfunction setCurrentlyValidatingElement(element) {\\n  {\\n    if (element) {\\n      var owner = element._owner;\\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\\n    } else {\\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\\n    }\\n  }\\n}\\n\\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\\n  {\\n    // $FlowFixMe This is okay but Flow doesn't know it.\\n    var has = Function.call.bind(Object.prototype.hasOwnProperty);\\n\\n    for (var typeSpecName in typeSpecs) {\\n      if (has(typeSpecs, typeSpecName)) {\\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\\n        // fail the render phase where it didn't fail before. So we log it.\\n        // After these have been cleaned up, we'll let them throw.\\n\\n        try {\\n          // This is intentionally an invariant that gets caught. It's the same\\n          // behavior as without this statement except with a better message.\\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\\n            err.name = 'Invariant Violation';\\n            throw err;\\n          }\\n\\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\\n        } catch (ex) {\\n          error$1 = ex;\\n        }\\n\\n        if (error$1 && !(error$1 instanceof Error)) {\\n          setCurrentlyValidatingElement(element);\\n\\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\\n\\n          setCurrentlyValidatingElement(null);\\n        }\\n\\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\\n          // Only monitor this failure once because there tends to be a lot of the\\n          // same error.\\n          loggedTypeFailures[error$1.message] = true;\\n          setCurrentlyValidatingElement(element);\\n\\n          error('Failed %s type: %s', location, error$1.message);\\n\\n          setCurrentlyValidatingElement(null);\\n        }\\n      }\\n    }\\n  }\\n}\\n\\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\\nvar RESERVED_PROPS = {\\n  key: true,\\n  ref: true,\\n  __self: true,\\n  __source: true\\n};\\nvar specialPropKeyWarningShown;\\nvar specialPropRefWarningShown;\\nvar didWarnAboutStringRefs;\\n\\n{\\n  didWarnAboutStringRefs = {};\\n}\\n\\nfunction hasValidRef(config) {\\n  {\\n    if (hasOwnProperty.call(config, 'ref')) {\\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\\n\\n      if (getter && getter.isReactWarning) {\\n        return false;\\n      }\\n    }\\n  }\\n\\n  return config.ref !== undefined;\\n}\\n\\nfunction hasValidKey(config) {\\n  {\\n    if (hasOwnProperty.call(config, 'key')) {\\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\\n\\n      if (getter && getter.isReactWarning) {\\n        return false;\\n      }\\n    }\\n  }\\n\\n  return config.key !== undefined;\\n}\\n\\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\\n  {\\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\\n      var componentName = getComponentName(ReactCurrentOwner.current.type);\\n\\n      if (!didWarnAboutStringRefs[componentName]) {\\n        error('Component \\\"%s\\\" contains the string ref \\\"%s\\\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentName(ReactCurrentOwner.current.type), config.ref);\\n\\n        didWarnAboutStringRefs[componentName] = true;\\n      }\\n    }\\n  }\\n}\\n\\nfunction defineKeyPropWarningGetter(props, displayName) {\\n  {\\n    var warnAboutAccessingKey = function () {\\n      if (!specialPropKeyWarningShown) {\\n        specialPropKeyWarningShown = true;\\n\\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\\n      }\\n    };\\n\\n    warnAboutAccessingKey.isReactWarning = true;\\n    Object.defineProperty(props, 'key', {\\n      get: warnAboutAccessingKey,\\n      configurable: true\\n    });\\n  }\\n}\\n\\nfunction defineRefPropWarningGetter(props, displayName) {\\n  {\\n    var warnAboutAccessingRef = function () {\\n      if (!specialPropRefWarningShown) {\\n        specialPropRefWarningShown = true;\\n\\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\\n      }\\n    };\\n\\n    warnAboutAccessingRef.isReactWarning = true;\\n    Object.defineProperty(props, 'ref', {\\n      get: warnAboutAccessingRef,\\n      configurable: true\\n    });\\n  }\\n}\\n/**\\n * Factory method to create a new React element. This no longer adheres to\\n * the class pattern, so do not use new to call it. Also, instanceof check\\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\\n * if something is a React Element.\\n *\\n * @param {*} type\\n * @param {*} props\\n * @param {*} key\\n * @param {string|object} ref\\n * @param {*} owner\\n * @param {*} self A *temporary* helper to detect places where `this` is\\n * different from the `owner` when React.createElement is called, so that we\\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\\n * functions, and as long as `this` and owner are the same, there will be no\\n * change in behavior.\\n * @param {*} source An annotation object (added by a transpiler or otherwise)\\n * indicating filename, line number, and/or other information.\\n * @internal\\n */\\n\\n\\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\\n  var element = {\\n    // This tag allows us to uniquely identify this as a React Element\\n    $$typeof: REACT_ELEMENT_TYPE,\\n    // Built-in properties that belong on the element\\n    type: type,\\n    key: key,\\n    ref: ref,\\n    props: props,\\n    // Record the component responsible for creating this element.\\n    _owner: owner\\n  };\\n\\n  {\\n    // The validation flag is currently mutative. We put it on\\n    // an external backing store so that we can freeze the whole object.\\n    // This can be replaced with a WeakMap once they are implemented in\\n    // commonly used development environments.\\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\\n    // the validation flag non-enumerable (where possible, which should\\n    // include every environment we run tests in), so the test framework\\n    // ignores it.\\n\\n    Object.defineProperty(element._store, 'validated', {\\n      configurable: false,\\n      enumerable: false,\\n      writable: true,\\n      value: false\\n    }); // self and source are DEV only properties.\\n\\n    Object.defineProperty(element, '_self', {\\n      configurable: false,\\n      enumerable: false,\\n      writable: false,\\n      value: self\\n    }); // Two elements created in two different places should be considered\\n    // equal for testing purposes and therefore we hide it from enumeration.\\n\\n    Object.defineProperty(element, '_source', {\\n      configurable: false,\\n      enumerable: false,\\n      writable: false,\\n      value: source\\n    });\\n\\n    if (Object.freeze) {\\n      Object.freeze(element.props);\\n      Object.freeze(element);\\n    }\\n  }\\n\\n  return element;\\n};\\n/**\\n * https://github.com/reactjs/rfcs/pull/107\\n * @param {*} type\\n * @param {object} props\\n * @param {string} key\\n */\\n\\nfunction jsxDEV(type, config, maybeKey, source, self) {\\n  {\\n    var propName; // Reserved names are extracted\\n\\n    var props = {};\\n    var key = null;\\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\\n    // issue if key is also explicitly declared (ie. <div {...props} key=\\\"Hi\\\" />\\n    // or <div key=\\\"Hi\\\" {...props} /> ). We want to deprecate key spread,\\n    // but as an intermediary step, we will use jsxDEV for everything except\\n    // <div {...props} key=\\\"Hi\\\" />, because we aren't currently able to tell if\\n    // key is explicitly declared to be undefined or not.\\n\\n    if (maybeKey !== undefined) {\\n      key = '' + maybeKey;\\n    }\\n\\n    if (hasValidKey(config)) {\\n      key = '' + config.key;\\n    }\\n\\n    if (hasValidRef(config)) {\\n      ref = config.ref;\\n      warnIfStringRefCannotBeAutoConverted(config, self);\\n    } // Remaining properties are added to a new props object\\n\\n\\n    for (propName in config) {\\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\\n        props[propName] = config[propName];\\n      }\\n    } // Resolve default props\\n\\n\\n    if (type && type.defaultProps) {\\n      var defaultProps = type.defaultProps;\\n\\n      for (propName in defaultProps) {\\n        if (props[propName] === undefined) {\\n          props[propName] = defaultProps[propName];\\n        }\\n      }\\n    }\\n\\n    if (key || ref) {\\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\\n\\n      if (key) {\\n        defineKeyPropWarningGetter(props, displayName);\\n      }\\n\\n      if (ref) {\\n        defineRefPropWarningGetter(props, displayName);\\n      }\\n    }\\n\\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\\n  }\\n}\\n\\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\\n\\nfunction setCurrentlyValidatingElement$1(element) {\\n  {\\n    if (element) {\\n      var owner = element._owner;\\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\\n    } else {\\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\\n    }\\n  }\\n}\\n\\nvar propTypesMisspellWarningShown;\\n\\n{\\n  propTypesMisspellWarningShown = false;\\n}\\n/**\\n * Verifies the object is a ReactElement.\\n * See https://reactjs.org/docs/react-api.html#isvalidelement\\n * @param {?object} object\\n * @return {boolean} True if `object` is a ReactElement.\\n * @final\\n */\\n\\nfunction isValidElement(object) {\\n  {\\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\\n  }\\n}\\n\\nfunction getDeclarationErrorAddendum() {\\n  {\\n    if (ReactCurrentOwner$1.current) {\\n      var name = getComponentName(ReactCurrentOwner$1.current.type);\\n\\n      if (name) {\\n        return '\\\\n\\\\nCheck the render method of `' + name + '`.';\\n      }\\n    }\\n\\n    return '';\\n  }\\n}\\n\\nfunction getSourceInfoErrorAddendum(source) {\\n  {\\n    if (source !== undefined) {\\n      var fileName = source.fileName.replace(/^.*[\\\\\\\\\\\\/]/, '');\\n      var lineNumber = source.lineNumber;\\n      return '\\\\n\\\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\\n    }\\n\\n    return '';\\n  }\\n}\\n/**\\n * Warn if there's no key explicitly set on dynamic arrays of children or\\n * object keys are not valid. This allows us to keep track of children between\\n * updates.\\n */\\n\\n\\nvar ownerHasKeyUseWarning = {};\\n\\nfunction getCurrentComponentErrorInfo(parentType) {\\n  {\\n    var info = getDeclarationErrorAddendum();\\n\\n    if (!info) {\\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\\n\\n      if (parentName) {\\n        info = \\\"\\\\n\\\\nCheck the top-level render call using <\\\" + parentName + \\\">.\\\";\\n      }\\n    }\\n\\n    return info;\\n  }\\n}\\n/**\\n * Warn if the element doesn't have an explicit key assigned to it.\\n * This element is in an array. The array could grow and shrink or be\\n * reordered. All children that haven't already been validated are required to\\n * have a \\\"key\\\" property assigned to it. Error statuses are cached so a warning\\n * will only be shown once.\\n *\\n * @internal\\n * @param {ReactElement} element Element that requires a key.\\n * @param {*} parentType element's parent's type.\\n */\\n\\n\\nfunction validateExplicitKey(element, parentType) {\\n  {\\n    if (!element._store || element._store.validated || element.key != null) {\\n      return;\\n    }\\n\\n    element._store.validated = true;\\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\\n\\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\\n      return;\\n    }\\n\\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\\n    // property, it may be the creator of the child that's responsible for\\n    // assigning it a key.\\n\\n    var childOwner = '';\\n\\n    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {\\n      // Give the component that originally created this child.\\n      childOwner = \\\" It was passed a child from \\\" + getComponentName(element._owner.type) + \\\".\\\";\\n    }\\n\\n    setCurrentlyValidatingElement$1(element);\\n\\n    error('Each child in a list should have a unique \\\"key\\\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\\n\\n    setCurrentlyValidatingElement$1(null);\\n  }\\n}\\n/**\\n * Ensure that every element either is passed in a static location, in an\\n * array with an explicit keys property defined, or in an object literal\\n * with valid key property.\\n *\\n * @internal\\n * @param {ReactNode} node Statically passed child of any type.\\n * @param {*} parentType node's parent's type.\\n */\\n\\n\\nfunction validateChildKeys(node, parentType) {\\n  {\\n    if (typeof node !== 'object') {\\n      return;\\n    }\\n\\n    if (Array.isArray(node)) {\\n      for (var i = 0; i < node.length; i++) {\\n        var child = node[i];\\n\\n        if (isValidElement(child)) {\\n          validateExplicitKey(child, parentType);\\n        }\\n      }\\n    } else if (isValidElement(node)) {\\n      // This element was passed in a valid location.\\n      if (node._store) {\\n        node._store.validated = true;\\n      }\\n    } else if (node) {\\n      var iteratorFn = getIteratorFn(node);\\n\\n      if (typeof iteratorFn === 'function') {\\n        // Entry iterators used to provide implicit keys,\\n        // but now we print a separate warning for them later.\\n        if (iteratorFn !== node.entries) {\\n          var iterator = iteratorFn.call(node);\\n          var step;\\n\\n          while (!(step = iterator.next()).done) {\\n            if (isValidElement(step.value)) {\\n              validateExplicitKey(step.value, parentType);\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\n/**\\n * Given an element, validate that its props follow the propTypes definition,\\n * provided by the type.\\n *\\n * @param {ReactElement} element\\n */\\n\\n\\nfunction validatePropTypes(element) {\\n  {\\n    var type = element.type;\\n\\n    if (type === null || type === undefined || typeof type === 'string') {\\n      return;\\n    }\\n\\n    var propTypes;\\n\\n    if (typeof type === 'function') {\\n      propTypes = type.propTypes;\\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\\n    // Inner props are checked in the reconciler.\\n    type.$$typeof === REACT_MEMO_TYPE)) {\\n      propTypes = type.propTypes;\\n    } else {\\n      return;\\n    }\\n\\n    if (propTypes) {\\n      // Intentionally inside to avoid triggering lazy initializers:\\n      var name = getComponentName(type);\\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\\n\\n      var _name = getComponentName(type);\\n\\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\\n    }\\n\\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\\n    }\\n  }\\n}\\n/**\\n * Given a fragment, validate that it can only be provided with fragment props\\n * @param {ReactElement} fragment\\n */\\n\\n\\nfunction validateFragmentProps(fragment) {\\n  {\\n    var keys = Object.keys(fragment.props);\\n\\n    for (var i = 0; i < keys.length; i++) {\\n      var key = keys[i];\\n\\n      if (key !== 'children' && key !== 'key') {\\n        setCurrentlyValidatingElement$1(fragment);\\n\\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\\n\\n        setCurrentlyValidatingElement$1(null);\\n        break;\\n      }\\n    }\\n\\n    if (fragment.ref !== null) {\\n      setCurrentlyValidatingElement$1(fragment);\\n\\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\\n\\n      setCurrentlyValidatingElement$1(null);\\n    }\\n  }\\n}\\n\\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\\n  {\\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\\n    // succeed and there will likely be errors in render.\\n\\n    if (!validType) {\\n      var info = '';\\n\\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\\n        info += ' You likely forgot to export your component from the file ' + \\\"it's defined in, or you might have mixed up default and named imports.\\\";\\n      }\\n\\n      var sourceInfo = getSourceInfoErrorAddendum(source);\\n\\n      if (sourceInfo) {\\n        info += sourceInfo;\\n      } else {\\n        info += getDeclarationErrorAddendum();\\n      }\\n\\n      var typeString;\\n\\n      if (type === null) {\\n        typeString = 'null';\\n      } else if (Array.isArray(type)) {\\n        typeString = 'array';\\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\\n        typeString = \\\"<\\\" + (getComponentName(type.type) || 'Unknown') + \\\" />\\\";\\n        info = ' Did you accidentally export a JSX literal instead of a component?';\\n      } else {\\n        typeString = typeof type;\\n      }\\n\\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\\n    }\\n\\n    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\\n    // TODO: Drop this when these are no longer allowed as the type argument.\\n\\n    if (element == null) {\\n      return element;\\n    } // Skip key warning if the type isn't valid since our key validation logic\\n    // doesn't expect a non-string/function type and can throw confusing errors.\\n    // We don't want exception behavior to differ between dev and prod.\\n    // (Rendering will throw with a helpful message and as soon as the type is\\n    // fixed, the key warnings will appear.)\\n\\n\\n    if (validType) {\\n      var children = props.children;\\n\\n      if (children !== undefined) {\\n        if (isStaticChildren) {\\n          if (Array.isArray(children)) {\\n            for (var i = 0; i < children.length; i++) {\\n              validateChildKeys(children[i], type);\\n            }\\n\\n            if (Object.freeze) {\\n              Object.freeze(children);\\n            }\\n          } else {\\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\\n          }\\n        } else {\\n          validateChildKeys(children, type);\\n        }\\n      }\\n    }\\n\\n    if (type === exports.Fragment) {\\n      validateFragmentProps(element);\\n    } else {\\n      validatePropTypes(element);\\n    }\\n\\n    return element;\\n  }\\n} // These two functions exist to still get child warnings in dev\\n// even with the prod transform. This means that jsxDEV is purely\\n// opt-in behavior for better messages but that we won't stop\\n// giving you warnings if you use production apis.\\n\\nfunction jsxWithValidationStatic(type, props, key) {\\n  {\\n    return jsxWithValidation(type, props, key, true);\\n  }\\n}\\nfunction jsxWithValidationDynamic(type, props, key) {\\n  {\\n    return jsxWithValidation(type, props, key, false);\\n  }\\n}\\n\\nvar jsx =  jsxWithValidationDynamic ; // we may want to special case jsxs internally to take advantage of static children.\\n// for now we can ship identical prod functions\\n\\nvar jsxs =  jsxWithValidationStatic ;\\n\\nexports.jsx = jsx;\\nexports.jsxs = jsxs;\\n  })();\\n}\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///../../../node_modules/react/cjs/react-jsx-runtime.development.js\\n\");\n\n/***/ }),\n\n/***/ \"../../../node_modules/react/jsx-runtime.js\":\n/*!**************************************************!*\\\n  !*** ../../../node_modules/react/jsx-runtime.js ***!\n  \\**************************************************/\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\neval(\"\\n\\nif (false) {} else {\\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-runtime.development.js */ \\\"../../../node_modules/react/cjs/react-jsx-runtime.development.js\\\");\\n}\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3JlYWN0L2pzeC1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUdBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvcmVhY3QvanN4LXJ1bnRpbWUuanM/MDZhYyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LXJ1bnRpbWUucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LXJ1bnRpbWUuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///../../../node_modules/react/jsx-runtime.js\\n\");\n\n/***/ }),\n\n/***/ \"@deriv-com/translations\":\n/*!******************************************!*\\\n  !*** external \"@deriv-com/translations\" ***!\n  \\******************************************/\n/***/ ((module) => {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__deriv_com_translations__;\n\n/***/ }),\n\n/***/ \"@deriv/components\":\n/*!************************************!*\\\n  !*** external \"@deriv/components\" ***!\n  \\************************************/\n/***/ ((module) => {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__deriv_components__;\n\n/***/ }),\n\n/***/ \"react\":\n/*!************************!*\\\n  !*** external \"react\" ***!\n  \\************************/\n/***/ ((module) => {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_react__;\n\n/***/ }),\n\n/***/ \"../../../node_modules/@deriv-com/ui/dist/_commonjsHelpers-BkfeUUK-.js\":\n/*!*****************************************************************************!*\\\n  !*** ../../../node_modules/@deriv-com/ui/dist/_commonjsHelpers-BkfeUUK-.js ***!\n  \\*****************************************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   a: () => (/* binding */ l),\\n/* harmony export */   c: () => (/* binding */ u),\\n/* harmony export */   g: () => (/* binding */ f)\\n/* harmony export */ });\\nvar u = typeof globalThis < \\\"u\\\" ? globalThis : typeof window < \\\"u\\\" ? window : typeof global < \\\"u\\\" ? global : typeof self < \\\"u\\\" ? self : {};\\nfunction f(e) {\\n  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, \\\"default\\\") ? e.default : e;\\n}\\nfunction l(e) {\\n  if (e.__esModule) return e;\\n  var r = e.default;\\n  if (typeof r == \\\"function\\\") {\\n    var t = function o() {\\n      return this instanceof o ? Reflect.construct(r, arguments, this.constructor) : r.apply(this, arguments);\\n    };\\n    t.prototype = r.prototype;\\n  } else t = {};\\n  return Object.defineProperty(t, \\\"__esModule\\\", { value: !0 }), Object.keys(e).forEach(function(o) {\\n    var n = Object.getOwnPropertyDescriptor(e, o);\\n    Object.defineProperty(t, o, n.get ? n : {\\n      enumerable: !0,\\n      get: function() {\\n        return e[o];\\n      }\\n    });\\n  }), t;\\n}\\n\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL0BkZXJpdi1jb20vdWkvZGlzdC9fY29tbW9uanNIZWxwZXJzLUJrZmVVVUstLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFLQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9AZGVyaXYtY29tL3VpL2Rpc3QvX2NvbW1vbmpzSGVscGVycy1Ca2ZlVVVLLS5qcz9kYzA3Il0sInNvdXJjZXNDb250ZW50IjpbInZhciB1ID0gdHlwZW9mIGdsb2JhbFRoaXMgPCBcInVcIiA/IGdsb2JhbFRoaXMgOiB0eXBlb2Ygd2luZG93IDwgXCJ1XCIgPyB3aW5kb3cgOiB0eXBlb2YgZ2xvYmFsIDwgXCJ1XCIgPyBnbG9iYWwgOiB0eXBlb2Ygc2VsZiA8IFwidVwiID8gc2VsZiA6IHt9O1xuZnVuY3Rpb24gZihlKSB7XG4gIHJldHVybiBlICYmIGUuX19lc01vZHVsZSAmJiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSwgXCJkZWZhdWx0XCIpID8gZS5kZWZhdWx0IDogZTtcbn1cbmZ1bmN0aW9uIGwoZSkge1xuICBpZiAoZS5fX2VzTW9kdWxlKSByZXR1cm4gZTtcbiAgdmFyIHIgPSBlLmRlZmF1bHQ7XG4gIGlmICh0eXBlb2YgciA9PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YXIgdCA9IGZ1bmN0aW9uIG8oKSB7XG4gICAgICByZXR1cm4gdGhpcyBpbnN0YW5jZW9mIG8gPyBSZWZsZWN0LmNvbnN0cnVjdChyLCBhcmd1bWVudHMsIHRoaXMuY29uc3RydWN0b3IpIDogci5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIH07XG4gICAgdC5wcm90b3R5cGUgPSByLnByb3RvdHlwZTtcbiAgfSBlbHNlIHQgPSB7fTtcbiAgcmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogITAgfSksIE9iamVjdC5rZXlzKGUpLmZvckVhY2goZnVuY3Rpb24obykge1xuICAgIHZhciBuID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihlLCBvKTtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodCwgbywgbi5nZXQgPyBuIDoge1xuICAgICAgZW51bWVyYWJsZTogITAsXG4gICAgICBnZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gZVtvXTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfSksIHQ7XG59XG5leHBvcnQge1xuICBsIGFzIGEsXG4gIHUgYXMgYyxcbiAgZiBhcyBnXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///../../../node_modules/@deriv-com/ui/dist/_commonjsHelpers-BkfeUUK-.js\\n\");\n\n/***/ }),\n\n/***/ \"../../../node_modules/@deriv-com/ui/dist/hooks/useDevice.js\":\n/*!*******************************************************************!*\\\n  !*** ../../../node_modules/@deriv-com/ui/dist/hooks/useDevice.js ***!\n  \\*******************************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   useDevice: () => (/* binding */ d)\\n/* harmony export */ });\\n/* harmony import */ var _index_EY1gwl5O_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../index-EY1gwl5O.js */ \\\"../../../node_modules/@deriv-com/ui/dist/index-EY1gwl5O.js\\\");\\n\\nconst d = () => {\\n  const i = (0,_index_EY1gwl5O_js__WEBPACK_IMPORTED_MODULE_0__.u)(\\\"(min-width: 1280px)\\\"), a = (0,_index_EY1gwl5O_js__WEBPACK_IMPORTED_MODULE_0__.u)(\\\"(max-width: 600px)\\\"), n = (0,_index_EY1gwl5O_js__WEBPACK_IMPORTED_MODULE_0__.u)(\\n    \\\"(min-width: 601px) and (max-width: 1279px)\\\"\\n  ), e = (0,_index_EY1gwl5O_js__WEBPACK_IMPORTED_MODULE_0__.u)(\\n    \\\"(min-width: 601px) and (max-width: 1279px) and (orientation: portrait)\\\"\\n  ), o = (0,_index_EY1gwl5O_js__WEBPACK_IMPORTED_MODULE_0__.u)(\\n    \\\"(max-width: 1279px) and (orientation: landscape)\\\"\\n  );\\n  return {\\n    /** returns Larger screen tablets [min-width: 1280px] */\\n    isDesktop: i,\\n    /**  returns Smaller screen tablets [max-width: 600px] */\\n    isMobile: a,\\n    /** returns Larger screen phones and smaller screen desktop [min-width: 601px and max-width: 1279px] */\\n    isTablet: n,\\n    /** returns tablet screen with portrait orientation [min-width: 601px and max-width: 1279px and orientation: portrait] */\\n    isTabletPortrait: e,\\n    /** returns mobile or medium screens in landscape orientation [max-width: 1279px and orientation: landscape] */\\n    isMobileOrTabletLandscape: o\\n  };\\n};\\n\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL0BkZXJpdi1jb20vdWkvZGlzdC9ob29rcy91c2VEZXZpY2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL0BkZXJpdi1jb20vdWkvZGlzdC9ob29rcy91c2VEZXZpY2UuanM/MjcwOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1IGFzIHQgfSBmcm9tIFwiLi4vaW5kZXgtRVkxZ3dsNU8uanNcIjtcbmNvbnN0IGQgPSAoKSA9PiB7XG4gIGNvbnN0IGkgPSB0KFwiKG1pbi13aWR0aDogMTI4MHB4KVwiKSwgYSA9IHQoXCIobWF4LXdpZHRoOiA2MDBweClcIiksIG4gPSB0KFxuICAgIFwiKG1pbi13aWR0aDogNjAxcHgpIGFuZCAobWF4LXdpZHRoOiAxMjc5cHgpXCJcbiAgKSwgZSA9IHQoXG4gICAgXCIobWluLXdpZHRoOiA2MDFweCkgYW5kIChtYXgtd2lkdGg6IDEyNzlweCkgYW5kIChvcmllbnRhdGlvbjogcG9ydHJhaXQpXCJcbiAgKSwgbyA9IHQoXG4gICAgXCIobWF4LXdpZHRoOiAxMjc5cHgpIGFuZCAob3JpZW50YXRpb246IGxhbmRzY2FwZSlcIlxuICApO1xuICByZXR1cm4ge1xuICAgIC8qKiByZXR1cm5zIExhcmdlciBzY3JlZW4gdGFibGV0cyBbbWluLXdpZHRoOiAxMjgwcHhdICovXG4gICAgaXNEZXNrdG9wOiBpLFxuICAgIC8qKiAgcmV0dXJucyBTbWFsbGVyIHNjcmVlbiB0YWJsZXRzIFttYXgtd2lkdGg6IDYwMHB4XSAqL1xuICAgIGlzTW9iaWxlOiBhLFxuICAgIC8qKiByZXR1cm5zIExhcmdlciBzY3JlZW4gcGhvbmVzIGFuZCBzbWFsbGVyIHNjcmVlbiBkZXNrdG9wIFttaW4td2lkdGg6IDYwMXB4IGFuZCBtYXgtd2lkdGg6IDEyNzlweF0gKi9cbiAgICBpc1RhYmxldDogbixcbiAgICAvKiogcmV0dXJucyB0YWJsZXQgc2NyZWVuIHdpdGggcG9ydHJhaXQgb3JpZW50YXRpb24gW21pbi13aWR0aDogNjAxcHggYW5kIG1heC13aWR0aDogMTI3OXB4IGFuZCBvcmllbnRhdGlvbjogcG9ydHJhaXRdICovXG4gICAgaXNUYWJsZXRQb3J0cmFpdDogZSxcbiAgICAvKiogcmV0dXJucyBtb2JpbGUgb3IgbWVkaXVtIHNjcmVlbnMgaW4gbGFuZHNjYXBlIG9yaWVudGF0aW9uIFttYXgtd2lkdGg6IDEyNzlweCBhbmQgb3JpZW50YXRpb246IGxhbmRzY2FwZV0gKi9cbiAgICBpc01vYmlsZU9yVGFibGV0TGFuZHNjYXBlOiBvXG4gIH07XG59O1xuZXhwb3J0IHtcbiAgZCBhcyB1c2VEZXZpY2Vcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///../../../node_modules/@deriv-com/ui/dist/hooks/useDevice.js\\n\");\n\n/***/ }),\n\n/***/ \"../../../node_modules/@deriv-com/ui/dist/index-EY1gwl5O.js\":\n/*!******************************************************************!*\\\n  !*** ../../../node_modules/@deriv-com/ui/dist/index-EY1gwl5O.js ***!\n  \\******************************************************************/\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   a: () => (/* binding */ g),\\n/* harmony export */   u: () => (/* binding */ O)\\n/* harmony export */ });\\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \\\"react\\\");\\n/* harmony import */ var _commonjsHelpers_BkfeUUK_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_commonjsHelpers-BkfeUUK-.js */ \\\"../../../node_modules/@deriv-com/ui/dist/_commonjsHelpers-BkfeUUK-.js\\\");\\n\\n\\nvar v = typeof _commonjsHelpers_BkfeUUK_js__WEBPACK_IMPORTED_MODULE_1__.c == \\\"object\\\" && _commonjsHelpers_BkfeUUK_js__WEBPACK_IMPORTED_MODULE_1__.c && _commonjsHelpers_BkfeUUK_js__WEBPACK_IMPORTED_MODULE_1__.c.Object === Object && _commonjsHelpers_BkfeUUK_js__WEBPACK_IMPORTED_MODULE_1__.c, E = typeof self == \\\"object\\\" && self && self.Object === Object && self;\\nv || E || Function(\\\"return this\\\")();\\nvar f = typeof window < \\\"u\\\" ? react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect : react__WEBPACK_IMPORTED_MODULE_0__.useEffect;\\nfunction L(t, s, o, i) {\\n  const c = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(s);\\n  f(() => {\\n    c.current = s;\\n  }, [s]), (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\\n    const n = window;\\n    if (!(n && n.addEventListener))\\n      return;\\n    const r = (e) => {\\n      c.current(e);\\n    };\\n    return n.addEventListener(t, r, i), () => {\\n      n.removeEventListener(t, r, i);\\n    };\\n  }, [t, o, i]);\\n}\\nvar h = typeof window > \\\"u\\\";\\nfunction O(t, {\\n  defaultValue: s = !1,\\n  initializeWithValue: o = !0\\n} = {}) {\\n  const i = (e) => h ? s : window.matchMedia(e).matches, [c, n] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(() => o ? i(t) : s);\\n  function r() {\\n    n(i(t));\\n  }\\n  return f(() => {\\n    const e = window.matchMedia(t);\\n    return r(), e.addListener ? e.addListener(r) : e.addEventListener(\\\"change\\\", r), () => {\\n      e.removeListener ? e.removeListener(r) : e.removeEventListener(\\\"change\\\", r);\\n    };\\n  }, [t]), c;\\n}\\nfunction g(t, s, o = \\\"mousedown\\\", i = {}) {\\n  L(\\n    o,\\n    (c) => {\\n      const n = c.target;\\n      if (!n || !n.isConnected)\\n        return;\\n      (Array.isArray(t) ? t.filter((e) => !!e.current).every((e) => e.current && !e.current.contains(n)) : t.current && !t.current.contains(n)) && s(c);\\n    },\\n    void 0,\\n    i\\n  );\\n}\\n\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL0BkZXJpdi1jb20vdWkvZGlzdC9pbmRleC1FWTFnd2w1Ty5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUlBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL0BkZXJpdi1jb20vdWkvZGlzdC9pbmRleC1FWTFnd2w1Ty5qcz9iODMzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZVN0YXRlIGFzIGQsIHVzZUxheW91dEVmZmVjdCBhcyBtLCB1c2VFZmZlY3QgYXMgdSwgdXNlUmVmIGFzIGwgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IGMgYXMgYSB9IGZyb20gXCIuL19jb21tb25qc0hlbHBlcnMtQmtmZVVVSy0uanNcIjtcbnZhciB2ID0gdHlwZW9mIGEgPT0gXCJvYmplY3RcIiAmJiBhICYmIGEuT2JqZWN0ID09PSBPYmplY3QgJiYgYSwgRSA9IHR5cGVvZiBzZWxmID09IFwib2JqZWN0XCIgJiYgc2VsZiAmJiBzZWxmLk9iamVjdCA9PT0gT2JqZWN0ICYmIHNlbGY7XG52IHx8IEUgfHwgRnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpO1xudmFyIGYgPSB0eXBlb2Ygd2luZG93IDwgXCJ1XCIgPyBtIDogdTtcbmZ1bmN0aW9uIEwodCwgcywgbywgaSkge1xuICBjb25zdCBjID0gbChzKTtcbiAgZigoKSA9PiB7XG4gICAgYy5jdXJyZW50ID0gcztcbiAgfSwgW3NdKSwgdSgoKSA9PiB7XG4gICAgY29uc3QgbiA9IHdpbmRvdztcbiAgICBpZiAoIShuICYmIG4uYWRkRXZlbnRMaXN0ZW5lcikpXG4gICAgICByZXR1cm47XG4gICAgY29uc3QgciA9IChlKSA9PiB7XG4gICAgICBjLmN1cnJlbnQoZSk7XG4gICAgfTtcbiAgICByZXR1cm4gbi5hZGRFdmVudExpc3RlbmVyKHQsIHIsIGkpLCAoKSA9PiB7XG4gICAgICBuLnJlbW92ZUV2ZW50TGlzdGVuZXIodCwgciwgaSk7XG4gICAgfTtcbiAgfSwgW3QsIG8sIGldKTtcbn1cbnZhciBoID0gdHlwZW9mIHdpbmRvdyA+IFwidVwiO1xuZnVuY3Rpb24gTyh0LCB7XG4gIGRlZmF1bHRWYWx1ZTogcyA9ICExLFxuICBpbml0aWFsaXplV2l0aFZhbHVlOiBvID0gITBcbn0gPSB7fSkge1xuICBjb25zdCBpID0gKGUpID0+IGggPyBzIDogd2luZG93Lm1hdGNoTWVkaWEoZSkubWF0Y2hlcywgW2MsIG5dID0gZCgoKSA9PiBvID8gaSh0KSA6IHMpO1xuICBmdW5jdGlvbiByKCkge1xuICAgIG4oaSh0KSk7XG4gIH1cbiAgcmV0dXJuIGYoKCkgPT4ge1xuICAgIGNvbnN0IGUgPSB3aW5kb3cubWF0Y2hNZWRpYSh0KTtcbiAgICByZXR1cm4gcigpLCBlLmFkZExpc3RlbmVyID8gZS5hZGRMaXN0ZW5lcihyKSA6IGUuYWRkRXZlbnRMaXN0ZW5lcihcImNoYW5nZVwiLCByKSwgKCkgPT4ge1xuICAgICAgZS5yZW1vdmVMaXN0ZW5lciA/IGUucmVtb3ZlTGlzdGVuZXIocikgOiBlLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJjaGFuZ2VcIiwgcik7XG4gICAgfTtcbiAgfSwgW3RdKSwgYztcbn1cbmZ1bmN0aW9uIGcodCwgcywgbyA9IFwibW91c2Vkb3duXCIsIGkgPSB7fSkge1xuICBMKFxuICAgIG8sXG4gICAgKGMpID0+IHtcbiAgICAgIGNvbnN0IG4gPSBjLnRhcmdldDtcbiAgICAgIGlmICghbiB8fCAhbi5pc0Nvbm5lY3RlZClcbiAgICAgICAgcmV0dXJuO1xuICAgICAgKEFycmF5LmlzQXJyYXkodCkgPyB0LmZpbHRlcigoZSkgPT4gISFlLmN1cnJlbnQpLmV2ZXJ5KChlKSA9PiBlLmN1cnJlbnQgJiYgIWUuY3VycmVudC5jb250YWlucyhuKSkgOiB0LmN1cnJlbnQgJiYgIXQuY3VycmVudC5jb250YWlucyhuKSkgJiYgcyhjKTtcbiAgICB9LFxuICAgIHZvaWQgMCxcbiAgICBpXG4gICk7XG59XG5leHBvcnQge1xuICBnIGFzIGEsXG4gIE8gYXMgdVxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///../../../node_modules/@deriv-com/ui/dist/index-EY1gwl5O.js\\n\");\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __nested_webpack_require_137960__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __nested_webpack_require_137960__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t/* webpack/runtime/compat get default export */\n/******/ \t(() => {\n/******/ \t\t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t\t__nested_webpack_require_137960__.n = (module) => {\n/******/ \t\t\tvar getter = module && module.__esModule ?\n/******/ \t\t\t\t() => (module['default']) :\n/******/ \t\t\t\t() => (module);\n/******/ \t\t\t__nested_webpack_require_137960__.d(getter, { a: getter });\n/******/ \t\t\treturn getter;\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/define property getters */\n/******/ \t(() => {\n/******/ \t\t// define getter functions for harmony exports\n/******/ \t\t__nested_webpack_require_137960__.d = (exports, definition) => {\n/******/ \t\t\tfor(var key in definition) {\n/******/ \t\t\t\tif(__nested_webpack_require_137960__.o(definition, key) && !__nested_webpack_require_137960__.o(exports, key)) {\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\n/******/ \t(() => {\n/******/ \t\t__nested_webpack_require_137960__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/make namespace object */\n/******/ \t(() => {\n/******/ \t\t// define __esModule on exports\n/******/ \t\t__nested_webpack_require_137960__.r = (exports) => {\n/******/ \t\t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t\t}\n/******/ \t\t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/************************************************************************/\n/******/ \t\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \t// This entry module can't be inlined because the eval-source-map devtool is used.\n/******/ \tvar __nested_webpack_exports__ = __nested_webpack_require_137960__(\"./Components/trading-assessment/risk-tolerance-warning-modal.tsx\");\n/******/ \t__nested_webpack_exports__ = __nested_webpack_exports__[\"default\"];\n/******/ \t\n/******/ \treturn __nested_webpack_exports__;\n/******/ })()\n;\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../account/dist/account/js/risk-tolerance-warning-modal.js\n"
                );

                /***/
            },

        /***/ '../../account/src/Components/currency-selector/currency-selector.tsx':
            /*!****************************************************************************!*\
  !*** ../../account/src/Components/currency-selector/currency-selector.tsx ***!
  \****************************************************************************/
            /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Hr: () => (/* binding */ Hr),\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "../../../node_modules/react/index.js");\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! clsx */ "../../../node_modules/clsx/dist/clsx.mjs");\n/* harmony import */ var formik__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! formik */ "../../../node_modules/formik/dist/formik.esm.js");\n/* harmony import */ var _deriv_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @deriv/components */ "../../components/src/index.ts");\n/* harmony import */ var _deriv_shared__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @deriv/shared */ "../../shared/src/index.ts");\n/* harmony import */ var _deriv_stores__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @deriv/stores */ "../../../node_modules/mobx-react-lite/es/index.js");\n/* harmony import */ var _deriv_stores__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @deriv/stores */ "../../stores/src/useStore.ts");\n/* harmony import */ var _deriv_translations__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @deriv/translations */ "../../translations/src/index.js");\n/* harmony import */ var _radio_button__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./radio-button */ "../../account/src/Components/currency-selector/radio-button.tsx");\n/* harmony import */ var _radio_button_group__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./radio-button-group */ "../../account/src/Components/currency-selector/radio-button-group.tsx");\n/* harmony import */ var _real_account_signup_helpers_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../real-account-signup/helpers/utils */ "../../account/src/Components/real-account-signup/helpers/utils.ts");\n/* harmony import */ var _deriv_com_ui__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @deriv-com/ui */ "../../../node_modules/@deriv-com/ui/dist/hooks/useDevice.js");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! react/jsx-runtime */ "../../../node_modules/react/jsx-runtime.js");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }\nfunction _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }\n\n\n\n\n\n\n\n\n\n\n\n\nconst Hr = () => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)("div", {\n  className: "currency-hr"\n});\n/**\n * Currency selector component to select the Account currency\n * @name CurrencySelector\n * @param getCurrentStep - Get the current step\n * @param goToNextStep - Go to the next step\n * @param goToStep - Go to a specific step\n * @param goToPreviousStep - Go to the previous step\n * @param has_cancel - Has cancel button\n * @param has_wallet_account - Has wallet account\n * @param is_virtual - Is virtual account\n * @param onCancel - To handle click on cancel button\n * @param onSave - To handle click on save button\n * @param onSubmit - To handle click on submit button\n * @param set_currency - Is current set\n * @param alidate - To validate the form\n * @param alue - Value of the form\n * @returns React node\n */\nconst CurrencySelector = (0,_deriv_stores__WEBPACK_IMPORTED_MODULE_9__.observer)(_ref => {\n  let {\n    getCurrentStep,\n    goToNextStep,\n    goToStep,\n    onSubmit,\n    onSave,\n    onCancel,\n    goToPreviousStep,\n    set_currency,\n    validate,\n    has_cancel = false,\n    has_wallet_account,\n    value\n  } = _ref;\n  const {\n    client,\n    ui\n  } = (0,_deriv_stores__WEBPACK_IMPORTED_MODULE_10__["default"])();\n  const {\n    currency,\n    has_active_real_account: has_real_account,\n    upgradeable_currencies: legal_allowed_currencies,\n    available_crypto_currencies,\n    has_fiat,\n    accounts\n  } = client;\n  const has_currency = Boolean(currency);\n  const {\n    real_account_signup,\n    real_account_signup_target,\n    resetRealAccountSignupParams\n  } = ui;\n  const {\n    isMobile,\n    isDesktop\n  } = (0,_deriv_com_ui__WEBPACK_IMPORTED_MODULE_11__.useDevice)();\n\n  // Wrapped with String() to avoid type mismatch\n  const crypto = legal_allowed_currencies.filter(selected_currency => String(selected_currency.type) === _deriv_shared__WEBPACK_IMPORTED_MODULE_3__.CURRENCY_TYPE.CRYPTO);\n\n  // Wrapped with String() to avoid type mismatch\n  const fiat = legal_allowed_currencies.filter(selected_currency => String(selected_currency.type) === _deriv_shared__WEBPACK_IMPORTED_MODULE_3__.CURRENCY_TYPE.FIAT);\n  const [is_bypass_step, setIsBypassStep] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n  const should_disable_fiat = !!Object.values(accounts).filter(item => item.landing_company_shortcode === real_account_signup_target).length;\n  const handleCancel = values => {\n    const current_step = getCurrentStep() - 1;\n    onSave === null || onSave === void 0 || onSave(current_step, values);\n    onCancel(current_step, goToPreviousStep);\n  };\n  const handleValidate = values => {\n    const current_step = ((getCurrentStep === null || getCurrentStep === void 0 ? void 0 : getCurrentStep()) || 1) - 1;\n    onSave === null || onSave === void 0 || onSave(current_step, values);\n    const {\n      errors\n    } = (0,_real_account_signup_helpers_utils__WEBPACK_IMPORTED_MODULE_7__.splitValidationResultTypes)(validate(values));\n    return errors;\n  };\n\n  // In case of form error bypass to update personal data\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    if (real_account_signup !== null && real_account_signup !== void 0 && real_account_signup.error_code) {\n      setIsBypassStep(true);\n    }\n  }, [real_account_signup === null || real_account_signup === void 0 ? void 0 : real_account_signup.error_code]);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    if (is_bypass_step && real_account_signup !== null && real_account_signup !== void 0 && real_account_signup.error_details) {\n      const keys = Object.keys(real_account_signup === null || real_account_signup === void 0 ? void 0 : real_account_signup.error_details);\n      const route_to_address_details = Object.keys((0,_deriv_shared__WEBPACK_IMPORTED_MODULE_3__.getAddressDetailsFields)()).filter(item => keys.includes(item));\n      if ((route_to_address_details === null || route_to_address_details === void 0 ? void 0 : route_to_address_details.length) > 0) {\n        goToStep(3);\n      } else {\n        goToNextStep();\n      }\n      resetRealAccountSignupParams();\n      setIsBypassStep(false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [is_bypass_step]);\n  const getHeightOffset = () => {\n    if (!has_currency && has_real_account) {\n      return \'89px\';\n    }\n    return \'159px\';\n  };\n  const getSubmitLabel = () => {\n    if (set_currency) {\n      return (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_4__.localize)(\'Set currency\');\n    } else if (has_wallet_account) {\n      return (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_4__.localize)(\'Finish\');\n    }\n    return (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_4__.localize)(\'Next\');\n  };\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(formik__WEBPACK_IMPORTED_MODULE_12__.Formik, {\n    initialValues: value,\n    onSubmit: (values, actions) => {\n      onSubmit(getCurrentStep ? getCurrentStep() - 1 : null, values, actions.setSubmitting, goToNextStep);\n    },\n    validate: handleValidate,\n    children: _ref2 => {\n      let {\n        handleSubmit,\n        values\n      } = _ref2;\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.AutoHeightWrapper, {\n        default_height: 450,\n        children: _ref3 => {\n          var _reorderCurrencies, _reorderCurrencies2;\n          let {\n            setRef,\n            height\n          } = _ref3;\n          return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)("form", {\n            ref: setRef,\n            onSubmit: handleSubmit,\n            className: "currency-selector",\n            "data-testid": "currency_selector_form",\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.Div100vhContainer, {\n              className: (0,clsx__WEBPACK_IMPORTED_MODULE_1__["default"])(\'currency-selector__container\', {\n                \'currency-selector__container--no-top-margin\': !has_currency && has_real_account && isMobile\n              }),\n              height_offset: getHeightOffset(),\n              is_disabled: isDesktop,\n              children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.ThemedScrollbars, {\n                height: height,\n                children: [!!(fiat !== null && fiat !== void 0 && fiat.length) && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                  children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_radio_button_group__WEBPACK_IMPORTED_MODULE_6__["default"], {\n                    className: "currency-selector__radio-group currency-selector__radio-group--with-margin",\n                    is_fiat: true,\n                    item_count: fiat.length,\n                    children: (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_3__.reorderCurrencies)(fiat).map(avbl_currency => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(formik__WEBPACK_IMPORTED_MODULE_12__.Field, {\n                      component: _radio_button__WEBPACK_IMPORTED_MODULE_5__["default"],\n                      name: "currency",\n                      id: avbl_currency.value,\n                      label: avbl_currency.name,\n                      selected: should_disable_fiat && has_fiat\n                    }, avbl_currency.value))\n                  }), !!((_reorderCurrencies = (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_3__.reorderCurrencies)(crypto, \'crypto\')) !== null && _reorderCurrencies !== void 0 && _reorderCurrencies.length) && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(Hr, {})]\n                }), !!((_reorderCurrencies2 = (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_3__.reorderCurrencies)(crypto, \'crypto\')) !== null && _reorderCurrencies2 !== void 0 && _reorderCurrencies2.length) && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                  children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_radio_button_group__WEBPACK_IMPORTED_MODULE_6__["default"], {\n                    is_title_enabled: false,\n                    className: "currency-selector__radio-group currency-selector__radio-group--with-margin",\n                    item_count: (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_3__.reorderCurrencies)(crypto, \'crypto\').length,\n                    children: (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_3__.reorderCurrencies)(crypto, \'crypto\').map(avbl_currency => {\n                      var _available_crypto_cur;\n                      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(formik__WEBPACK_IMPORTED_MODULE_12__.Field, {\n                        component: _radio_button__WEBPACK_IMPORTED_MODULE_5__["default"],\n                        selected: (available_crypto_currencies === null || available_crypto_currencies === void 0 || (_available_crypto_cur = available_crypto_currencies.filter(crypto_data => crypto_data.value === avbl_currency.value)) === null || _available_crypto_cur === void 0 ? void 0 : _available_crypto_cur.length) === 0,\n                        name: "currency",\n                        id: avbl_currency.value,\n                        label: avbl_currency.name\n                      }, avbl_currency.value);\n                    })\n                  })\n                })]\n              })\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.Modal.Footer, {\n              has_separator: true,\n              is_bypassed: isMobile,\n              children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.FormSubmitButton, _objectSpread({\n                className: set_currency ? \'currency-selector--set-currency\' : \'currency-selector--deriv-account\',\n                is_disabled: !values.currency,\n                is_center: false,\n                is_absolute: set_currency,\n                label: getSubmitLabel()\n              }, has_cancel ? {\n                cancel_label: (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_4__.localize)(\'Previous\'),\n                has_cancel: true,\n                onCancel: () => handleCancel(values)\n              } : {}))\n            })]\n          });\n        }\n      });\n    }\n  });\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CurrencySelector);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../account/src/Components/currency-selector/currency-selector.tsx\n'
                );

                /***/
            },

        /***/ '../../account/src/Components/currency-selector/index.ts':
            /*!***************************************************************!*\
  !*** ../../account/src/Components/currency-selector/index.ts ***!
  \***************************************************************/
            /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _currency_selector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./currency-selector */ "../../account/src/Components/currency-selector/currency-selector.tsx");\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_currency_selector__WEBPACK_IMPORTED_MODULE_0__["default"]);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vYWNjb3VudC9zcmMvQ29tcG9uZW50cy9jdXJyZW5jeS1zZWxlY3Rvci9pbmRleC50cyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vLi4vYWNjb3VudC9zcmMvQ29tcG9uZW50cy9jdXJyZW5jeS1zZWxlY3Rvci9pbmRleC50cz80MDk2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDdXJyZW5jeVNlbGVjdG9yIGZyb20gJy4vY3VycmVuY3ktc2VsZWN0b3InO1xuXG5leHBvcnQgZGVmYXVsdCBDdXJyZW5jeVNlbGVjdG9yO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../account/src/Components/currency-selector/index.ts\n'
                );

                /***/
            },

        /***/ '../../account/src/Components/currency-selector/radio-button-group.tsx':
            /*!*****************************************************************************!*\
  !*** ../../account/src/Components/currency-selector/radio-button-group.tsx ***!
  \*****************************************************************************/
            /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "../../../node_modules/react/index.js");\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! clsx */ "../../../node_modules/clsx/dist/clsx.mjs");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-runtime */ "../../../node_modules/react/jsx-runtime.js");\n\n\n\n/**\n * Wrapper component for RadioButton\n * @name RadioButtonGroup\n * @param {string} className - class name for styling\n * @param {boolean} is_fiat - is fiat currency\n * @param {boolean} is_title_enabled - is title enabled\n * @param {number} item_count - number of items\n * @param {string} label - label for the radio button\n * @param {React.ReactNode} description - description for the radio button\n * @returns {React.ReactNode} - returns a React node\n */\nconst RadioButtonGroup = _ref => {\n  let {\n    children,\n    label,\n    className,\n    is_title_enabled = true,\n    is_fiat,\n    item_count,\n    description\n  } = _ref;\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("div", {\n    className: className,\n    children: [is_title_enabled && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("h2", {\n      className: (0,clsx__WEBPACK_IMPORTED_MODULE_1__["default"])(`${className}--is-header`, {\n        \'currency-selector__is-crypto\': !is_fiat\n      }),\n      children: label\n    }), is_fiat && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div", {\n      className: "currency-selector__description",\n      children: description\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div", {\n      className: (0,clsx__WEBPACK_IMPORTED_MODULE_1__["default"])(\'currency-list__items\', {\n        \'currency-list__items__center\': item_count < 4,\n        \'currency-list__items__is-fiat\': is_fiat,\n        \'currency-list__items__is-crypto\': !is_fiat\n      }),\n      children: children\n    })]\n  });\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (RadioButtonGroup);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vYWNjb3VudC9zcmMvQ29tcG9uZW50cy9jdXJyZW5jeS1zZWxlY3Rvci9yYWRpby1idXR0b24tZ3JvdXAudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQUE7QUFXQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFRQTtBQVBBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFHQTtBQUNBO0FBQ0E7QUFBQTtBQUVBO0FBR0E7QUFBQTtBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBRUE7QUFDQTtBQUdBO0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vLi4vYWNjb3VudC9zcmMvQ29tcG9uZW50cy9jdXJyZW5jeS1zZWxlY3Rvci9yYWRpby1idXR0b24tZ3JvdXAudHN4P2RlMmMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBjbHN4IGZyb20gJ2Nsc3gnO1xuXG5leHBvcnQgdHlwZSBUUmFkaW9CdXR0b25Hcm91cCA9IHtcbiAgICBjbGFzc05hbWU6IHN0cmluZztcbiAgICBpc19maWF0PzogYm9vbGVhbjtcbiAgICBpc190aXRsZV9lbmFibGVkPzogYm9vbGVhbjtcbiAgICBpdGVtX2NvdW50OiBudW1iZXI7XG4gICAgbGFiZWw/OiBzdHJpbmc7XG4gICAgZGVzY3JpcHRpb24/OiBSZWFjdC5SZWFjdE5vZGU7XG59O1xuXG4vKipcbiAqIFdyYXBwZXIgY29tcG9uZW50IGZvciBSYWRpb0J1dHRvblxuICogQG5hbWUgUmFkaW9CdXR0b25Hcm91cFxuICogQHBhcmFtIHtzdHJpbmd9IGNsYXNzTmFtZSAtIGNsYXNzIG5hbWUgZm9yIHN0eWxpbmdcbiAqIEBwYXJhbSB7Ym9vbGVhbn0gaXNfZmlhdCAtIGlzIGZpYXQgY3VycmVuY3lcbiAqIEBwYXJhbSB7Ym9vbGVhbn0gaXNfdGl0bGVfZW5hYmxlZCAtIGlzIHRpdGxlIGVuYWJsZWRcbiAqIEBwYXJhbSB7bnVtYmVyfSBpdGVtX2NvdW50IC0gbnVtYmVyIG9mIGl0ZW1zXG4gKiBAcGFyYW0ge3N0cmluZ30gbGFiZWwgLSBsYWJlbCBmb3IgdGhlIHJhZGlvIGJ1dHRvblxuICogQHBhcmFtIHtSZWFjdC5SZWFjdE5vZGV9IGRlc2NyaXB0aW9uIC0gZGVzY3JpcHRpb24gZm9yIHRoZSByYWRpbyBidXR0b25cbiAqIEByZXR1cm5zIHtSZWFjdC5SZWFjdE5vZGV9IC0gcmV0dXJucyBhIFJlYWN0IG5vZGVcbiAqL1xuY29uc3QgUmFkaW9CdXR0b25Hcm91cCA9ICh7XG4gICAgY2hpbGRyZW4sXG4gICAgbGFiZWwsXG4gICAgY2xhc3NOYW1lLFxuICAgIGlzX3RpdGxlX2VuYWJsZWQgPSB0cnVlLFxuICAgIGlzX2ZpYXQsXG4gICAgaXRlbV9jb3VudCxcbiAgICBkZXNjcmlwdGlvbixcbn06IFJlYWN0LlByb3BzV2l0aENoaWxkcmVuPFRSYWRpb0J1dHRvbkdyb3VwPikgPT4ge1xuICAgIHJldHVybiAoXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPXtjbGFzc05hbWV9PlxuICAgICAgICAgICAge2lzX3RpdGxlX2VuYWJsZWQgJiYgKFxuICAgICAgICAgICAgICAgIDxoMlxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9e2Nsc3goYCR7Y2xhc3NOYW1lfS0taXMtaGVhZGVyYCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgJ2N1cnJlbmN5LXNlbGVjdG9yX19pcy1jcnlwdG8nOiAhaXNfZmlhdCxcbiAgICAgICAgICAgICAgICAgICAgfSl9XG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICB7bGFiZWx9XG4gICAgICAgICAgICAgICAgPC9oMj5cbiAgICAgICAgICAgICl9XG4gICAgICAgICAgICB7aXNfZmlhdCAmJiA8ZGl2IGNsYXNzTmFtZT0nY3VycmVuY3ktc2VsZWN0b3JfX2Rlc2NyaXB0aW9uJz57ZGVzY3JpcHRpb259PC9kaXY+fVxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17Y2xzeCgnY3VycmVuY3ktbGlzdF9faXRlbXMnLCB7XG4gICAgICAgICAgICAgICAgICAgICdjdXJyZW5jeS1saXN0X19pdGVtc19fY2VudGVyJzogaXRlbV9jb3VudCA8IDQsXG4gICAgICAgICAgICAgICAgICAgICdjdXJyZW5jeS1saXN0X19pdGVtc19faXMtZmlhdCc6IGlzX2ZpYXQsXG4gICAgICAgICAgICAgICAgICAgICdjdXJyZW5jeS1saXN0X19pdGVtc19faXMtY3J5cHRvJzogIWlzX2ZpYXQsXG4gICAgICAgICAgICAgICAgfSl9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAge2NoaWxkcmVufVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBSYWRpb0J1dHRvbkdyb3VwO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../account/src/Components/currency-selector/radio-button-group.tsx\n'
                );

                /***/
            },

        /***/ '../../account/src/Components/currency-selector/radio-button.tsx':
            /*!***********************************************************************!*\
  !*** ../../account/src/Components/currency-selector/radio-button.tsx ***!
  \***********************************************************************/
            /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "../../../node_modules/react/index.js");\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! clsx */ "../../../node_modules/clsx/dist/clsx.mjs");\n/* harmony import */ var _deriv_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @deriv/components */ "../../components/src/index.ts");\n/* harmony import */ var _deriv_shared__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @deriv/shared */ "../../shared/src/index.ts");\n/* harmony import */ var _ust_popover__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ust-popover */ "../../account/src/Components/currency-selector/ust-popover.tsx");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react/jsx-runtime */ "../../../node_modules/react/jsx-runtime.js");\nconst _excluded = ["field", "icon", "id", "label", "second_line_label", "onClick", "className"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }\nfunction _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }\n\n\n\n\n\n\n/**\n *  RadioButton component to select currency\n * @name RadioButton\n * @param {React.InputHTMLAttributes<HTMLInputElement>} field - field props given by Formik\n * @param {string} icon - icon name\n * @param {string} id - currency id\n * @param {string} label - currency name\n * @param {string} second_line_label - currency code\n * @param {Function} onClick - function to be called on click\n * @param {AllHTMLAttributes<HTMLInputElement | HTMLLabelElement>} props - other props to be passed\n * @returns {React.ReactNode} - returns a React node\n */\n\nconst RadioButton = _ref => {\n  let {\n      field: {\n        name,\n        value,\n        onChange,\n        onBlur\n      },\n      icon,\n      id,\n      label,\n      second_line_label,\n      onClick,\n      className\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("input", _objectSpread({\n      name: name,\n      id: id,\n      type: "radio",\n      value: id // could be something else for output?\n      ,\n      checked: id === value,\n      onChange: onChange,\n      onBlur: onBlur,\n      disabled: props.selected,\n      className: (0,clsx__WEBPACK_IMPORTED_MODULE_1__["default"])(className, \'currency-list__radio-button\')\n    }, props)), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("label", {\n      htmlFor: id,\n      className: (0,clsx__WEBPACK_IMPORTED_MODULE_1__["default"])(\'currency-list__item\', {\n        \'currency-list__item--selected\': id === value,\n        \'currency-list__item--current\': props.selected\n      }),\n      onClick: onClick,\n      children: icon ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.Icon, {\n          className: "currency-list__icon",\n          icon: icon\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)("div", {\n          className: "label currency-list__item-text",\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("div", {\n            className: "currency-list__item-label",\n            children: label\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("div", {\n            className: "currency-list__item-code",\n            children: second_line_label\n          })]\n        })]\n      }) : /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.Icon, {\n          className: "currency-list__icon",\n          icon: `IcCurrency-${id === null || id === void 0 ? void 0 : id.toLowerCase()}`\n        }), id && /^(UST|eUSDT|tUSDT)$/i.test(id) && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_ust_popover__WEBPACK_IMPORTED_MODULE_4__["default"], {\n          id: id\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)("div", {\n          className: "label currency-list__item-text",\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("div", {\n            className: "currency-list__item-label",\n            children: label\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)("div", {\n            className: "currency-list__item-code",\n            children: ["(", (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_3__.getCurrencyDisplayCode)(id), ")"]\n          })]\n        })]\n      })\n    })]\n  });\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (RadioButton);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vYWNjb3VudC9zcmMvQ29tcG9uZW50cy9jdXJyZW5jeS1zZWxlY3Rvci9yYWRpby1idXR0b24udHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQWFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQVNBO0FBUkE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFEQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFHQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBR0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFFQTtBQUNBO0FBR0E7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi8uLi9hY2NvdW50L3NyYy9Db21wb25lbnRzL2N1cnJlbmN5LXNlbGVjdG9yL3JhZGlvLWJ1dHRvbi50c3g/YTdmYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgQWxsSFRNTEF0dHJpYnV0ZXMgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgY2xzeCBmcm9tICdjbHN4JztcbmltcG9ydCB7IEljb24gfSBmcm9tICdAZGVyaXYvY29tcG9uZW50cyc7XG5pbXBvcnQgeyBnZXRDdXJyZW5jeURpc3BsYXlDb2RlIH0gZnJvbSAnQGRlcml2L3NoYXJlZCc7XG5pbXBvcnQgVVNUUG9wb3ZlciBmcm9tICcuL3VzdC1wb3BvdmVyJztcblxudHlwZSBUUmFkaW9CdXR0b25FeHRlbmQgPSB7XG4gICAgZmllbGQ6IFJlYWN0LklucHV0SFRNTEF0dHJpYnV0ZXM8SFRNTElucHV0RWxlbWVudD47XG4gICAgaWNvbj86IHN0cmluZztcbiAgICBzZWNvbmRfbGluZV9sYWJlbD86IHN0cmluZztcbiAgICBpZDogc3RyaW5nO1xuICAgIGxhYmVsOiBzdHJpbmc7XG4gICAgb25DbGljaz86IChlOiBSZWFjdC5Nb3VzZUV2ZW50PEhUTUxMYWJlbEVsZW1lbnQsIE1vdXNlRXZlbnQ+KSA9PiB2b2lkO1xufTtcblxuZXhwb3J0IHR5cGUgVFJhZGlvQnV0dG9uID0gQWxsSFRNTEF0dHJpYnV0ZXM8SFRNTElucHV0RWxlbWVudCB8IEhUTUxMYWJlbEVsZW1lbnQ+ICYgVFJhZGlvQnV0dG9uRXh0ZW5kO1xuXG4vKipcbiAqICBSYWRpb0J1dHRvbiBjb21wb25lbnQgdG8gc2VsZWN0IGN1cnJlbmN5XG4gKiBAbmFtZSBSYWRpb0J1dHRvblxuICogQHBhcmFtIHtSZWFjdC5JbnB1dEhUTUxBdHRyaWJ1dGVzPEhUTUxJbnB1dEVsZW1lbnQ+fSBmaWVsZCAtIGZpZWxkIHByb3BzIGdpdmVuIGJ5IEZvcm1pa1xuICogQHBhcmFtIHtzdHJpbmd9IGljb24gLSBpY29uIG5hbWVcbiAqIEBwYXJhbSB7c3RyaW5nfSBpZCAtIGN1cnJlbmN5IGlkXG4gKiBAcGFyYW0ge3N0cmluZ30gbGFiZWwgLSBjdXJyZW5jeSBuYW1lXG4gKiBAcGFyYW0ge3N0cmluZ30gc2Vjb25kX2xpbmVfbGFiZWwgLSBjdXJyZW5jeSBjb2RlXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBvbkNsaWNrIC0gZnVuY3Rpb24gdG8gYmUgY2FsbGVkIG9uIGNsaWNrXG4gKiBAcGFyYW0ge0FsbEhUTUxBdHRyaWJ1dGVzPEhUTUxJbnB1dEVsZW1lbnQgfCBIVE1MTGFiZWxFbGVtZW50Pn0gcHJvcHMgLSBvdGhlciBwcm9wcyB0byBiZSBwYXNzZWRcbiAqIEByZXR1cm5zIHtSZWFjdC5SZWFjdE5vZGV9IC0gcmV0dXJucyBhIFJlYWN0IG5vZGVcbiAqL1xuXG5jb25zdCBSYWRpb0J1dHRvbiA9ICh7XG4gICAgZmllbGQ6IHsgbmFtZSwgdmFsdWUsIG9uQ2hhbmdlLCBvbkJsdXIgfSxcbiAgICBpY29uLFxuICAgIGlkLFxuICAgIGxhYmVsLFxuICAgIHNlY29uZF9saW5lX2xhYmVsLFxuICAgIG9uQ2xpY2ssXG4gICAgY2xhc3NOYW1lLFxuICAgIC4uLnByb3BzXG59OiBUUmFkaW9CdXR0b24pID0+IHtcbiAgICByZXR1cm4gKFxuICAgICAgICA8UmVhY3QuRnJhZ21lbnQ+XG4gICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICBuYW1lPXtuYW1lfVxuICAgICAgICAgICAgICAgIGlkPXtpZH1cbiAgICAgICAgICAgICAgICB0eXBlPSdyYWRpbydcbiAgICAgICAgICAgICAgICB2YWx1ZT17aWR9IC8vIGNvdWxkIGJlIHNvbWV0aGluZyBlbHNlIGZvciBvdXRwdXQ/XG4gICAgICAgICAgICAgICAgY2hlY2tlZD17aWQgPT09IHZhbHVlfVxuICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXtvbkNoYW5nZX1cbiAgICAgICAgICAgICAgICBvbkJsdXI9e29uQmx1cn1cbiAgICAgICAgICAgICAgICBkaXNhYmxlZD17cHJvcHMuc2VsZWN0ZWR9XG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPXtjbHN4KGNsYXNzTmFtZSwgJ2N1cnJlbmN5LWxpc3RfX3JhZGlvLWJ1dHRvbicpfVxuICAgICAgICAgICAgICAgIHsuLi5wcm9wc31cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8bGFiZWxcbiAgICAgICAgICAgICAgICBodG1sRm9yPXtpZH1cbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9e2Nsc3goJ2N1cnJlbmN5LWxpc3RfX2l0ZW0nLCB7XG4gICAgICAgICAgICAgICAgICAgICdjdXJyZW5jeS1saXN0X19pdGVtLS1zZWxlY3RlZCc6IGlkID09PSB2YWx1ZSxcbiAgICAgICAgICAgICAgICAgICAgJ2N1cnJlbmN5LWxpc3RfX2l0ZW0tLWN1cnJlbnQnOiBwcm9wcy5zZWxlY3RlZCxcbiAgICAgICAgICAgICAgICB9KX1cbiAgICAgICAgICAgICAgICBvbkNsaWNrPXtvbkNsaWNrfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIHtpY29uID8gKFxuICAgICAgICAgICAgICAgICAgICA8UmVhY3QuRnJhZ21lbnQ+XG4gICAgICAgICAgICAgICAgICAgICAgICA8SWNvbiBjbGFzc05hbWU9J2N1cnJlbmN5LWxpc3RfX2ljb24nIGljb249e2ljb259IC8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nbGFiZWwgY3VycmVuY3ktbGlzdF9faXRlbS10ZXh0Jz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nY3VycmVuY3ktbGlzdF9faXRlbS1sYWJlbCc+e2xhYmVsfTwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdjdXJyZW5jeS1saXN0X19pdGVtLWNvZGUnPntzZWNvbmRfbGluZV9sYWJlbH08L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8L1JlYWN0LkZyYWdtZW50PlxuICAgICAgICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICAgICAgICAgIDxSZWFjdC5GcmFnbWVudD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxJY29uIGNsYXNzTmFtZT0nY3VycmVuY3ktbGlzdF9faWNvbicgaWNvbj17YEljQ3VycmVuY3ktJHtpZD8udG9Mb3dlckNhc2UoKX1gfSAvPlxuICAgICAgICAgICAgICAgICAgICAgICAge2lkICYmIC9eKFVTVHxlVVNEVHx0VVNEVCkkL2kudGVzdChpZCkgJiYgPFVTVFBvcG92ZXIgaWQ9e2lkfSAvPn1cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdsYWJlbCBjdXJyZW5jeS1saXN0X19pdGVtLXRleHQnPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdjdXJyZW5jeS1saXN0X19pdGVtLWxhYmVsJz57bGFiZWx9PC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2N1cnJlbmN5LWxpc3RfX2l0ZW0tY29kZSc+KHtnZXRDdXJyZW5jeURpc3BsYXlDb2RlKGlkKX0pPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPC9SZWFjdC5GcmFnbWVudD5cbiAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgPC9SZWFjdC5GcmFnbWVudD5cbiAgICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgUmFkaW9CdXR0b247XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../account/src/Components/currency-selector/radio-button.tsx\n'
                );

                /***/
            },

        /***/ '../../account/src/Components/currency-selector/ust-popover.tsx':
            /*!**********************************************************************!*\
  !*** ../../account/src/Components/currency-selector/ust-popover.tsx ***!
  \**********************************************************************/
            /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "../../../node_modules/react/index.js");\n/* harmony import */ var _deriv_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @deriv/components */ "../../components/src/index.ts");\n/* harmony import */ var _deriv_translations__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @deriv/translations */ "../../translations/src/index.js");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react/jsx-runtime */ "../../../node_modules/react/jsx-runtime.js");\n\n\n\n\nconst USTPopover = _ref => {\n  let {\n    id\n  } = _ref;\n  let popover_message;\n  if (/^UST$/i.test(id)) {\n    popover_message = /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_deriv_translations__WEBPACK_IMPORTED_MODULE_2__.Localize, {\n      i18n_default_text: \'Tether as an Omni token (USDT) is a version of Tether that is hosted on the Omni layer on the Bitcoin blockchain.\',\n      components: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("br", {}, 0)]\n    });\n  } else if (/^tUSDT$/i.test(id)) {\n    popover_message = /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_deriv_translations__WEBPACK_IMPORTED_MODULE_2__.Localize, {\n      i18n_default_text: \'Tether as a TRC20 token (tUSDT) is a version of Tether that is hosted on Tron.\'\n    });\n  } else {\n    popover_message = /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_deriv_translations__WEBPACK_IMPORTED_MODULE_2__.Localize, {\n      i18n_default_text: \'Tether as an ERC20 token (eUSDT) is a version of Tether that is hosted on Ethereum.\'\n    });\n  }\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_1__.Popover, {\n    alignment: "top",\n    className: "currency-list__popover",\n    disable_message_icon: true,\n    icon: "info",\n    is_bubble_hover_enabled: true,\n    message: popover_message,\n    zIndex: "9999"\n  });\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (USTPopover);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vYWNjb3VudC9zcmMvQ29tcG9uZW50cy9jdXJyZW5jeS1zZWxlY3Rvci91c3QtcG9wb3Zlci50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQU1BO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFHQTtBQUFBO0FBR0E7QUFDQTtBQUVBO0FBQUE7QUFHQTtBQUNBO0FBRUE7QUFFQTtBQUdBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBR0E7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi8uLi9hY2NvdW50L3NyYy9Db21wb25lbnRzL2N1cnJlbmN5LXNlbGVjdG9yL3VzdC1wb3BvdmVyLnRzeD9lZjY4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBQb3BvdmVyIH0gZnJvbSAnQGRlcml2L2NvbXBvbmVudHMnO1xuaW1wb3J0IHsgTG9jYWxpemUgfSBmcm9tICdAZGVyaXYvdHJhbnNsYXRpb25zJztcblxuZXhwb3J0IHR5cGUgVFVTVFBvcG92ZXIgPSB7XG4gICAgaWQ6IHN0cmluZztcbn07XG5cbmNvbnN0IFVTVFBvcG92ZXIgPSAoeyBpZCB9OiBUVVNUUG9wb3ZlcikgPT4ge1xuICAgIGxldCBwb3BvdmVyX21lc3NhZ2U6IFJlYWN0LlJlYWN0RWxlbWVudDtcbiAgICBpZiAoL15VU1QkL2kudGVzdChpZCkpIHtcbiAgICAgICAgcG9wb3Zlcl9tZXNzYWdlID0gKFxuICAgICAgICAgICAgPExvY2FsaXplXG4gICAgICAgICAgICAgICAgaTE4bl9kZWZhdWx0X3RleHQ9e1xuICAgICAgICAgICAgICAgICAgICAnVGV0aGVyIGFzIGFuIE9tbmkgdG9rZW4gKFVTRFQpIGlzIGEgdmVyc2lvbiBvZiBUZXRoZXIgdGhhdCBpcyBob3N0ZWQgb24gdGhlIE9tbmkgbGF5ZXIgb24gdGhlIEJpdGNvaW4gYmxvY2tjaGFpbi4nXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbXBvbmVudHM9e1s8YnIga2V5PXswfSAvPl19XG4gICAgICAgICAgICAvPlxuICAgICAgICApO1xuICAgIH0gZWxzZSBpZiAoL150VVNEVCQvaS50ZXN0KGlkKSkge1xuICAgICAgICBwb3BvdmVyX21lc3NhZ2UgPSAoXG4gICAgICAgICAgICA8TG9jYWxpemVcbiAgICAgICAgICAgICAgICBpMThuX2RlZmF1bHRfdGV4dD17J1RldGhlciBhcyBhIFRSQzIwIHRva2VuICh0VVNEVCkgaXMgYSB2ZXJzaW9uIG9mIFRldGhlciB0aGF0IGlzIGhvc3RlZCBvbiBUcm9uLid9XG4gICAgICAgICAgICAvPlxuICAgICAgICApO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHBvcG92ZXJfbWVzc2FnZSA9IChcbiAgICAgICAgICAgIDxMb2NhbGl6ZVxuICAgICAgICAgICAgICAgIGkxOG5fZGVmYXVsdF90ZXh0PXtcbiAgICAgICAgICAgICAgICAgICAgJ1RldGhlciBhcyBhbiBFUkMyMCB0b2tlbiAoZVVTRFQpIGlzIGEgdmVyc2lvbiBvZiBUZXRoZXIgdGhhdCBpcyBob3N0ZWQgb24gRXRoZXJldW0uJ1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICk7XG4gICAgfVxuXG4gICAgcmV0dXJuIChcbiAgICAgICAgPFBvcG92ZXJcbiAgICAgICAgICAgIGFsaWdubWVudD0ndG9wJ1xuICAgICAgICAgICAgY2xhc3NOYW1lPSdjdXJyZW5jeS1saXN0X19wb3BvdmVyJ1xuICAgICAgICAgICAgZGlzYWJsZV9tZXNzYWdlX2ljb25cbiAgICAgICAgICAgIGljb249J2luZm8nXG4gICAgICAgICAgICBpc19idWJibGVfaG92ZXJfZW5hYmxlZFxuICAgICAgICAgICAgbWVzc2FnZT17cG9wb3Zlcl9tZXNzYWdlfVxuICAgICAgICAgICAgekluZGV4PSc5OTk5J1xuICAgICAgICAvPlxuICAgICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBVU1RQb3BvdmVyO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../account/src/Components/currency-selector/ust-popover.tsx\n'
                );

                /***/
            },

        /***/ '../../account/src/Components/real-account-signup/helpers/utils.ts':
            /*!*************************************************************************!*\
  !*** ../../account/src/Components/real-account-signup/helpers/utils.ts ***!
  \*************************************************************************/
            /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    "__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   splitValidationResultTypes: () => (/* binding */ splitValidationResultTypes)\n/* harmony export */ });\n/**\n * Takes validation result of a form, sets warnings on component's state and pass errors down to the form\n *\n * @param {object} values - object containing form field values and validations\n * @return {object} object containing errors and warnings\n */\nfunction splitValidationResultTypes(values) {\n  const warnings = {};\n  const errors = {};\n  Object.keys(values).forEach(field => {\n    const item = values[field];\n    if (Array.isArray(item)) {\n      if (item[0] === 'warn') {\n        warnings[field] = item[1];\n      } else if (item[0] === 'error') {\n        errors[field] = item[1];\n      }\n    }\n  });\n  return {\n    warnings,\n    errors\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vYWNjb3VudC9zcmMvQ29tcG9uZW50cy9yZWFsLWFjY291bnQtc2lnbnVwL2hlbHBlcnMvdXRpbHMudHMiLCJtYXBwaW5ncyI6Ijs7OztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi8uLi9hY2NvdW50L3NyYy9Db21wb25lbnRzL3JlYWwtYWNjb3VudC1zaWdudXAvaGVscGVycy91dGlscy50cz80OWVkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEZvcm1pa0Vycm9ycywgRm9ybWlrVmFsdWVzIH0gZnJvbSAnZm9ybWlrJztcblxuLyoqXG4gKiBUYWtlcyB2YWxpZGF0aW9uIHJlc3VsdCBvZiBhIGZvcm0sIHNldHMgd2FybmluZ3Mgb24gY29tcG9uZW50J3Mgc3RhdGUgYW5kIHBhc3MgZXJyb3JzIGRvd24gdG8gdGhlIGZvcm1cbiAqXG4gKiBAcGFyYW0ge29iamVjdH0gdmFsdWVzIC0gb2JqZWN0IGNvbnRhaW5pbmcgZm9ybSBmaWVsZCB2YWx1ZXMgYW5kIHZhbGlkYXRpb25zXG4gKiBAcmV0dXJuIHtvYmplY3R9IG9iamVjdCBjb250YWluaW5nIGVycm9ycyBhbmQgd2FybmluZ3NcbiAqL1xuZnVuY3Rpb24gc3BsaXRWYWxpZGF0aW9uUmVzdWx0VHlwZXModmFsdWVzOiBGb3JtaWtWYWx1ZXMpIHtcbiAgICBjb25zdCB3YXJuaW5nczogRm9ybWlrRXJyb3JzPEZvcm1pa1ZhbHVlcz4gPSB7fTtcbiAgICBjb25zdCBlcnJvcnM6IEZvcm1pa0Vycm9yczxGb3JtaWtWYWx1ZXM+ID0ge307XG4gICAgT2JqZWN0LmtleXModmFsdWVzKS5mb3JFYWNoKChmaWVsZDogc3RyaW5nKSA9PiB7XG4gICAgICAgIGNvbnN0IGl0ZW0gPSB2YWx1ZXNbZmllbGRdO1xuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShpdGVtKSkge1xuICAgICAgICAgICAgaWYgKGl0ZW1bMF0gPT09ICd3YXJuJykge1xuICAgICAgICAgICAgICAgIHdhcm5pbmdzW2ZpZWxkXSA9IGl0ZW1bMV07XG4gICAgICAgICAgICB9IGVsc2UgaWYgKGl0ZW1bMF0gPT09ICdlcnJvcicpIHtcbiAgICAgICAgICAgICAgICBlcnJvcnNbZmllbGRdID0gaXRlbVsxXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiB7IHdhcm5pbmdzLCBlcnJvcnMgfTtcbn1cblxuZXhwb3J0IHsgc3BsaXRWYWxpZGF0aW9uUmVzdWx0VHlwZXMgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../account/src/Components/real-account-signup/helpers/utils.ts\n"
                );

                /***/
            },

        /***/ './App/Containers/RealAccountSignup/add-crypto-currency.jsx':
            /*!******************************************************************!*\
  !*** ./App/Containers/RealAccountSignup/add-crypto-currency.jsx ***!
  \******************************************************************/
            /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var formik__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! formik */ "../../../node_modules/formik/dist/formik.esm.js");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! prop-types */ "../../../node_modules/prop-types/index.js");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "../../../node_modules/react/index.js");\n/* harmony import */ var _deriv_com_ui__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @deriv-com/ui */ "../../../node_modules/@deriv-com/ui/dist/hooks/useDevice.js");\n/* harmony import */ var _deriv_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @deriv/components */ "../../components/src/index.ts");\n/* harmony import */ var _deriv_translations__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @deriv/translations */ "../../translations/src/index.js");\n/* harmony import */ var _deriv_stores__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @deriv/stores */ "../../../node_modules/mobx-react-lite/es/index.js");\n/* harmony import */ var _deriv_stores__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @deriv/stores */ "../../stores/src/useStore.ts");\n/* harmony import */ var _deriv_shared__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @deriv/shared */ "../../shared/src/index.ts");\n/* harmony import */ var _deriv_account_dist_account_js_currency_radio_button_group__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @deriv/account/dist/account/js/currency-radio-button-group */ "../../account/dist/account/js/currency-radio-button-group.js");\n/* harmony import */ var _deriv_account_dist_account_js_currency_radio_button_group__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_deriv_account_dist_account_js_currency_radio_button_group__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _deriv_account_dist_account_js_currency_radio_button__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @deriv/account/dist/account/js/currency-radio-button */ "../../account/dist/account/js/currency-radio-button.js");\n/* harmony import */ var _deriv_account_dist_account_js_currency_radio_button__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_deriv_account_dist_account_js_currency_radio_button__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _choose_currency__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./choose-currency */ "./App/Containers/RealAccountSignup/choose-currency.js");\n/* harmony import */ var _add_currency_note__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./add-currency-note */ "./App/Containers/RealAccountSignup/add-currency-note.jsx");\n/* harmony import */ var _currency_selector_scss__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./currency-selector.scss */ "./App/Containers/RealAccountSignup/currency-selector.scss");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! react/jsx-runtime */ "../../../node_modules/react/jsx-runtime.js");\n\n\n\n\n\n\n\n\n\n\n\n        \n\n\n\n        \n\n\n\n\nconst messages = () => [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_deriv_translations__WEBPACK_IMPORTED_MODULE_2__.Localize, {\n  i18n_default_text: "Choose your preferred cryptocurrency"\n}, 0), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_deriv_translations__WEBPACK_IMPORTED_MODULE_2__.Localize, {\n  i18n_default_text: "You can open an account for each cryptocurrency."\n}, 1), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_deriv_translations__WEBPACK_IMPORTED_MODULE_2__.Localize, {\n  i18n_default_text: "Add a real account"\n}, 2), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_deriv_translations__WEBPACK_IMPORTED_MODULE_2__.Localize, {\n  i18n_default_text: "Choose a currency you would like to trade with."\n}, 3), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_deriv_translations__WEBPACK_IMPORTED_MODULE_2__.Localize, {\n  i18n_default_text: "Choose a currency"\n}, 4)];\nconst Headers = _ref => {\n  let {\n    heading,\n    subheading\n  } = _ref;\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxs)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_1__.Text, {\n      as: "h1",\n      color: "prominent",\n      align: "center",\n      weight: "bold",\n      className: "add-crypto-currency__title",\n      children: heading\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_1__.Text, {\n      as: "h3",\n      size: "xxs",\n      color: "prominent",\n      align: "center",\n      className: "add-crypto-currency__sub-title",\n      children: subheading\n    })]\n  });\n};\nconst FIAT_CURRENCY_TYPE = \'fiat\';\nconst CRYPTO_CURRENCY_TYPE = \'crypto\';\nconst AddCryptoCurrency = (0,_deriv_stores__WEBPACK_IMPORTED_MODULE_10__.observer)(_ref2 => {\n  let {\n    form_error,\n    is_add_fiat,\n    onClickBack,\n    onSubmit,\n    should_show_crypto_only,\n    should_show_fiat_only,\n    value,\n    hasNoAvailableCrypto\n  } = _ref2;\n  const {\n    isDesktop\n  } = (0,_deriv_com_ui__WEBPACK_IMPORTED_MODULE_11__.useDevice)();\n  const {\n    client,\n    modules,\n    ui\n  } = (0,_deriv_stores__WEBPACK_IMPORTED_MODULE_12__["default"])();\n  const {\n    available_crypto_currencies,\n    upgradeable_currencies: legal_allowed_currencies,\n    has_fiat\n  } = client;\n  const {\n    should_show_cancel\n  } = ui;\n  const {\n    cashier\n  } = modules;\n  const deposit_target = cashier.general_store.deposit_target;\n  const getReorderedFiatCurrencies = () => (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_3__.reorderCurrencies)(legal_allowed_currencies.filter(currency => currency.type === FIAT_CURRENCY_TYPE));\n  const getReorderedCryptoCurrencies = () => {\n    const currencies = deposit_target === _deriv_shared__WEBPACK_IMPORTED_MODULE_3__.routes.cashier_onramp ? _choose_currency__WEBPACK_IMPORTED_MODULE_6__["default"].currenciesOnRampAvailability(legal_allowed_currencies) : legal_allowed_currencies.filter(currency => currency.type === CRYPTO_CURRENCY_TYPE);\n    return (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_3__.reorderCurrencies)(currencies, CRYPTO_CURRENCY_TYPE);\n  };\n  const canAddFiat = () => !has_fiat && !should_show_crypto_only;\n  const canAddCrypto = currency => {\n    // check if the cryptocurrency has not been created\n    return available_crypto_currencies.map(e => e.value).indexOf(currency.value) === -1;\n  };\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(formik__WEBPACK_IMPORTED_MODULE_13__.Formik, {\n    initialValues: {\n      currency: value.currency\n    },\n    onSubmit: onSubmit,\n    children: _ref3 => {\n      let {\n        handleSubmit,\n        values,\n        errors,\n        touched,\n        isSubmitting\n      } = _ref3;\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxs)("form", {\n        onSubmit: handleSubmit,\n        children: [!canAddFiat() && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(Headers, {\n          heading: messages()[0],\n          subheading: messages()[1]\n        }), canAddFiat() && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(Headers, {\n          heading: is_add_fiat ? messages()[4] : messages()[2],\n          subheading: messages()[3]\n        }), canAddFiat() && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_1__.ThemedScrollbars, {\n          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)((_deriv_account_dist_account_js_currency_radio_button_group__WEBPACK_IMPORTED_MODULE_4___default()), {\n            id: "fiat_currency",\n            is_fiat: true,\n            className: "currency-selector__radio-group currency-selector__radio-group--with-margin",\n            value: values.currency,\n            error: errors.currency,\n            touched: touched.currency,\n            is_title_enabled: canAddFiat(),\n            item_count: getReorderedFiatCurrencies().length,\n            children: getReorderedFiatCurrencies().map(currency => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(formik__WEBPACK_IMPORTED_MODULE_13__.Field, {\n              component: (_deriv_account_dist_account_js_currency_radio_button__WEBPACK_IMPORTED_MODULE_5___default()),\n              name: "currency",\n              id: currency.value,\n              label: currency.name\n            }, currency.value))\n          })\n        }), canAddFiat() && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_1__.Text, {\n          as: "p",\n          color: "prominent",\n          size: "xxs",\n          align: "center",\n          className: "currency-selector__deposit-warn",\n          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_deriv_translations__WEBPACK_IMPORTED_MODULE_2__.Localize, {\n            i18n_default_text: "You\\u2019ll not be able to change currency once you have made a deposit."\n          })\n        }), hasNoAvailableCrypto() && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("div", {\n          className: "account-wizard--disabled-message",\n          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_1__.Text, {\n            as: "p",\n            align: "center",\n            size: "xxs",\n            className: "account-wizard--disabled-message-description",\n            children: (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_2__.localize)(\'You already have an account for each of the cryptocurrencies available on {{deriv}}.\', {\n              deriv: _deriv_shared__WEBPACK_IMPORTED_MODULE_3__.website_name\n            })\n          })\n        }), !should_show_fiat_only && (available_crypto_currencies.length !== 0 ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.Fragment, {\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_1__.ThemedScrollbars, {\n            height: (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_3__.isMobile)() ? window.innerHeight - 240 : \'460px\',\n            children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)((_deriv_account_dist_account_js_currency_radio_button_group__WEBPACK_IMPORTED_MODULE_4___default()), {\n              id: "crypto_currency",\n              className: "currency-selector__radio-group currency-selector__radio-group--with-margin",\n              label: (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_2__.localize)(\'Cryptocurrencies\'),\n              value: values.currency,\n              error: errors.currency,\n              touched: touched.currency,\n              is_title_enabled: canAddFiat(),\n              item_count: getReorderedCryptoCurrencies().length,\n              children: getReorderedCryptoCurrencies().map(currency => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(formik__WEBPACK_IMPORTED_MODULE_13__.Field, {\n                component: (_deriv_account_dist_account_js_currency_radio_button__WEBPACK_IMPORTED_MODULE_5___default()),\n                name: "currency",\n                id: currency.value,\n                label: currency.name,\n                selected: canAddCrypto(currency)\n              }, currency.value))\n            })\n          }), deposit_target === _deriv_shared__WEBPACK_IMPORTED_MODULE_3__.routes.cashier_onramp && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_add_currency_note__WEBPACK_IMPORTED_MODULE_7__["default"], {\n            message: (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_2__.localize)(\'Some currencies may not be supported by fiat onramp.\')\n          })]\n        }) : /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_1__.ThemedScrollbars, {\n          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)((_deriv_account_dist_account_js_currency_radio_button_group__WEBPACK_IMPORTED_MODULE_4___default()), {\n            id: "crypto_currency",\n            className: "currency-selector__radio-group currency-selector__radio-group--with-margin",\n            label: (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_2__.localize)(\'Cryptocurrencies\'),\n            is_title_enabled: canAddFiat(),\n            item_count: getReorderedCryptoCurrencies().length,\n            children: getReorderedCryptoCurrencies().map(currency => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(formik__WEBPACK_IMPORTED_MODULE_13__.Field, {\n              component: (_deriv_account_dist_account_js_currency_radio_button__WEBPACK_IMPORTED_MODULE_5___default()),\n              name: "currency",\n              id: currency.value,\n              label: currency.name,\n              selected: true\n            }, currency.value))\n          })\n        })), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_1__.FormSubmitButton, {\n          className: "currency-selector__button",\n          is_disabled: isSubmitting || !values.currency,\n          label: (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_2__.localize)(\'Add account\'),\n          is_absolute: isDesktop,\n          form_error: form_error,\n          has_cancel: should_show_cancel,\n          cancel_label: (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_2__.localize)(\'Back\'),\n          cancel_icon: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_1__.Icon, {\n            icon: "IcArrowLeftBold"\n          }),\n          onCancel: () => onClickBack()\n        })]\n      });\n    }\n  });\n});\nAddCryptoCurrency.propTypes = {\n  hasNoAvailableCrypto: (prop_types__WEBPACK_IMPORTED_MODULE_14___default().func),\n  form_error: (prop_types__WEBPACK_IMPORTED_MODULE_14___default().string),\n  onSubmit: (prop_types__WEBPACK_IMPORTED_MODULE_14___default().func),\n  should_show_crypto_only: (prop_types__WEBPACK_IMPORTED_MODULE_14___default().bool),\n  should_show_fiat_only: (prop_types__WEBPACK_IMPORTED_MODULE_14___default().bool),\n  value: prop_types__WEBPACK_IMPORTED_MODULE_14___default().shape({\n    crypto: (prop_types__WEBPACK_IMPORTED_MODULE_14___default().string),\n    fiat: (prop_types__WEBPACK_IMPORTED_MODULE_14___default().string),\n    currency: (prop_types__WEBPACK_IMPORTED_MODULE_14___default().string)\n  }),\n  onClickBack: (prop_types__WEBPACK_IMPORTED_MODULE_14___default().func),\n  is_add_fiat: (prop_types__WEBPACK_IMPORTED_MODULE_14___default().bool)\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AddCryptoCurrency);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./App/Containers/RealAccountSignup/add-crypto-currency.jsx\n'
                );

                /***/
            },

        /***/ './App/Containers/RealAccountSignup/add-currency-note.jsx':
            /*!****************************************************************!*\
  !*** ./App/Containers/RealAccountSignup/add-currency-note.jsx ***!
  \****************************************************************/
            /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "../../../node_modules/react/index.js");\n/* harmony import */ var _deriv_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @deriv/components */ "../../components/src/index.ts");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-runtime */ "../../../node_modules/react/jsx-runtime.js");\n\n\n\nconst AddCurrencyNote = _ref => {\n  let {\n    message\n  } = _ref;\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div", {\n    className: "add-currency__note-wrapper",\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_1__.Text, {\n      as: "p",\n      color: "prominent",\n      align: "center",\n      size: "xxs",\n      className: "add-currency__note",\n      children: message\n    })\n  });\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AddCurrencyNote);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9BcHAvQ29udGFpbmVycy9SZWFsQWNjb3VudFNpZ251cC9hZGQtY3VycmVuY3ktbm90ZS5qc3giLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFBQTtBQUVBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUdBO0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9BcHAvQ29udGFpbmVycy9SZWFsQWNjb3VudFNpZ251cC9hZGQtY3VycmVuY3ktbm90ZS5qc3g/ZDk0OCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgVGV4dCB9IGZyb20gJ0BkZXJpdi9jb21wb25lbnRzJztcblxuY29uc3QgQWRkQ3VycmVuY3lOb3RlID0gKHsgbWVzc2FnZSB9KSA9PiB7XG4gICAgcmV0dXJuIChcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9J2FkZC1jdXJyZW5jeV9fbm90ZS13cmFwcGVyJz5cbiAgICAgICAgICAgIDxUZXh0IGFzPSdwJyBjb2xvcj0ncHJvbWluZW50JyBhbGlnbj0nY2VudGVyJyBzaXplPSd4eHMnIGNsYXNzTmFtZT0nYWRkLWN1cnJlbmN5X19ub3RlJz5cbiAgICAgICAgICAgICAgICB7bWVzc2FnZX1cbiAgICAgICAgICAgIDwvVGV4dD5cbiAgICAgICAgPC9kaXY+XG4gICAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEFkZEN1cnJlbmN5Tm90ZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./App/Containers/RealAccountSignup/add-currency-note.jsx\n'
                );

                /***/
            },

        /***/ './App/Containers/RealAccountSignup/add-currency.jsx':
            /*!***********************************************************!*\
  !*** ./App/Containers/RealAccountSignup/add-currency.jsx ***!
  \***********************************************************/
            /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var formik__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! formik */ "../../../node_modules/formik/dist/formik.esm.js");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! classnames */ "../../../node_modules/classnames/index.js");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! prop-types */ "../../../node_modules/prop-types/index.js");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_16__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "../../../node_modules/react/index.js");\n/* harmony import */ var _deriv_hooks__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @deriv/hooks */ "../../hooks/src/usePaymentAgentList.ts");\n/* harmony import */ var _deriv_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @deriv/components */ "../../components/src/index.ts");\n/* harmony import */ var _deriv_translations__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @deriv/translations */ "../../translations/src/index.js");\n/* harmony import */ var _deriv_shared__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @deriv/shared */ "../../shared/src/index.ts");\n/* harmony import */ var _deriv_account_dist_account_js_currency_radio_button_group__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @deriv/account/dist/account/js/currency-radio-button-group */ "../../account/dist/account/js/currency-radio-button-group.js");\n/* harmony import */ var _deriv_account_dist_account_js_currency_radio_button_group__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_deriv_account_dist_account_js_currency_radio_button_group__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _deriv_account_dist_account_js_currency_radio_button__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @deriv/account/dist/account/js/currency-radio-button */ "../../account/dist/account/js/currency-radio-button.js");\n/* harmony import */ var _deriv_account_dist_account_js_currency_radio_button__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_deriv_account_dist_account_js_currency_radio_button__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _add_crypto_currency_jsx__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./add-crypto-currency.jsx */ "./App/Containers/RealAccountSignup/add-crypto-currency.jsx");\n/* harmony import */ var _add_currency_note_jsx__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./add-currency-note.jsx */ "./App/Containers/RealAccountSignup/add-currency-note.jsx");\n/* harmony import */ var _choose_currency__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./choose-currency */ "./App/Containers/RealAccountSignup/choose-currency.js");\n/* harmony import */ var _deriv_stores__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @deriv/stores */ "../../../node_modules/mobx-react-lite/es/index.js");\n/* harmony import */ var _deriv_stores__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @deriv/stores */ "../../stores/src/useStore.ts");\n/* harmony import */ var _currency_selector_scss__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./currency-selector.scss */ "./App/Containers/RealAccountSignup/currency-selector.scss");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! react/jsx-runtime */ "../../../node_modules/react/jsx-runtime.js");\n\n\n\n\n\n\n\n\n\n\n\n        \n\n\n\n        \n\n\n\n\n\n\nconst CRYPTO_CURRENCY_TYPE = \'crypto\';\nconst FIAT_CURRENCY_TYPE = \'fiat\';\nconst AddCurrency = (0,_deriv_stores__WEBPACK_IMPORTED_MODULE_12__.observer)(_ref => {\n  let {\n    onSubmit,\n    hasNoAvailableCrypto,\n    is_add_crypto,\n    is_add_fiat\n  } = _ref;\n  const {\n    client,\n    modules,\n    ui\n  } = (0,_deriv_stores__WEBPACK_IMPORTED_MODULE_13__["default"])();\n  const {\n    available_crypto_currencies,\n    has_fiat,\n    upgradeable_currencies: legal_allowed_currencies\n  } = client;\n  const {\n    cashier\n  } = modules;\n  const setShouldShowAllAvailableCurrencies = cashier.general_store.setShouldShowAllAvailableCurrencies;\n  const deposit_target = cashier.general_store.deposit_target;\n  const {\n    openRealAccountSignup\n  } = ui;\n  const [form_error] = react__WEBPACK_IMPORTED_MODULE_1__.useState(\'\');\n  const [form_value] = react__WEBPACK_IMPORTED_MODULE_1__.useState({\n    crypto: \'\',\n    fiat: \'\'\n  });\n  const {\n    data: all_payment_agent_list,\n    isLoading: is_loading\n  } = (0,_deriv_hooks__WEBPACK_IMPORTED_MODULE_14__["default"])();\n  const getReorderedCurrencies = react__WEBPACK_IMPORTED_MODULE_1__.useMemo(() => {\n    const allowed_currencies_payment_agent_availability = _choose_currency__WEBPACK_IMPORTED_MODULE_9__["default"].currenciesPaymentAgentAvailability(legal_allowed_currencies, all_payment_agent_list);\n    const crypto = (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_4__.reorderCurrencies)(allowed_currencies_payment_agent_availability === null || allowed_currencies_payment_agent_availability === void 0 ? void 0 : allowed_currencies_payment_agent_availability.filter(currency => currency.type === CRYPTO_CURRENCY_TYPE && available_crypto_currencies.some(x => x.value === currency.value)), CRYPTO_CURRENCY_TYPE);\n    const fiat = (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_4__.reorderCurrencies)(allowed_currencies_payment_agent_availability === null || allowed_currencies_payment_agent_availability === void 0 ? void 0 : allowed_currencies_payment_agent_availability.filter(currency => currency.type === FIAT_CURRENCY_TYPE && !available_crypto_currencies.some(x => x.value === currency.value)));\n    return {\n      crypto,\n      fiat\n    };\n  }, [all_payment_agent_list, available_crypto_currencies, legal_allowed_currencies]);\n  const onClickBack = () => {\n    openRealAccountSignup(\'choose\');\n    if (deposit_target === _deriv_shared__WEBPACK_IMPORTED_MODULE_4__.routes.cashier_pa) {\n      setShouldShowAllAvailableCurrencies(true);\n    }\n  };\n  const AddFiat = () => {\n    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsxs)("div", {\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.Text, {\n        as: "h1",\n        color: "prominent",\n        align: "center",\n        weight: "bold",\n        className: "add-currency__title",\n        children: (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_3__.localize)(\'Fiat currencies\')\n      }), !!has_fiat && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.Text, {\n        as: "p",\n        color: "prominent",\n        align: "center",\n        size: "xxs",\n        className: "add-currency__sub-title",\n        children: (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_3__.localize)(\'You are limited to one fiat account only.\')\n      }), is_loading ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.Loading, {\n        is_fullscreen: false\n      }) : /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)((_deriv_account_dist_account_js_currency_radio_button_group__WEBPACK_IMPORTED_MODULE_5___default()), {\n        id: "crypto_currency",\n        className: "currency-selector__radio-group currency-selector__radio-group--with-margin",\n        item_count: getReorderedCurrencies.fiat.length,\n        children: getReorderedCurrencies.fiat.map(currency => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(formik__WEBPACK_IMPORTED_MODULE_15__.Field, {\n          component: (_deriv_account_dist_account_js_currency_radio_button__WEBPACK_IMPORTED_MODULE_6___default()),\n          name: "currency",\n          id: currency.value,\n          label: currency.name,\n          icon: currency.icon,\n          second_line_label: currency.second_line_label,\n          onClick: currency.onClick,\n          selected: has_fiat\n        }, currency.value))\n      })]\n    });\n  };\n  const AddCrypto = () => {\n    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsxs)("div", {\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.Text, {\n        as: "h1",\n        color: "prominent",\n        align: "center",\n        weight: "bold",\n        className: "add-currency__title",\n        children: (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_3__.localize)(\'Cryptocurrencies\')\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.Text, {\n        as: "p",\n        color: "prominent",\n        align: "center",\n        size: "xxs",\n        className: "add-currency__sub-title",\n        children: (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_3__.localize)(\'You can open an account for each cryptocurrency.\')\n      }), is_loading ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.Loading, {\n        is_fullscreen: false\n      }) : /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)((_deriv_account_dist_account_js_currency_radio_button_group__WEBPACK_IMPORTED_MODULE_5___default()), {\n        id: "crypto_currency",\n        className: "currency-selector__radio-group currency-selector__radio-group--with-margin",\n        item_count: getReorderedCurrencies.crypto.length,\n        children: getReorderedCurrencies.crypto.map(currency => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(formik__WEBPACK_IMPORTED_MODULE_15__.Field, {\n          component: (_deriv_account_dist_account_js_currency_radio_button__WEBPACK_IMPORTED_MODULE_6___default()),\n          name: "currency",\n          id: currency.value,\n          label: currency.name,\n          icon: currency.icon,\n          second_line_label: currency.second_line_label,\n          onClick: currency.onClick,\n          selected: deposit_target === _deriv_shared__WEBPACK_IMPORTED_MODULE_4__.routes.cashier_pa ? !currency.has_payment_agent : false\n        }, currency.value))\n      })]\n    });\n  };\n  if (is_add_crypto) return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.ThemedScrollbars, {\n    autohide: false,\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)("div", {\n      className: classnames__WEBPACK_IMPORTED_MODULE_0___default()(\'add-crypto-currency cashier-deposit\', {\n        \'account-wizard--disabled\': hasNoAvailableCrypto()\n      }),\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(_add_crypto_currency_jsx__WEBPACK_IMPORTED_MODULE_7__["default"], {\n        className: "account-wizard__body",\n        onSubmit: onSubmit,\n        onClickBack: onClickBack,\n        value: form_value,\n        form_error: form_error,\n        should_show_crypto_only: true,\n        hasNoAvailableCrypto: hasNoAvailableCrypto\n      })\n    })\n  });\n  if (is_add_fiat) {\n    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.ThemedScrollbars, {\n      autohide: false,\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)("div", {\n        className: "change-currency",\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(_add_crypto_currency_jsx__WEBPACK_IMPORTED_MODULE_7__["default"], {\n          className: "account-wizard__body",\n          onSubmit: onSubmit,\n          value: form_value,\n          form_error: form_error,\n          should_show_fiat_only: true,\n          hasNoAvailableCrypto: hasNoAvailableCrypto,\n          is_add_fiat: true\n        })\n      })\n    });\n  }\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(formik__WEBPACK_IMPORTED_MODULE_15__.Formik, {\n    initialValues: {\n      currency: form_value.currency\n    },\n    onSubmit: onSubmit,\n    children: _ref2 => {\n      let {\n        handleSubmit,\n        values,\n        isSubmitting\n      } = _ref2;\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsxs)("form", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.ThemedScrollbars, {\n          height: (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_4__.isMobile)() ? window.innerHeight - 190 : \'460px\',\n          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsxs)("div", {\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.Text, {\n              as: "p",\n              color: "prominent",\n              weight: "bold",\n              align: "center",\n              className: "add-currency__wizard-header",\n              children: (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_3__.localize)(\'Choose your currency\')\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(AddFiat, {}), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)("div", {\n              className: "add-currency__underline"\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(AddCrypto, {})]\n          })\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(_add_currency_note_jsx__WEBPACK_IMPORTED_MODULE_8__["default"], {\n          message: (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_3__.localize)(\'Some currencies may not be supported by payment agents in your country.\')\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.FormSubmitButton, {\n          className: "currency-selector__button",\n          is_disabled: isSubmitting || !values.currency,\n          label: (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_3__.localize)(\'Add account\'),\n          is_absolute: true,\n          form_error: form_error,\n          has_cancel: true,\n          cancel_label: (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_3__.localize)(\'Back\'),\n          cancel_icon: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.Icon, {\n            icon: "IcArrowLeftBold"\n          }),\n          onCancel: () => onClickBack()\n        })]\n      });\n    }\n  });\n});\nAddCurrency.propTypes = {\n  onSubmit: (prop_types__WEBPACK_IMPORTED_MODULE_16___default().func),\n  is_add_crypto: (prop_types__WEBPACK_IMPORTED_MODULE_16___default().bool),\n  is_add_fiat: (prop_types__WEBPACK_IMPORTED_MODULE_16___default().bool),\n  hasNoAvailableCrypto: (prop_types__WEBPACK_IMPORTED_MODULE_16___default().func)\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AddCurrency);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./App/Containers/RealAccountSignup/add-currency.jsx\n'
                );

                /***/
            },

        /***/ './App/Containers/RealAccountSignup/add-or-manage-accounts.jsx':
            /*!*********************************************************************!*\
  !*** ./App/Containers/RealAccountSignup/add-or-manage-accounts.jsx ***!
  \*********************************************************************/
            /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! classnames */ "../../../node_modules/classnames/index.js");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! prop-types */ "../../../node_modules/prop-types/index.js");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "../../../node_modules/react/index.js");\n/* harmony import */ var _deriv_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @deriv/components */ "../../components/src/index.ts");\n/* harmony import */ var _deriv_translations__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @deriv/translations */ "../../translations/src/index.js");\n/* harmony import */ var _deriv_shared__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @deriv/shared */ "../../shared/src/index.ts");\n/* harmony import */ var Services__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! Services */ "./Services/index.js");\n/* harmony import */ var _add_crypto_currency_jsx__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./add-crypto-currency.jsx */ "./App/Containers/RealAccountSignup/add-crypto-currency.jsx");\n/* harmony import */ var _add_currency_jsx__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./add-currency.jsx */ "./App/Containers/RealAccountSignup/add-currency.jsx");\n/* harmony import */ var _change_account_currency_jsx__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./change-account-currency.jsx */ "./App/Containers/RealAccountSignup/change-account-currency.jsx");\n/* harmony import */ var _real_account_signup_loader_jsx__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./real-account-signup-loader.jsx */ "./App/Containers/RealAccountSignup/real-account-signup-loader.jsx");\n/* harmony import */ var _deriv_stores__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @deriv/stores */ "../../../node_modules/mobx-react-lite/es/index.js");\n/* harmony import */ var _deriv_stores__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @deriv/stores */ "../../stores/src/useStore.ts");\n/* harmony import */ var Sass_add_or_manage_scss__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! Sass/add-or-manage.scss */ "./sass/add-or-manage.scss");\n/* harmony import */ var Sass_change_account_scss__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! Sass/change-account.scss */ "./sass/change-account.scss");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! react/jsx-runtime */ "../../../node_modules/react/jsx-runtime.js");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst AddOrManageAccounts = (0,_deriv_stores__WEBPACK_IMPORTED_MODULE_13__.observer)(props => {\n  const {\n    deposit_target,\n    is_add_crypto,\n    is_add_currency,\n    is_add_fiat,\n    is_loading,\n    onError,\n    onSuccessSetAccountCurrency,\n    setLoading,\n    onClose\n  } = props;\n  const {\n    client,\n    modules,\n    ui,\n    traders_hub\n  } = (0,_deriv_stores__WEBPACK_IMPORTED_MODULE_14__["default"])();\n  const {\n    available_crypto_currencies,\n    can_change_fiat_currency,\n    current_currency_type,\n    has_fiat,\n    setAccountCurrency: setCurrency,\n    createCryptoAccount,\n    is_low_risk,\n    loginid\n  } = client;\n  const {\n    cashier\n  } = modules;\n  const {\n    show_eu_related_content\n  } = traders_hub;\n  const {\n    manage_real_account_tab_index,\n    setShouldShowCancel,\n    resetRealAccountSignupTarget\n  } = ui;\n  const setIsDeposit = cashier.general_store.setIsDeposit;\n  const initial_active_index = (manage_real_account_tab_index !== null && manage_real_account_tab_index !== void 0 ? manage_real_account_tab_index : has_fiat && (available_crypto_currencies === null || available_crypto_currencies === void 0 ? void 0 : available_crypto_currencies.length) === 0) ? 1 : 0;\n  const [active_index, setActiveIndex] = react__WEBPACK_IMPORTED_MODULE_1__.useState(initial_active_index);\n  const [form_error] = react__WEBPACK_IMPORTED_MODULE_1__.useState(\'\');\n  const [form_value] = react__WEBPACK_IMPORTED_MODULE_1__.useState({\n    crypto: \'\',\n    fiat: \'\'\n  });\n  react__WEBPACK_IMPORTED_MODULE_1__.useEffect(() => {\n    const fetchMt5LoginList = async () => {\n      setLoading(true);\n      await Services__WEBPACK_IMPORTED_MODULE_5__.WS.mt5LoginList();\n      setLoading(false);\n    };\n    fetchMt5LoginList();\n    return () => setShouldShowCancel(false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const setActiveTabIndex = index => {\n    setActiveIndex(index);\n  };\n  const setCurrencyOrAddCryptoAccount = currency_object => {\n    setLoading(true);\n    Object.entries(currency_object).map(_ref => {\n      let [key, value] = _ref;\n      if (key === _deriv_shared__WEBPACK_IMPORTED_MODULE_4__.CURRENCY_TYPE.FIAT) {\n        setCurrency(value).then(response => {\n          onSuccessSetAccountCurrency(response.passthrough.previous_currency, response.echo_req.set_account_currency, deposit_target);\n        }).catch(error => {\n          onError(error);\n        }).finally(() => setLoading(false));\n      } else {\n        // Add Crypto Account\n        createCryptoAccount(value).then(() => {\n          onSuccessSetAccountCurrency(\'\', value, deposit_target);\n          resetRealAccountSignupTarget();\n          setIsDeposit(true);\n        }).catch(error => {\n          onError(error);\n        }).finally(() => setLoading(false));\n      }\n    });\n  };\n  const hasNoAvailableCrypto = () => {\n    return available_crypto_currencies.length === 0 && has_fiat;\n  };\n  if (is_loading) return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_real_account_signup_loader_jsx__WEBPACK_IMPORTED_MODULE_9__["default"], {});\n  const fiat_section = has_fiat && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)("div", {\n    className: classnames__WEBPACK_IMPORTED_MODULE_0___default()(\'change-currency\', {\n      \'account-wizard--disabled\': !can_change_fiat_currency\n    }),\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_change_account_currency_jsx__WEBPACK_IMPORTED_MODULE_8__["default"], {\n      className: "account-wizard__body",\n      onSubmit: setCurrencyOrAddCryptoAccount,\n      value: form_value,\n      form_error: form_error,\n      can_change_fiat_currency: can_change_fiat_currency,\n      current_currency_type: current_currency_type,\n      closeModal: onClose\n    })\n  });\n  if (is_add_currency || is_add_crypto || is_add_fiat) {\n    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_add_currency_jsx__WEBPACK_IMPORTED_MODULE_7__["default"], {\n      onSubmit: setCurrencyOrAddCryptoAccount,\n      value: form_value,\n      form_error: form_error,\n      should_show_crypto_only: true,\n      hasNoAvailableCrypto: hasNoAvailableCrypto,\n      is_add_crypto: is_add_crypto,\n      is_add_fiat: is_add_fiat,\n      is_add_currency: is_add_currency\n    });\n  }\n  const is_mf_active = loginid === null || loginid === void 0 ? void 0 : loginid.startsWith(\'MF\');\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.ThemedScrollbars, {\n    is_bypassed: (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_4__.isMobile)(),\n    autohide: false,\n    children: show_eu_related_content && !is_low_risk && has_fiat || is_mf_active ? fiat_section : /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxs)(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.Tabs, {\n      active_index: active_index,\n      className: "account-wizard add-or-manage tabs--desktop",\n      onTabItemClick: setActiveTabIndex,\n      top: true,\n      header_fit_content: (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_4__.isDesktop)(),\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)("div", {\n        label: (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_3__.localize)(\'Cryptocurrencies\'),\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)("div", {\n          className: classnames__WEBPACK_IMPORTED_MODULE_0___default()(\'add-crypto-currency\', {\n            \'account-wizard--disabled\': hasNoAvailableCrypto()\n          }),\n          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_add_crypto_currency_jsx__WEBPACK_IMPORTED_MODULE_6__["default"], {\n            className: "account-wizard__body",\n            onSubmit: setCurrencyOrAddCryptoAccount,\n            value: form_value,\n            form_error: form_error,\n            should_show_crypto_only: true,\n            hasNoAvailableCrypto: hasNoAvailableCrypto\n          })\n        })\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)("div", {\n        label: (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_3__.localize)(\'Fiat currencies\'),\n        children: has_fiat ? fiat_section : /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_add_crypto_currency_jsx__WEBPACK_IMPORTED_MODULE_6__["default"], {\n          className: "account-wizard__body",\n          onSubmit: setCurrencyOrAddCryptoAccount,\n          value: form_value,\n          form_error: form_error,\n          should_show_fiat_only: true,\n          hasNoAvailableCrypto: hasNoAvailableCrypto\n        })\n      })]\n    })\n  });\n});\nAddOrManageAccounts.propTypes = {\n  onClose: (prop_types__WEBPACK_IMPORTED_MODULE_15___default().func),\n  onError: (prop_types__WEBPACK_IMPORTED_MODULE_15___default().func),\n  onSuccessSetAccountCurrency: (prop_types__WEBPACK_IMPORTED_MODULE_15___default().func),\n  is_loading: (prop_types__WEBPACK_IMPORTED_MODULE_15___default().bool),\n  is_add_crypto: (prop_types__WEBPACK_IMPORTED_MODULE_15___default().bool),\n  setLoading: (prop_types__WEBPACK_IMPORTED_MODULE_15___default().func),\n  is_add_fiat: (prop_types__WEBPACK_IMPORTED_MODULE_15___default().bool),\n  is_add_currency: (prop_types__WEBPACK_IMPORTED_MODULE_15___default().bool),\n  deposit_target: (prop_types__WEBPACK_IMPORTED_MODULE_15___default().string)\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AddOrManageAccounts);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./App/Containers/RealAccountSignup/add-or-manage-accounts.jsx\n'
                );

                /***/
            },

        /***/ './App/Containers/RealAccountSignup/change-account-currency.jsx':
            /*!**********************************************************************!*\
  !*** ./App/Containers/RealAccountSignup/change-account-currency.jsx ***!
  \**********************************************************************/
            /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var formik__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! formik */ "../../../node_modules/formik/dist/formik.esm.js");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! prop-types */ "../../../node_modules/prop-types/index.js");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "../../../node_modules/react/index.js");\n/* harmony import */ var _deriv_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @deriv/components */ "../../components/src/index.ts");\n/* harmony import */ var _deriv_shared__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @deriv/shared */ "../../shared/src/index.ts");\n/* harmony import */ var _deriv_stores__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @deriv/stores */ "../../../node_modules/mobx-react-lite/es/index.js");\n/* harmony import */ var _deriv_stores__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @deriv/stores */ "../../stores/src/useStore.ts");\n/* harmony import */ var _deriv_translations__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @deriv/translations */ "../../translations/src/index.js");\n/* harmony import */ var _deriv_account_dist_account_js_currency_radio_button_group__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @deriv/account/dist/account/js/currency-radio-button-group */ "../../account/dist/account/js/currency-radio-button-group.js");\n/* harmony import */ var _deriv_account_dist_account_js_currency_radio_button_group__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_deriv_account_dist_account_js_currency_radio_button_group__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _deriv_account_dist_account_js_currency_radio_button__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @deriv/account/dist/account/js/currency-radio-button */ "../../account/dist/account/js/currency-radio-button.js");\n/* harmony import */ var _deriv_account_dist_account_js_currency_radio_button__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_deriv_account_dist_account_js_currency_radio_button__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _currency_selector_scss__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./currency-selector.scss */ "./App/Containers/RealAccountSignup/currency-selector.scss");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! react/jsx-runtime */ "../../../node_modules/react/jsx-runtime.js");\n\n\n\n\n\n\n\n\n\n\n        \n\n\n\n        \n\n\nconst FIAT_CURRENCY_TYPE = \'fiat\';\nconst ChangeAccountCurrency = (0,_deriv_stores__WEBPACK_IMPORTED_MODULE_8__.observer)(_ref => {\n  var _current_fiat_currenc;\n  let {\n    value,\n    onSubmit,\n    form_error,\n    can_change_fiat_currency,\n    current_currency_type\n  } = _ref;\n  const {\n    client,\n    ui\n  } = (0,_deriv_stores__WEBPACK_IMPORTED_MODULE_9__["default"])();\n  const {\n    upgradeable_currencies: legal_allowed_currencies,\n    currency: client_currency,\n    current_fiat_currency\n  } = client;\n  const {\n    closeRealAccountSignup\n  } = ui;\n  const getReorderedCurrencies = () => (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_2__.reorderCurrencies)(legal_allowed_currencies.filter(currency => currency.type === FIAT_CURRENCY_TYPE));\n  const is_fiat = current_currency_type === \'fiat\';\n  const fiat_message = /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_deriv_translations__WEBPACK_IMPORTED_MODULE_3__.Localize, {\n    i18n_default_text: "If you want to change your account currency, please contact us via <0>live chat</0>.",\n    components: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("span", {\n      className: "link link--orange",\n      onClick: () => {\n        var _window$LiveChatWidge;\n        closeRealAccountSignup();\n        (_window$LiveChatWidge = window.LiveChatWidget) === null || _window$LiveChatWidge === void 0 || _window$LiveChatWidge.call(\'maximize\');\n      }\n    }, 0)]\n  });\n  const non_fiat_mesage = /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_deriv_translations__WEBPACK_IMPORTED_MODULE_3__.Localize, {\n    i18n_default_text: "Please switch to your {{fiat_currency}} account to change currencies.",\n    values: {\n      fiat_currency: current_fiat_currency === null || current_fiat_currency === void 0 || (_current_fiat_currenc = current_fiat_currency.toUpperCase) === null || _current_fiat_currenc === void 0 ? void 0 : _current_fiat_currenc.call(current_fiat_currency)\n    }\n  });\n  const disabled_message = is_fiat ? fiat_message : non_fiat_mesage;\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(formik__WEBPACK_IMPORTED_MODULE_10__.Formik, {\n    initialValues: {\n      fiat: value.fiat\n    },\n    onSubmit: onSubmit,\n    children: _ref2 => {\n      let {\n        handleSubmit,\n        values,\n        errors,\n        touched,\n        isSubmitting\n      } = _ref2;\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("form", {\n        onSubmit: e => {\n          e.preventDefault();\n          handleSubmit();\n        },\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_1__.Text, {\n          as: "h1",\n          color: "prominent",\n          weight: "bold",\n          align: "center",\n          className: "change-currency__title",\n          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_deriv_translations__WEBPACK_IMPORTED_MODULE_3__.Localize, {\n            i18n_default_text: "Change your currency"\n          })\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_1__.Text, {\n          as: "h3",\n          size: "xxs",\n          align: "center",\n          className: "change-currency__sub-title",\n          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_deriv_translations__WEBPACK_IMPORTED_MODULE_3__.Localize, {\n            i18n_default_text: "Choose the currency you would like to trade with."\n          })\n        }), !can_change_fiat_currency && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("div", {\n          className: "account-wizard--disabled-message",\n          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_1__.Text, {\n            as: "p",\n            align: "center",\n            size: "xxs",\n            className: "account-wizard--disabled-message-description",\n            children: disabled_message\n          })\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)((_deriv_account_dist_account_js_currency_radio_button_group__WEBPACK_IMPORTED_MODULE_4___default()), {\n          id: "fiat",\n          label: (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_3__.localize)(\'Cryptocurrencies\'),\n          className: "currency-selector__radio-group currency-selector__radio-group--with-margin",\n          value: values.fiat,\n          error: errors.fiat,\n          touched: touched.fiat,\n          is_title_enabled: false,\n          item_count: getReorderedCurrencies().length,\n          children: getReorderedCurrencies().map(currency => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(formik__WEBPACK_IMPORTED_MODULE_10__.Field, {\n            component: (_deriv_account_dist_account_js_currency_radio_button__WEBPACK_IMPORTED_MODULE_5___default()),\n            name: "fiat",\n            id: currency.value,\n            label: currency.name,\n            selected: currency.value === client_currency\n          }, currency.value))\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_1__.FormSubmitButton, {\n          className: "change-currency__button",\n          is_disabled: isSubmitting || !values.fiat,\n          label: (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_3__.localize)(\'Change currency\'),\n          is_absolute: !(0,_deriv_shared__WEBPACK_IMPORTED_MODULE_2__.isMobile)(),\n          form_error: form_error\n        })]\n      });\n    }\n  });\n});\nChangeAccountCurrency.propTypes = {\n  onSubmit: (prop_types__WEBPACK_IMPORTED_MODULE_11___default().func),\n  closeModal: (prop_types__WEBPACK_IMPORTED_MODULE_11___default().func),\n  value: prop_types__WEBPACK_IMPORTED_MODULE_11___default().shape({\n    crypto: (prop_types__WEBPACK_IMPORTED_MODULE_11___default().string),\n    fiat: (prop_types__WEBPACK_IMPORTED_MODULE_11___default().string)\n  }),\n  form_error: (prop_types__WEBPACK_IMPORTED_MODULE_11___default().string),\n  can_change_fiat_currency: (prop_types__WEBPACK_IMPORTED_MODULE_11___default().bool),\n  current_currency_type: (prop_types__WEBPACK_IMPORTED_MODULE_11___default().string),\n  current_fiat_currency: (prop_types__WEBPACK_IMPORTED_MODULE_11___default().string)\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ChangeAccountCurrency);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9BcHAvQ29udGFpbmVycy9SZWFsQWNjb3VudFNpZ251cC9jaGFuZ2UtYWNjb3VudC1jdXJyZW5jeS5qc3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBRUE7QUFFQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUdBO0FBQ0E7QUFFQTtBQUNBO0FBR0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFFQTtBQUlBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUlBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBRUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFFQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFFQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBR0E7QUFBQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFFQTtBQUNBO0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBRUE7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vQXBwL0NvbnRhaW5lcnMvUmVhbEFjY291bnRTaWdudXAvY2hhbmdlLWFjY291bnQtY3VycmVuY3kuanN4P2ZlMzAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRmllbGQsIEZvcm1payB9IGZyb20gJ2Zvcm1payc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IEZvcm1TdWJtaXRCdXR0b24sIFRleHQgfSBmcm9tICdAZGVyaXYvY29tcG9uZW50cyc7XG5pbXBvcnQgeyBpc01vYmlsZSwgcmVvcmRlckN1cnJlbmNpZXMgfSBmcm9tICdAZGVyaXYvc2hhcmVkJztcbmltcG9ydCB7IG9ic2VydmVyLCB1c2VTdG9yZSB9IGZyb20gJ0BkZXJpdi9zdG9yZXMnO1xuaW1wb3J0IHsgbG9jYWxpemUsIExvY2FsaXplIH0gZnJvbSAnQGRlcml2L3RyYW5zbGF0aW9ucyc7XG5pbXBvcnQgeyBDdXJyZW5jeVJhZGlvQnV0dG9uR3JvdXAsIEN1cnJlbmN5UmFkaW9CdXR0b24gfSBmcm9tICdAZGVyaXYvYWNjb3VudCc7XG5pbXBvcnQgJy4vY3VycmVuY3ktc2VsZWN0b3Iuc2Nzcyc7XG5cbmNvbnN0IEZJQVRfQ1VSUkVOQ1lfVFlQRSA9ICdmaWF0JztcblxuY29uc3QgQ2hhbmdlQWNjb3VudEN1cnJlbmN5ID0gb2JzZXJ2ZXIoXG4gICAgKHsgdmFsdWUsIG9uU3VibWl0LCBmb3JtX2Vycm9yLCBjYW5fY2hhbmdlX2ZpYXRfY3VycmVuY3ksIGN1cnJlbnRfY3VycmVuY3lfdHlwZSB9KSA9PiB7XG4gICAgICAgIGNvbnN0IHsgY2xpZW50LCB1aSB9ID0gdXNlU3RvcmUoKTtcbiAgICAgICAgY29uc3Qge1xuICAgICAgICAgICAgdXBncmFkZWFibGVfY3VycmVuY2llczogbGVnYWxfYWxsb3dlZF9jdXJyZW5jaWVzLFxuICAgICAgICAgICAgY3VycmVuY3k6IGNsaWVudF9jdXJyZW5jeSxcbiAgICAgICAgICAgIGN1cnJlbnRfZmlhdF9jdXJyZW5jeSxcbiAgICAgICAgfSA9IGNsaWVudDtcbiAgICAgICAgY29uc3QgeyBjbG9zZVJlYWxBY2NvdW50U2lnbnVwIH0gPSB1aTtcbiAgICAgICAgY29uc3QgZ2V0UmVvcmRlcmVkQ3VycmVuY2llcyA9ICgpID0+XG4gICAgICAgICAgICByZW9yZGVyQ3VycmVuY2llcyhsZWdhbF9hbGxvd2VkX2N1cnJlbmNpZXMuZmlsdGVyKGN1cnJlbmN5ID0+IGN1cnJlbmN5LnR5cGUgPT09IEZJQVRfQ1VSUkVOQ1lfVFlQRSkpO1xuXG4gICAgICAgIGNvbnN0IGlzX2ZpYXQgPSBjdXJyZW50X2N1cnJlbmN5X3R5cGUgPT09ICdmaWF0JztcbiAgICAgICAgY29uc3QgZmlhdF9tZXNzYWdlID0gKFxuICAgICAgICAgICAgPExvY2FsaXplXG4gICAgICAgICAgICAgICAgaTE4bl9kZWZhdWx0X3RleHQ9J0lmIHlvdSB3YW50IHRvIGNoYW5nZSB5b3VyIGFjY291bnQgY3VycmVuY3ksIHBsZWFzZSBjb250YWN0IHVzIHZpYSA8MD5saXZlIGNoYXQ8LzA+LidcbiAgICAgICAgICAgICAgICBjb21wb25lbnRzPXtbXG4gICAgICAgICAgICAgICAgICAgIDxzcGFuXG4gICAgICAgICAgICAgICAgICAgICAgICBrZXk9ezB9XG4gICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9J2xpbmsgbGluay0tb3JhbmdlJ1xuICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsb3NlUmVhbEFjY291bnRTaWdudXAoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cuTGl2ZUNoYXRXaWRnZXQ/LmNhbGwoJ21heGltaXplJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgICAvPixcbiAgICAgICAgICAgICAgICBdfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgKTtcblxuICAgICAgICBjb25zdCBub25fZmlhdF9tZXNhZ2UgPSAoXG4gICAgICAgICAgICA8TG9jYWxpemVcbiAgICAgICAgICAgICAgICBpMThuX2RlZmF1bHRfdGV4dD0nUGxlYXNlIHN3aXRjaCB0byB5b3VyIHt7ZmlhdF9jdXJyZW5jeX19IGFjY291bnQgdG8gY2hhbmdlIGN1cnJlbmNpZXMuJ1xuICAgICAgICAgICAgICAgIHZhbHVlcz17e1xuICAgICAgICAgICAgICAgICAgICBmaWF0X2N1cnJlbmN5OiBjdXJyZW50X2ZpYXRfY3VycmVuY3k/LnRvVXBwZXJDYXNlPy4oKSxcbiAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgLz5cbiAgICAgICAgKTtcblxuICAgICAgICBjb25zdCBkaXNhYmxlZF9tZXNzYWdlID0gaXNfZmlhdCA/IGZpYXRfbWVzc2FnZSA6IG5vbl9maWF0X21lc2FnZTtcblxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPEZvcm1pa1xuICAgICAgICAgICAgICAgIGluaXRpYWxWYWx1ZXM9e3tcbiAgICAgICAgICAgICAgICAgICAgZmlhdDogdmFsdWUuZmlhdCxcbiAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgIG9uU3VibWl0PXtvblN1Ym1pdH1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICB7KHsgaGFuZGxlU3VibWl0LCB2YWx1ZXMsIGVycm9ycywgdG91Y2hlZCwgaXNTdWJtaXR0aW5nIH0pID0+IChcbiAgICAgICAgICAgICAgICAgICAgPGZvcm1cbiAgICAgICAgICAgICAgICAgICAgICAgIG9uU3VibWl0PXtlID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaGFuZGxlU3VibWl0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICA8VGV4dCBhcz0naDEnIGNvbG9yPSdwcm9taW5lbnQnIHdlaWdodD0nYm9sZCcgYWxpZ249J2NlbnRlcicgY2xhc3NOYW1lPSdjaGFuZ2UtY3VycmVuY3lfX3RpdGxlJz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8TG9jYWxpemUgaTE4bl9kZWZhdWx0X3RleHQ9J0NoYW5nZSB5b3VyIGN1cnJlbmN5JyAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9UZXh0PlxuICAgICAgICAgICAgICAgICAgICAgICAgPFRleHQgYXM9J2gzJyBzaXplPSd4eHMnIGFsaWduPSdjZW50ZXInIGNsYXNzTmFtZT0nY2hhbmdlLWN1cnJlbmN5X19zdWItdGl0bGUnPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxMb2NhbGl6ZSBpMThuX2RlZmF1bHRfdGV4dD0nQ2hvb3NlIHRoZSBjdXJyZW5jeSB5b3Ugd291bGQgbGlrZSB0byB0cmFkZSB3aXRoLicgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvVGV4dD5cbiAgICAgICAgICAgICAgICAgICAgICAgIHshY2FuX2NoYW5nZV9maWF0X2N1cnJlbmN5ICYmIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nYWNjb3VudC13aXphcmQtLWRpc2FibGVkLW1lc3NhZ2UnPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8VGV4dFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXM9J3AnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbGlnbj0nY2VudGVyJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2l6ZT0neHhzJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPSdhY2NvdW50LXdpemFyZC0tZGlzYWJsZWQtbWVzc2FnZS1kZXNjcmlwdGlvbidcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge2Rpc2FibGVkX21lc3NhZ2V9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvVGV4dD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgICAgICAgICA8Q3VycmVuY3lSYWRpb0J1dHRvbkdyb3VwXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ9J2ZpYXQnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw9e2xvY2FsaXplKCdDcnlwdG9jdXJyZW5jaWVzJyl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPSdjdXJyZW5jeS1zZWxlY3Rvcl9fcmFkaW8tZ3JvdXAgY3VycmVuY3ktc2VsZWN0b3JfX3JhZGlvLWdyb3VwLS13aXRoLW1hcmdpbidcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT17dmFsdWVzLmZpYXR9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3I9e2Vycm9ycy5maWF0fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvdWNoZWQ9e3RvdWNoZWQuZmlhdH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc190aXRsZV9lbmFibGVkPXtmYWxzZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpdGVtX2NvdW50PXtnZXRSZW9yZGVyZWRDdXJyZW5jaWVzKCkubGVuZ3RofVxuICAgICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtnZXRSZW9yZGVyZWRDdXJyZW5jaWVzKCkubWFwKGN1cnJlbmN5ID0+IChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPEZpZWxkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXk9e2N1cnJlbmN5LnZhbHVlfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29tcG9uZW50PXtDdXJyZW5jeVJhZGlvQnV0dG9ufVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZT0nZmlhdCdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkPXtjdXJyZW5jeS52YWx1ZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsPXtjdXJyZW5jeS5uYW1lfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQ9e2N1cnJlbmN5LnZhbHVlID09PSBjbGllbnRfY3VycmVuY3l9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKSl9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L0N1cnJlbmN5UmFkaW9CdXR0b25Hcm91cD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxGb3JtU3VibWl0QnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPSdjaGFuZ2UtY3VycmVuY3lfX2J1dHRvbidcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc19kaXNhYmxlZD17aXNTdWJtaXR0aW5nIHx8ICF2YWx1ZXMuZmlhdH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbD17bG9jYWxpemUoJ0NoYW5nZSBjdXJyZW5jeScpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzX2Fic29sdXRlPXshaXNNb2JpbGUoKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3JtX2Vycm9yPXtmb3JtX2Vycm9yfVxuICAgICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgPC9mb3JtPlxuICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICA8L0Zvcm1paz5cbiAgICAgICAgKTtcbiAgICB9XG4pO1xuXG5DaGFuZ2VBY2NvdW50Q3VycmVuY3kucHJvcFR5cGVzID0ge1xuICAgIG9uU3VibWl0OiBQcm9wVHlwZXMuZnVuYyxcbiAgICBjbG9zZU1vZGFsOiBQcm9wVHlwZXMuZnVuYyxcbiAgICB2YWx1ZTogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICAgICAgY3J5cHRvOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgICAgICBmaWF0OiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIH0pLFxuICAgIGZvcm1fZXJyb3I6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgY2FuX2NoYW5nZV9maWF0X2N1cnJlbmN5OiBQcm9wVHlwZXMuYm9vbCxcbiAgICBjdXJyZW50X2N1cnJlbmN5X3R5cGU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgY3VycmVudF9maWF0X2N1cnJlbmN5OiBQcm9wVHlwZXMuc3RyaW5nLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgQ2hhbmdlQWNjb3VudEN1cnJlbmN5O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./App/Containers/RealAccountSignup/change-account-currency.jsx\n'
                );

                /***/
            },

        /***/ './App/Containers/RealAccountSignup/choose-currency.js':
            /*!*************************************************************!*\
  !*** ./App/Containers/RealAccountSignup/choose-currency.js ***!
  \*************************************************************/
            /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }\nfunction _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }\nconst currenciesPaymentAgentAvailability = (legal_allowed_currencies, all_payment_agent_list, account_list) => {\n  const result = [];\n  legal_allowed_currencies.forEach(currency => {\n    result.push(_objectSpread(_objectSpread({}, currency), {}, {\n      has_payment_agent: !!(all_payment_agent_list !== null && all_payment_agent_list !== void 0 && all_payment_agent_list.filter(agent => agent.currencies === currency.value).length),\n      is_disabled: account_list === null || account_list === void 0 ? void 0 : account_list.some(account => account.title === currency.value && account.is_disabled)\n    }));\n  });\n  return result;\n};\nconst currenciesOnRampAvailability = legal_allowed_currencies => {\n  return legal_allowed_currencies.filter(_ref => {\n    let {\n      platform\n    } = _ref;\n    return platform.ramp.length > 0;\n  });\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  currenciesOnRampAvailability,\n  currenciesPaymentAgentAvailability\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9BcHAvQ29udGFpbmVycy9SZWFsQWNjb3VudFNpZ251cC9jaG9vc2UtY3VycmVuY3kuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQUE7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9BcHAvQ29udGFpbmVycy9SZWFsQWNjb3VudFNpZ251cC9jaG9vc2UtY3VycmVuY3kuanM/OGY1NCJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBjdXJyZW5jaWVzUGF5bWVudEFnZW50QXZhaWxhYmlsaXR5ID0gKGxlZ2FsX2FsbG93ZWRfY3VycmVuY2llcywgYWxsX3BheW1lbnRfYWdlbnRfbGlzdCwgYWNjb3VudF9saXN0KSA9PiB7XG4gICAgY29uc3QgcmVzdWx0ID0gW107XG4gICAgbGVnYWxfYWxsb3dlZF9jdXJyZW5jaWVzLmZvckVhY2goY3VycmVuY3kgPT4ge1xuICAgICAgICByZXN1bHQucHVzaCh7XG4gICAgICAgICAgICAuLi5jdXJyZW5jeSxcbiAgICAgICAgICAgIGhhc19wYXltZW50X2FnZW50OiAhIWFsbF9wYXltZW50X2FnZW50X2xpc3Q/LmZpbHRlcihhZ2VudCA9PiBhZ2VudC5jdXJyZW5jaWVzID09PSBjdXJyZW5jeS52YWx1ZSkubGVuZ3RoLFxuICAgICAgICAgICAgaXNfZGlzYWJsZWQ6IGFjY291bnRfbGlzdD8uc29tZShhY2NvdW50ID0+IGFjY291bnQudGl0bGUgPT09IGN1cnJlbmN5LnZhbHVlICYmIGFjY291bnQuaXNfZGlzYWJsZWQpLFxuICAgICAgICB9KTtcbiAgICB9KTtcbiAgICByZXR1cm4gcmVzdWx0O1xufTtcblxuY29uc3QgY3VycmVuY2llc09uUmFtcEF2YWlsYWJpbGl0eSA9IGxlZ2FsX2FsbG93ZWRfY3VycmVuY2llcyA9PiB7XG4gICAgcmV0dXJuIGxlZ2FsX2FsbG93ZWRfY3VycmVuY2llcy5maWx0ZXIoKHsgcGxhdGZvcm0gfSkgPT4gcGxhdGZvcm0ucmFtcC5sZW5ndGggPiAwKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgICBjdXJyZW5jaWVzT25SYW1wQXZhaWxhYmlsaXR5LFxuICAgIGN1cnJlbmNpZXNQYXltZW50QWdlbnRBdmFpbGFiaWxpdHksXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./App/Containers/RealAccountSignup/choose-currency.js\n'
                );

                /***/
            },

        /***/ './App/Containers/RealAccountSignup/choose-currency.jsx':
            /*!**************************************************************!*\
  !*** ./App/Containers/RealAccountSignup/choose-currency.jsx ***!
  \**************************************************************/
            /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var formik__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! formik */ "../../../node_modules/formik/dist/formik.esm.js");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "../../../node_modules/react/index.js");\n/* harmony import */ var _deriv_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @deriv/components */ "../../components/src/index.ts");\n/* harmony import */ var _deriv_hooks__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @deriv/hooks */ "../../hooks/src/usePaymentAgentList.ts");\n/* harmony import */ var _deriv_translations__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @deriv/translations */ "../../translations/src/index.js");\n/* harmony import */ var _deriv_shared__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @deriv/shared */ "../../shared/src/index.ts");\n/* harmony import */ var _deriv_account_dist_account_js_currency_radio_button_group__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @deriv/account/dist/account/js/currency-radio-button-group */ "../../account/dist/account/js/currency-radio-button-group.js");\n/* harmony import */ var _deriv_account_dist_account_js_currency_radio_button_group__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_deriv_account_dist_account_js_currency_radio_button_group__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _deriv_account_dist_account_js_currency_radio_button__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @deriv/account/dist/account/js/currency-radio-button */ "../../account/dist/account/js/currency-radio-button.js");\n/* harmony import */ var _deriv_account_dist_account_js_currency_radio_button__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_deriv_account_dist_account_js_currency_radio_button__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _choose_currency__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./choose-currency */ "./App/Containers/RealAccountSignup/choose-currency.js");\n/* harmony import */ var _deriv_stores__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @deriv/stores */ "../../../node_modules/mobx-react-lite/es/index.js");\n/* harmony import */ var _deriv_stores__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @deriv/stores */ "../../stores/src/useStore.ts");\n/* harmony import */ var _currency_selector_scss__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./currency-selector.scss */ "./App/Containers/RealAccountSignup/currency-selector.scss");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! react/jsx-runtime */ "../../../node_modules/react/jsx-runtime.js");\n\n\n\n\n\n\n\n\n\n        \n\n\n\n        \n\n\n\n\nconst CRYPTO_CURRENCY_TYPE = \'crypto\';\nconst ChooseCurrency = (0,_deriv_stores__WEBPACK_IMPORTED_MODULE_9__.observer)(() => {\n  const {\n    client,\n    modules,\n    ui\n  } = (0,_deriv_stores__WEBPACK_IMPORTED_MODULE_10__["default"])();\n  const {\n    account_list,\n    available_crypto_currencies,\n    currency: currency_title,\n    has_fiat,\n    upgradeable_currencies: legal_allowed_currencies,\n    switchAccount\n  } = client;\n  const {\n    cashier\n  } = modules;\n  const {\n    closeRealAccountSignup,\n    continueRouteAfterChooseCrypto,\n    openRealAccountSignup,\n    setShouldShowCancel\n  } = ui;\n  const deposit_target = cashier.general_store.deposit_target;\n  const should_show_all_available_currencies = cashier.general_store.should_show_all_available_currencies;\n  const setShouldShowAllAvailableCurrencies = cashier.general_store.setShouldShowAllAvailableCurrencies;\n  const [form_error] = react__WEBPACK_IMPORTED_MODULE_0__.useState(\'\');\n  const [form_value] = react__WEBPACK_IMPORTED_MODULE_0__.useState({\n    crypto: \'\'\n  });\n  const {\n    data: all_payment_agent_list,\n    isLoading: is_loading\n  } = (0,_deriv_hooks__WEBPACK_IMPORTED_MODULE_11__["default"])();\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    return () => setShouldShowAllAvailableCurrencies(false);\n  }, [setShouldShowAllAvailableCurrencies]);\n  const memoized_reordered_crypto_currencies = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n    const hasAllCryptos = () => {\n      return (legal_allowed_currencies === null || legal_allowed_currencies === void 0 ? void 0 : legal_allowed_currencies.filter(currency => currency.type === CRYPTO_CURRENCY_TYPE && !account_list.some(x => x.title === currency.value)).length) === 0;\n    };\n    const addNewCryptoAccount = () => {\n      openRealAccountSignup(deposit_target === _deriv_shared__WEBPACK_IMPORTED_MODULE_3__.routes.cashier_pa ? \'add_currency\' : \'add_crypto\');\n      setShouldShowCancel(true);\n    };\n    const allowed_currencies_payment_agent_availability = _choose_currency__WEBPACK_IMPORTED_MODULE_6__["default"].currenciesPaymentAgentAvailability(legal_allowed_currencies, all_payment_agent_list, account_list);\n    const allowed_currencies_onramp_availability = _choose_currency__WEBPACK_IMPORTED_MODULE_6__["default"].currenciesOnRampAvailability(legal_allowed_currencies);\n    const getReorderCryptoCurrencies = () => {\n      var _currencies_to_filter;\n      let currencies_to_filter;\n      if (deposit_target === _deriv_shared__WEBPACK_IMPORTED_MODULE_3__.routes.cashier_onramp) {\n        currencies_to_filter = allowed_currencies_onramp_availability;\n      } else if (should_show_all_available_currencies) {\n        currencies_to_filter = allowed_currencies_payment_agent_availability;\n      } else {\n        currencies_to_filter = allowed_currencies_payment_agent_availability === null || allowed_currencies_payment_agent_availability === void 0 ? void 0 : allowed_currencies_payment_agent_availability.filter(currency => currency.type === CRYPTO_CURRENCY_TYPE && !available_crypto_currencies.some(x => x.value === currency.value));\n      }\n      const filtered_currencies = (_currencies_to_filter = currencies_to_filter) === null || _currencies_to_filter === void 0 ? void 0 : _currencies_to_filter.filter(currency => account_list.some(x => x.title === currency.value));\n      return (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_3__.reorderCurrencies)(filtered_currencies, CRYPTO_CURRENCY_TYPE);\n    };\n    const shouldShowAddButton = () => {\n      switch (deposit_target) {\n        case _deriv_shared__WEBPACK_IMPORTED_MODULE_3__.routes.cashier_pa:\n          return !has_fiat || !hasAllCryptos();\n        case _deriv_shared__WEBPACK_IMPORTED_MODULE_3__.routes.cashier_onramp:\n          {\n            const can_add_onramp_supported_crypto_account = legal_allowed_currencies.filter(currency => currency.type === CRYPTO_CURRENCY_TYPE && currency.platform.ramp.length > 0 && !account_list.some(x => x.title === currency.value)).length > 0;\n            return can_add_onramp_supported_crypto_account;\n          }\n        default:\n          return !hasAllCryptos();\n      }\n    };\n    const reordered_crypto_currencies = getReorderCryptoCurrencies();\n    if (shouldShowAddButton()) {\n      reordered_crypto_currencies.push({\n        value: \'plus\',\n        name: deposit_target === _deriv_shared__WEBPACK_IMPORTED_MODULE_3__.routes.cashier_pa ? (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_2__.localize)(\'Add a new\') : (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_2__.localize)(\'Add new\'),\n        second_line_label: deposit_target === _deriv_shared__WEBPACK_IMPORTED_MODULE_3__.routes.cashier_pa ? (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_2__.localize)(\'account\') : (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_2__.localize)(\'crypto account\'),\n        icon: \'IcAddAccount\',\n        onClick: () => addNewCryptoAccount(),\n        has_payment_agent: true\n      });\n    }\n    return reordered_crypto_currencies;\n  }, [account_list, all_payment_agent_list, available_crypto_currencies, deposit_target, has_fiat, legal_allowed_currencies, should_show_all_available_currencies, openRealAccountSignup, setShouldShowCancel]);\n  const doSwitch = async value => {\n    const target_account = account_list.filter(account => account.title === value);\n    const loginid = target_account.map(x => x.loginid)[0];\n    if (loginid) await switchAccount(loginid);\n  };\n  const onSubmit = async obj => {\n    Object.entries(obj).map(_ref => {\n      let [title, value] = _ref;\n      if (title) {\n        closeRealAccountSignup();\n        if (value !== currency_title) {\n          doSwitch(value);\n        }\n        continueRouteAfterChooseCrypto();\n      }\n    });\n  };\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(formik__WEBPACK_IMPORTED_MODULE_12__.Formik, {\n    initialValues: {\n      currency: form_value.currency\n    },\n    onSubmit: values => {\n      onSubmit(values);\n    },\n    children: _ref2 => {\n      let {\n        handleSubmit,\n        values,\n        isSubmitting\n      } = _ref2;\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)("form", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_1__.Text, {\n          as: "h1",\n          color: "prominent",\n          align: "center",\n          weight: "bold",\n          className: "add-crypto-currency__title",\n          children: deposit_target === _deriv_shared__WEBPACK_IMPORTED_MODULE_3__.routes.cashier_pa ? (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_2__.localize)(\'Choose an account or add a new one\') : (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_2__.localize)(\'Choose one of your accounts or add a new cryptocurrency account\')\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_1__.ThemedScrollbars, {\n          children: is_loading ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_1__.Loading, {\n            is_fullscreen: false,\n            className: "currency-list__loading-wrapper"\n          }) : /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)((_deriv_account_dist_account_js_currency_radio_button_group__WEBPACK_IMPORTED_MODULE_4___default()), {\n            id: "crypto_currency",\n            className: "currency-selector__radio-group currency-selector__radio-group--with-margin",\n            item_count: memoized_reordered_crypto_currencies.length,\n            children: memoized_reordered_crypto_currencies.map(currency => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(formik__WEBPACK_IMPORTED_MODULE_12__.Field, {\n              component: (_deriv_account_dist_account_js_currency_radio_button__WEBPACK_IMPORTED_MODULE_5___default()),\n              name: "currency",\n              id: currency.value,\n              label: currency.name,\n              icon: currency.icon,\n              second_line_label: currency.second_line_label,\n              onClick: currency.onClick,\n              selected: currency.is_disabled || deposit_target === _deriv_shared__WEBPACK_IMPORTED_MODULE_3__.routes.cashier_pa ? !currency.has_payment_agent : false\n            }, currency.value))\n          })\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_1__.FormSubmitButton, {\n          className: "currency-selector__button",\n          is_disabled: isSubmitting || !values.currency,\n          label: (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_2__.localize)(\'Continue\'),\n          is_absolute: true,\n          form_error: form_error\n        })]\n      });\n    }\n  });\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ChooseCurrency);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./App/Containers/RealAccountSignup/choose-currency.jsx\n'
                );

                /***/
            },

        /***/ './App/Containers/RealAccountSignup/finished-add-currency.jsx':
            /*!********************************************************************!*\
  !*** ./App/Containers/RealAccountSignup/finished-add-currency.jsx ***!
  \********************************************************************/
            /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! classnames */ "../../../node_modules/classnames/index.js");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "../../../node_modules/react/index.js");\n/* harmony import */ var _deriv_com_ui__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @deriv-com/ui */ "../../../node_modules/@deriv-com/ui/dist/hooks/useDevice.js");\n/* harmony import */ var _deriv_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @deriv/components */ "../../components/src/index.ts");\n/* harmony import */ var _deriv_shared__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @deriv/shared */ "../../shared/src/index.ts");\n/* harmony import */ var _deriv_translations__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @deriv/translations */ "../../translations/src/index.js");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react/jsx-runtime */ "../../../node_modules/react/jsx-runtime.js");\n\n\n\n\n\n\n\nconst FinishedAddCurrency = _ref => {\n  let {\n    current,\n    closeRealAccountSignup,\n    deposit_target,\n    redirectToLegacyPlatform,\n    deposit_real_account_signup_target,\n    history,\n    onSubmit,\n    setIsDeposit\n  } = _ref;\n  const {\n    isDesktop\n  } = (0,_deriv_com_ui__WEBPACK_IMPORTED_MODULE_6__.useDevice)();\n  const IconNextCurrency = () => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.Icon, {\n    icon: `IcCurrency-${current.toLowerCase()}`,\n    height: 120,\n    width: 90\n  });\n  const IconWon = _ref2 => {\n    let {\n      className\n    } = _ref2;\n    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.Icon, {\n      className: className,\n      icon: "IcCheckmarkCircle",\n      color: "green"\n    });\n  };\n  const closeModalThenOpenCashier = () => {\n    closeRealAccountSignup();\n    history.push(deposit_target);\n    if (deposit_target === _deriv_shared__WEBPACK_IMPORTED_MODULE_3__.routes.cashier_deposit) {\n      setIsDeposit(true);\n    }\n    redirectToLegacyPlatform();\n  };\n  const onCancel = () => {\n    closeRealAccountSignup();\n    setIsDeposit(false);\n    redirectToLegacyPlatform();\n  };\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(react__WEBPACK_IMPORTED_MODULE_1__.Fragment, {\n    children: [isDesktop && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("div", {\n      onClick: onCancel,\n      className: "finished-add-currency__close",\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.Icon, {\n        icon: "IcCross"\n      })\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.Div100vhContainer, {\n      className: "finished-add-currency__dialog",\n      is_disabled: isDesktop,\n      height_offset: "40px",\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)("div", {\n        className: classnames__WEBPACK_IMPORTED_MODULE_0___default()(\'status-dialog__header\', {\n          \'status-dialog__header--center\': !isDesktop\n        }),\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(IconNextCurrency, {}), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(IconWon, {\n          className: "bottom-right-overlay"\n        })]\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)("div", {\n        className: classnames__WEBPACK_IMPORTED_MODULE_0___default()(\'status-dialog__body\', {\n          \'status-dialog__body--no-grow\': !isDesktop\n        }),\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.Text, {\n          as: "h2",\n          align: "center",\n          className: "status-dialog__message-header",\n          weight: "bold",\n          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_deriv_translations__WEBPACK_IMPORTED_MODULE_4__.Localize, {\n            i18n_default_text: "Your account is ready"\n          })\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.Text, {\n          as: "p",\n          align: "center",\n          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_deriv_translations__WEBPACK_IMPORTED_MODULE_4__.Localize, {\n            i18n_default_text: "Fund your account to start trading."\n          })\n        })]\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)("div", {\n        className: "finished-add-currency__footer",\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.Button, {\n          onClick: onCancel,\n          text: (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_4__.localize)(\'Maybe later\'),\n          secondary: true\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.Button, {\n          onClick: [\'add_crypto\', \'add_fiat\', \'add_currency\'].includes(deposit_real_account_signup_target) ? closeModalThenOpenCashier : onSubmit,\n          text: (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_4__.localize)(\'Deposit now\'),\n          primary: true\n        })]\n      })]\n    })]\n  });\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.memo(FinishedAddCurrency));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9BcHAvQ29udGFpbmVycy9SZWFsQWNjb3VudFNpZ251cC9maW5pc2hlZC1hZGQtY3VycmVuY3kuanN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBRUE7QUFTQTtBQVJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUdBO0FBQUE7QUFBQTtBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQUE7QUFHQTtBQUFBO0FBQUE7QUFFQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFFQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUVBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUVBO0FBS0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL0FwcC9Db250YWluZXJzL1JlYWxBY2NvdW50U2lnbnVwL2ZpbmlzaGVkLWFkZC1jdXJyZW5jeS5qc3g/N2M3MSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY2xhc3NOYW1lcyBmcm9tICdjbGFzc25hbWVzJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyB1c2VEZXZpY2UgfSBmcm9tICdAZGVyaXYtY29tL3VpJztcbmltcG9ydCB7IEJ1dHRvbiwgRGl2MTAwdmhDb250YWluZXIsIEljb24sIFRleHQgfSBmcm9tICdAZGVyaXYvY29tcG9uZW50cyc7XG5pbXBvcnQgeyByb3V0ZXMgfSBmcm9tICdAZGVyaXYvc2hhcmVkJztcbmltcG9ydCB7IGxvY2FsaXplLCBMb2NhbGl6ZSB9IGZyb20gJ0BkZXJpdi90cmFuc2xhdGlvbnMnO1xuXG5jb25zdCBGaW5pc2hlZEFkZEN1cnJlbmN5ID0gKHtcbiAgICBjdXJyZW50LFxuICAgIGNsb3NlUmVhbEFjY291bnRTaWdudXAsXG4gICAgZGVwb3NpdF90YXJnZXQsXG4gICAgcmVkaXJlY3RUb0xlZ2FjeVBsYXRmb3JtLFxuICAgIGRlcG9zaXRfcmVhbF9hY2NvdW50X3NpZ251cF90YXJnZXQsXG4gICAgaGlzdG9yeSxcbiAgICBvblN1Ym1pdCxcbiAgICBzZXRJc0RlcG9zaXQsXG59KSA9PiB7XG4gICAgY29uc3QgeyBpc0Rlc2t0b3AgfSA9IHVzZURldmljZSgpO1xuICAgIGNvbnN0IEljb25OZXh0Q3VycmVuY3kgPSAoKSA9PiA8SWNvbiBpY29uPXtgSWNDdXJyZW5jeS0ke2N1cnJlbnQudG9Mb3dlckNhc2UoKX1gfSBoZWlnaHQ9ezEyMH0gd2lkdGg9ezkwfSAvPjtcbiAgICBjb25zdCBJY29uV29uID0gKHsgY2xhc3NOYW1lIH0pID0+IDxJY29uIGNsYXNzTmFtZT17Y2xhc3NOYW1lfSBpY29uPSdJY0NoZWNrbWFya0NpcmNsZScgY29sb3I9J2dyZWVuJyAvPjtcblxuICAgIGNvbnN0IGNsb3NlTW9kYWxUaGVuT3BlbkNhc2hpZXIgPSAoKSA9PiB7XG4gICAgICAgIGNsb3NlUmVhbEFjY291bnRTaWdudXAoKTtcbiAgICAgICAgaGlzdG9yeS5wdXNoKGRlcG9zaXRfdGFyZ2V0KTtcbiAgICAgICAgaWYgKGRlcG9zaXRfdGFyZ2V0ID09PSByb3V0ZXMuY2FzaGllcl9kZXBvc2l0KSB7XG4gICAgICAgICAgICBzZXRJc0RlcG9zaXQodHJ1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgcmVkaXJlY3RUb0xlZ2FjeVBsYXRmb3JtKCk7XG4gICAgfTtcblxuICAgIGNvbnN0IG9uQ2FuY2VsID0gKCkgPT4ge1xuICAgICAgICBjbG9zZVJlYWxBY2NvdW50U2lnbnVwKCk7XG4gICAgICAgIHNldElzRGVwb3NpdChmYWxzZSk7XG4gICAgICAgIHJlZGlyZWN0VG9MZWdhY3lQbGF0Zm9ybSgpO1xuICAgIH07XG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8UmVhY3QuRnJhZ21lbnQ+XG4gICAgICAgICAgICB7aXNEZXNrdG9wICYmIChcbiAgICAgICAgICAgICAgICA8ZGl2IG9uQ2xpY2s9e29uQ2FuY2VsfSBjbGFzc05hbWU9J2ZpbmlzaGVkLWFkZC1jdXJyZW5jeV9fY2xvc2UnPlxuICAgICAgICAgICAgICAgICAgICA8SWNvbiBpY29uPSdJY0Nyb3NzJyAvPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgKX1cbiAgICAgICAgICAgIDxEaXYxMDB2aENvbnRhaW5lciBjbGFzc05hbWU9J2ZpbmlzaGVkLWFkZC1jdXJyZW5jeV9fZGlhbG9nJyBpc19kaXNhYmxlZD17aXNEZXNrdG9wfSBoZWlnaHRfb2Zmc2V0PSc0MHB4Jz5cbiAgICAgICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17Y2xhc3NOYW1lcygnc3RhdHVzLWRpYWxvZ19faGVhZGVyJywge1xuICAgICAgICAgICAgICAgICAgICAgICAgJ3N0YXR1cy1kaWFsb2dfX2hlYWRlci0tY2VudGVyJzogIWlzRGVza3RvcCxcbiAgICAgICAgICAgICAgICAgICAgfSl9XG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICA8SWNvbk5leHRDdXJyZW5jeSAvPlxuICAgICAgICAgICAgICAgICAgICA8SWNvbldvbiBjbGFzc05hbWU9J2JvdHRvbS1yaWdodC1vdmVybGF5JyAvPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtjbGFzc05hbWVzKCdzdGF0dXMtZGlhbG9nX19ib2R5JywgeyAnc3RhdHVzLWRpYWxvZ19fYm9keS0tbm8tZ3Jvdyc6ICFpc0Rlc2t0b3AgfSl9PlxuICAgICAgICAgICAgICAgICAgICA8VGV4dCBhcz0naDInIGFsaWduPSdjZW50ZXInIGNsYXNzTmFtZT0nc3RhdHVzLWRpYWxvZ19fbWVzc2FnZS1oZWFkZXInIHdlaWdodD0nYm9sZCc+XG4gICAgICAgICAgICAgICAgICAgICAgICA8TG9jYWxpemUgaTE4bl9kZWZhdWx0X3RleHQ9J1lvdXIgYWNjb3VudCBpcyByZWFkeScgLz5cbiAgICAgICAgICAgICAgICAgICAgPC9UZXh0PlxuICAgICAgICAgICAgICAgICAgICA8VGV4dCBhcz0ncCcgYWxpZ249J2NlbnRlcic+XG4gICAgICAgICAgICAgICAgICAgICAgICA8TG9jYWxpemUgaTE4bl9kZWZhdWx0X3RleHQ9J0Z1bmQgeW91ciBhY2NvdW50IHRvIHN0YXJ0IHRyYWRpbmcuJyAvPlxuICAgICAgICAgICAgICAgICAgICA8L1RleHQ+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2ZpbmlzaGVkLWFkZC1jdXJyZW5jeV9fZm9vdGVyJz5cbiAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiBvbkNsaWNrPXtvbkNhbmNlbH0gdGV4dD17bG9jYWxpemUoJ01heWJlIGxhdGVyJyl9IHNlY29uZGFyeSAvPlxuICAgICAgICAgICAgICAgICAgICA8QnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbJ2FkZF9jcnlwdG8nLCAnYWRkX2ZpYXQnLCAnYWRkX2N1cnJlbmN5J10uaW5jbHVkZXMoZGVwb3NpdF9yZWFsX2FjY291bnRfc2lnbnVwX3RhcmdldClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBjbG9zZU1vZGFsVGhlbk9wZW5DYXNoaWVyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogb25TdWJtaXRcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHRleHQ9e2xvY2FsaXplKCdEZXBvc2l0IG5vdycpfVxuICAgICAgICAgICAgICAgICAgICAgICAgcHJpbWFyeVxuICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9EaXYxMDB2aENvbnRhaW5lcj5cbiAgICAgICAgPC9SZWFjdC5GcmFnbWVudD5cbiAgICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgUmVhY3QubWVtbyhGaW5pc2hlZEFkZEN1cnJlbmN5KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./App/Containers/RealAccountSignup/finished-add-currency.jsx\n'
                );

                /***/
            },

        /***/ './App/Containers/RealAccountSignup/finished-set-currency.jsx':
            /*!********************************************************************!*\
  !*** ./App/Containers/RealAccountSignup/finished-set-currency.jsx ***!
  \********************************************************************/
            /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! classnames */ "../../../node_modules/classnames/index.js");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "../../../node_modules/react/index.js");\n/* harmony import */ var _deriv_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @deriv/components */ "../../components/src/index.ts");\n/* harmony import */ var _deriv_shared__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @deriv/shared */ "../../shared/src/index.ts");\n/* harmony import */ var _deriv_translations__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @deriv/translations */ "../../translations/src/index.js");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react/jsx-runtime */ "../../../node_modules/react/jsx-runtime.js");\n\n\n\n\n\n\nconst SuccessMessage = _ref => {\n  let {\n    prev,\n    current\n  } = _ref;\n  return prev ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_deriv_translations__WEBPACK_IMPORTED_MODULE_4__.Localize, {\n    i18n_default_text: \'<0>You have successfully changed your currency to {{currency}}.</0><0>Make a deposit now to start trading.</0>\',\n    values: {\n      currency: (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_3__.getCurrencyDisplayCode)(current)\n    },\n    components: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.Text, {\n      as: "p",\n      align: "center",\n      className: "status-dialog__message-text",\n      color: "general",\n      size: "xs"\n    }, current)]\n  }) : /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_deriv_translations__WEBPACK_IMPORTED_MODULE_4__.Localize, {\n    i18n_default_text: \'<0>You have added a {{currency}} account.</0><0> Make a deposit now to start trading.</0>\',\n    values: {\n      currency: (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_3__.getCurrencyDisplayCode)(current)\n    },\n    components: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.Text, {\n      as: "p",\n      align: "center",\n      className: "status-dialog__message-text",\n      color: "general",\n      size: "xs"\n    }, current)]\n  });\n};\nconst FinishedSetCurrency = _ref2 => {\n  let {\n    current,\n    closeRealAccountSignup,\n    deposit_target,\n    deposit_real_account_signup_target,\n    history,\n    onCancel,\n    onSubmit,\n    prev,\n    setIsDeposit\n  } = _ref2;\n  const IconPrevCurrency = () => prev ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.Icon, {\n    icon: `IcCurrency-${prev.toLowerCase()}`,\n    height: 120,\n    width: 90\n  }) : null;\n  const IconNextCurrency = () => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.Icon, {\n    icon: `IcCurrency-${current.toLowerCase()}`,\n    height: 120,\n    width: 90\n  });\n  const IconArrow = () => prev ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.Icon, {\n    icon: "IcArrowPointerRight",\n    color: "red",\n    width: 50,\n    height: 20\n  }) : null;\n  const IconWon = _ref3 => {\n    let {\n      className\n    } = _ref3;\n    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.Icon, {\n      className: className,\n      icon: "IcCheckmarkCircle",\n      color: "green"\n    });\n  };\n  const closeModalThenOpenCashier = () => {\n    closeRealAccountSignup();\n    history.push(deposit_target);\n    if (deposit_target === _deriv_shared__WEBPACK_IMPORTED_MODULE_3__.routes.cashier_deposit) {\n      setIsDeposit(true);\n    }\n  };\n  const closeModal = () => {\n    onCancel();\n    setIsDeposit(false);\n  };\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.Div100vhContainer, {\n    className: "status-dialog",\n    is_disabled: (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_3__.isDesktop)(),\n    height_offset: "40px",\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)("div", {\n      className: classnames__WEBPACK_IMPORTED_MODULE_0___default()(\'status-dialog__header\', {\n        \'status-dialog__header--center\': (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_3__.isMobile)(),\n        \'status-dialog__header--set-currency\': prev\n      }),\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(IconPrevCurrency, {}), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(IconArrow, {}), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(IconNextCurrency, {}), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(IconWon, {\n        className: "bottom-right-overlay"\n      })]\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)("div", {\n      className: classnames__WEBPACK_IMPORTED_MODULE_0___default()(\'status-dialog__body\', {\n        \'status-dialog__body--no-grow\': (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_3__.isMobile)()\n      }),\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.Text, {\n        as: "h2",\n        align: "center",\n        className: "status-dialog__message-header",\n        weight: "bold",\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_deriv_translations__WEBPACK_IMPORTED_MODULE_4__.Localize, {\n          i18n_default_text: "Success!"\n        })\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(SuccessMessage, {\n        prev: prev,\n        current: current\n      })]\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)("div", {\n      className: "status-dialog__footer",\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.Button, {\n        onClick: closeModal,\n        text: (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_4__.localize)(\'Maybe later\'),\n        secondary: true\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.Button, {\n        onClick: [\'add_crypto\', \'add_fiat\', \'add_currency\'].includes(deposit_real_account_signup_target) ? closeModalThenOpenCashier : onSubmit,\n        text: (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_4__.localize)(\'Deposit now\'),\n        primary: true\n      })]\n    })]\n  });\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.memo(FinishedSetCurrency));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9BcHAvQ29udGFpbmVycy9SZWFsQWNjb3VudFNpZ251cC9maW5pc2hlZC1zZXQtY3VycmVuY3kuanN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBRUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBR0E7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUdBO0FBSUE7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUdBO0FBRUE7QUFFQTtBQVVBO0FBVEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUVBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBS0E7QUFBQTtBQUFBO0FBRUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBRUE7QUFBQTtBQUFBO0FBQUE7QUFFQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFFQTtBQUtBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFHQTtBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vQXBwL0NvbnRhaW5lcnMvUmVhbEFjY291bnRTaWdudXAvZmluaXNoZWQtc2V0LWN1cnJlbmN5LmpzeD9iZDQzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IEJ1dHRvbiwgRGl2MTAwdmhDb250YWluZXIsIEljb24sIFRleHQgfSBmcm9tICdAZGVyaXYvY29tcG9uZW50cyc7XG5pbXBvcnQgeyBnZXRDdXJyZW5jeURpc3BsYXlDb2RlLCBpc0Rlc2t0b3AsIGlzTW9iaWxlLCByb3V0ZXMgfSBmcm9tICdAZGVyaXYvc2hhcmVkJztcbmltcG9ydCB7IGxvY2FsaXplLCBMb2NhbGl6ZSB9IGZyb20gJ0BkZXJpdi90cmFuc2xhdGlvbnMnO1xuXG5jb25zdCBTdWNjZXNzTWVzc2FnZSA9ICh7IHByZXYsIGN1cnJlbnQgfSkgPT5cbiAgICBwcmV2ID8gKFxuICAgICAgICA8TG9jYWxpemVcbiAgICAgICAgICAgIGkxOG5fZGVmYXVsdF90ZXh0PXtcbiAgICAgICAgICAgICAgICAnPDA+WW91IGhhdmUgc3VjY2Vzc2Z1bGx5IGNoYW5nZWQgeW91ciBjdXJyZW5jeSB0byB7e2N1cnJlbmN5fX0uPC8wPjwwPk1ha2UgYSBkZXBvc2l0IG5vdyB0byBzdGFydCB0cmFkaW5nLjwvMD4nXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YWx1ZXM9e3tcbiAgICAgICAgICAgICAgICBjdXJyZW5jeTogZ2V0Q3VycmVuY3lEaXNwbGF5Q29kZShjdXJyZW50KSxcbiAgICAgICAgICAgIH19XG4gICAgICAgICAgICBjb21wb25lbnRzPXtbXG4gICAgICAgICAgICAgICAgPFRleHRcbiAgICAgICAgICAgICAgICAgICAgYXM9J3AnXG4gICAgICAgICAgICAgICAgICAgIGFsaWduPSdjZW50ZXInXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT0nc3RhdHVzLWRpYWxvZ19fbWVzc2FnZS10ZXh0J1xuICAgICAgICAgICAgICAgICAgICBjb2xvcj0nZ2VuZXJhbCdcbiAgICAgICAgICAgICAgICAgICAgc2l6ZT0neHMnXG4gICAgICAgICAgICAgICAgICAgIGtleT17Y3VycmVudH1cbiAgICAgICAgICAgICAgICAvPixcbiAgICAgICAgICAgIF19XG4gICAgICAgIC8+XG4gICAgKSA6IChcbiAgICAgICAgPExvY2FsaXplXG4gICAgICAgICAgICBpMThuX2RlZmF1bHRfdGV4dD17XG4gICAgICAgICAgICAgICAgJzwwPllvdSBoYXZlIGFkZGVkIGEge3tjdXJyZW5jeX19IGFjY291bnQuPC8wPjwwPiBNYWtlIGEgZGVwb3NpdCBub3cgdG8gc3RhcnQgdHJhZGluZy48LzA+J1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFsdWVzPXt7XG4gICAgICAgICAgICAgICAgY3VycmVuY3k6IGdldEN1cnJlbmN5RGlzcGxheUNvZGUoY3VycmVudCksXG4gICAgICAgICAgICB9fVxuICAgICAgICAgICAgY29tcG9uZW50cz17W1xuICAgICAgICAgICAgICAgIDxUZXh0XG4gICAgICAgICAgICAgICAgICAgIGFzPSdwJ1xuICAgICAgICAgICAgICAgICAgICBhbGlnbj0nY2VudGVyJ1xuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9J3N0YXR1cy1kaWFsb2dfX21lc3NhZ2UtdGV4dCdcbiAgICAgICAgICAgICAgICAgICAgY29sb3I9J2dlbmVyYWwnXG4gICAgICAgICAgICAgICAgICAgIHNpemU9J3hzJ1xuICAgICAgICAgICAgICAgICAgICBrZXk9e2N1cnJlbnR9XG4gICAgICAgICAgICAgICAgLz4sXG4gICAgICAgICAgICBdfVxuICAgICAgICAvPlxuICAgICk7XG5cbmNvbnN0IEZpbmlzaGVkU2V0Q3VycmVuY3kgPSAoe1xuICAgIGN1cnJlbnQsXG4gICAgY2xvc2VSZWFsQWNjb3VudFNpZ251cCxcbiAgICBkZXBvc2l0X3RhcmdldCxcbiAgICBkZXBvc2l0X3JlYWxfYWNjb3VudF9zaWdudXBfdGFyZ2V0LFxuICAgIGhpc3RvcnksXG4gICAgb25DYW5jZWwsXG4gICAgb25TdWJtaXQsXG4gICAgcHJldixcbiAgICBzZXRJc0RlcG9zaXQsXG59KSA9PiB7XG4gICAgY29uc3QgSWNvblByZXZDdXJyZW5jeSA9ICgpID0+XG4gICAgICAgIHByZXYgPyA8SWNvbiBpY29uPXtgSWNDdXJyZW5jeS0ke3ByZXYudG9Mb3dlckNhc2UoKX1gfSBoZWlnaHQ9ezEyMH0gd2lkdGg9ezkwfSAvPiA6IG51bGw7XG4gICAgY29uc3QgSWNvbk5leHRDdXJyZW5jeSA9ICgpID0+IDxJY29uIGljb249e2BJY0N1cnJlbmN5LSR7Y3VycmVudC50b0xvd2VyQ2FzZSgpfWB9IGhlaWdodD17MTIwfSB3aWR0aD17OTB9IC8+O1xuICAgIGNvbnN0IEljb25BcnJvdyA9ICgpID0+IChwcmV2ID8gPEljb24gaWNvbj0nSWNBcnJvd1BvaW50ZXJSaWdodCcgY29sb3I9J3JlZCcgd2lkdGg9ezUwfSBoZWlnaHQ9ezIwfSAvPiA6IG51bGwpO1xuXG4gICAgY29uc3QgSWNvbldvbiA9ICh7IGNsYXNzTmFtZSB9KSA9PiA8SWNvbiBjbGFzc05hbWU9e2NsYXNzTmFtZX0gaWNvbj0nSWNDaGVja21hcmtDaXJjbGUnIGNvbG9yPSdncmVlbicgLz47XG5cbiAgICBjb25zdCBjbG9zZU1vZGFsVGhlbk9wZW5DYXNoaWVyID0gKCkgPT4ge1xuICAgICAgICBjbG9zZVJlYWxBY2NvdW50U2lnbnVwKCk7XG4gICAgICAgIGhpc3RvcnkucHVzaChkZXBvc2l0X3RhcmdldCk7XG4gICAgICAgIGlmIChkZXBvc2l0X3RhcmdldCA9PT0gcm91dGVzLmNhc2hpZXJfZGVwb3NpdCkge1xuICAgICAgICAgICAgc2V0SXNEZXBvc2l0KHRydWUpO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIGNvbnN0IGNsb3NlTW9kYWwgPSAoKSA9PiB7XG4gICAgICAgIG9uQ2FuY2VsKCk7XG4gICAgICAgIHNldElzRGVwb3NpdChmYWxzZSk7XG4gICAgfTtcblxuICAgIHJldHVybiAoXG4gICAgICAgIDxEaXYxMDB2aENvbnRhaW5lciBjbGFzc05hbWU9J3N0YXR1cy1kaWFsb2cnIGlzX2Rpc2FibGVkPXtpc0Rlc2t0b3AoKX0gaGVpZ2h0X29mZnNldD0nNDBweCc+XG4gICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPXtjbGFzc05hbWVzKCdzdGF0dXMtZGlhbG9nX19oZWFkZXInLCB7XG4gICAgICAgICAgICAgICAgICAgICdzdGF0dXMtZGlhbG9nX19oZWFkZXItLWNlbnRlcic6IGlzTW9iaWxlKCksXG4gICAgICAgICAgICAgICAgICAgICdzdGF0dXMtZGlhbG9nX19oZWFkZXItLXNldC1jdXJyZW5jeSc6IHByZXYsXG4gICAgICAgICAgICAgICAgfSl9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgPEljb25QcmV2Q3VycmVuY3kgLz5cbiAgICAgICAgICAgICAgICA8SWNvbkFycm93IC8+XG4gICAgICAgICAgICAgICAgPEljb25OZXh0Q3VycmVuY3kgLz5cbiAgICAgICAgICAgICAgICA8SWNvbldvbiBjbGFzc05hbWU9J2JvdHRvbS1yaWdodC1vdmVybGF5JyAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17Y2xhc3NOYW1lcygnc3RhdHVzLWRpYWxvZ19fYm9keScsIHsgJ3N0YXR1cy1kaWFsb2dfX2JvZHktLW5vLWdyb3cnOiBpc01vYmlsZSgpIH0pfT5cbiAgICAgICAgICAgICAgICA8VGV4dCBhcz0naDInIGFsaWduPSdjZW50ZXInIGNsYXNzTmFtZT0nc3RhdHVzLWRpYWxvZ19fbWVzc2FnZS1oZWFkZXInIHdlaWdodD0nYm9sZCc+XG4gICAgICAgICAgICAgICAgICAgIDxMb2NhbGl6ZSBpMThuX2RlZmF1bHRfdGV4dD0nU3VjY2VzcyEnIC8+XG4gICAgICAgICAgICAgICAgPC9UZXh0PlxuICAgICAgICAgICAgICAgIDxTdWNjZXNzTWVzc2FnZSBwcmV2PXtwcmV2fSBjdXJyZW50PXtjdXJyZW50fSAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nc3RhdHVzLWRpYWxvZ19fZm9vdGVyJz5cbiAgICAgICAgICAgICAgICA8QnV0dG9uIG9uQ2xpY2s9e2Nsb3NlTW9kYWx9IHRleHQ9e2xvY2FsaXplKCdNYXliZSBsYXRlcicpfSBzZWNvbmRhcnkgLz5cbiAgICAgICAgICAgICAgICA8QnV0dG9uXG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e1xuICAgICAgICAgICAgICAgICAgICAgICAgWydhZGRfY3J5cHRvJywgJ2FkZF9maWF0JywgJ2FkZF9jdXJyZW5jeSddLmluY2x1ZGVzKGRlcG9zaXRfcmVhbF9hY2NvdW50X3NpZ251cF90YXJnZXQpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBjbG9zZU1vZGFsVGhlbk9wZW5DYXNoaWVyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBvblN1Ym1pdFxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHRleHQ9e2xvY2FsaXplKCdEZXBvc2l0IG5vdycpfVxuICAgICAgICAgICAgICAgICAgICBwcmltYXJ5XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L0RpdjEwMHZoQ29udGFpbmVyPlxuICAgICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBSZWFjdC5tZW1vKEZpbmlzaGVkU2V0Q3VycmVuY3kpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./App/Containers/RealAccountSignup/finished-set-currency.jsx\n'
                );

                /***/
            },

        /***/ './App/Containers/RealAccountSignup/helpers/constants.js':
            /*!***************************************************************!*\
  !*** ./App/Containers/RealAccountSignup/helpers/constants.js ***!
  \***************************************************************/
            /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    "__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EXPERIAN: () => (/* binding */ EXPERIAN),\n/* harmony export */   getAccountTitle: () => (/* binding */ getAccountTitle),\n/* harmony export */   getExperianResult: () => (/* binding */ getExperianResult),\n/* harmony export */   screen_height_sm_threshold: () => (/* binding */ screen_height_sm_threshold)\n/* harmony export */ });\n/* harmony import */ var _deriv_translations__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @deriv/translations */ \"../../translations/src/index.js\");\n\n\n/**\n * Experian result is defined by client's information validity.\n * Defines the possible types of actions needed to take on experian result response.\n *\n * Possible values are:\n *   - Success: Client can trade\n *   - Warn: POI/POA Validity partially failed, trade in demo possible\n *   - Danger: POI/POA validation failed. Trade is locked until this resolved.\n *   - Pending: POI/POA is in pending state.\n * @enum {EXPERIAN}\n */\nconst EXPERIAN = {\n  SUCCESS: 1,\n  WARN: 0,\n  DANGER: -1,\n  PENDING: -2\n};\n\n/**\n * Return account title for the given landing company\n *\n * @param {string} landing_company_shortcode\n * @return {string} localized title\n */\nconst getAccountTitle = landing_company_shortcode => {\n  switch (landing_company_shortcode) {\n    case 'svg':\n      return (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_0__.localize)('Options & Multipliers');\n    case 'maltainvest':\n      return (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_0__.localize)('Multipliers');\n    default:\n      return (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_0__.localize)('Deriv');\n  }\n};\n\n/**\n * @param {string} landing_company_shortcode\n *\n * @return {EXPERIAN.WARN|EXPERIAN.SUCCESS|EXPERIAN.DANGER}\n */\nconst getExperianResult = status => {\n  const {\n    landing_company_shortcode = ''\n  } = status;\n  if (landing_company_shortcode === 'svg') return EXPERIAN.SUCCESS;\n  return EXPERIAN.SUCCESS;\n};\nconst screen_height_sm_threshold = 930;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9BcHAvQ29udGFpbmVycy9SZWFsQWNjb3VudFNpZ251cC9oZWxwZXJzL2NvbnN0YW50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBRUE7QUFFQTtBQUNBO0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9BcHAvQ29udGFpbmVycy9SZWFsQWNjb3VudFNpZ251cC9oZWxwZXJzL2NvbnN0YW50cy5qcz9jNTUwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGxvY2FsaXplIH0gZnJvbSAnQGRlcml2L3RyYW5zbGF0aW9ucyc7XG5cbi8qKlxuICogRXhwZXJpYW4gcmVzdWx0IGlzIGRlZmluZWQgYnkgY2xpZW50J3MgaW5mb3JtYXRpb24gdmFsaWRpdHkuXG4gKiBEZWZpbmVzIHRoZSBwb3NzaWJsZSB0eXBlcyBvZiBhY3Rpb25zIG5lZWRlZCB0byB0YWtlIG9uIGV4cGVyaWFuIHJlc3VsdCByZXNwb25zZS5cbiAqXG4gKiBQb3NzaWJsZSB2YWx1ZXMgYXJlOlxuICogICAtIFN1Y2Nlc3M6IENsaWVudCBjYW4gdHJhZGVcbiAqICAgLSBXYXJuOiBQT0kvUE9BIFZhbGlkaXR5IHBhcnRpYWxseSBmYWlsZWQsIHRyYWRlIGluIGRlbW8gcG9zc2libGVcbiAqICAgLSBEYW5nZXI6IFBPSS9QT0EgdmFsaWRhdGlvbiBmYWlsZWQuIFRyYWRlIGlzIGxvY2tlZCB1bnRpbCB0aGlzIHJlc29sdmVkLlxuICogICAtIFBlbmRpbmc6IFBPSS9QT0EgaXMgaW4gcGVuZGluZyBzdGF0ZS5cbiAqIEBlbnVtIHtFWFBFUklBTn1cbiAqL1xuZXhwb3J0IGNvbnN0IEVYUEVSSUFOID0ge1xuICAgIFNVQ0NFU1M6IDEsXG4gICAgV0FSTjogMCxcbiAgICBEQU5HRVI6IC0xLFxuICAgIFBFTkRJTkc6IC0yLFxufTtcblxuLyoqXG4gKiBSZXR1cm4gYWNjb3VudCB0aXRsZSBmb3IgdGhlIGdpdmVuIGxhbmRpbmcgY29tcGFueVxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBsYW5kaW5nX2NvbXBhbnlfc2hvcnRjb2RlXG4gKiBAcmV0dXJuIHtzdHJpbmd9IGxvY2FsaXplZCB0aXRsZVxuICovXG5leHBvcnQgY29uc3QgZ2V0QWNjb3VudFRpdGxlID0gbGFuZGluZ19jb21wYW55X3Nob3J0Y29kZSA9PiB7XG4gICAgc3dpdGNoIChsYW5kaW5nX2NvbXBhbnlfc2hvcnRjb2RlKSB7XG4gICAgICAgIGNhc2UgJ3N2Zyc6XG4gICAgICAgICAgICByZXR1cm4gbG9jYWxpemUoJ09wdGlvbnMgJiBNdWx0aXBsaWVycycpO1xuICAgICAgICBjYXNlICdtYWx0YWludmVzdCc6XG4gICAgICAgICAgICByZXR1cm4gbG9jYWxpemUoJ011bHRpcGxpZXJzJyk7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gbG9jYWxpemUoJ0Rlcml2Jyk7XG4gICAgfVxufTtcblxuLyoqXG4gKiBAcGFyYW0ge3N0cmluZ30gbGFuZGluZ19jb21wYW55X3Nob3J0Y29kZVxuICpcbiAqIEByZXR1cm4ge0VYUEVSSUFOLldBUk58RVhQRVJJQU4uU1VDQ0VTU3xFWFBFUklBTi5EQU5HRVJ9XG4gKi9cbmV4cG9ydCBjb25zdCBnZXRFeHBlcmlhblJlc3VsdCA9IHN0YXR1cyA9PiB7XG4gICAgY29uc3QgeyBsYW5kaW5nX2NvbXBhbnlfc2hvcnRjb2RlID0gJycgfSA9IHN0YXR1cztcblxuICAgIGlmIChsYW5kaW5nX2NvbXBhbnlfc2hvcnRjb2RlID09PSAnc3ZnJykgcmV0dXJuIEVYUEVSSUFOLlNVQ0NFU1M7XG5cbiAgICByZXR1cm4gRVhQRVJJQU4uU1VDQ0VTUztcbn07XG5cbmV4cG9ydCBjb25zdCBzY3JlZW5faGVpZ2h0X3NtX3RocmVzaG9sZCA9IDkzMDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./App/Containers/RealAccountSignup/helpers/constants.js\n"
                );

                /***/
            },

        /***/ './App/Containers/RealAccountSignup/helpers/dialog-buttons.jsx':
            /*!*********************************************************************!*\
  !*** ./App/Containers/RealAccountSignup/helpers/dialog-buttons.jsx ***!
  \*********************************************************************/
            /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DialogButtons: () => (/* binding */ DialogButtons)\n/* harmony export */ });\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! prop-types */ "../../../node_modules/prop-types/index.js");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "../../../node_modules/react/index.js");\n/* harmony import */ var _deriv_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @deriv/components */ "../../components/src/index.ts");\n/* harmony import */ var _deriv_translations__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @deriv/translations */ "../../translations/src/index.js");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./constants */ "./App/Containers/RealAccountSignup/helpers/constants.js");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react/jsx-runtime */ "../../../node_modules/react/jsx-runtime.js");\n\n\n\n\n\n\nconst getActionButton = _ref => {\n  let {\n    landing_company_shortcode,\n    is_fully_authenticated,\n    closeModalAndOpenCashier,\n    closeModalAndOpenPOI\n  } = _ref;\n  switch (landing_company_shortcode) {\n    case \'maltainvest\':\n      if (is_fully_authenticated) {\n        return {\n          label: (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_2__.localize)(\'Deposit\'),\n          action: closeModalAndOpenCashier\n        };\n      }\n      return {\n        label: (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_2__.localize)(\'Submit proof\'),\n        action: closeModalAndOpenPOI\n      };\n    case \'svg\':\n    default:\n      return {\n        label: (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_2__.localize)(\'Deposit\'),\n        action: closeModalAndOpenCashier\n      };\n  }\n};\nconst DialogPrimaryButton = _ref2 => {\n  let {\n    status,\n    landing_company_shortcode,\n    closeModal,\n    closeModalAndOpenCashier,\n    closeModalAndOpenPOI,\n    closeModalAndOpenPOA,\n    is_fully_authenticated\n  } = _ref2;\n  // Check if the button is necessary\n  // Fetch proper action from store based on status + landing_company_shortcode\n  const {\n    label,\n    action\n  } = getActionButton({\n    status,\n    landing_company_shortcode,\n    is_fully_authenticated,\n    closeModal,\n    closeModalAndOpenCashier,\n    closeModalAndOpenPOI,\n    closeModalAndOpenPOA\n  });\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_1__.Button, {\n    primary: true,\n    text: label,\n    onClick: action\n  });\n};\nconst DialogDismissButton = _ref3 => {\n  let {\n    closeModal,\n    is_bypassed\n  } = _ref3;\n  if (is_bypassed) return null;\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_1__.Button, {\n    secondary: true,\n    text: (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_2__.localize)(\'Maybe later\'),\n    onClick: closeModal\n  });\n};\nconst DialogButtons = _ref4 => {\n  let {\n    status,\n    landing_company_shortcode,\n    is_fully_authenticated,\n    closeModal,\n    closeModalAndOpenCashier,\n    closeModalAndOpenPOA,\n    closeModalAndOpenPOI\n  } = _ref4;\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)("div", {\n    className: "status-dialog__footer",\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(DialogDismissButton, {\n      closeModal: closeModal,\n      is_bypassed: status === _constants__WEBPACK_IMPORTED_MODULE_3__.EXPERIAN.PENDING\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(DialogPrimaryButton, {\n      status: status,\n      landing_company_shortcode: landing_company_shortcode,\n      closeModal: closeModal,\n      closeModalAndOpenCashier: closeModalAndOpenCashier,\n      closeModalAndOpenPOI: closeModalAndOpenPOI,\n      closeModalAndOpenPOA: closeModalAndOpenPOA,\n      is_fully_authenticated: is_fully_authenticated\n    })]\n  });\n};\nDialogButtons.propTypes = {\n  status: (prop_types__WEBPACK_IMPORTED_MODULE_5___default().number),\n  landing_company_shortcode: (prop_types__WEBPACK_IMPORTED_MODULE_5___default().string),\n  is_fully_authenticated: (prop_types__WEBPACK_IMPORTED_MODULE_5___default().bool),\n  closeModal: (prop_types__WEBPACK_IMPORTED_MODULE_5___default().func),\n  closeModalAndOpenCashier: (prop_types__WEBPACK_IMPORTED_MODULE_5___default().func),\n  closeModalAndOpenPOA: (prop_types__WEBPACK_IMPORTED_MODULE_5___default().func),\n  closeModalAndOpenPOI: (prop_types__WEBPACK_IMPORTED_MODULE_5___default().func)\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9BcHAvQ29udGFpbmVycy9SZWFsQWNjb3VudFNpZ251cC9oZWxwZXJzL2RpYWxvZy1idXR0b25zLmpzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUVBO0FBS0E7QUFKQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBUUE7QUFQQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUVBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUVBO0FBUUE7QUFQQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBR0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9BcHAvQ29udGFpbmVycy9SZWFsQWNjb3VudFNpZ251cC9oZWxwZXJzL2RpYWxvZy1idXR0b25zLmpzeD8zMWY0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgQnV0dG9uIH0gZnJvbSAnQGRlcml2L2NvbXBvbmVudHMnO1xuaW1wb3J0IHsgbG9jYWxpemUgfSBmcm9tICdAZGVyaXYvdHJhbnNsYXRpb25zJztcbmltcG9ydCB7IEVYUEVSSUFOIH0gZnJvbSAnLi9jb25zdGFudHMnO1xuXG5jb25zdCBnZXRBY3Rpb25CdXR0b24gPSAoe1xuICAgIGxhbmRpbmdfY29tcGFueV9zaG9ydGNvZGUsXG4gICAgaXNfZnVsbHlfYXV0aGVudGljYXRlZCxcbiAgICBjbG9zZU1vZGFsQW5kT3BlbkNhc2hpZXIsXG4gICAgY2xvc2VNb2RhbEFuZE9wZW5QT0ksXG59KSA9PiB7XG4gICAgc3dpdGNoIChsYW5kaW5nX2NvbXBhbnlfc2hvcnRjb2RlKSB7XG4gICAgICAgIGNhc2UgJ21hbHRhaW52ZXN0JzpcbiAgICAgICAgICAgIGlmIChpc19mdWxseV9hdXRoZW50aWNhdGVkKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgbGFiZWw6IGxvY2FsaXplKCdEZXBvc2l0JyksXG4gICAgICAgICAgICAgICAgICAgIGFjdGlvbjogY2xvc2VNb2RhbEFuZE9wZW5DYXNoaWVyLFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIGxhYmVsOiBsb2NhbGl6ZSgnU3VibWl0IHByb29mJyksXG4gICAgICAgICAgICAgICAgYWN0aW9uOiBjbG9zZU1vZGFsQW5kT3BlblBPSSxcbiAgICAgICAgICAgIH07XG4gICAgICAgIGNhc2UgJ3N2Zyc6XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIGxhYmVsOiBsb2NhbGl6ZSgnRGVwb3NpdCcpLFxuICAgICAgICAgICAgICAgIGFjdGlvbjogY2xvc2VNb2RhbEFuZE9wZW5DYXNoaWVyLFxuICAgICAgICAgICAgfTtcbiAgICB9XG59O1xuY29uc3QgRGlhbG9nUHJpbWFyeUJ1dHRvbiA9ICh7XG4gICAgc3RhdHVzLFxuICAgIGxhbmRpbmdfY29tcGFueV9zaG9ydGNvZGUsXG4gICAgY2xvc2VNb2RhbCxcbiAgICBjbG9zZU1vZGFsQW5kT3BlbkNhc2hpZXIsXG4gICAgY2xvc2VNb2RhbEFuZE9wZW5QT0ksXG4gICAgY2xvc2VNb2RhbEFuZE9wZW5QT0EsXG4gICAgaXNfZnVsbHlfYXV0aGVudGljYXRlZCxcbn0pID0+IHtcbiAgICAvLyBDaGVjayBpZiB0aGUgYnV0dG9uIGlzIG5lY2Vzc2FyeVxuICAgIC8vIEZldGNoIHByb3BlciBhY3Rpb24gZnJvbSBzdG9yZSBiYXNlZCBvbiBzdGF0dXMgKyBsYW5kaW5nX2NvbXBhbnlfc2hvcnRjb2RlXG4gICAgY29uc3QgeyBsYWJlbCwgYWN0aW9uIH0gPSBnZXRBY3Rpb25CdXR0b24oe1xuICAgICAgICBzdGF0dXMsXG4gICAgICAgIGxhbmRpbmdfY29tcGFueV9zaG9ydGNvZGUsXG4gICAgICAgIGlzX2Z1bGx5X2F1dGhlbnRpY2F0ZWQsXG4gICAgICAgIGNsb3NlTW9kYWwsXG4gICAgICAgIGNsb3NlTW9kYWxBbmRPcGVuQ2FzaGllcixcbiAgICAgICAgY2xvc2VNb2RhbEFuZE9wZW5QT0ksXG4gICAgICAgIGNsb3NlTW9kYWxBbmRPcGVuUE9BLFxuICAgIH0pO1xuXG4gICAgcmV0dXJuIDxCdXR0b24gcHJpbWFyeSB0ZXh0PXtsYWJlbH0gb25DbGljaz17YWN0aW9ufSAvPjtcbn07XG5jb25zdCBEaWFsb2dEaXNtaXNzQnV0dG9uID0gKHsgY2xvc2VNb2RhbCwgaXNfYnlwYXNzZWQgfSkgPT4ge1xuICAgIGlmIChpc19ieXBhc3NlZCkgcmV0dXJuIG51bGw7XG5cbiAgICByZXR1cm4gPEJ1dHRvbiBzZWNvbmRhcnkgdGV4dD17bG9jYWxpemUoJ01heWJlIGxhdGVyJyl9IG9uQ2xpY2s9e2Nsb3NlTW9kYWx9IC8+O1xufTtcblxuZXhwb3J0IGNvbnN0IERpYWxvZ0J1dHRvbnMgPSAoe1xuICAgIHN0YXR1cyxcbiAgICBsYW5kaW5nX2NvbXBhbnlfc2hvcnRjb2RlLFxuICAgIGlzX2Z1bGx5X2F1dGhlbnRpY2F0ZWQsXG4gICAgY2xvc2VNb2RhbCxcbiAgICBjbG9zZU1vZGFsQW5kT3BlbkNhc2hpZXIsXG4gICAgY2xvc2VNb2RhbEFuZE9wZW5QT0EsXG4gICAgY2xvc2VNb2RhbEFuZE9wZW5QT0ksXG59KSA9PiB7XG4gICAgcmV0dXJuIChcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9J3N0YXR1cy1kaWFsb2dfX2Zvb3Rlcic+XG4gICAgICAgICAgICA8RGlhbG9nRGlzbWlzc0J1dHRvbiBjbG9zZU1vZGFsPXtjbG9zZU1vZGFsfSBpc19ieXBhc3NlZD17c3RhdHVzID09PSBFWFBFUklBTi5QRU5ESU5HfSAvPlxuICAgICAgICAgICAgPERpYWxvZ1ByaW1hcnlCdXR0b25cbiAgICAgICAgICAgICAgICBzdGF0dXM9e3N0YXR1c31cbiAgICAgICAgICAgICAgICBsYW5kaW5nX2NvbXBhbnlfc2hvcnRjb2RlPXtsYW5kaW5nX2NvbXBhbnlfc2hvcnRjb2RlfVxuICAgICAgICAgICAgICAgIGNsb3NlTW9kYWw9e2Nsb3NlTW9kYWx9XG4gICAgICAgICAgICAgICAgY2xvc2VNb2RhbEFuZE9wZW5DYXNoaWVyPXtjbG9zZU1vZGFsQW5kT3BlbkNhc2hpZXJ9XG4gICAgICAgICAgICAgICAgY2xvc2VNb2RhbEFuZE9wZW5QT0k9e2Nsb3NlTW9kYWxBbmRPcGVuUE9JfVxuICAgICAgICAgICAgICAgIGNsb3NlTW9kYWxBbmRPcGVuUE9BPXtjbG9zZU1vZGFsQW5kT3BlblBPQX1cbiAgICAgICAgICAgICAgICBpc19mdWxseV9hdXRoZW50aWNhdGVkPXtpc19mdWxseV9hdXRoZW50aWNhdGVkfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgPC9kaXY+XG4gICAgKTtcbn07XG5cbkRpYWxvZ0J1dHRvbnMucHJvcFR5cGVzID0ge1xuICAgIHN0YXR1czogUHJvcFR5cGVzLm51bWJlcixcbiAgICBsYW5kaW5nX2NvbXBhbnlfc2hvcnRjb2RlOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGlzX2Z1bGx5X2F1dGhlbnRpY2F0ZWQ6IFByb3BUeXBlcy5ib29sLFxuICAgIGNsb3NlTW9kYWw6IFByb3BUeXBlcy5mdW5jLFxuICAgIGNsb3NlTW9kYWxBbmRPcGVuQ2FzaGllcjogUHJvcFR5cGVzLmZ1bmMsXG4gICAgY2xvc2VNb2RhbEFuZE9wZW5QT0E6IFByb3BUeXBlcy5mdW5jLFxuICAgIGNsb3NlTW9kYWxBbmRPcGVuUE9JOiBQcm9wVHlwZXMuZnVuYyxcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./App/Containers/RealAccountSignup/helpers/dialog-buttons.jsx\n'
                );

                /***/
            },

        /***/ './App/Containers/RealAccountSignup/helpers/dialog-heading.jsx':
            /*!*********************************************************************!*\
  !*** ./App/Containers/RealAccountSignup/helpers/dialog-heading.jsx ***!
  \*********************************************************************/
            /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DialogHeading: () => (/* binding */ DialogHeading)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "../../../node_modules/react/index.js");\n/* harmony import */ var _deriv_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @deriv/components */ "../../components/src/index.ts");\n/* harmony import */ var _deriv_translations__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @deriv/translations */ "../../translations/src/index.js");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react/jsx-runtime */ "../../../node_modules/react/jsx-runtime.js");\n\n\n\n\nconst DialogHeading = () => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_1__.Text, {\n  as: "h2",\n  align: "center",\n  className: "status-dialog__message-header",\n  weight: "bold",\n  children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_deriv_translations__WEBPACK_IMPORTED_MODULE_2__.Localize, {\n    i18n_default_text: "Your account is ready"\n  })\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9BcHAvQ29udGFpbmVycy9SZWFsQWNjb3VudFNpZ251cC9oZWxwZXJzL2RpYWxvZy1oZWFkaW5nLmpzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBRUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vQXBwL0NvbnRhaW5lcnMvUmVhbEFjY291bnRTaWdudXAvaGVscGVycy9kaWFsb2ctaGVhZGluZy5qc3g/ZTk5ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgVGV4dCB9IGZyb20gJ0BkZXJpdi9jb21wb25lbnRzJztcbmltcG9ydCB7IExvY2FsaXplIH0gZnJvbSAnQGRlcml2L3RyYW5zbGF0aW9ucyc7XG5cbmV4cG9ydCBjb25zdCBEaWFsb2dIZWFkaW5nID0gKCkgPT4gKFxuICAgIDxUZXh0IGFzPSdoMicgYWxpZ249J2NlbnRlcicgY2xhc3NOYW1lPSdzdGF0dXMtZGlhbG9nX19tZXNzYWdlLWhlYWRlcicgd2VpZ2h0PSdib2xkJz5cbiAgICAgICAgPExvY2FsaXplIGkxOG5fZGVmYXVsdF90ZXh0PSdZb3VyIGFjY291bnQgaXMgcmVhZHknIC8+XG4gICAgPC9UZXh0PlxuKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./App/Containers/RealAccountSignup/helpers/dialog-heading.jsx\n'
                );

                /***/
            },

        /***/ './App/Containers/RealAccountSignup/helpers/dialog-message.jsx':
            /*!*********************************************************************!*\
  !*** ./App/Containers/RealAccountSignup/helpers/dialog-message.jsx ***!
  \*********************************************************************/
            /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DialogMessage: () => (/* binding */ DialogMessage)\n/* harmony export */ });\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! prop-types */ "../../../node_modules/prop-types/index.js");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "../../../node_modules/react/index.js");\n/* harmony import */ var _deriv_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @deriv/components */ "../../components/src/index.ts");\n/* harmony import */ var _deriv_translations__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @deriv/translations */ "../../translations/src/index.js");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./constants */ "./App/Containers/RealAccountSignup/helpers/constants.js");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react/jsx-runtime */ "../../../node_modules/react/jsx-runtime.js");\n\n\n\n\n\n\n/**\n *\n * @param {String} landing_company_shortcode\n * @param {EXPERIAN} status\n */\n\nconst DialogMessage = _ref => {\n  let {\n    is_fully_authenticated,\n    landing_company_shortcode,\n    status = _constants__WEBPACK_IMPORTED_MODULE_3__.EXPERIAN.SUCCESS\n  } = _ref;\n  let message = \'\';\n  if (landing_company_shortcode === \'maltainvest\') {\n    if (is_fully_authenticated) {\n      message = [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_deriv_translations__WEBPACK_IMPORTED_MODULE_2__.Localize, {\n        i18n_default_text: "You have added a Deriv Financial account."\n      }, 0), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_deriv_translations__WEBPACK_IMPORTED_MODULE_2__.Localize, {\n        i18n_default_text: "Make a deposit now to start trading."\n      }, 1)];\n    } else {\n      message = /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_deriv_translations__WEBPACK_IMPORTED_MODULE_2__.Localize, {\n        i18n_default_text: "We need proof of your identity and address before you can start trading."\n      });\n    }\n  } else {\n    switch (status) {\n      case _constants__WEBPACK_IMPORTED_MODULE_3__.EXPERIAN.WARN:\n        message = /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_deriv_translations__WEBPACK_IMPORTED_MODULE_2__.Localize, {\n          i18n_default_text: "To get trading, please confirm where you live."\n        });\n        break;\n      case _constants__WEBPACK_IMPORTED_MODULE_3__.EXPERIAN.DANGER:\n        message = /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_deriv_translations__WEBPACK_IMPORTED_MODULE_2__.Localize, {\n          i18n_default_text: "To get trading, please confirm who you are, and where you live."\n        });\n        break;\n      case _constants__WEBPACK_IMPORTED_MODULE_3__.EXPERIAN.PENDING:\n        message = /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_deriv_translations__WEBPACK_IMPORTED_MODULE_2__.Localize, {\n          i18n_default_text: "You\'ll be able to get trading as soon as verification is complete."\n        });\n        break;\n      default:\n        message = /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_deriv_translations__WEBPACK_IMPORTED_MODULE_2__.Localize, {\n          i18n_default_text: "Fund your account to start trading."\n        });\n    }\n  }\n  return Array.isArray(message) ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.Fragment, {\n    children: message.map((text, index) => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_1__.Text, {\n      as: "p",\n      align: "center",\n      className: "status-dialog__message-text",\n      color: "general",\n      size: "xs",\n      children: text\n    }, index))\n  }) : /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_1__.Text, {\n    as: "p",\n    align: "center",\n    className: "status-dialog__message-text",\n    color: "general",\n    size: "xs",\n    children: message\n  });\n};\nDialogMessage.propTypes = {\n  is_fully_authenticated: (prop_types__WEBPACK_IMPORTED_MODULE_5___default().bool),\n  landing_company_shortcode: (prop_types__WEBPACK_IMPORTED_MODULE_5___default().string),\n  status: (prop_types__WEBPACK_IMPORTED_MODULE_5___default().number)\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9BcHAvQ29udGFpbmVycy9SZWFsQWNjb3VudFNpZ251cC9oZWxwZXJzL2RpYWxvZy1tZXNzYWdlLmpzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUpBO0FBS0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUVBO0FBQ0E7QUFDQTtBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUVBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUVBO0FBRUE7QUFHQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUdBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL0FwcC9Db250YWluZXJzL1JlYWxBY2NvdW50U2lnbnVwL2hlbHBlcnMvZGlhbG9nLW1lc3NhZ2UuanN4PzJkNjAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBUZXh0IH0gZnJvbSAnQGRlcml2L2NvbXBvbmVudHMnO1xuaW1wb3J0IHsgTG9jYWxpemUgfSBmcm9tICdAZGVyaXYvdHJhbnNsYXRpb25zJztcbmltcG9ydCB7IEVYUEVSSUFOIH0gZnJvbSAnLi9jb25zdGFudHMnO1xuXG4vKipcbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gbGFuZGluZ19jb21wYW55X3Nob3J0Y29kZVxuICogQHBhcmFtIHtFWFBFUklBTn0gc3RhdHVzXG4gKi9cbmV4cG9ydCBjb25zdCBEaWFsb2dNZXNzYWdlID0gKHsgaXNfZnVsbHlfYXV0aGVudGljYXRlZCwgbGFuZGluZ19jb21wYW55X3Nob3J0Y29kZSwgc3RhdHVzID0gRVhQRVJJQU4uU1VDQ0VTUyB9KSA9PiB7XG4gICAgbGV0IG1lc3NhZ2UgPSAnJztcbiAgICBpZiAobGFuZGluZ19jb21wYW55X3Nob3J0Y29kZSA9PT0gJ21hbHRhaW52ZXN0Jykge1xuICAgICAgICBpZiAoaXNfZnVsbHlfYXV0aGVudGljYXRlZCkge1xuICAgICAgICAgICAgbWVzc2FnZSA9IFtcbiAgICAgICAgICAgICAgICA8TG9jYWxpemUga2V5PXswfSBpMThuX2RlZmF1bHRfdGV4dD0nWW91IGhhdmUgYWRkZWQgYSBEZXJpdiBGaW5hbmNpYWwgYWNjb3VudC4nIC8+LFxuICAgICAgICAgICAgICAgIDxMb2NhbGl6ZSBrZXk9ezF9IGkxOG5fZGVmYXVsdF90ZXh0PSdNYWtlIGEgZGVwb3NpdCBub3cgdG8gc3RhcnQgdHJhZGluZy4nIC8+LFxuICAgICAgICAgICAgXTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIG1lc3NhZ2UgPSAoXG4gICAgICAgICAgICAgICAgPExvY2FsaXplIGkxOG5fZGVmYXVsdF90ZXh0PSdXZSBuZWVkIHByb29mIG9mIHlvdXIgaWRlbnRpdHkgYW5kIGFkZHJlc3MgYmVmb3JlIHlvdSBjYW4gc3RhcnQgdHJhZGluZy4nIC8+XG4gICAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgICAgc3dpdGNoIChzdGF0dXMpIHtcbiAgICAgICAgICAgIGNhc2UgRVhQRVJJQU4uV0FSTjpcbiAgICAgICAgICAgICAgICBtZXNzYWdlID0gPExvY2FsaXplIGkxOG5fZGVmYXVsdF90ZXh0PSdUbyBnZXQgdHJhZGluZywgcGxlYXNlIGNvbmZpcm0gd2hlcmUgeW91IGxpdmUuJyAvPjtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgRVhQRVJJQU4uREFOR0VSOlxuICAgICAgICAgICAgICAgIG1lc3NhZ2UgPSAoXG4gICAgICAgICAgICAgICAgICAgIDxMb2NhbGl6ZSBpMThuX2RlZmF1bHRfdGV4dD0nVG8gZ2V0IHRyYWRpbmcsIHBsZWFzZSBjb25maXJtIHdobyB5b3UgYXJlLCBhbmQgd2hlcmUgeW91IGxpdmUuJyAvPlxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIEVYUEVSSUFOLlBFTkRJTkc6XG4gICAgICAgICAgICAgICAgbWVzc2FnZSA9IChcbiAgICAgICAgICAgICAgICAgICAgPExvY2FsaXplIGkxOG5fZGVmYXVsdF90ZXh0PVwiWW91J2xsIGJlIGFibGUgdG8gZ2V0IHRyYWRpbmcgYXMgc29vbiBhcyB2ZXJpZmljYXRpb24gaXMgY29tcGxldGUuXCIgLz5cbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICBtZXNzYWdlID0gPExvY2FsaXplIGkxOG5fZGVmYXVsdF90ZXh0PSdGdW5kIHlvdXIgYWNjb3VudCB0byBzdGFydCB0cmFkaW5nLicgLz47XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gQXJyYXkuaXNBcnJheShtZXNzYWdlKSA/IChcbiAgICAgICAgPD5cbiAgICAgICAgICAgIHttZXNzYWdlLm1hcCgodGV4dCwgaW5kZXgpID0+IChcbiAgICAgICAgICAgICAgICA8VGV4dFxuICAgICAgICAgICAgICAgICAgICBrZXk9e2luZGV4fVxuICAgICAgICAgICAgICAgICAgICBhcz0ncCdcbiAgICAgICAgICAgICAgICAgICAgYWxpZ249J2NlbnRlcidcbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPSdzdGF0dXMtZGlhbG9nX19tZXNzYWdlLXRleHQnXG4gICAgICAgICAgICAgICAgICAgIGNvbG9yPSdnZW5lcmFsJ1xuICAgICAgICAgICAgICAgICAgICBzaXplPSd4cydcbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgIHt0ZXh0fVxuICAgICAgICAgICAgICAgIDwvVGV4dD5cbiAgICAgICAgICAgICkpfVxuICAgICAgICA8Lz5cbiAgICApIDogKFxuICAgICAgICA8VGV4dCBhcz0ncCcgYWxpZ249J2NlbnRlcicgY2xhc3NOYW1lPSdzdGF0dXMtZGlhbG9nX19tZXNzYWdlLXRleHQnIGNvbG9yPSdnZW5lcmFsJyBzaXplPSd4cyc+XG4gICAgICAgICAgICB7bWVzc2FnZX1cbiAgICAgICAgPC9UZXh0PlxuICAgICk7XG59O1xuXG5EaWFsb2dNZXNzYWdlLnByb3BUeXBlcyA9IHtcbiAgICBpc19mdWxseV9hdXRoZW50aWNhdGVkOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBsYW5kaW5nX2NvbXBhbnlfc2hvcnRjb2RlOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIHN0YXR1czogUHJvcFR5cGVzLm51bWJlcixcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./App/Containers/RealAccountSignup/helpers/dialog-message.jsx\n'
                );

                /***/
            },

        /***/ './App/Containers/RealAccountSignup/index.js':
            /*!***************************************************!*\
  !*** ./App/Containers/RealAccountSignup/index.js ***!
  \***************************************************/
            /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _real_account_signup_jsx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./real-account-signup.jsx */ "./App/Containers/RealAccountSignup/real-account-signup.jsx");\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_real_account_signup_jsx__WEBPACK_IMPORTED_MODULE_0__["default"]);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9BcHAvQ29udGFpbmVycy9SZWFsQWNjb3VudFNpZ251cC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9BcHAvQ29udGFpbmVycy9SZWFsQWNjb3VudFNpZ251cC9pbmRleC5qcz8xNjUxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFsQWNjb3VudFNpZ251cCBmcm9tICcuL3JlYWwtYWNjb3VudC1zaWdudXAuanN4JztcblxuZXhwb3J0IGRlZmF1bHQgUmVhbEFjY291bnRTaWdudXA7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./App/Containers/RealAccountSignup/index.js\n'
                );

                /***/
            },

        /***/ './App/Containers/RealAccountSignup/new-status-dialog-container.jsx':
            /*!**************************************************************************!*\
  !*** ./App/Containers/RealAccountSignup/new-status-dialog-container.jsx ***!
  \**************************************************************************/
            /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "../../../node_modules/react/index.js");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! prop-types */ "../../../node_modules/prop-types/index.js");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! react-router-dom */ "../../../node_modules/react-router/esm/react-router.js");\n/* harmony import */ var _deriv_com_ui__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @deriv-com/ui */ "../../../node_modules/@deriv-com/ui/dist/hooks/useDevice.js");\n/* harmony import */ var _deriv_translations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @deriv/translations */ "../../translations/src/index.js");\n/* harmony import */ var _deriv_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @deriv/components */ "../../components/src/index.ts");\n/* harmony import */ var _deriv_stores__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @deriv/stores */ "../../../node_modules/mobx-react-lite/es/index.js");\n/* harmony import */ var _deriv_stores__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @deriv/stores */ "../../stores/src/useStore.ts");\n/* harmony import */ var _helpers_constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./helpers/constants */ "./App/Containers/RealAccountSignup/helpers/constants.js");\n/* harmony import */ var _new_status_dialog_container_scss__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./new-status-dialog-container.scss */ "./App/Containers/RealAccountSignup/new-status-dialog-container.scss");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react/jsx-runtime */ "../../../node_modules/react/jsx-runtime.js");\n\n\n\n\n\n\n\n\n\n\nconst StatusIcon = _ref => {\n  let {\n    icon,\n    color\n  } = _ref;\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.Icon, {\n    className: "status-container__body-status-icon",\n    icon: icon,\n    color: color,\n    size: 32\n  });\n};\nconst NewStatusDialogContainer = (0,_deriv_stores__WEBPACK_IMPORTED_MODULE_6__.observer)(_ref2 => {\n  let {\n    closeModal,\n    currency\n  } = _ref2;\n  const {\n    isDesktop\n  } = (0,_deriv_com_ui__WEBPACK_IMPORTED_MODULE_7__.useDevice)();\n  const {\n    client,\n    ui\n  } = (0,_deriv_stores__WEBPACK_IMPORTED_MODULE_8__["default"])();\n  const {\n    landing_company_shortcode\n  } = client;\n  const {\n    setShouldShowOneTimeDepositModal\n  } = ui;\n  const onOpenDepositModal = () => {\n    closeModal();\n    setShouldShowOneTimeDepositModal(true);\n  };\n\n  /**\n   * Get the status for the current account\n   *\n   * @readonly\n   * @return {EXPERIAN} status\n   */\n  const getStatus = () => (0,_helpers_constants__WEBPACK_IMPORTED_MODULE_3__.getExperianResult)({\n    landing_company_shortcode\n  });\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.Div100vhContainer, {\n    className: "status-container",\n    is_disabled: isDesktop,\n    height_offset: "40px",\n    children: [isDesktop && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("div", {\n      onClick: closeModal,\n      className: "status-container__header",\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.Icon, {\n        icon: "IcCross"\n      })\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)("div", {\n      className: "status-container__body",\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)("div", {\n        className: "status-container__body-icon",\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.Icon, {\n          icon: `IcCurrency-${currency.toLowerCase()}`,\n          size: 96\n        }), getStatus() === _helpers_constants__WEBPACK_IMPORTED_MODULE_3__.EXPERIAN.SUCCESS && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(StatusIcon, {\n          icon: "IcCheckmarkCircle",\n          color: "green"\n        }), getStatus() === _helpers_constants__WEBPACK_IMPORTED_MODULE_3__.EXPERIAN.WARN && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(StatusIcon, {\n          icon: "IcAlertDanger"\n        }), getStatus() === _helpers_constants__WEBPACK_IMPORTED_MODULE_3__.EXPERIAN.DANGER && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(StatusIcon, {\n          icon: "IcCrossCircle",\n          color: "red"\n        })]\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.Text, {\n        className: "status-container__body-text",\n        as: "h2",\n        align: "center",\n        weight: "bold",\n        size: "s",\n        line_height: "m",\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_deriv_translations__WEBPACK_IMPORTED_MODULE_1__.Localize, {\n          i18n_default_text: "Deposit now to start trading"\n        })\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.Text, {\n        as: "p",\n        align: "center",\n        size: "xs",\n        line_height: "sm",\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_deriv_translations__WEBPACK_IMPORTED_MODULE_1__.Localize, {\n          i18n_default_text: "Your {{ currency }} account is ready.",\n          values: {\n            currency\n          }\n        })\n      })]\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)("div", {\n      className: "status-container__footer",\n      children: [getStatus() !== _helpers_constants__WEBPACK_IMPORTED_MODULE_3__.EXPERIAN.PENDING && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.Button, {\n        secondary: true,\n        text: (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_1__.localize)(\'Maybe later\'),\n        wide: !isDesktop,\n        onClick: closeModal\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.Button, {\n        className: "status-container__button",\n        primary: true,\n        text: (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_1__.localize)(\'Deposit\'),\n        onClick: onOpenDepositModal,\n        wide: !isDesktop\n      })]\n    })]\n  });\n});\nNewStatusDialogContainer.propTypes = {\n  closeModal: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().func),\n  currency: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().string),\n  closeModalAndOpenDeposit: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().func)\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,react_router_dom__WEBPACK_IMPORTED_MODULE_10__.withRouter)(NewStatusDialogContainer));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9BcHAvQ29udGFpbmVycy9SZWFsQWNjb3VudFNpZ251cC9uZXctc3RhdHVzLWRpYWxvZy1jb250YWluZXIuanN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUVBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUdBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFFQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFJQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBRUE7QUFBQTtBQUFBO0FBR0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBR0E7QUFBQTtBQUVBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBR0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9BcHAvQ29udGFpbmVycy9SZWFsQWNjb3VudFNpZ251cC9uZXctc3RhdHVzLWRpYWxvZy1jb250YWluZXIuanN4P2RhN2EiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyB3aXRoUm91dGVyIH0gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSc7XG5pbXBvcnQgeyB1c2VEZXZpY2UgfSBmcm9tICdAZGVyaXYtY29tL3VpJztcbmltcG9ydCB7IGxvY2FsaXplLCBMb2NhbGl6ZSB9IGZyb20gJ0BkZXJpdi90cmFuc2xhdGlvbnMnO1xuaW1wb3J0IHsgRGl2MTAwdmhDb250YWluZXIsIEljb24sIEJ1dHRvbiwgVGV4dCB9IGZyb20gJ0BkZXJpdi9jb21wb25lbnRzJztcbmltcG9ydCB7IG9ic2VydmVyLCB1c2VTdG9yZSB9IGZyb20gJ0BkZXJpdi9zdG9yZXMnO1xuaW1wb3J0IHsgRVhQRVJJQU4sIGdldEV4cGVyaWFuUmVzdWx0IH0gZnJvbSAnLi9oZWxwZXJzL2NvbnN0YW50cyc7XG5pbXBvcnQgJy4vbmV3LXN0YXR1cy1kaWFsb2ctY29udGFpbmVyLnNjc3MnO1xuXG5jb25zdCBTdGF0dXNJY29uID0gKHsgaWNvbiwgY29sb3IgfSkgPT4gKFxuICAgIDxJY29uIGNsYXNzTmFtZT0nc3RhdHVzLWNvbnRhaW5lcl9fYm9keS1zdGF0dXMtaWNvbicgaWNvbj17aWNvbn0gY29sb3I9e2NvbG9yfSBzaXplPXszMn0gLz5cbik7XG5cbmNvbnN0IE5ld1N0YXR1c0RpYWxvZ0NvbnRhaW5lciA9IG9ic2VydmVyKCh7IGNsb3NlTW9kYWwsIGN1cnJlbmN5IH0pID0+IHtcbiAgICBjb25zdCB7IGlzRGVza3RvcCB9ID0gdXNlRGV2aWNlKCk7XG4gICAgY29uc3QgeyBjbGllbnQsIHVpIH0gPSB1c2VTdG9yZSgpO1xuICAgIGNvbnN0IHsgbGFuZGluZ19jb21wYW55X3Nob3J0Y29kZSB9ID0gY2xpZW50O1xuICAgIGNvbnN0IHsgc2V0U2hvdWxkU2hvd09uZVRpbWVEZXBvc2l0TW9kYWwgfSA9IHVpO1xuXG4gICAgY29uc3Qgb25PcGVuRGVwb3NpdE1vZGFsID0gKCkgPT4ge1xuICAgICAgICBjbG9zZU1vZGFsKCk7XG4gICAgICAgIHNldFNob3VsZFNob3dPbmVUaW1lRGVwb3NpdE1vZGFsKHRydWUpO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBHZXQgdGhlIHN0YXR1cyBmb3IgdGhlIGN1cnJlbnQgYWNjb3VudFxuICAgICAqXG4gICAgICogQHJlYWRvbmx5XG4gICAgICogQHJldHVybiB7RVhQRVJJQU59IHN0YXR1c1xuICAgICAqL1xuICAgIGNvbnN0IGdldFN0YXR1cyA9ICgpID0+XG4gICAgICAgIGdldEV4cGVyaWFuUmVzdWx0KHtcbiAgICAgICAgICAgIGxhbmRpbmdfY29tcGFueV9zaG9ydGNvZGUsXG4gICAgICAgIH0pO1xuXG4gICAgcmV0dXJuIChcbiAgICAgICAgPERpdjEwMHZoQ29udGFpbmVyIGNsYXNzTmFtZT0nc3RhdHVzLWNvbnRhaW5lcicgaXNfZGlzYWJsZWQ9e2lzRGVza3RvcH0gaGVpZ2h0X29mZnNldD0nNDBweCc+XG4gICAgICAgICAgICB7aXNEZXNrdG9wICYmIChcbiAgICAgICAgICAgICAgICA8ZGl2IG9uQ2xpY2s9e2Nsb3NlTW9kYWx9IGNsYXNzTmFtZT0nc3RhdHVzLWNvbnRhaW5lcl9faGVhZGVyJz5cbiAgICAgICAgICAgICAgICAgICAgPEljb24gaWNvbj0nSWNDcm9zcycgLz5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICl9XG5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdzdGF0dXMtY29udGFpbmVyX19ib2R5Jz5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nc3RhdHVzLWNvbnRhaW5lcl9fYm9keS1pY29uJz5cbiAgICAgICAgICAgICAgICAgICAgPEljb24gaWNvbj17YEljQ3VycmVuY3ktJHtjdXJyZW5jeS50b0xvd2VyQ2FzZSgpfWB9IHNpemU9ezk2fSAvPlxuICAgICAgICAgICAgICAgICAgICB7Z2V0U3RhdHVzKCkgPT09IEVYUEVSSUFOLlNVQ0NFU1MgJiYgPFN0YXR1c0ljb24gaWNvbj0nSWNDaGVja21hcmtDaXJjbGUnIGNvbG9yPSdncmVlbicgLz59XG4gICAgICAgICAgICAgICAgICAgIHtnZXRTdGF0dXMoKSA9PT0gRVhQRVJJQU4uV0FSTiAmJiA8U3RhdHVzSWNvbiBpY29uPSdJY0FsZXJ0RGFuZ2VyJyAvPn1cbiAgICAgICAgICAgICAgICAgICAge2dldFN0YXR1cygpID09PSBFWFBFUklBTi5EQU5HRVIgJiYgPFN0YXR1c0ljb24gaWNvbj0nSWNDcm9zc0NpcmNsZScgY29sb3I9J3JlZCcgLz59XG4gICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICA8VGV4dFxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9J3N0YXR1cy1jb250YWluZXJfX2JvZHktdGV4dCdcbiAgICAgICAgICAgICAgICAgICAgYXM9J2gyJ1xuICAgICAgICAgICAgICAgICAgICBhbGlnbj0nY2VudGVyJ1xuICAgICAgICAgICAgICAgICAgICB3ZWlnaHQ9J2JvbGQnXG4gICAgICAgICAgICAgICAgICAgIHNpemU9J3MnXG4gICAgICAgICAgICAgICAgICAgIGxpbmVfaGVpZ2h0PSdtJ1xuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgPExvY2FsaXplIGkxOG5fZGVmYXVsdF90ZXh0PSdEZXBvc2l0IG5vdyB0byBzdGFydCB0cmFkaW5nJyAvPlxuICAgICAgICAgICAgICAgIDwvVGV4dD5cblxuICAgICAgICAgICAgICAgIDxUZXh0IGFzPSdwJyBhbGlnbj0nY2VudGVyJyBzaXplPSd4cycgbGluZV9oZWlnaHQ9J3NtJz5cbiAgICAgICAgICAgICAgICAgICAgPExvY2FsaXplIGkxOG5fZGVmYXVsdF90ZXh0PSdZb3VyIHt7IGN1cnJlbmN5IH19IGFjY291bnQgaXMgcmVhZHkuJyB2YWx1ZXM9e3sgY3VycmVuY3kgfX0gLz5cbiAgICAgICAgICAgICAgICA8L1RleHQ+XG4gICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J3N0YXR1cy1jb250YWluZXJfX2Zvb3Rlcic+XG4gICAgICAgICAgICAgICAge2dldFN0YXR1cygpICE9PSBFWFBFUklBTi5QRU5ESU5HICYmIChcbiAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiBzZWNvbmRhcnkgdGV4dD17bG9jYWxpemUoJ01heWJlIGxhdGVyJyl9IHdpZGU9eyFpc0Rlc2t0b3B9IG9uQ2xpY2s9e2Nsb3NlTW9kYWx9IC8+XG4gICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICA8QnV0dG9uXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT0nc3RhdHVzLWNvbnRhaW5lcl9fYnV0dG9uJ1xuICAgICAgICAgICAgICAgICAgICBwcmltYXJ5XG4gICAgICAgICAgICAgICAgICAgIHRleHQ9e2xvY2FsaXplKCdEZXBvc2l0Jyl9XG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e29uT3BlbkRlcG9zaXRNb2RhbH1cbiAgICAgICAgICAgICAgICAgICAgd2lkZT17IWlzRGVza3RvcH1cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvRGl2MTAwdmhDb250YWluZXI+XG4gICAgKTtcbn0pO1xuXG5OZXdTdGF0dXNEaWFsb2dDb250YWluZXIucHJvcFR5cGVzID0ge1xuICAgIGNsb3NlTW9kYWw6IFByb3BUeXBlcy5mdW5jLFxuICAgIGN1cnJlbmN5OiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGNsb3NlTW9kYWxBbmRPcGVuRGVwb3NpdDogUHJvcFR5cGVzLmZ1bmMsXG59O1xuXG5leHBvcnQgZGVmYXVsdCB3aXRoUm91dGVyKE5ld1N0YXR1c0RpYWxvZ0NvbnRhaW5lcik7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./App/Containers/RealAccountSignup/new-status-dialog-container.jsx\n'
                );

                /***/
            },

        /***/ './App/Containers/RealAccountSignup/real-account-signup-loader.jsx':
            /*!*************************************************************************!*\
  !*** ./App/Containers/RealAccountSignup/real-account-signup-loader.jsx ***!
  \*************************************************************************/
            /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "../../../node_modules/react/index.js");\n/* harmony import */ var _deriv_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @deriv/components */ "../../components/src/index.ts");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-runtime */ "../../../node_modules/react/jsx-runtime.js");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }\nfunction _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }\n\n\n\nconst LoadingModal = props => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div", {\n  className: "account-signup-loader",\n  children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_1__.Loading, _objectSpread(_objectSpread({}, props), {}, {\n    is_fullscreen: false\n  }))\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (LoadingModal);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9BcHAvQ29udGFpbmVycy9SZWFsQWNjb3VudFNpZ251cC9yZWFsLWFjY291bnQtc2lnbnVwLWxvYWRlci5qc3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUFBO0FBRUE7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBSUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9BcHAvQ29udGFpbmVycy9SZWFsQWNjb3VudFNpZ251cC9yZWFsLWFjY291bnQtc2lnbnVwLWxvYWRlci5qc3g/ODQxOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgTG9hZGluZyB9IGZyb20gJ0BkZXJpdi9jb21wb25lbnRzJztcblxuY29uc3QgTG9hZGluZ01vZGFsID0gcHJvcHMgPT4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPSdhY2NvdW50LXNpZ251cC1sb2FkZXInPlxuICAgICAgICA8TG9hZGluZyB7Li4ucHJvcHN9IGlzX2Z1bGxzY3JlZW49e2ZhbHNlfSAvPlxuICAgIDwvZGl2PlxuKTtcblxuZXhwb3J0IGRlZmF1bHQgTG9hZGluZ01vZGFsO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./App/Containers/RealAccountSignup/real-account-signup-loader.jsx\n'
                );

                /***/
            },

        /***/ './App/Containers/RealAccountSignup/real-account-signup.jsx':
            /*!******************************************************************!*\
  !*** ./App/Containers/RealAccountSignup/real-account-signup.jsx ***!
  \******************************************************************/
            /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    "__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"../../../node_modules/react/index.js\");\n/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! react-router-dom */ \"../../../node_modules/react-router/esm/react-router.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! classnames */ \"../../../node_modules/classnames/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _deriv_com_ui__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @deriv-com/ui */ \"../../../node_modules/@deriv-com/ui/dist/hooks/useDevice.js\");\n/* harmony import */ var _deriv_account_dist_account_js_risk_tolerance_warning_modal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @deriv/account/dist/account/js/risk-tolerance-warning-modal */ \"../../account/dist/account/js/risk-tolerance-warning-modal.js\");\n/* harmony import */ var _deriv_account_dist_account_js_risk_tolerance_warning_modal__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_deriv_account_dist_account_js_risk_tolerance_warning_modal__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _deriv_account_dist_account_js_test_warning_modal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @deriv/account/dist/account/js/test-warning-modal */ \"../../account/dist/account/js/test-warning-modal.js\");\n/* harmony import */ var _deriv_account_dist_account_js_test_warning_modal__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_deriv_account_dist_account_js_test_warning_modal__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _deriv_components__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @deriv/components */ \"../../components/src/index.ts\");\n/* harmony import */ var _deriv_shared__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @deriv/shared */ \"../../shared/src/index.ts\");\n/* harmony import */ var _deriv_translations__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @deriv/translations */ \"../../translations/src/index.js\");\n/* harmony import */ var _deriv_stores__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @deriv/stores */ \"../../../node_modules/mobx-react-lite/es/index.js\");\n/* harmony import */ var _deriv_stores__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @deriv/stores */ \"../../stores/src/useStore.ts\");\n/* harmony import */ var _add_currency_jsx__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./add-currency.jsx */ \"./App/Containers/RealAccountSignup/add-currency.jsx\");\n/* harmony import */ var _add_or_manage_accounts_jsx__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./add-or-manage-accounts.jsx */ \"./App/Containers/RealAccountSignup/add-or-manage-accounts.jsx\");\n/* harmony import */ var _choose_currency_jsx__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./choose-currency.jsx */ \"./App/Containers/RealAccountSignup/choose-currency.jsx\");\n/* harmony import */ var _finished_add_currency_jsx__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./finished-add-currency.jsx */ \"./App/Containers/RealAccountSignup/finished-add-currency.jsx\");\n/* harmony import */ var _finished_set_currency_jsx__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./finished-set-currency.jsx */ \"./App/Containers/RealAccountSignup/finished-set-currency.jsx\");\n/* harmony import */ var _set_currency_jsx__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./set-currency.jsx */ \"./App/Containers/RealAccountSignup/set-currency.jsx\");\n/* harmony import */ var _signup_error_content_jsx__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./signup-error-content.jsx */ \"./App/Containers/RealAccountSignup/signup-error-content.jsx\");\n/* harmony import */ var _status_dialog_container_jsx__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./status-dialog-container.jsx */ \"./App/Containers/RealAccountSignup/status-dialog-container.jsx\");\n/* harmony import */ var _new_status_dialog_container_jsx__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./new-status-dialog-container.jsx */ \"./App/Containers/RealAccountSignup/new-status-dialog-container.jsx\");\n/* harmony import */ var _deriv_com_analytics__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @deriv-com/analytics */ \"../../../node_modules/@deriv-com/analytics/lib/index.js\");\n/* harmony import */ var Sass_account_wizard_scss__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! Sass/account-wizard.scss */ \"./sass/account-wizard.scss\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! react/jsx-runtime */ \"../../../node_modules/react/jsx-runtime.js\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n/* eslint-disable react/display-name */\n\n\n\n\n\n\n\n        \n\n\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst AccountWizard = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.lazy(() => (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_5__.moduleLoader)(() => Promise.all(/*! import() | account-wizard-modal */[__webpack_require__.e(\"vendors-node_modules_deriv_quill-icons_dist_esm_react_Illustration_DerivLightNameDobPoiIcon_j-c18b4f\"), __webpack_require__.e(\"default-account_src_Components_forms_idv-form_tsx-account_src_Components_forms_personal-detai-3930d4\"), __webpack_require__.e(\"account-wizard-modal\")]).then(__webpack_require__.bind(__webpack_require__, /*! ./account-wizard.jsx */ \"./App/Containers/RealAccountSignup/account-wizard.jsx\"))));\nconst modal_pages_indices = {\n  account_wizard: 0,\n  add_or_manage_account: 1,\n  finished_set_currency: 2,\n  status_dialog: 3,\n  new_status_dialog: 11,\n  set_currency: 4,\n  signup_error: 5,\n  choose_crypto_currency: 6,\n  add_currency: 7,\n  finished_add_currency: 8,\n  restricted_country_signup_error: 9,\n  invalid_input_error: 10\n};\nlet active_modal_index_no = 0;\nconst WizardHeading = _ref => {\n  let {\n    currency,\n    real_account_signup_target\n  } = _ref;\n  const maltainvest_signup = real_account_signup_target === 'maltainvest';\n  const deposit_cash_signup = real_account_signup_target === 'deposit_cash';\n  if (!maltainvest_signup && !currency || active_modal_index_no === modal_pages_indices.set_currency) {\n    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)(_deriv_translations__WEBPACK_IMPORTED_MODULE_6__.Localize, {\n      i18n_default_text: \"Set a currency for your real account\"\n    });\n  }\n  if (deposit_cash_signup) {\n    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)(_deriv_translations__WEBPACK_IMPORTED_MODULE_6__.Localize, {\n      i18n_default_text: \"Add a Deriv Gaming account\"\n    });\n  }\n  switch (real_account_signup_target) {\n    case 'maltainvest':\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)(_deriv_translations__WEBPACK_IMPORTED_MODULE_6__.Localize, {\n        i18n_default_text: \"Setup your account\"\n      });\n    default:\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)(_deriv_translations__WEBPACK_IMPORTED_MODULE_6__.Localize, {\n        i18n_default_text: \"Add a Deriv account\"\n      });\n  }\n};\nconst RealAccountSignup = (0,_deriv_stores__WEBPACK_IMPORTED_MODULE_19__.observer)(_ref2 => {\n  let {\n    history,\n    state_index,\n    is_trading_experience_incomplete\n  } = _ref2;\n  const {\n    isDesktop\n  } = (0,_deriv_com_ui__WEBPACK_IMPORTED_MODULE_20__.useDevice)();\n  const {\n    ui,\n    client,\n    traders_hub,\n    modules\n  } = (0,_deriv_stores__WEBPACK_IMPORTED_MODULE_21__[\"default\"])();\n  const {\n    available_crypto_currencies,\n    currency,\n    fetchAccountSettings,\n    has_fiat,\n    has_active_real_account: has_real_account,\n    is_from_restricted_country,\n    realAccountSignup,\n    redirectToLegacyPlatform\n  } = client;\n  const {\n    closeRealAccountSignup,\n    deposit_real_account_signup_target,\n    is_real_acc_signup_on,\n    real_account_signup_target,\n    setIsTradingAssessmentForNewUserEnabled,\n    setIsClosingCreateRealAccountModal,\n    setRealAccountSignupParams: setParams,\n    setShouldShowAppropriatenessWarningModal,\n    setShouldShowRiskWarningModal,\n    should_show_appropriateness_warning_modal,\n    should_show_risk_warning_modal,\n    setShouldShowOneTimeDepositModal,\n    toggleAccountSuccessModal,\n    real_account_signup: state_value,\n    is_trading_assessment_for_new_user_enabled\n  } = ui;\n  const {\n    show_eu_related_content\n  } = traders_hub;\n  const {\n    deposit_target,\n    setDepositTarget\n  } = modules.cashier.general_store;\n  const setIsDeposit = modules.cashier.general_store.setIsDeposit;\n  const should_show_all_available_currencies = modules.cashier.general_store.should_show_all_available_currencies;\n  const [current_action, setCurrentAction] = react__WEBPACK_IMPORTED_MODULE_0__.useState(null);\n  const [is_loading, setIsLoading] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n  const [error, setError] = react__WEBPACK_IMPORTED_MODULE_0__.useState(null);\n  const [is_risk_warning_visible, setIsRiskWarningVisible] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n  const [real_account_form_data, setRealAccountFormData] = react__WEBPACK_IMPORTED_MODULE_0__.useState({});\n  const [risk_warning_title, setRiskWarningTitle] = react__WEBPACK_IMPORTED_MODULE_0__.useState('');\n  const [modal_content] = react__WEBPACK_IMPORTED_MODULE_0__.useState([{\n    action: 'signup',\n    body: local_props => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)(react__WEBPACK_IMPORTED_MODULE_0__.Suspense, {\n      fallback: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_4__.UILoader, {}),\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)(AccountWizard, {\n        setIsRiskWarningVisible: setIsRiskWarningVisible,\n        onFinishSuccess: showStatusDialog,\n        onNewFinishSuccess: showNewStatusDialog,\n        onOpenDepositModal: closeModalthenOpenDepositModal,\n        onOpenWelcomeModal: closeModalthenOpenWelcomeModal,\n        is_loading: local_props.is_loading,\n        setLoading: setLoading,\n        onError: showErrorModal,\n        onClose: closeModal,\n        realAccountSignup: realAccountSignup,\n        setRealAccountFormData: setRealAccountFormData\n      })\n    }),\n    title: WizardHeading\n  }, {\n    action: 'multi',\n    body: local_props => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)(_add_or_manage_accounts_jsx__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n      onSuccessSetAccountCurrency: showSetCurrencySuccess,\n      is_loading: local_props.is_loading,\n      setLoading: setLoading,\n      onError: showErrorModal,\n      is_add_crypto: local_props.real_account_signup_target === 'add_crypto',\n      is_add_fiat: local_props.real_account_signup_target === 'add_fiat',\n      is_add_currency: local_props.real_account_signup_target === 'add_currency',\n      deposit_target: local_props.deposit_target,\n      onClose: closeModal\n    }),\n    title: local_props => {\n      var _local_props$availabl;\n      if (local_props.real_account_signup_target === 'add_crypto') {\n        return (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_6__.localize)('Create a cryptocurrency account');\n      } else if (local_props.real_account_signup_target === 'add_fiat') {\n        return (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_6__.localize)('Add a Deriv real account');\n      } else if (local_props.real_account_signup_target === 'add_currency') {\n        return (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_6__.localize)('Create a new account');\n      } else if (local_props.has_fiat && ((_local_props$availabl = local_props.available_crypto_currencies) === null || _local_props$availabl === void 0 ? void 0 : _local_props$availabl.length) === 0) {\n        return (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_6__.localize)('Manage account');\n      }\n      return (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_6__.localize)('Add or manage account');\n    }\n  }, {\n    body: local_props => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)(_finished_set_currency_jsx__WEBPACK_IMPORTED_MODULE_11__[\"default\"], {\n      prev: local_props.state_value.previous_currency,\n      current: local_props.state_value.current_currency,\n      onCancel: closeSetCurrencySuccessModal,\n      onSubmit: closeModalThenOpenCashier,\n      deposit_real_account_signup_target: local_props.deposit_real_account_signup_target,\n      deposit_target: local_props.deposit_target,\n      closeRealAccountSignup: closeRealAccountSignup,\n      setIsDeposit: setIsDeposit,\n      history: history\n    }),\n    title: local_props => {\n      var _local_props$availabl2;\n      return local_props.has_fiat && ((_local_props$availabl2 = local_props.available_crypto_currencies) === null || _local_props$availabl2 === void 0 ? void 0 : _local_props$availabl2.length) === 0 ? (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_6__.localize)('Manage account') : (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_6__.localize)('Add or manage account');\n    }\n  }, {\n    body: local_props => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)(_status_dialog_container_jsx__WEBPACK_IMPORTED_MODULE_14__[\"default\"], {\n      currency: local_props.state_value.currency,\n      closeModal: closeSetCurrencySuccessModal\n    })\n  }, {\n    body: local_props => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)(_set_currency_jsx__WEBPACK_IMPORTED_MODULE_12__[\"default\"], {\n      is_loading: local_props.is_loading,\n      setLoading: setLoading,\n      onError: showErrorModal,\n      onClose: closeModal,\n      onSuccessSetAccountCurrency: showSetCurrencySuccess\n    }),\n    title: WizardHeading\n  }, {\n    body: local_props => {\n      var _local_props$state_va;\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)(_signup_error_content_jsx__WEBPACK_IMPORTED_MODULE_13__[\"default\"], {\n        message: local_props.state_value.error_message || ((_local_props$state_va = local_props.state_value.error_code) === null || _local_props$state_va === void 0 ? void 0 : _local_props$state_va.message_to_client),\n        code: local_props.state_value.error_code,\n        onConfirm: () => onErrorConfirm(local_props.state_value.error_code)\n      });\n    },\n    title: local_props => {\n      var _local_props$availabl3;\n      if ((local_props === null || local_props === void 0 ? void 0 : local_props.real_account_signup_target) === 'add_crypto') {\n        return (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_6__.localize)('Create a cryptocurrency account');\n      } else if ((local_props === null || local_props === void 0 ? void 0 : local_props.real_account_signup_target) === 'add_fiat') {\n        return (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_6__.localize)('Add a Deriv real account');\n      } else if ((local_props === null || local_props === void 0 ? void 0 : local_props.real_account_signup_target) === 'add_currency') {\n        return (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_6__.localize)('Create a new account');\n      } else if (local_props !== null && local_props !== void 0 && local_props.has_fiat && (local_props === null || local_props === void 0 || (_local_props$availabl3 = local_props.available_crypto_currencies) === null || _local_props$availabl3 === void 0 ? void 0 : _local_props$availabl3.length) === 0) {\n        return (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_6__.localize)('Manage account');\n      } else if (signup_error) {\n        return null;\n      }\n      return (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_6__.localize)('Add or manage account');\n    }\n  }, {\n    body: () => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)(_choose_currency_jsx__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n      className: \"account-wizard__body\",\n      onError: showErrorModal\n    }),\n    title: local_props => local_props.should_show_all_available_currencies ? (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_6__.localize)('Choose an account') : (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_6__.localize)('Choose a cryptocurrency account')\n  }, {\n    body: () => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)(_add_currency_jsx__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n      className: \"account-wizard__body\",\n      onError: showErrorModal\n    }),\n    title: () => (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_6__.localize)('Create a new account')\n  }, {\n    body: local_props => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)(_finished_add_currency_jsx__WEBPACK_IMPORTED_MODULE_10__[\"default\"], {\n      redirectToLegacyPlatform: redirectToLegacyPlatform,\n      prev: local_props.state_value.previous_currency,\n      current: local_props.state_value.current_currency,\n      onSubmit: closeModalThenOpenCashier,\n      deposit_real_account_signup_target: local_props.deposit_real_account_signup_target,\n      deposit_target: local_props.deposit_target,\n      closeRealAccountSignup: closeRealAccountSignup,\n      setIsDeposit: setIsDeposit,\n      history: history\n    })\n  }, {\n    body: local_props => {\n      var _local_props$state_va2;\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)(_signup_error_content_jsx__WEBPACK_IMPORTED_MODULE_13__[\"default\"], {\n        message: local_props.state_value.error_message || ((_local_props$state_va2 = local_props.state_value.error_code) === null || _local_props$state_va2 === void 0 ? void 0 : _local_props$state_va2.message_to_client),\n        code: local_props.state_value.error_code,\n        onConfirm: closeRealAccountSignup,\n        className: \"restricted-country-error\"\n      });\n    }\n  }, {\n    body: local_props => {\n      var _local_props$state_va3;\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)(_signup_error_content_jsx__WEBPACK_IMPORTED_MODULE_13__[\"default\"], {\n        message: local_props.state_value.error_message || ((_local_props$state_va3 = local_props.state_value.error_code) === null || _local_props$state_va3 === void 0 ? void 0 : _local_props$state_va3.message_to_client),\n        code: local_props.state_value.error_code,\n        onConfirm: onErrorConfirm,\n        error_field: local_props.state_value,\n        className: \"invalid-input-error\"\n      });\n    }\n  }, {\n    body: local_props => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)(_new_status_dialog_container_jsx__WEBPACK_IMPORTED_MODULE_15__[\"default\"], {\n      currency: local_props.state_value.currency,\n      closeModal: closeSetCurrencySuccessModal\n    })\n  }]);\n  const [assessment_decline, setAssessmentDecline] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n  const trackEvent = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(payload => {\n    if (real_account_signup_target === 'maltainvest') return;\n    _deriv_com_analytics__WEBPACK_IMPORTED_MODULE_16__.Analytics.trackEvent('ce_real_account_signup_form', _objectSpread({\n      form_source: document.referrer,\n      form_name: 'real_account_signup_form',\n      landing_company: real_account_signup_target\n    }, payload));\n  }, [real_account_signup_target]);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    if (is_real_acc_signup_on && real_account_signup_target === 'svg') {\n      trackEvent({\n        action: 'open'\n      });\n    }\n  }, [is_real_acc_signup_on, real_account_signup_target, trackEvent]);\n  const getModalHeight = () => {\n    if (is_from_restricted_country) return '304px';else if ([invalid_input_error, status_dialog, new_status_dialog, signup_error].includes(getActiveModalIndex())) return 'auto';\n    if (!currency || getActiveModalIndex() === modal_pages_indices.set_currency) return '688px'; // Set currency modal\n    if (has_real_account && currency) {\n      if (show_eu_related_content && getActiveModalIndex() === modal_pages_indices.add_or_manage_account) {\n        // Manage account\n        return '420px'; // Since crypto is disabled for EU clients, lower the height of modal\n      }\n      if ([modal_pages_indices.finished_set_currency, modal_pages_indices.finished_add_currency].includes(getActiveModalIndex())) {\n        return 'auto';\n      }\n    }\n    return '740px'; // Account wizard modal\n  };\n  const getModalWidth = () => {\n    if (is_from_restricted_country || [modal_pages_indices.invalid_input_error, modal_pages_indices.signup_error].includes(getActiveModalIndex())) return '440px';\n    return !has_close_icon ? 'auto' : '955px';\n  };\n  const closeModalthenOpenDepositModal = () => {\n    closeRealAccountSignup();\n    if (!client.is_mf_account) {\n      setShouldShowOneTimeDepositModal(true);\n    } else {\n      toggleAccountSuccessModal();\n    }\n  };\n  const showStatusDialog = curr => {\n    setParams({\n      active_modal_index: modal_pages_indices.status_dialog,\n      currency: curr\n    });\n  };\n  const showNewStatusDialog = curr => {\n    setParams({\n      active_modal_index: modal_pages_indices.new_status_dialog,\n      currency: curr\n    });\n  };\n  const closeModalthenOpenWelcomeModal = curr => {\n    closeRealAccountSignup();\n    setParams({\n      currency: curr\n    });\n  };\n  const closeModalThenOpenCashier = () => {\n    closeRealAccountSignup();\n    history.push(_deriv_shared__WEBPACK_IMPORTED_MODULE_5__.routes.cashier_deposit);\n  };\n  const showSetCurrencySuccess = (previous_currency, current_currency, target) => {\n    setParams({\n      previous_currency,\n      current_currency,\n      active_modal_index: target ? modal_pages_indices.finished_add_currency : modal_pages_indices.finished_set_currency\n    });\n  };\n  const setLoading = is_loading_val => {\n    setIsLoading(is_loading_val);\n  };\n  const cacheFormValues = payload => {\n    localStorage.setItem('real_account_signup_wizard', JSON.stringify(payload.map(item => {\n      if (typeof item.form_value === 'object') {\n        return item.form_value;\n      }\n      return false;\n    })));\n  };\n  const showErrorModal = (err, payload) => {\n    var _modal_content$getAct;\n    if (payload) {\n      cacheFormValues(payload);\n    }\n    setCurrentAction((_modal_content$getAct = modal_content[getActiveModalIndex()]) === null || _modal_content$getAct === void 0 ? void 0 : _modal_content$getAct.action);\n    setError(err);\n    trackEvent({\n      action: 'other_error',\n      real_signup_error_message: err\n    });\n  };\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    setRiskWarningTitle((0,_deriv_translations__WEBPACK_IMPORTED_MODULE_6__.localize)('Risk Tolerance Warning'));\n    return () => setIsTradingAssessmentForNewUserEnabled(is_trading_experience_incomplete);\n  }, []);\n\n  // setCurrentAction callback useEffect to set error details\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    if (!error) return;\n    setParams(_objectSpread({\n      active_modal_index: ['InputValidationFailed', 'PoBoxInAddress', 'InvalidPhone'].includes(error.code) ? modal_pages_indices.invalid_input_error : modal_pages_indices.signup_error,\n      error_message: error.message,\n      error_code: error.code\n    }, error.code === 'InputValidationFailed' && {\n      error_details: error.details\n    }));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [error]);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    if (!is_from_restricted_country) return;\n    setParams({\n      active_modal_index: modal_pages_indices.restricted_country_signup_error,\n      error_message: (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_6__.localize)('Adding more real accounts has been restricted for your country.'),\n      error_code: 'InvalidAccount'\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [is_from_restricted_country, is_real_acc_signup_on]);\n  const closeSetCurrencySuccessModal = e => {\n    // Do not close modal on external link and popover click event\n    if ((e === null || e === void 0 ? void 0 : e.target.getAttribute('rel')) === 'noopener noreferrer' || e !== null && e !== void 0 && e.target.closest('.redirect-notice') || e !== null && e !== void 0 && e.target.closest('.dc-popover__bubble')) {\n      return;\n    }\n    if (getActiveModalIndex() !== modal_pages_indices.status_dialog || getActiveModalIndex() !== modal_pages_indices.new_status_dialog) {\n      sessionStorage.removeItem('post_real_account_signup');\n      localStorage.removeItem('real_account_signup_wizard');\n    }\n    closeRealAccountSignup();\n  };\n  const closeModal = e => {\n    // Do not close modal on external link and popover click event\n    if (!e || (e === null || e === void 0 ? void 0 : e.target.getAttribute('rel')) === 'noopener noreferrer' || e !== null && e !== void 0 && e.target.closest('.redirect-notice') || e !== null && e !== void 0 && e.target.closest('.dc-popover__bubble')) {\n      return;\n    }\n    if (getActiveModalIndex() !== modal_pages_indices.status_dialog || getActiveModalIndex() !== modal_pages_indices.new_status_dialog) {\n      sessionStorage.removeItem('post_real_account_signup');\n      localStorage.removeItem('real_account_signup_wizard');\n    }\n    if (deposit_target === _deriv_shared__WEBPACK_IMPORTED_MODULE_5__.routes.cashier_onramp) setDepositTarget('');\n    if (modal_content[getActiveModalIndex()].action === 'signup') {\n      setIsClosingCreateRealAccountModal(true);\n      return;\n    }\n    closeRealAccountSignup();\n    redirectToLegacyPlatform();\n  };\n  const onErrorConfirm = err_code => {\n    const addOrManageAccountErrorType = ['CurrencyTypeNotAllowed', 'DuplicateCurrency'];\n    setLoading(true);\n    setParams({\n      active_modal_index: current_action === 'multi' || addOrManageAccountErrorType.includes(err_code) ? modal_pages_indices.add_or_manage_account : modal_pages_indices.account_wizard\n    });\n  };\n  const getIsManageTarget = () => {\n    return real_account_signup_target === 'manage';\n  };\n  const getActiveModalIndex = () => {\n    if (real_account_signup_target === 'choose') {\n      active_modal_index_no = modal_pages_indices.choose_crypto_currency;\n      return active_modal_index_no;\n    }\n    if (['add_crypto', 'add_fiat', 'add_currency'].includes(real_account_signup_target)) {\n      active_modal_index_no = modal_pages_indices.add_or_manage_account;\n      return active_modal_index_no;\n    }\n    if (state_value.active_modal_index === -1) {\n      if (has_real_account && currency && getIsManageTarget()) {\n        active_modal_index_no = modal_pages_indices.add_or_manage_account;\n      } else {\n        active_modal_index_no = real_account_signup_target === 'set_currency' ? modal_pages_indices.set_currency : modal_pages_indices.account_wizard;\n      }\n    } else {\n      active_modal_index_no = state_value.active_modal_index;\n    }\n    return active_modal_index_no;\n  };\n\n  // set title and body of the modal\n  const {\n    title: Title,\n    body: ModalContent\n  } = modal_content[getActiveModalIndex()];\n  const {\n    account_wizard,\n    add_or_manage_account,\n    finished_set_currency,\n    status_dialog,\n    new_status_dialog,\n    set_currency,\n    signup_error,\n    restricted_country_signup_error,\n    invalid_input_error\n  } = modal_pages_indices;\n  const has_close_icon = [account_wizard, add_or_manage_account, set_currency, signup_error].includes(getActiveModalIndex());\n  const handleOnAccept = async () => {\n    setLoading(true);\n    try {\n      const response = await realAccountSignup(_objectSpread(_objectSpread({}, real_account_form_data), {}, {\n        accept_risk: 1\n      }));\n      _deriv_shared__WEBPACK_IMPORTED_MODULE_5__.WS.authorized.getAccountStatus().then(status => {\n        var _get_account_status$s;\n        const {\n          get_account_status\n        } = status;\n        setShouldShowAppropriatenessWarningModal(false);\n        if (real_account_signup_target === 'maltainvest' && !(get_account_status !== null && get_account_status !== void 0 && (_get_account_status$s = get_account_status.status) !== null && _get_account_status$s !== void 0 && _get_account_status$s.includes('cashier_locked'))) {\n          closeModalthenOpenDepositModal();\n        } else {\n          var _response$new_account, _response$new_account2;\n          showStatusDialog(response === null || response === void 0 || (_response$new_account = response.new_account_maltainvest) === null || _response$new_account === void 0 ? void 0 : _response$new_account.currency.toLowerCase());\n          showNewStatusDialog(response === null || response === void 0 || (_response$new_account2 = response.new_account_maltainvest) === null || _response$new_account2 === void 0 ? void 0 : _response$new_account2.currency.toLowerCase());\n        }\n      });\n    } catch (sign_up_error) {\n      // TODO: Handle Error\n    } finally {\n      fetchAccountSettings();\n      setLoading(false);\n    }\n  };\n  const handleOnDecline = async () => {\n    setLoading(true);\n    setAssessmentDecline(true);\n    try {\n      await realAccountSignup(_objectSpread(_objectSpread({}, real_account_form_data), {}, {\n        accept_risk: 0\n      }));\n    } catch (sign_up_error) {\n      setRiskWarningTitle((0,_deriv_translations__WEBPACK_IMPORTED_MODULE_6__.localize)('24-hour Cool Down Warning'));\n      if (sign_up_error.code === 'AppropriatenessTestFailed') {\n        setShouldShowAppropriatenessWarningModal(false);\n        setShouldShowRiskWarningModal(true);\n      }\n      // TODO: Handle Error case\n    } finally {\n      fetchAccountSettings();\n      setLoading(false);\n    }\n  };\n  const handleRiskAcceptance = () => {\n    closeRealAccountSignup();\n    setShouldShowRiskWarningModal(false);\n    setAssessmentDecline(false);\n  };\n  if (assessment_decline) {\n    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)((_deriv_account_dist_account_js_risk_tolerance_warning_modal__WEBPACK_IMPORTED_MODULE_2___default()), {\n      show_risk_modal: assessment_decline,\n      title: risk_warning_title,\n      handleAcceptRisk: handleRiskAcceptance,\n      body_content: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)(_deriv_translations__WEBPACK_IMPORTED_MODULE_6__.Localize, {\n        i18n_default_text: \"CFDs and other financial instruments come with a high risk of losing money rapidly due to leverage. You should consider whether you understand how CFDs and other financial instruments work and whether you can afford to take the risk of losing your money. <0/><0/> As you have declined our previous warning, you would need to wait 24 hours before you can proceed further.\",\n        components: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)(\"br\", {}, 0)]\n      })\n    });\n  } else if (is_trading_assessment_for_new_user_enabled && should_show_risk_warning_modal) {\n    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)((_deriv_account_dist_account_js_risk_tolerance_warning_modal__WEBPACK_IMPORTED_MODULE_2___default()), {\n      show_risk_modal: should_show_risk_warning_modal,\n      title: risk_warning_title,\n      handleAcceptRisk: handleRiskAcceptance,\n      body_content: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)(_deriv_translations__WEBPACK_IMPORTED_MODULE_6__.Localize, {\n        i18n_default_text: \"CFDs and other financial instruments come with a high risk of losing money rapidly due to leverage. You should consider whether you understand how CFDs and other financial instruments work and whether you can afford to take the high risk of losing your money. <0/><0/> To continue, kindly note that you would need to wait 24 hours before you can proceed further.\",\n        components: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)(\"br\", {}, 0)]\n      })\n    });\n  } else if (should_show_appropriateness_warning_modal) {\n    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)((_deriv_account_dist_account_js_test_warning_modal__WEBPACK_IMPORTED_MODULE_3___default()), {\n      show_risk_modal: should_show_appropriateness_warning_modal,\n      body_content: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsxs)(_deriv_components__WEBPACK_IMPORTED_MODULE_4__.Text, {\n        as: \"p\",\n        size: \"xs\",\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)(_deriv_translations__WEBPACK_IMPORTED_MODULE_6__.Localize, {\n          i18n_default_text: \"In providing our services to you, we are required to ask you for some information to assess if a given product or service is appropriate for you and whether you have the experience and knowledge to understand the risks involved.<0/><0/>\",\n          components: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)(\"br\", {}, 0)]\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)(_deriv_translations__WEBPACK_IMPORTED_MODULE_6__.Localize, {\n          i18n_default_text: \"On the basis of the information provided in relation to your knowledge and experience, we consider that the investments available via this website are not appropriate for you.<0/><0/>\",\n          components: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)(\"br\", {}, 0)]\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)(_deriv_translations__WEBPACK_IMPORTED_MODULE_6__.Localize, {\n          i18n_default_text: \"By clicking \\u2018Accept\\u2019 and proceeding with the account opening, you should note that you may be exposing yourself to risks. These risks, which may be significant, include the risk of losing the entire sum invested, and you may not have the knowledge and experience to properly assess or mitigate them.\"\n        })]\n      }),\n      footer_content: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsxs)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_4__.Button, {\n          type: \"button\",\n          large: true,\n          text: (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_6__.localize)('Decline'),\n          secondary: true,\n          onClick: handleOnDecline\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_4__.Button, {\n          type: \"button\",\n          large: true,\n          text: (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_6__.localize)('Accept'),\n          primary: true,\n          onClick: handleOnAccept,\n          is_loading: is_loading\n        })]\n      })\n    });\n  }\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n    children: is_real_acc_signup_on && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n      children: isDesktop ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_4__.Modal, {\n        id: \"real_account_signup_modal\",\n        className: classnames__WEBPACK_IMPORTED_MODULE_1___default()('real-account-signup-modal', {\n          'dc-modal__container_real-account-signup-modal--error': [signup_error, restricted_country_signup_error, invalid_input_error].includes(getActiveModalIndex()),\n          'dc-modal__container_real-account-signup-modal--success': [finished_set_currency, status_dialog].includes(getActiveModalIndex())\n        }),\n        is_open: is_real_acc_signup_on,\n        is_risk_warning_visible: is_risk_warning_visible,\n        has_close_icon: real_account_signup_target !== 'samoa',\n        is_title_centered: real_account_signup_target === 'samoa',\n        renderTitle: () => {\n          if (Title && ![finished_set_currency, status_dialog].includes(getActiveModalIndex())) {\n            return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)(Title, {\n              available_crypto_currencies: available_crypto_currencies,\n              currency: currency,\n              has_fiat: has_fiat,\n              is_eu: show_eu_related_content,\n              real_account_signup_target: real_account_signup_target,\n              should_show_all_available_currencies: should_show_all_available_currencies\n            });\n          }\n          return null;\n        },\n        toggleModal: closeModal,\n        height: getModalHeight(),\n        width: getModalWidth(),\n        elements_to_ignore: [document.querySelector('.modal-root')],\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)(ModalContent, {\n          state_value: state_value,\n          passthrough: state_index,\n          is_loading: is_loading,\n          real_account_signup_target: real_account_signup_target,\n          deposit_real_account_signup_target: deposit_real_account_signup_target,\n          deposit_target: deposit_target\n        })\n      }) : /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_4__.MobileDialog, {\n        portal_element_id: \"modal_root\",\n        wrapper_classname: \"account-signup-mobile-dialog\",\n        visible: is_real_acc_signup_on,\n        onClose: closeModal,\n        has_full_height: getActiveModalIndex() === modal_pages_indices.signup_error,\n        renderTitle: () => {\n          if (Title) {\n            return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)(Title, {\n              currency: currency,\n              real_account_signup_target: real_account_signup_target,\n              should_show_all_available_currencies: should_show_all_available_currencies\n            });\n          }\n          return null;\n        },\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)(ModalContent, {\n          state_value: state_value,\n          passthrough: state_index,\n          is_loading: is_loading,\n          real_account_signup_target: real_account_signup_target,\n          deposit_real_account_signup_target: deposit_real_account_signup_target,\n          deposit_target: deposit_target\n        })\n      })\n    })\n  });\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,react_router_dom__WEBPACK_IMPORTED_MODULE_22__.withRouter)(RealAccountSignup));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./App/Containers/RealAccountSignup/real-account-signup.jsx\n"
                );

                /***/
            },

        /***/ './App/Containers/RealAccountSignup/set-currency.jsx':
            /*!***********************************************************!*\
  !*** ./App/Containers/RealAccountSignup/set-currency.jsx ***!
  \***********************************************************/
            /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! classnames */ "../../../node_modules/classnames/index.js");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "../../../node_modules/react/index.js");\n/* harmony import */ var _deriv_translations__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @deriv/translations */ "../../translations/src/index.js");\n/* harmony import */ var _deriv_account_dist_account_js_currency_selector_config__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @deriv/account/dist/account/js/currency-selector-config */ "../../account/dist/account/js/currency-selector-config.js");\n/* harmony import */ var _deriv_account_dist_account_js_currency_selector_config__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_deriv_account_dist_account_js_currency_selector_config__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _deriv_shared__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @deriv/shared */ "../../shared/src/index.ts");\n/* harmony import */ var _deriv_components__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @deriv/components */ "../../components/src/index.ts");\n/* harmony import */ var _deriv_account_src_Components_currency_selector__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @deriv/account/src/Components/currency-selector */ "../../account/src/Components/currency-selector/index.ts");\n/* harmony import */ var _real_account_signup_loader_jsx__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./real-account-signup-loader.jsx */ "./App/Containers/RealAccountSignup/real-account-signup-loader.jsx");\n/* harmony import */ var Sass_set_currency_scss__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! Sass/set-currency.scss */ "./sass/set-currency.scss");\n/* harmony import */ var Sass_change_account_scss__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! Sass/change-account.scss */ "./sass/change-account.scss");\n/* harmony import */ var _deriv_stores__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @deriv/stores */ "../../../node_modules/mobx-react-lite/es/index.js");\n/* harmony import */ var _deriv_stores__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @deriv/stores */ "../../stores/src/useStore.ts");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! react/jsx-runtime */ "../../../node_modules/react/jsx-runtime.js");\nconst _excluded = ["setLoading", "onSuccessSetAccountCurrency", "onError", "is_loading"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }\nfunction _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }\n\n\n\n\n\n\n        \n\n\n\n\n\n\n\n\nconst SetCurrency = (0,_deriv_stores__WEBPACK_IMPORTED_MODULE_11__.observer)(_ref => {\n  let {\n      setLoading,\n      onSuccessSetAccountCurrency,\n      onError,\n      is_loading\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  const {\n    client\n  } = (0,_deriv_stores__WEBPACK_IMPORTED_MODULE_12__["default"])();\n  const {\n    available_crypto_currencies,\n    has_fiat,\n    landing_company_shortcode,\n    setAccountCurrency\n  } = client;\n  const form_error = react__WEBPACK_IMPORTED_MODULE_1__.useState(\'\');\n  const form_value = react__WEBPACK_IMPORTED_MODULE_1__.useState({\n    currency: \'\'\n  });\n  const setCurrency = (obj, setSubmitting) => {\n    setLoading(true);\n    const {\n      currency\n    } = obj;\n    if (currency) {\n      setAccountCurrency(currency).then(response => {\n        setSubmitting(false);\n        onSuccessSetAccountCurrency(\'\', response.echo_req.set_account_currency);\n      }).catch(error_message => {\n        onError(error_message);\n      }).finally(() => setLoading(false));\n    }\n  };\n  const updateValue = (index, value, setSubmitting) => {\n    setCurrency(value, setSubmitting);\n  };\n  const noCryptoAvailable = () => {\n    return available_crypto_currencies.length === 0 && has_fiat && props.currency;\n  };\n  if (is_loading) return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx)(_real_account_signup_loader_jsx__WEBPACK_IMPORTED_MODULE_7__["default"], {});\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxs)("div", {\n    className: classnames__WEBPACK_IMPORTED_MODULE_0___default()(\'set-currency-modal\', {\n      \'set-currency-modal--disabled\': noCryptoAvailable()\n    }),\n    children: [noCryptoAvailable() && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx)("div", {\n      className: "set-currency-modal--disabled-message",\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx)("p", {\n        children: (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_2__.localize)(\'You already have an account for each of the cryptocurrencies available on {{deriv}}.\', {\n          deriv: _deriv_shared__WEBPACK_IMPORTED_MODULE_4__.website_name\n        })\n      })\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxs)("div", {\n      className: "set-currency-modal__heading-container",\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_5__.Text, {\n        as: "p",\n        size: "xs",\n        line_height: "s",\n        align: "center",\n        className: "set-currency-modal__heading-container__main-heading",\n        children: (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_2__.localize)(\'You have an account that do not have currency assigned. Please choose a currency to trade with this account.\')\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_5__.Text, {\n        as: "p",\n        weight: "bold",\n        align: "center",\n        className: "set-currency-modal__heading-container__sub-heading",\n        children: (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_2__.localize)(\'Select your preferred currency\')\n      })]\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx)(_deriv_account_src_Components_currency_selector__WEBPACK_IMPORTED_MODULE_6__["default"], _objectSpread({\n      className: "account-wizard__body",\n      onSubmit: updateValue,\n      value: form_value,\n      form_error: form_error,\n      set_currency: true,\n      validate: (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_4__.generateValidationFunction)(landing_company_shortcode, (_deriv_account_dist_account_js_currency_selector_config__WEBPACK_IMPORTED_MODULE_3___default()))\n    }, props))]\n  });\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SetCurrency);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9BcHAvQ29udGFpbmVycy9SZWFsQWNjb3VudFNpZ251cC9zZXQtY3VycmVuY3kuanN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUVBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUVBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQUE7QUFHQTtBQUFBO0FBQ0E7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFJQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFFQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFFQTtBQUdBO0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9BcHAvQ29udGFpbmVycy9SZWFsQWNjb3VudFNpZ251cC9zZXQtY3VycmVuY3kuanN4P2JhZGIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgbG9jYWxpemUgfSBmcm9tICdAZGVyaXYvdHJhbnNsYXRpb25zJztcbmltcG9ydCB7IGN1cnJlbmN5U2VsZWN0b3JDb25maWcgfSBmcm9tICdAZGVyaXYvYWNjb3VudCc7XG5pbXBvcnQgeyB3ZWJzaXRlX25hbWUsIGdlbmVyYXRlVmFsaWRhdGlvbkZ1bmN0aW9uIH0gZnJvbSAnQGRlcml2L3NoYXJlZCc7XG5pbXBvcnQgeyBUZXh0IH0gZnJvbSAnQGRlcml2L2NvbXBvbmVudHMnO1xuaW1wb3J0IEN1cnJlbmN5U2VsZWN0b3IgZnJvbSAnQGRlcml2L2FjY291bnQvc3JjL0NvbXBvbmVudHMvY3VycmVuY3ktc2VsZWN0b3InO1xuaW1wb3J0IExvYWRpbmdNb2RhbCBmcm9tICcuL3JlYWwtYWNjb3VudC1zaWdudXAtbG9hZGVyLmpzeCc7XG5pbXBvcnQgJ1Nhc3Mvc2V0LWN1cnJlbmN5LnNjc3MnO1xuaW1wb3J0ICdTYXNzL2NoYW5nZS1hY2NvdW50LnNjc3MnO1xuaW1wb3J0IHsgb2JzZXJ2ZXIsIHVzZVN0b3JlIH0gZnJvbSAnQGRlcml2L3N0b3Jlcyc7XG5cbmNvbnN0IFNldEN1cnJlbmN5ID0gb2JzZXJ2ZXIoKHsgc2V0TG9hZGluZywgb25TdWNjZXNzU2V0QWNjb3VudEN1cnJlbmN5LCBvbkVycm9yLCBpc19sb2FkaW5nLCAuLi5wcm9wcyB9KSA9PiB7XG4gICAgY29uc3QgeyBjbGllbnQgfSA9IHVzZVN0b3JlKCk7XG4gICAgY29uc3QgeyBhdmFpbGFibGVfY3J5cHRvX2N1cnJlbmNpZXMsIGhhc19maWF0LCBsYW5kaW5nX2NvbXBhbnlfc2hvcnRjb2RlLCBzZXRBY2NvdW50Q3VycmVuY3kgfSA9IGNsaWVudDtcbiAgICBjb25zdCBmb3JtX2Vycm9yID0gUmVhY3QudXNlU3RhdGUoJycpO1xuICAgIGNvbnN0IGZvcm1fdmFsdWUgPSBSZWFjdC51c2VTdGF0ZSh7IGN1cnJlbmN5OiAnJyB9KTtcblxuICAgIGNvbnN0IHNldEN1cnJlbmN5ID0gKG9iaiwgc2V0U3VibWl0dGluZykgPT4ge1xuICAgICAgICBzZXRMb2FkaW5nKHRydWUpO1xuICAgICAgICBjb25zdCB7IGN1cnJlbmN5IH0gPSBvYmo7XG4gICAgICAgIGlmIChjdXJyZW5jeSkge1xuICAgICAgICAgICAgc2V0QWNjb3VudEN1cnJlbmN5KGN1cnJlbmN5KVxuICAgICAgICAgICAgICAgIC50aGVuKHJlc3BvbnNlID0+IHtcbiAgICAgICAgICAgICAgICAgICAgc2V0U3VibWl0dGluZyhmYWxzZSk7XG4gICAgICAgICAgICAgICAgICAgIG9uU3VjY2Vzc1NldEFjY291bnRDdXJyZW5jeSgnJywgcmVzcG9uc2UuZWNob19yZXEuc2V0X2FjY291bnRfY3VycmVuY3kpO1xuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgLmNhdGNoKGVycm9yX21lc3NhZ2UgPT4ge1xuICAgICAgICAgICAgICAgICAgICBvbkVycm9yKGVycm9yX21lc3NhZ2UpO1xuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgLmZpbmFsbHkoKCkgPT4gc2V0TG9hZGluZyhmYWxzZSkpO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIGNvbnN0IHVwZGF0ZVZhbHVlID0gKGluZGV4LCB2YWx1ZSwgc2V0U3VibWl0dGluZykgPT4ge1xuICAgICAgICBzZXRDdXJyZW5jeSh2YWx1ZSwgc2V0U3VibWl0dGluZyk7XG4gICAgfTtcblxuICAgIGNvbnN0IG5vQ3J5cHRvQXZhaWxhYmxlID0gKCkgPT4ge1xuICAgICAgICByZXR1cm4gYXZhaWxhYmxlX2NyeXB0b19jdXJyZW5jaWVzLmxlbmd0aCA9PT0gMCAmJiBoYXNfZmlhdCAmJiBwcm9wcy5jdXJyZW5jeTtcbiAgICB9O1xuXG4gICAgaWYgKGlzX2xvYWRpbmcpIHJldHVybiA8TG9hZGluZ01vZGFsIC8+O1xuICAgIHJldHVybiAoXG4gICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNsYXNzTmFtZT17Y2xhc3NOYW1lcygnc2V0LWN1cnJlbmN5LW1vZGFsJywge1xuICAgICAgICAgICAgICAgICdzZXQtY3VycmVuY3ktbW9kYWwtLWRpc2FibGVkJzogbm9DcnlwdG9BdmFpbGFibGUoKSxcbiAgICAgICAgICAgIH0pfVxuICAgICAgICA+XG4gICAgICAgICAgICB7bm9DcnlwdG9BdmFpbGFibGUoKSAmJiAoXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J3NldC1jdXJyZW5jeS1tb2RhbC0tZGlzYWJsZWQtbWVzc2FnZSc+XG4gICAgICAgICAgICAgICAgICAgIDxwPlxuICAgICAgICAgICAgICAgICAgICAgICAge2xvY2FsaXplKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICdZb3UgYWxyZWFkeSBoYXZlIGFuIGFjY291bnQgZm9yIGVhY2ggb2YgdGhlIGNyeXB0b2N1cnJlbmNpZXMgYXZhaWxhYmxlIG9uIHt7ZGVyaXZ9fS4nLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVyaXY6IHdlYnNpdGVfbmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgICAgICA8L3A+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICApfVxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J3NldC1jdXJyZW5jeS1tb2RhbF9faGVhZGluZy1jb250YWluZXInPlxuICAgICAgICAgICAgICAgIDxUZXh0XG4gICAgICAgICAgICAgICAgICAgIGFzPSdwJ1xuICAgICAgICAgICAgICAgICAgICBzaXplPSd4cydcbiAgICAgICAgICAgICAgICAgICAgbGluZV9oZWlnaHQ9J3MnXG4gICAgICAgICAgICAgICAgICAgIGFsaWduPSdjZW50ZXInXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT0nc2V0LWN1cnJlbmN5LW1vZGFsX19oZWFkaW5nLWNvbnRhaW5lcl9fbWFpbi1oZWFkaW5nJ1xuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAge2xvY2FsaXplKFxuICAgICAgICAgICAgICAgICAgICAgICAgJ1lvdSBoYXZlIGFuIGFjY291bnQgdGhhdCBkbyBub3QgaGF2ZSBjdXJyZW5jeSBhc3NpZ25lZC4gUGxlYXNlIGNob29zZSBhIGN1cnJlbmN5IHRvIHRyYWRlIHdpdGggdGhpcyBhY2NvdW50LidcbiAgICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICA8L1RleHQ+XG4gICAgICAgICAgICAgICAgPFRleHRcbiAgICAgICAgICAgICAgICAgICAgYXM9J3AnXG4gICAgICAgICAgICAgICAgICAgIHdlaWdodD0nYm9sZCdcbiAgICAgICAgICAgICAgICAgICAgYWxpZ249J2NlbnRlcidcbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPSdzZXQtY3VycmVuY3ktbW9kYWxfX2hlYWRpbmctY29udGFpbmVyX19zdWItaGVhZGluZydcbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgIHtsb2NhbGl6ZSgnU2VsZWN0IHlvdXIgcHJlZmVycmVkIGN1cnJlbmN5Jyl9XG4gICAgICAgICAgICAgICAgPC9UZXh0PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8Q3VycmVuY3lTZWxlY3RvclxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT0nYWNjb3VudC13aXphcmRfX2JvZHknXG4gICAgICAgICAgICAgICAgb25TdWJtaXQ9e3VwZGF0ZVZhbHVlfVxuICAgICAgICAgICAgICAgIHZhbHVlPXtmb3JtX3ZhbHVlfVxuICAgICAgICAgICAgICAgIGZvcm1fZXJyb3I9e2Zvcm1fZXJyb3J9XG4gICAgICAgICAgICAgICAgc2V0X2N1cnJlbmN5XG4gICAgICAgICAgICAgICAgdmFsaWRhdGU9e2dlbmVyYXRlVmFsaWRhdGlvbkZ1bmN0aW9uKGxhbmRpbmdfY29tcGFueV9zaG9ydGNvZGUsIGN1cnJlbmN5U2VsZWN0b3JDb25maWcpfVxuICAgICAgICAgICAgICAgIHsuLi5wcm9wc31cbiAgICAgICAgICAgIC8+XG4gICAgICAgIDwvZGl2PlxuICAgICk7XG59KTtcblxuZXhwb3J0IGRlZmF1bHQgU2V0Q3VycmVuY3k7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./App/Containers/RealAccountSignup/set-currency.jsx\n'
                );

                /***/
            },

        /***/ './App/Containers/RealAccountSignup/signup-error-content.jsx':
            /*!*******************************************************************!*\
  !*** ./App/Containers/RealAccountSignup/signup-error-content.jsx ***!
  \*******************************************************************/
            /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! prop-types */ "../../../node_modules/prop-types/index.js");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "../../../node_modules/react/index.js");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! classnames */ "../../../node_modules/classnames/index.js");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _deriv_shared__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @deriv/shared */ "../../shared/src/index.ts");\n/* harmony import */ var _deriv_components__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @deriv/components */ "../../components/src/index.ts");\n/* harmony import */ var _deriv_translations__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @deriv/translations */ "../../translations/src/index.js");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react/jsx-runtime */ "../../../node_modules/react/jsx-runtime.js");\nconst _excluded = ["text", "onConfirm"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }\nfunction _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }\n\n\n\n\n\n\n\nconst Heading = _ref => {\n  let {\n    code\n  } = _ref;\n  switch (code) {\n    case \'DuplicateAccount\':\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_3__.Text, {\n        as: "h1",\n        align: "center",\n        weight: "bold",\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_deriv_translations__WEBPACK_IMPORTED_MODULE_4__.Localize, {\n          i18n_default_text: "Account already exists"\n        })\n      });\n    case \'InvalidAccount\':\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_3__.Text, {\n        as: "h2",\n        size: (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_2__.isMobile)() ? \'xs\' : \'s\',\n        align: "center",\n        weight: "bold",\n        line_height: "xxl",\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_deriv_translations__WEBPACK_IMPORTED_MODULE_4__.Localize, {\n          i18n_default_text: "You can\\u2019t add another real account"\n        })\n      });\n    case \'InputValidationFailed\':\n    case \'PoBoxInAddress\':\n    case \'InvalidPhone\':\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_3__.Text, {\n        as: "h1",\n        align: "center",\n        weight: "bold",\n        line_height: "xxl",\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_deriv_translations__WEBPACK_IMPORTED_MODULE_4__.Localize, {\n          i18n_default_text: "Invalid inputs"\n        })\n      });\n    default:\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_3__.Text, {\n        as: "h1",\n        align: "center",\n        weight: "bold",\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_deriv_translations__WEBPACK_IMPORTED_MODULE_4__.Localize, {\n          i18n_default_text: "Something\\u2019s not right"\n        })\n      });\n  }\n};\nconst Message = _ref2 => {\n  let {\n    code,\n    message,\n    details\n  } = _ref2;\n  if (code === \'PoBoxInAddress\') {\n    details.error_details = {\n      address_line_1: message\n    };\n  } else if (code === \'InvalidPhone\') {\n    details.error_details = {\n      phone: message\n    };\n  }\n  switch (code) {\n    case \'DuplicateAccount\':\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("p", {\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_deriv_translations__WEBPACK_IMPORTED_MODULE_4__.Localize, {\n          i18n_default_text: "Your details match an existing account. If you need help, contact us via <0>live chat</0>.",\n          components: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("span", {\n            className: "chat-inline",\n            onClick: () => {\n              var _window$LiveChatWidge;\n              return (_window$LiveChatWidge = window.LiveChatWidget) === null || _window$LiveChatWidge === void 0 ? void 0 : _window$LiveChatWidge.call(\'maximize\');\n            }\n          }, 0)]\n        })\n      });\n    case \'InvalidAccount\':\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_3__.Text, {\n        size: (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_2__.isMobile)() ? \'xxs\' : \'xs\',\n        align: "center",\n        children: message\n      });\n    case \'InputValidationFailed\':\n    case \'PoBoxInAddress\':\n    case \'InvalidPhone\':\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)("div", {\n        className: "input_validation_failed",\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_3__.Text, {\n          align: "center",\n          weight: "normal",\n          line_height: "xxl",\n          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_deriv_translations__WEBPACK_IMPORTED_MODULE_4__.Localize, {\n            i18n_default_text: "We don\\u2019t accept the following inputs for:"\n          })\n        }), Object.keys(details === null || details === void 0 ? void 0 : details.error_details).map(item => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)("div", {\n          className: "invalid_fields_input",\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_3__.Text, {\n            size: "xs",\n            weight: "bold",\n            children: (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_2__.getSignupFormFields)()[item]\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_3__.Text, {\n            size: "xs",\n            weight: "bold",\n            children: \' : \'\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_3__.Text, {\n            size: "xs",\n            children: details[item]\n          })]\n        }, item))]\n      });\n    default:\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("p", {\n        children: message\n      });\n  }\n};\nconst TryAgain = _ref3 => {\n  let {\n      text,\n      onConfirm\n    } = _ref3,\n    rest = _objectWithoutProperties(_ref3, _excluded);\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_3__.Button, _objectSpread(_objectSpread({\n    primary: true,\n    onClick: onConfirm,\n    large: true\n  }, rest), {}, {\n    children: text\n  }));\n};\nconst ErrorCTA = _ref4 => {\n  let {\n    code,\n    onConfirm\n  } = _ref4;\n  switch (code) {\n    case \'DuplicateCurrency\':\n    case \'CurrencyTypeNotAllowed\':\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(TryAgain, {\n        text: (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_4__.localize)(\'Try a different currency\'),\n        onConfirm: onConfirm\n      });\n    case \'DuplicateAccount\':\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(TryAgain, {\n        text: (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_4__.localize)(\'Go to live chat\'),\n        onConfirm: () => {\n          var _window$LiveChatWidge2;\n          return (_window$LiveChatWidge2 = window.LiveChatWidget) === null || _window$LiveChatWidge2 === void 0 ? void 0 : _window$LiveChatWidge2.call(\'maximize\');\n        }\n      });\n    case \'InputValidationFailed\':\n    case \'PoBoxInAddress\':\n    case \'InvalidPhone\':\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(TryAgain, {\n        text: (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_4__.localize)(\'Let’s try again\'),\n        onConfirm: onConfirm\n      });\n    case \'InvalidAccount\':\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(TryAgain, {\n        text: (0,_deriv_translations__WEBPACK_IMPORTED_MODULE_4__.localize)(\'OK\'),\n        onConfirm: onConfirm\n      });\n    default:\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_3__.StaticUrl, {\n        href: `help-centre/${code === \'InvalidAccount\' ? \'account#who-can-open-an-account\' : \'\'}`,\n        type: "button",\n        className: "dc-btn dc-btn--primary",\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_3__.Text, {\n          weight: "bold",\n          color: "white",\n          size: "xxs",\n          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_deriv_translations__WEBPACK_IMPORTED_MODULE_4__.Localize, {\n            i18n_default_text: "OK"\n          })\n        })\n      });\n  }\n};\nconst SignupErrorContent = _ref5 => {\n  let {\n    message,\n    code,\n    onConfirm,\n    className,\n    error_field = {}\n  } = _ref5;\n  const is_invalid_field_error = [\'InputValidationFailed\', \'PoBoxInAddress\', \'InvalidPhone\'].includes(code);\n  const getIconSize = () => {\n    if (is_invalid_field_error) return \'64\';else if (code === \'InvalidAccount\') return \'96\';\n    return \'115\';\n  };\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)("div", {\n    className: classnames__WEBPACK_IMPORTED_MODULE_1___default()(\'account-wizard--error\', {\n      [`account-wizard--error__${className}`]: className\n    }),\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_3__.Icon, {\n      icon: is_invalid_field_error ? \'IcInvalidError\' : \'IcAccountError\',\n      size: getIconSize()\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(Heading, {\n      code: code\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(Message, {\n      code: code,\n      message: message,\n      details: error_field\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("div", {\n      className: "account-wizard--error__cta",\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(ErrorCTA, {\n        code: code,\n        onConfirm: onConfirm\n      })\n    })]\n  });\n};\nSignupErrorContent.propTypes = {\n  code: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().string),\n  error_field: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().object),\n  message: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().string),\n  onConfirm: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().func),\n  className: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().string)\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SignupErrorContent);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./App/Containers/RealAccountSignup/signup-error-content.jsx\n'
                );

                /***/
            },

        /***/ './App/Containers/RealAccountSignup/status-dialog-container.jsx':
            /*!**********************************************************************!*\
  !*** ./App/Containers/RealAccountSignup/status-dialog-container.jsx ***!
  \**********************************************************************/
            /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! classnames */ "../../../node_modules/classnames/index.js");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! prop-types */ "../../../node_modules/prop-types/index.js");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_12__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "../../../node_modules/react/index.js");\n/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! react-router-dom */ "../../../node_modules/react-router/esm/react-router.js");\n/* harmony import */ var _deriv_com_ui__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @deriv-com/ui */ "../../../node_modules/@deriv-com/ui/dist/hooks/useDevice.js");\n/* harmony import */ var _deriv_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @deriv/components */ "../../components/src/index.ts");\n/* harmony import */ var _deriv_shared__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @deriv/shared */ "../../shared/src/index.ts");\n/* harmony import */ var _helpers_constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./helpers/constants */ "./App/Containers/RealAccountSignup/helpers/constants.js");\n/* harmony import */ var _helpers_dialog_heading_jsx__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./helpers/dialog-heading.jsx */ "./App/Containers/RealAccountSignup/helpers/dialog-heading.jsx");\n/* harmony import */ var _helpers_dialog_message_jsx__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./helpers/dialog-message.jsx */ "./App/Containers/RealAccountSignup/helpers/dialog-message.jsx");\n/* harmony import */ var _helpers_dialog_buttons_jsx__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./helpers/dialog-buttons.jsx */ "./App/Containers/RealAccountSignup/helpers/dialog-buttons.jsx");\n/* harmony import */ var _deriv_stores__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @deriv/stores */ "../../../node_modules/mobx-react-lite/es/index.js");\n/* harmony import */ var _deriv_stores__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @deriv/stores */ "../../stores/src/useStore.ts");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! react/jsx-runtime */ "../../../node_modules/react/jsx-runtime.js");\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst MainIcon = _ref => {\n  let {\n    currency\n  } = _ref;\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.Icon, {\n    icon: `IcCurrency-${currency.toLowerCase()}`,\n    size: 120\n  });\n};\nconst Checkmark = _ref2 => {\n  let {\n    className\n  } = _ref2;\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.Icon, {\n    className: className,\n    icon: "IcCheckmarkCircle",\n    color: "green",\n    size: 24\n  });\n};\nconst Warning = _ref3 => {\n  let {\n    className\n  } = _ref3;\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.Icon, {\n    className: className,\n    icon: "IcAlertDanger",\n    size: 24\n  });\n};\nconst Danger = _ref4 => {\n  let {\n    className\n  } = _ref4;\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.Icon, {\n    className: className,\n    icon: "IcCrossCircle",\n    size: 24,\n    color: "red"\n  });\n};\nconst CloseIcon = _ref5 => {\n  let {\n    closeModal\n  } = _ref5;\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)("div", {\n    onClick: closeModal,\n    className: "status-dialog__close",\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.Icon, {\n      icon: "IcCross"\n    })\n  });\n};\nconst StatusDialogContainer = (0,_deriv_stores__WEBPACK_IMPORTED_MODULE_9__.observer)(_ref6 => {\n  let {\n    closeModal,\n    currency,\n    history,\n    icon_size\n  } = _ref6;\n  const {\n    isDesktop\n  } = (0,_deriv_com_ui__WEBPACK_IMPORTED_MODULE_10__.useDevice)();\n  const {\n    client\n  } = (0,_deriv_stores__WEBPACK_IMPORTED_MODULE_11__["default"])();\n  const {\n    landing_company_shortcode,\n    is_fully_authenticated\n  } = client;\n  const closeModalAndOpenCashier = () => {\n    closeModal();\n    history.push(_deriv_shared__WEBPACK_IMPORTED_MODULE_3__.routes.cashier_deposit);\n  };\n  const closeModalAndOpenPOI = () => {\n    closeModal();\n    history.push(_deriv_shared__WEBPACK_IMPORTED_MODULE_3__.routes.proof_of_identity);\n  };\n  const closeModalAndOpenPOA = () => {\n    closeModal();\n    history.push(_deriv_shared__WEBPACK_IMPORTED_MODULE_3__.routes.proof_of_address);\n  };\n\n  /**\n   * Get the status for the current account\n   *\n   * @readonly\n   * @return {EXPERIAN} status\n   */\n  const getStatus = () => (0,_helpers_constants__WEBPACK_IMPORTED_MODULE_4__.getExperianResult)({\n    landing_company_shortcode\n  });\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.Div100vhContainer, {\n    className: "status-dialog",\n    is_disabled: isDesktop,\n    height_offset: "40px",\n    children: [isDesktop && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(CloseIcon, {\n      closeModal: closeModal\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)("div", {\n      className: classnames__WEBPACK_IMPORTED_MODULE_0___default()(\'status-dialog__header\', {\n        \'status-dialog__header--large\': icon_size === \'large\',\n        \'status-dialog__header--xlarge\': icon_size === \'xlarge\'\n      }),\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(MainIcon, {\n        currency: currency\n      }), getStatus() === _helpers_constants__WEBPACK_IMPORTED_MODULE_4__.EXPERIAN.SUCCESS && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(Checkmark, {\n        className: "bottom-right-overlay"\n      }), getStatus() === _helpers_constants__WEBPACK_IMPORTED_MODULE_4__.EXPERIAN.WARN && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(Warning, {\n        className: "bottom-right-overlay"\n      }), getStatus() === _helpers_constants__WEBPACK_IMPORTED_MODULE_4__.EXPERIAN.DANGER && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(Danger, {\n        className: "bottom-right-overlay"\n      })]\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)("div", {\n      className: classnames__WEBPACK_IMPORTED_MODULE_0___default()(\'status-dialog__body\', {\n        \'status-dialog__body--no-grow\': !isDesktop\n      }),\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_helpers_dialog_heading_jsx__WEBPACK_IMPORTED_MODULE_5__.DialogHeading, {}), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_helpers_dialog_message_jsx__WEBPACK_IMPORTED_MODULE_6__.DialogMessage, {\n        is_fully_authenticated: is_fully_authenticated,\n        landing_company_shortcode: landing_company_shortcode,\n        status: getStatus()\n      })]\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_helpers_dialog_buttons_jsx__WEBPACK_IMPORTED_MODULE_7__.DialogButtons, {\n      closeModal: closeModal,\n      closeModalAndOpenPOI: closeModalAndOpenPOI,\n      closeModalAndOpenPOA: closeModalAndOpenPOA,\n      closeModalAndOpenCashier: closeModalAndOpenCashier,\n      is_fully_authenticated: is_fully_authenticated,\n      landing_company_shortcode: landing_company_shortcode,\n      status: getStatus()\n    })]\n  });\n});\nStatusDialogContainer.defaultProps = {\n  icon_size: \'large\'\n};\nStatusDialogContainer.propTypes = {\n  closeModal: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().func),\n  currency: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().string),\n  history: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().object),\n  icon: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().object),\n  icon_size: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().string)\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,react_router_dom__WEBPACK_IMPORTED_MODULE_13__.withRouter)(StatusDialogContainer));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9BcHAvQ29udGFpbmVycy9SZWFsQWNjb3VudFNpZ251cC9zdGF0dXMtZGlhbG9nLWNvbnRhaW5lci5qc3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUVBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFHQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUVBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUdBO0FBQ0E7QUFDQTtBQUFBO0FBSUE7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUdBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL0FwcC9Db250YWluZXJzL1JlYWxBY2NvdW50U2lnbnVwL3N0YXR1cy1kaWFsb2ctY29udGFpbmVyLmpzeD9jZjcyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyB3aXRoUm91dGVyIH0gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSc7XG5pbXBvcnQgeyB1c2VEZXZpY2UgfSBmcm9tICdAZGVyaXYtY29tL3VpJztcbmltcG9ydCB7IERpdjEwMHZoQ29udGFpbmVyLCBJY29uIH0gZnJvbSAnQGRlcml2L2NvbXBvbmVudHMnO1xuaW1wb3J0IHsgcm91dGVzIH0gZnJvbSAnQGRlcml2L3NoYXJlZCc7XG5pbXBvcnQgeyBFWFBFUklBTiwgZ2V0RXhwZXJpYW5SZXN1bHQgfSBmcm9tICcuL2hlbHBlcnMvY29uc3RhbnRzJztcbmltcG9ydCB7IERpYWxvZ0hlYWRpbmcgfSBmcm9tICcuL2hlbHBlcnMvZGlhbG9nLWhlYWRpbmcuanN4JztcbmltcG9ydCB7IERpYWxvZ01lc3NhZ2UgfSBmcm9tICcuL2hlbHBlcnMvZGlhbG9nLW1lc3NhZ2UuanN4JztcbmltcG9ydCB7IERpYWxvZ0J1dHRvbnMgfSBmcm9tICcuL2hlbHBlcnMvZGlhbG9nLWJ1dHRvbnMuanN4JztcbmltcG9ydCB7IG9ic2VydmVyLCB1c2VTdG9yZSB9IGZyb20gJ0BkZXJpdi9zdG9yZXMnO1xuXG5jb25zdCBNYWluSWNvbiA9ICh7IGN1cnJlbmN5IH0pID0+IDxJY29uIGljb249e2BJY0N1cnJlbmN5LSR7Y3VycmVuY3kudG9Mb3dlckNhc2UoKX1gfSBzaXplPXsxMjB9IC8+O1xuY29uc3QgQ2hlY2ttYXJrID0gKHsgY2xhc3NOYW1lIH0pID0+IDxJY29uIGNsYXNzTmFtZT17Y2xhc3NOYW1lfSBpY29uPSdJY0NoZWNrbWFya0NpcmNsZScgY29sb3I9J2dyZWVuJyBzaXplPXsyNH0gLz47XG5jb25zdCBXYXJuaW5nID0gKHsgY2xhc3NOYW1lIH0pID0+IDxJY29uIGNsYXNzTmFtZT17Y2xhc3NOYW1lfSBpY29uPSdJY0FsZXJ0RGFuZ2VyJyBzaXplPXsyNH0gLz47XG5jb25zdCBEYW5nZXIgPSAoeyBjbGFzc05hbWUgfSkgPT4gPEljb24gY2xhc3NOYW1lPXtjbGFzc05hbWV9IGljb249J0ljQ3Jvc3NDaXJjbGUnIHNpemU9ezI0fSBjb2xvcj0ncmVkJyAvPjtcbmNvbnN0IENsb3NlSWNvbiA9ICh7IGNsb3NlTW9kYWwgfSkgPT4gKFxuICAgIDxkaXYgb25DbGljaz17Y2xvc2VNb2RhbH0gY2xhc3NOYW1lPSdzdGF0dXMtZGlhbG9nX19jbG9zZSc+XG4gICAgICAgIDxJY29uIGljb249J0ljQ3Jvc3MnIC8+XG4gICAgPC9kaXY+XG4pO1xuXG5jb25zdCBTdGF0dXNEaWFsb2dDb250YWluZXIgPSBvYnNlcnZlcigoeyBjbG9zZU1vZGFsLCBjdXJyZW5jeSwgaGlzdG9yeSwgaWNvbl9zaXplIH0pID0+IHtcbiAgICBjb25zdCB7IGlzRGVza3RvcCB9ID0gdXNlRGV2aWNlKCk7XG4gICAgY29uc3QgeyBjbGllbnQgfSA9IHVzZVN0b3JlKCk7XG4gICAgY29uc3QgeyBsYW5kaW5nX2NvbXBhbnlfc2hvcnRjb2RlLCBpc19mdWxseV9hdXRoZW50aWNhdGVkIH0gPSBjbGllbnQ7XG4gICAgY29uc3QgY2xvc2VNb2RhbEFuZE9wZW5DYXNoaWVyID0gKCkgPT4ge1xuICAgICAgICBjbG9zZU1vZGFsKCk7XG4gICAgICAgIGhpc3RvcnkucHVzaChyb3V0ZXMuY2FzaGllcl9kZXBvc2l0KTtcbiAgICB9O1xuXG4gICAgY29uc3QgY2xvc2VNb2RhbEFuZE9wZW5QT0kgPSAoKSA9PiB7XG4gICAgICAgIGNsb3NlTW9kYWwoKTtcbiAgICAgICAgaGlzdG9yeS5wdXNoKHJvdXRlcy5wcm9vZl9vZl9pZGVudGl0eSk7XG4gICAgfTtcblxuICAgIGNvbnN0IGNsb3NlTW9kYWxBbmRPcGVuUE9BID0gKCkgPT4ge1xuICAgICAgICBjbG9zZU1vZGFsKCk7XG4gICAgICAgIGhpc3RvcnkucHVzaChyb3V0ZXMucHJvb2Zfb2ZfYWRkcmVzcyk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIEdldCB0aGUgc3RhdHVzIGZvciB0aGUgY3VycmVudCBhY2NvdW50XG4gICAgICpcbiAgICAgKiBAcmVhZG9ubHlcbiAgICAgKiBAcmV0dXJuIHtFWFBFUklBTn0gc3RhdHVzXG4gICAgICovXG4gICAgY29uc3QgZ2V0U3RhdHVzID0gKCkgPT5cbiAgICAgICAgZ2V0RXhwZXJpYW5SZXN1bHQoe1xuICAgICAgICAgICAgbGFuZGluZ19jb21wYW55X3Nob3J0Y29kZSxcbiAgICAgICAgfSk7XG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8RGl2MTAwdmhDb250YWluZXIgY2xhc3NOYW1lPSdzdGF0dXMtZGlhbG9nJyBpc19kaXNhYmxlZD17aXNEZXNrdG9wfSBoZWlnaHRfb2Zmc2V0PSc0MHB4Jz5cbiAgICAgICAgICAgIHtpc0Rlc2t0b3AgJiYgPENsb3NlSWNvbiBjbG9zZU1vZGFsPXtjbG9zZU1vZGFsfSAvPn1cbiAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9e2NsYXNzTmFtZXMoJ3N0YXR1cy1kaWFsb2dfX2hlYWRlcicsIHtcbiAgICAgICAgICAgICAgICAgICAgJ3N0YXR1cy1kaWFsb2dfX2hlYWRlci0tbGFyZ2UnOiBpY29uX3NpemUgPT09ICdsYXJnZScsXG4gICAgICAgICAgICAgICAgICAgICdzdGF0dXMtZGlhbG9nX19oZWFkZXItLXhsYXJnZSc6IGljb25fc2l6ZSA9PT0gJ3hsYXJnZScsXG4gICAgICAgICAgICAgICAgfSl9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgPE1haW5JY29uIGN1cnJlbmN5PXtjdXJyZW5jeX0gLz5cbiAgICAgICAgICAgICAgICB7Z2V0U3RhdHVzKCkgPT09IEVYUEVSSUFOLlNVQ0NFU1MgJiYgPENoZWNrbWFyayBjbGFzc05hbWU9J2JvdHRvbS1yaWdodC1vdmVybGF5JyAvPn1cbiAgICAgICAgICAgICAgICB7Z2V0U3RhdHVzKCkgPT09IEVYUEVSSUFOLldBUk4gJiYgPFdhcm5pbmcgY2xhc3NOYW1lPSdib3R0b20tcmlnaHQtb3ZlcmxheScgLz59XG4gICAgICAgICAgICAgICAge2dldFN0YXR1cygpID09PSBFWFBFUklBTi5EQU5HRVIgJiYgPERhbmdlciBjbGFzc05hbWU9J2JvdHRvbS1yaWdodC1vdmVybGF5JyAvPn1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17Y2xhc3NOYW1lcygnc3RhdHVzLWRpYWxvZ19fYm9keScsIHtcbiAgICAgICAgICAgICAgICAgICAgJ3N0YXR1cy1kaWFsb2dfX2JvZHktLW5vLWdyb3cnOiAhaXNEZXNrdG9wLFxuICAgICAgICAgICAgICAgIH0pfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIDxEaWFsb2dIZWFkaW5nIC8+XG4gICAgICAgICAgICAgICAgPERpYWxvZ01lc3NhZ2VcbiAgICAgICAgICAgICAgICAgICAgaXNfZnVsbHlfYXV0aGVudGljYXRlZD17aXNfZnVsbHlfYXV0aGVudGljYXRlZH1cbiAgICAgICAgICAgICAgICAgICAgbGFuZGluZ19jb21wYW55X3Nob3J0Y29kZT17bGFuZGluZ19jb21wYW55X3Nob3J0Y29kZX1cbiAgICAgICAgICAgICAgICAgICAgc3RhdHVzPXtnZXRTdGF0dXMoKX1cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8RGlhbG9nQnV0dG9uc1xuICAgICAgICAgICAgICAgIGNsb3NlTW9kYWw9e2Nsb3NlTW9kYWx9XG4gICAgICAgICAgICAgICAgY2xvc2VNb2RhbEFuZE9wZW5QT0k9e2Nsb3NlTW9kYWxBbmRPcGVuUE9JfVxuICAgICAgICAgICAgICAgIGNsb3NlTW9kYWxBbmRPcGVuUE9BPXtjbG9zZU1vZGFsQW5kT3BlblBPQX1cbiAgICAgICAgICAgICAgICBjbG9zZU1vZGFsQW5kT3BlbkNhc2hpZXI9e2Nsb3NlTW9kYWxBbmRPcGVuQ2FzaGllcn1cbiAgICAgICAgICAgICAgICBpc19mdWxseV9hdXRoZW50aWNhdGVkPXtpc19mdWxseV9hdXRoZW50aWNhdGVkfVxuICAgICAgICAgICAgICAgIGxhbmRpbmdfY29tcGFueV9zaG9ydGNvZGU9e2xhbmRpbmdfY29tcGFueV9zaG9ydGNvZGV9XG4gICAgICAgICAgICAgICAgc3RhdHVzPXtnZXRTdGF0dXMoKX1cbiAgICAgICAgICAgIC8+XG4gICAgICAgIDwvRGl2MTAwdmhDb250YWluZXI+XG4gICAgKTtcbn0pO1xuXG5TdGF0dXNEaWFsb2dDb250YWluZXIuZGVmYXVsdFByb3BzID0ge1xuICAgIGljb25fc2l6ZTogJ2xhcmdlJyxcbn07XG5cblN0YXR1c0RpYWxvZ0NvbnRhaW5lci5wcm9wVHlwZXMgPSB7XG4gICAgY2xvc2VNb2RhbDogUHJvcFR5cGVzLmZ1bmMsXG4gICAgY3VycmVuY3k6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgaGlzdG9yeTogUHJvcFR5cGVzLm9iamVjdCxcbiAgICBpY29uOiBQcm9wVHlwZXMub2JqZWN0LFxuICAgIGljb25fc2l6ZTogUHJvcFR5cGVzLnN0cmluZyxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHdpdGhSb3V0ZXIoU3RhdHVzRGlhbG9nQ29udGFpbmVyKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./App/Containers/RealAccountSignup/status-dialog-container.jsx\n'
                );

                /***/
            },

        /***/ '../../hooks/src/usePaymentAgentList.ts':
            /*!**********************************************!*\
  !*** ../../hooks/src/usePaymentAgentList.ts ***!
  \**********************************************/
            /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                'use strict';
                eval(
                    '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _deriv_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @deriv/api */ "../../api/src/useQuery.ts");\n/* harmony import */ var _deriv_stores__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @deriv/stores */ "../../stores/src/useStore.ts");\nconst _excluded = ["data"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }\nfunction _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }\n\n\nconst usePaymentAgentList = currency => {\n  var _data$paymentagent_li;\n  const {\n    client\n  } = (0,_deriv_stores__WEBPACK_IMPORTED_MODULE_0__["default"])();\n  const {\n    residence\n  } = client;\n  const _useFetch = (0,_deriv_api__WEBPACK_IMPORTED_MODULE_1__["default"])(\'paymentagent_list\', {\n      payload: {\n        paymentagent_list: residence,\n        currency\n      },\n      options: {\n        enabled: Boolean(residence)\n      }\n    }),\n    {\n      data\n    } = _useFetch,\n    rest = _objectWithoutProperties(_useFetch, _excluded);\n  return _objectSpread({\n    data: data === null || data === void 0 || (_data$paymentagent_li = data.paymentagent_list) === null || _data$paymentagent_li === void 0 ? void 0 : _data$paymentagent_li.list\n  }, rest);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (usePaymentAgentList);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vaG9va3Mvc3JjL3VzZVBheW1lbnRBZ2VudExpc3QudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBRUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUVBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUhBO0FBQUE7QUFBQTtBQUFBO0FBS0E7QUFDQTtBQUFBO0FBR0E7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi8uLi9ob29rcy9zcmMvdXNlUGF5bWVudEFnZW50TGlzdC50cz8yNTA2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZUZldGNoIH0gZnJvbSAnQGRlcml2L2FwaSc7XG5pbXBvcnQgeyB1c2VTdG9yZSB9IGZyb20gJ0BkZXJpdi9zdG9yZXMnO1xuXG5jb25zdCB1c2VQYXltZW50QWdlbnRMaXN0ID0gKGN1cnJlbmN5Pzogc3RyaW5nKSA9PiB7XG4gICAgY29uc3QgeyBjbGllbnQgfSA9IHVzZVN0b3JlKCk7XG4gICAgY29uc3QgeyByZXNpZGVuY2UgfSA9IGNsaWVudDtcblxuICAgIGNvbnN0IHsgZGF0YSwgLi4ucmVzdCB9ID0gdXNlRmV0Y2goJ3BheW1lbnRhZ2VudF9saXN0Jywge1xuICAgICAgICBwYXlsb2FkOiB7IHBheW1lbnRhZ2VudF9saXN0OiByZXNpZGVuY2UsIGN1cnJlbmN5IH0sXG4gICAgICAgIG9wdGlvbnM6IHsgZW5hYmxlZDogQm9vbGVhbihyZXNpZGVuY2UpIH0sXG4gICAgfSk7XG5cbiAgICByZXR1cm4ge1xuICAgICAgICBkYXRhOiBkYXRhPy5wYXltZW50YWdlbnRfbGlzdD8ubGlzdCxcbiAgICAgICAgLi4ucmVzdCxcbiAgICB9O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgdXNlUGF5bWVudEFnZW50TGlzdDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../hooks/src/usePaymentAgentList.ts\n'
                );

                /***/
            },
    },
]);
