/*! For license information please see smartcharts.js.LICENSE.txt */
!(function (t, e) {
    'object' == typeof exports && 'object' == typeof module
        ? (module.exports = e(
              require('react-dom'),
              require('react-transition-group'),
              require('react'),
              require('moment')
          ))
        : 'function' == typeof define && define.amd
          ? define([, , ,], e)
          : 'object' == typeof exports
            ? (exports.smartcharts = e(
                  require('react-dom'),
                  require('react-transition-group'),
                  require('react'),
                  require('moment')
              ))
            : (t.smartcharts = e(t.ReactDOM, t.ReactTransitionGroup, t.React, t.moment));
})(self, (t, e, r, i) =>
    (() => {
        var a,
            n,
            s,
            o,
            l = {
                12: t => {
                    'use strict';
                    var e = (function () {
                            function t(t, e) {
                                for (var r = 0; r < e.length; r++) {
                                    var i = e[r];
                                    (i.enumerable = i.enumerable || !1),
                                        (i.configurable = !0),
                                        'value' in i && (i.writable = !0),
                                        Object.defineProperty(t, i.key, i);
                                }
                            }
                            return function (e, r, i) {
                                return r && t(e.prototype, r), i && t(e, i), e;
                            };
                        })(),
                        r = { emitDelay: 10, strictMode: !1 },
                        i = (function () {
                            function t() {
                                var e = arguments.length <= 0 || void 0 === arguments[0] ? r : arguments[0];
                                !(function (t, e) {
                                    if (!(t instanceof e)) throw new TypeError('Cannot call a class as a function');
                                })(this, t);
                                var i, a;
                                (i = e.hasOwnProperty('emitDelay') ? e.emitDelay : r.emitDelay),
                                    (this._emitDelay = i),
                                    (a = e.hasOwnProperty('strictMode') ? e.strictMode : r.strictMode),
                                    (this._strictMode = a),
                                    (this._listeners = {}),
                                    (this.events = []);
                            }
                            return (
                                e(t, [
                                    {
                                        key: '_addListenner',
                                        value: function (t, e, r) {
                                            if ('function' != typeof e) throw TypeError('listener must be a function');
                                            -1 === this.events.indexOf(t)
                                                ? ((this._listeners[t] = [{ once: r, fn: e }]), this.events.push(t))
                                                : this._listeners[t].push({ once: r, fn: e });
                                        },
                                    },
                                    {
                                        key: 'on',
                                        value: function (t, e) {
                                            this._addListenner(t, e, !1);
                                        },
                                    },
                                    {
                                        key: 'once',
                                        value: function (t, e) {
                                            this._addListenner(t, e, !0);
                                        },
                                    },
                                    {
                                        key: 'off',
                                        value: function (t, e) {
                                            var r,
                                                i,
                                                a = this,
                                                n = this.events.indexOf(t);
                                            t &&
                                                -1 !== n &&
                                                (e
                                                    ? ((r = []),
                                                      (i = a._listeners[t]).forEach(function (t, i) {
                                                          t.fn === e && r.unshift(i);
                                                      }),
                                                      r.forEach(function (t) {
                                                          i.splice(t, 1);
                                                      }),
                                                      i.length || (a.events.splice(n, 1), delete a._listeners[t]))
                                                    : (delete this._listeners[t], this.events.splice(n, 1)));
                                        },
                                    },
                                    {
                                        key: '_applyEvents',
                                        value: function (t, e) {
                                            var r = this._listeners[t];
                                            if (r && r.length) {
                                                var i = [];
                                                r.forEach(function (t, r) {
                                                    t.fn.apply(null, e), t.once && i.unshift(r);
                                                }),
                                                    i.forEach(function (t) {
                                                        r.splice(t, 1);
                                                    });
                                            } else if (this._strictMode) throw 'No listeners specified for event: ' + t;
                                        },
                                    },
                                    {
                                        key: 'emit',
                                        value: function (t) {
                                            for (
                                                var e = this, r = arguments.length, i = Array(r > 1 ? r - 1 : 0), a = 1;
                                                a < r;
                                                a++
                                            )
                                                i[a - 1] = arguments[a];
                                            this._emitDelay
                                                ? setTimeout(function () {
                                                      e._applyEvents.call(e, t, i);
                                                  }, this._emitDelay)
                                                : this._applyEvents(t, i);
                                        },
                                    },
                                    {
                                        key: 'emitSync',
                                        value: function (t) {
                                            for (
                                                var e = arguments.length, r = Array(e > 1 ? e - 1 : 0), i = 1;
                                                i < e;
                                                i++
                                            )
                                                r[i - 1] = arguments[i];
                                            this._applyEvents(t, r);
                                        },
                                    },
                                    {
                                        key: 'destroy',
                                        value: function () {
                                            (this._listeners = {}), (this.events = []);
                                        },
                                    },
                                ]),
                                t
                            );
                        })();
                    t.exports = i;
                },
                730: (t, e, r) => {
                    var i = /^\s+|\s+$/g,
                        a = /^[-+]0x[0-9a-f]+$/i,
                        n = /^0b[01]+$/i,
                        s = /^0o[0-7]+$/i,
                        o = parseInt,
                        l = 'object' == typeof r.g && r.g && r.g.Object === Object && r.g,
                        c = 'object' == typeof self && self && self.Object === Object && self,
                        h = l || c || Function('return this')(),
                        u = Object.prototype.toString,
                        d = Math.max,
                        g = Math.min,
                        m = function () {
                            return h.Date.now();
                        };
                    function p(t) {
                        var e = typeof t;
                        return !!t && ('object' == e || 'function' == e);
                    }
                    function f(t) {
                        if ('number' == typeof t) return t;
                        if (
                            (function (t) {
                                return (
                                    'symbol' == typeof t ||
                                    ((function (t) {
                                        return !!t && 'object' == typeof t;
                                    })(t) &&
                                        '[object Symbol]' == u.call(t))
                                );
                            })(t)
                        )
                            return NaN;
                        if (p(t)) {
                            var e = 'function' == typeof t.valueOf ? t.valueOf() : t;
                            t = p(e) ? e + '' : e;
                        }
                        if ('string' != typeof t) return 0 === t ? t : +t;
                        t = t.replace(i, '');
                        var r = n.test(t);
                        return r || s.test(t) ? o(t.slice(2), r ? 2 : 8) : a.test(t) ? NaN : +t;
                    }
                    t.exports = function (t, e, r) {
                        var i,
                            a,
                            n,
                            s,
                            o,
                            l,
                            c = 0,
                            h = !1,
                            u = !1,
                            _ = !0;
                        if ('function' != typeof t) throw new TypeError('Expected a function');
                        function v(e) {
                            var r = i,
                                n = a;
                            return (i = a = void 0), (c = e), (s = t.apply(n, r));
                        }
                        function b(t) {
                            var r = t - l;
                            return void 0 === l || r >= e || r < 0 || (u && t - c >= n);
                        }
                        function y() {
                            var t = m();
                            if (b(t)) return S(t);
                            o = setTimeout(
                                y,
                                (function (t) {
                                    var r = e - (t - l);
                                    return u ? g(r, n - (t - c)) : r;
                                })(t)
                            );
                        }
                        function S(t) {
                            return (o = void 0), _ && i ? v(t) : ((i = a = void 0), s);
                        }
                        function w() {
                            var t = m(),
                                r = b(t);
                            if (((i = arguments), (a = this), (l = t), r)) {
                                if (void 0 === o)
                                    return (function (t) {
                                        return (c = t), (o = setTimeout(y, e)), h ? v(t) : s;
                                    })(l);
                                if (u) return (o = setTimeout(y, e)), v(l);
                            }
                            return void 0 === o && (o = setTimeout(y, e)), s;
                        }
                        return (
                            (e = f(e) || 0),
                            p(r) &&
                                ((h = !!r.leading),
                                (n = (u = 'maxWait' in r) ? d(f(r.maxWait) || 0, e) : n),
                                (_ = 'trailing' in r ? !!r.trailing : _)),
                            (w.cancel = function () {
                                void 0 !== o && clearTimeout(o), (c = 0), (i = l = a = o = void 0);
                            }),
                            (w.flush = function () {
                                return void 0 === o ? s : S(m());
                            }),
                            w
                        );
                    };
                },
                6571: (t, e, r) => {
                    var i,
                        a = '__lodash_hash_undefined__',
                        n = 1 / 0,
                        s = 9007199254740991,
                        o = '[object Function]',
                        l = '[object GeneratorFunction]',
                        c = '[object Symbol]',
                        h = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
                        u = /^\w*$/,
                        d = /^\./,
                        g =
                            /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,
                        m = /\\(\\)?/g,
                        p = /^\[object .+?Constructor\]$/,
                        f = /^(?:0|[1-9]\d*)$/,
                        _ = 'object' == typeof r.g && r.g && r.g.Object === Object && r.g,
                        v = 'object' == typeof self && self && self.Object === Object && self,
                        b = _ || v || Function('return this')(),
                        y = Array.prototype,
                        S = Function.prototype,
                        w = Object.prototype,
                        C = b['__core-js_shared__'],
                        E = (i = /[^.]+$/.exec((C && C.keys && C.keys.IE_PROTO) || '')) ? 'Symbol(src)_1.' + i : '',
                        x = S.toString,
                        T = w.hasOwnProperty,
                        k = w.toString,
                        A = RegExp(
                            '^' +
                                x
                                    .call(T)
                                    .replace(/[\\^$.*+?()[\]{}|]/g, '\\$&')
                                    .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') +
                                '$'
                        ),
                        O = b.Symbol,
                        N = y.splice,
                        I = H(b, 'Map'),
                        D = H(Object, 'create'),
                        P = O ? O.prototype : void 0,
                        L = P ? P.toString : void 0;
                    function M(t) {
                        var e = -1,
                            r = t ? t.length : 0;
                        for (this.clear(); ++e < r; ) {
                            var i = t[e];
                            this.set(i[0], i[1]);
                        }
                    }
                    function B(t) {
                        var e = -1,
                            r = t ? t.length : 0;
                        for (this.clear(); ++e < r; ) {
                            var i = t[e];
                            this.set(i[0], i[1]);
                        }
                    }
                    function R(t) {
                        var e = -1,
                            r = t ? t.length : 0;
                        for (this.clear(); ++e < r; ) {
                            var i = t[e];
                            this.set(i[0], i[1]);
                        }
                    }
                    function j(t, e, r) {
                        var i = t[e];
                        (T.call(t, e) && G(i, r) && (void 0 !== r || e in t)) || (t[e] = r);
                    }
                    function F(t, e) {
                        for (var r = t.length; r--; ) if (G(t[r][0], e)) return r;
                        return -1;
                    }
                    function V(t, e) {
                        var r,
                            i,
                            a = t.__data__;
                        return (
                            'string' == (i = typeof (r = e)) || 'number' == i || 'symbol' == i || 'boolean' == i
                                ? '__proto__' !== r
                                : null === r
                        )
                            ? a['string' == typeof e ? 'string' : 'hash']
                            : a.map;
                    }
                    function H(t, e) {
                        var r = (function (t, e) {
                            return null == t ? void 0 : t[e];
                        })(t, e);
                        return (function (t) {
                            if (!K(t) || (E && E in t)) return !1;
                            var e =
                                (function (t) {
                                    var e = K(t) ? k.call(t) : '';
                                    return e == o || e == l;
                                })(t) ||
                                (function (t) {
                                    var e = !1;
                                    if (null != t && 'function' != typeof t.toString)
                                        try {
                                            e = !!(t + '');
                                        } catch (t) {}
                                    return e;
                                })(t)
                                    ? A
                                    : p;
                            return e.test(
                                (function (t) {
                                    if (null != t) {
                                        try {
                                            return x.call(t);
                                        } catch (t) {}
                                        try {
                                            return t + '';
                                        } catch (t) {}
                                    }
                                    return '';
                                })(t)
                            );
                        })(r)
                            ? r
                            : void 0;
                    }
                    function q(t, e) {
                        return (
                            !!(e = null == e ? s : e) &&
                            ('number' == typeof t || f.test(t)) &&
                            t > -1 &&
                            t % 1 == 0 &&
                            t < e
                        );
                    }
                    (M.prototype.clear = function () {
                        this.__data__ = D ? D(null) : {};
                    }),
                        (M.prototype.delete = function (t) {
                            return this.has(t) && delete this.__data__[t];
                        }),
                        (M.prototype.get = function (t) {
                            var e = this.__data__;
                            if (D) {
                                var r = e[t];
                                return r === a ? void 0 : r;
                            }
                            return T.call(e, t) ? e[t] : void 0;
                        }),
                        (M.prototype.has = function (t) {
                            var e = this.__data__;
                            return D ? void 0 !== e[t] : T.call(e, t);
                        }),
                        (M.prototype.set = function (t, e) {
                            return (this.__data__[t] = D && void 0 === e ? a : e), this;
                        }),
                        (B.prototype.clear = function () {
                            this.__data__ = [];
                        }),
                        (B.prototype.delete = function (t) {
                            var e = this.__data__,
                                r = F(e, t);
                            return !(r < 0 || (r == e.length - 1 ? e.pop() : N.call(e, r, 1), 0));
                        }),
                        (B.prototype.get = function (t) {
                            var e = this.__data__,
                                r = F(e, t);
                            return r < 0 ? void 0 : e[r][1];
                        }),
                        (B.prototype.has = function (t) {
                            return F(this.__data__, t) > -1;
                        }),
                        (B.prototype.set = function (t, e) {
                            var r = this.__data__,
                                i = F(r, t);
                            return i < 0 ? r.push([t, e]) : (r[i][1] = e), this;
                        }),
                        (R.prototype.clear = function () {
                            this.__data__ = { hash: new M(), map: new (I || B)(), string: new M() };
                        }),
                        (R.prototype.delete = function (t) {
                            return V(this, t).delete(t);
                        }),
                        (R.prototype.get = function (t) {
                            return V(this, t).get(t);
                        }),
                        (R.prototype.has = function (t) {
                            return V(this, t).has(t);
                        }),
                        (R.prototype.set = function (t, e) {
                            return V(this, t).set(t, e), this;
                        });
                    var U = z(function (t) {
                        var e;
                        t =
                            null == (e = t)
                                ? ''
                                : (function (t) {
                                      if ('string' == typeof t) return t;
                                      if (X(t)) return L ? L.call(t) : '';
                                      var e = t + '';
                                      return '0' == e && 1 / t == -n ? '-0' : e;
                                  })(e);
                        var r = [];
                        return (
                            d.test(t) && r.push(''),
                            t.replace(g, function (t, e, i, a) {
                                r.push(i ? a.replace(m, '$1') : e || t);
                            }),
                            r
                        );
                    });
                    function $(t) {
                        if ('string' == typeof t || X(t)) return t;
                        var e = t + '';
                        return '0' == e && 1 / t == -n ? '-0' : e;
                    }
                    function z(t, e) {
                        if ('function' != typeof t || (e && 'function' != typeof e))
                            throw new TypeError('Expected a function');
                        var r = function () {
                            var i = arguments,
                                a = e ? e.apply(this, i) : i[0],
                                n = r.cache;
                            if (n.has(a)) return n.get(a);
                            var s = t.apply(this, i);
                            return (r.cache = n.set(a, s)), s;
                        };
                        return (r.cache = new (z.Cache || R)()), r;
                    }
                    function G(t, e) {
                        return t === e || (t != t && e != e);
                    }
                    z.Cache = R;
                    var W = Array.isArray;
                    function K(t) {
                        var e = typeof t;
                        return !!t && ('object' == e || 'function' == e);
                    }
                    function X(t) {
                        return (
                            'symbol' == typeof t ||
                            ((function (t) {
                                return !!t && 'object' == typeof t;
                            })(t) &&
                                k.call(t) == c)
                        );
                    }
                    t.exports = function (t, e, r) {
                        return null == t
                            ? t
                            : (function (t, e, r, i) {
                                  if (!K(t)) return t;
                                  e = (function (t, e) {
                                      if (W(t)) return !1;
                                      var r = typeof t;
                                      return (
                                          !('number' != r && 'symbol' != r && 'boolean' != r && null != t && !X(t)) ||
                                          u.test(t) ||
                                          !h.test(t) ||
                                          (null != e && t in Object(e))
                                      );
                                  })(e, t)
                                      ? [e]
                                      : (function (t) {
                                            return W(t) ? t : U(t);
                                        })(e);
                                  for (var a = -1, n = e.length, s = n - 1, o = t; null != o && ++a < n; ) {
                                      var l = $(e[a]),
                                          c = r;
                                      if (a != s) {
                                          var d = o[l];
                                          void 0 === (c = i ? i(d, l, o) : void 0) &&
                                              (c = K(d) ? d : q(e[a + 1]) ? [] : {});
                                      }
                                      j(o, l, c), (o = o[l]);
                                  }
                                  return t;
                              })(t, e, r);
                    };
                },
                9160: (t, e, r) => {
                    'use strict';
                    r.d(e, { t: () => a });
                    const i = {},
                        a = new (class {
                            constructor() {
                                let t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 'en';
                                var e, r, i;
                                (e = this),
                                    (i = void 0),
                                    (r = (function (t) {
                                        var e = (function (t, e) {
                                            if ('object' != typeof t || !t) return t;
                                            var r = t[Symbol.toPrimitive];
                                            if (void 0 !== r) {
                                                var i = r.call(t, 'string');
                                                if ('object' != typeof i) return i;
                                                throw new TypeError('@@toPrimitive must return a primitive value.');
                                            }
                                            return String(t);
                                        })(t);
                                        return 'symbol' == typeof e ? e : String(e);
                                    })((r = 'lang'))),
                                    r in e
                                        ? Object.defineProperty(e, r, {
                                              value: i,
                                              enumerable: !0,
                                              configurable: !0,
                                              writable: !0,
                                          })
                                        : (e[r] = i),
                                    (this.lang = t);
                            }
                            setLanguage(t, e) {
                                i[t] || 'en' === t
                                    ? ((this.lang = t), e?.())
                                    : r(6648)(`./${t}.json`).then(r => {
                                          r
                                              ? ((i[t] = r.default), (this.lang = t), e?.())
                                              : console.error('Unsupported language:', t);
                                      });
                            }
                            translate() {
                                for (var t = arguments.length, e = new Array(t), r = 0; r < t; r++) e[r] = arguments[r];
                                const a = i[this.lang],
                                    n = e[0].trim(),
                                    s = n.replace(/"/gi, '\\"');
                                let o = n,
                                    l = !1;
                                return (
                                    a && a[n] ? (o = a[n]) : a && a[s] && ((o = a[s]), (l = !0)),
                                    e[1] &&
                                        Object.keys(e[1]).forEach(t => {
                                            o = o.replace(`[${t}]`, e[1][t]);
                                        }),
                                    l ? o.replace(/\\\"/gi, '"') : o
                                );
                            }
                        })();
                },
                9758: () => {
                    var t;
                    HTMLCanvasElement.prototype.getContext =
                        ((t = HTMLCanvasElement.prototype.getContext),
                        function (e, r) {
                            return ((r = r || {}).preserveDrawingBuffer = !0), t.call(this, e, r);
                        });
                },
                6853: t => {
                    t.exports = {
                        red: '#ff444f',
                        light_chart_text: '#555975',
                        dark_chart_text: '#999',
                        light_chart_grid: '#f2f3f4',
                        dark_chart_grid: '#1d1f20',
                        light_chart_mountain_border: '#85acb0',
                        light_chart_mountain_bg: 'rgba(133,172,176,.16)',
                        light_chart_mountain_bg_shade: 'rgba(255,255,255,0)',
                        light_chart_closed_mountain_border: 'rgba(133,172,176,.32)',
                        dark_chart_mountain_border: '#85acb0',
                        dark_chart_mountain_bg: 'rgba(255,255,255,.36)',
                        dark_chart_mountain_bg_shade: 'rgba(16,19,32,0)',
                        dark_chart_closed_mountain_border: 'rgba(255,255,255,.32)',
                        chart_closed_candle_up: 'rgba(133,172,176,.32)',
                        chart_closed_candle_down: 'rgba(255,68,79,.32)',
                        chart_closed_candle_border: 'rgba(51,51,51,.32)',
                        chart_current_hr: '#ff444f',
                        chart_closed_current_hr: 'rgba(255,68,79,.32)',
                        light_chart_bg: '#fff',
                        dark_chart_bg: '#0e0e0e',
                        light_float_labels_bg: '#d6dadb',
                        dark_float_labels_bg: '#323738',
                        light_float_labels_text: '#333',
                        dark_float_labels_text: '#fff',
                    };
                },
                2592: t => {
                    t.exports = {
                        red: '#ff444f',
                        light_chart_text: '#555975',
                        dark_chart_text: '#999',
                        light_chart_grid: '#f2f3f4',
                        dark_chart_grid: '#1d1f20',
                        light_chart_mountain_border: '#85acb0',
                        light_chart_mountain_bg: 'rgba(133,172,176,.16)',
                        light_chart_mountain_bg_shade: 'rgba(255,255,255,0)',
                        light_chart_closed_mountain_border: 'rgba(133,172,176,.32)',
                        dark_chart_mountain_border: '#85acb0',
                        dark_chart_mountain_bg: 'rgba(255,255,255,.36)',
                        dark_chart_mountain_bg_shade: 'rgba(16,19,32,0)',
                        dark_chart_closed_mountain_border: 'rgba(255,255,255,.32)',
                        chart_closed_candle_up: 'rgba(133,172,176,.32)',
                        chart_closed_candle_down: 'rgba(255,68,79,.32)',
                        chart_closed_candle_border: 'rgba(51,51,51,.32)',
                        chart_current_hr: '#ff444f',
                        chart_closed_current_hr: 'rgba(255,68,79,.32)',
                        light_chart_bg: '#fff',
                        dark_chart_bg: '#0e0e0e',
                        light_float_labels_bg: '#d6dadb',
                        dark_float_labels_bg: '#323738',
                        light_float_labels_text: '#333',
                        dark_float_labels_text: '#fff',
                    };
                },
                8449: t => {
                    t.exports = {
                        red: '#ff444f',
                        light_chart_text: '#555975',
                        dark_chart_text: '#999',
                        light_chart_grid: '#f2f3f4',
                        dark_chart_grid: '#1d1f20',
                        light_chart_mountain_border: '#85acb0',
                        light_chart_mountain_bg: 'rgba(133,172,176,.16)',
                        light_chart_mountain_bg_shade: 'rgba(255,255,255,0)',
                        light_chart_closed_mountain_border: 'rgba(133,172,176,.32)',
                        dark_chart_mountain_border: '#85acb0',
                        dark_chart_mountain_bg: 'rgba(255,255,255,.36)',
                        dark_chart_mountain_bg_shade: 'rgba(16,19,32,0)',
                        dark_chart_closed_mountain_border: 'rgba(255,255,255,.32)',
                        chart_closed_candle_up: 'rgba(133,172,176,.32)',
                        chart_closed_candle_down: 'rgba(255,68,79,.32)',
                        chart_closed_candle_border: 'rgba(51,51,51,.32)',
                        chart_current_hr: '#ff444f',
                        chart_closed_current_hr: 'rgba(255,68,79,.32)',
                        light_chart_bg: '#fff',
                        dark_chart_bg: '#0e0e0e',
                        light_float_labels_bg: '#d6dadb',
                        dark_float_labels_bg: '#323738',
                        light_float_labels_text: '#333',
                        dark_float_labels_text: '#fff',
                    };
                },
                8798: t => {
                    t.exports = {
                        red: '#ff444f',
                        light_chart_text: '#555975',
                        dark_chart_text: '#999',
                        light_chart_grid: '#f2f3f4',
                        dark_chart_grid: '#1d1f20',
                        light_chart_mountain_border: '#85acb0',
                        light_chart_mountain_bg: 'rgba(133,172,176,.16)',
                        light_chart_mountain_bg_shade: 'rgba(255,255,255,0)',
                        light_chart_closed_mountain_border: 'rgba(133,172,176,.32)',
                        dark_chart_mountain_border: '#85acb0',
                        dark_chart_mountain_bg: 'rgba(255,255,255,.36)',
                        dark_chart_mountain_bg_shade: 'rgba(16,19,32,0)',
                        dark_chart_closed_mountain_border: 'rgba(255,255,255,.32)',
                        chart_closed_candle_up: 'rgba(133,172,176,.32)',
                        chart_closed_candle_down: 'rgba(255,68,79,.32)',
                        chart_closed_candle_border: 'rgba(51,51,51,.32)',
                        chart_current_hr: '#ff444f',
                        chart_closed_current_hr: 'rgba(255,68,79,.32)',
                        light_chart_bg: '#fff',
                        dark_chart_bg: '#0e0e0e',
                        light_float_labels_bg: '#d6dadb',
                        dark_float_labels_bg: '#323738',
                        light_float_labels_text: '#333',
                        dark_float_labels_text: '#fff',
                    };
                },
                1882: t => {
                    t.exports = {
                        red: '#ff444f',
                        light_chart_text: '#555975',
                        dark_chart_text: '#999',
                        light_chart_grid: '#f2f3f4',
                        dark_chart_grid: '#1d1f20',
                        light_chart_mountain_border: '#85acb0',
                        light_chart_mountain_bg: 'rgba(133,172,176,.16)',
                        light_chart_mountain_bg_shade: 'rgba(255,255,255,0)',
                        light_chart_closed_mountain_border: 'rgba(133,172,176,.32)',
                        dark_chart_mountain_border: '#85acb0',
                        dark_chart_mountain_bg: 'rgba(255,255,255,.36)',
                        dark_chart_mountain_bg_shade: 'rgba(16,19,32,0)',
                        dark_chart_closed_mountain_border: 'rgba(255,255,255,.32)',
                        chart_closed_candle_up: 'rgba(133,172,176,.32)',
                        chart_closed_candle_down: 'rgba(255,68,79,.32)',
                        chart_closed_candle_border: 'rgba(51,51,51,.32)',
                        chart_current_hr: '#ff444f',
                        chart_closed_current_hr: 'rgba(255,68,79,.32)',
                        light_chart_bg: '#fff',
                        dark_chart_bg: '#0e0e0e',
                        light_float_labels_bg: '#d6dadb',
                        dark_float_labels_bg: '#323738',
                        light_float_labels_text: '#333',
                        dark_float_labels_text: '#fff',
                    };
                },
                3955: t => {
                    t.exports = {
                        red: '#ff444f',
                        light_chart_text: '#555975',
                        dark_chart_text: '#999',
                        light_chart_grid: '#f2f3f4',
                        dark_chart_grid: '#1d1f20',
                        light_chart_mountain_border: '#85acb0',
                        light_chart_mountain_bg: 'rgba(133,172,176,.16)',
                        light_chart_mountain_bg_shade: 'rgba(255,255,255,0)',
                        light_chart_closed_mountain_border: 'rgba(133,172,176,.32)',
                        dark_chart_mountain_border: '#85acb0',
                        dark_chart_mountain_bg: 'rgba(255,255,255,.36)',
                        dark_chart_mountain_bg_shade: 'rgba(16,19,32,0)',
                        dark_chart_closed_mountain_border: 'rgba(255,255,255,.32)',
                        chart_closed_candle_up: 'rgba(133,172,176,.32)',
                        chart_closed_candle_down: 'rgba(255,68,79,.32)',
                        chart_closed_candle_border: 'rgba(51,51,51,.32)',
                        chart_current_hr: '#ff444f',
                        chart_closed_current_hr: 'rgba(255,68,79,.32)',
                        light_chart_bg: '#fff',
                        dark_chart_bg: '#0e0e0e',
                        light_float_labels_bg: '#d6dadb',
                        dark_float_labels_bg: '#323738',
                        light_float_labels_text: '#333',
                        dark_float_labels_text: '#fff',
                    };
                },
                5511: t => {
                    t.exports = {
                        red: '#ff444f',
                        light_chart_text: '#555975',
                        dark_chart_text: '#999',
                        light_chart_grid: '#f2f3f4',
                        dark_chart_grid: '#1d1f20',
                        light_chart_mountain_border: '#85acb0',
                        light_chart_mountain_bg: 'rgba(133,172,176,.16)',
                        light_chart_mountain_bg_shade: 'rgba(255,255,255,0)',
                        light_chart_closed_mountain_border: 'rgba(133,172,176,.32)',
                        dark_chart_mountain_border: '#85acb0',
                        dark_chart_mountain_bg: 'rgba(255,255,255,.36)',
                        dark_chart_mountain_bg_shade: 'rgba(16,19,32,0)',
                        dark_chart_closed_mountain_border: 'rgba(255,255,255,.32)',
                        chart_closed_candle_up: 'rgba(133,172,176,.32)',
                        chart_closed_candle_down: 'rgba(255,68,79,.32)',
                        chart_closed_candle_border: 'rgba(51,51,51,.32)',
                        chart_current_hr: '#ff444f',
                        chart_closed_current_hr: 'rgba(255,68,79,.32)',
                        light_chart_bg: '#fff',
                        dark_chart_bg: '#0e0e0e',
                        light_float_labels_bg: '#d6dadb',
                        dark_float_labels_bg: '#323738',
                        light_float_labels_text: '#333',
                        dark_float_labels_text: '#fff',
                    };
                },
                7808: t => {
                    t.exports = {
                        red: '#ff444f',
                        light_chart_text: '#555975',
                        dark_chart_text: '#999',
                        light_chart_grid: '#f2f3f4',
                        dark_chart_grid: '#1d1f20',
                        light_chart_mountain_border: '#85acb0',
                        light_chart_mountain_bg: 'rgba(133,172,176,.16)',
                        light_chart_mountain_bg_shade: 'rgba(255,255,255,0)',
                        light_chart_closed_mountain_border: 'rgba(133,172,176,.32)',
                        dark_chart_mountain_border: '#85acb0',
                        dark_chart_mountain_bg: 'rgba(255,255,255,.36)',
                        dark_chart_mountain_bg_shade: 'rgba(16,19,32,0)',
                        dark_chart_closed_mountain_border: 'rgba(255,255,255,.32)',
                        chart_closed_candle_up: 'rgba(133,172,176,.32)',
                        chart_closed_candle_down: 'rgba(255,68,79,.32)',
                        chart_closed_candle_border: 'rgba(51,51,51,.32)',
                        chart_current_hr: '#ff444f',
                        chart_closed_current_hr: 'rgba(255,68,79,.32)',
                        light_chart_bg: '#fff',
                        dark_chart_bg: '#0e0e0e',
                        light_float_labels_bg: '#d6dadb',
                        dark_float_labels_bg: '#323738',
                        light_float_labels_text: '#333',
                        dark_float_labels_text: '#fff',
                    };
                },
                6765: t => {
                    t.exports = {
                        red: '#ff444f',
                        light_chart_text: '#555975',
                        dark_chart_text: '#999',
                        light_chart_grid: '#f2f3f4',
                        dark_chart_grid: '#1d1f20',
                        light_chart_mountain_border: '#85acb0',
                        light_chart_mountain_bg: 'rgba(133,172,176,.16)',
                        light_chart_mountain_bg_shade: 'rgba(255,255,255,0)',
                        light_chart_closed_mountain_border: 'rgba(133,172,176,.32)',
                        dark_chart_mountain_border: '#85acb0',
                        dark_chart_mountain_bg: 'rgba(255,255,255,.36)',
                        dark_chart_mountain_bg_shade: 'rgba(16,19,32,0)',
                        dark_chart_closed_mountain_border: 'rgba(255,255,255,.32)',
                        chart_closed_candle_up: 'rgba(133,172,176,.32)',
                        chart_closed_candle_down: 'rgba(255,68,79,.32)',
                        chart_closed_candle_border: 'rgba(51,51,51,.32)',
                        chart_current_hr: '#ff444f',
                        chart_closed_current_hr: 'rgba(255,68,79,.32)',
                        light_chart_bg: '#fff',
                        dark_chart_bg: '#0e0e0e',
                        light_float_labels_bg: '#d6dadb',
                        dark_float_labels_bg: '#323738',
                        light_float_labels_text: '#333',
                        dark_float_labels_text: '#fff',
                    };
                },
                898: t => {
                    t.exports = {
                        red: '#ff444f',
                        light_chart_text: '#555975',
                        dark_chart_text: '#999',
                        light_chart_grid: '#f2f3f4',
                        dark_chart_grid: '#1d1f20',
                        light_chart_mountain_border: '#85acb0',
                        light_chart_mountain_bg: 'rgba(133,172,176,.16)',
                        light_chart_mountain_bg_shade: 'rgba(255,255,255,0)',
                        light_chart_closed_mountain_border: 'rgba(133,172,176,.32)',
                        dark_chart_mountain_border: '#85acb0',
                        dark_chart_mountain_bg: 'rgba(255,255,255,.36)',
                        dark_chart_mountain_bg_shade: 'rgba(16,19,32,0)',
                        dark_chart_closed_mountain_border: 'rgba(255,255,255,.32)',
                        chart_closed_candle_up: 'rgba(133,172,176,.32)',
                        chart_closed_candle_down: 'rgba(255,68,79,.32)',
                        chart_closed_candle_border: 'rgba(51,51,51,.32)',
                        chart_current_hr: '#ff444f',
                        chart_closed_current_hr: 'rgba(255,68,79,.32)',
                        light_chart_bg: '#fff',
                        dark_chart_bg: '#0e0e0e',
                        light_float_labels_bg: '#d6dadb',
                        dark_float_labels_bg: '#323738',
                        light_float_labels_text: '#333',
                        dark_float_labels_text: '#fff',
                    };
                },
                5877: t => {
                    t.exports = {
                        red: '#ff444f',
                        light_chart_text: '#555975',
                        dark_chart_text: '#999',
                        light_chart_grid: '#f2f3f4',
                        dark_chart_grid: '#1d1f20',
                        light_chart_mountain_border: '#85acb0',
                        light_chart_mountain_bg: 'rgba(133,172,176,.16)',
                        light_chart_mountain_bg_shade: 'rgba(255,255,255,0)',
                        light_chart_closed_mountain_border: 'rgba(133,172,176,.32)',
                        dark_chart_mountain_border: '#85acb0',
                        dark_chart_mountain_bg: 'rgba(255,255,255,.36)',
                        dark_chart_mountain_bg_shade: 'rgba(16,19,32,0)',
                        dark_chart_closed_mountain_border: 'rgba(255,255,255,.32)',
                        chart_closed_candle_up: 'rgba(133,172,176,.32)',
                        chart_closed_candle_down: 'rgba(255,68,79,.32)',
                        chart_closed_candle_border: 'rgba(51,51,51,.32)',
                        chart_current_hr: '#ff444f',
                        chart_closed_current_hr: 'rgba(255,68,79,.32)',
                        light_chart_bg: '#fff',
                        dark_chart_bg: '#0e0e0e',
                        light_float_labels_bg: '#d6dadb',
                        dark_float_labels_bg: '#323738',
                        light_float_labels_text: '#333',
                        dark_float_labels_text: '#fff',
                    };
                },
                1849: t => {
                    t.exports = {
                        red: '#ff444f',
                        light_chart_text: '#555975',
                        dark_chart_text: '#999',
                        light_chart_grid: '#f2f3f4',
                        dark_chart_grid: '#1d1f20',
                        light_chart_mountain_border: '#85acb0',
                        light_chart_mountain_bg: 'rgba(133,172,176,.16)',
                        light_chart_mountain_bg_shade: 'rgba(255,255,255,0)',
                        light_chart_closed_mountain_border: 'rgba(133,172,176,.32)',
                        dark_chart_mountain_border: '#85acb0',
                        dark_chart_mountain_bg: 'rgba(255,255,255,.36)',
                        dark_chart_mountain_bg_shade: 'rgba(16,19,32,0)',
                        dark_chart_closed_mountain_border: 'rgba(255,255,255,.32)',
                        chart_closed_candle_up: 'rgba(133,172,176,.32)',
                        chart_closed_candle_down: 'rgba(255,68,79,.32)',
                        chart_closed_candle_border: 'rgba(51,51,51,.32)',
                        chart_current_hr: '#ff444f',
                        chart_closed_current_hr: 'rgba(255,68,79,.32)',
                        light_chart_bg: '#fff',
                        dark_chart_bg: '#0e0e0e',
                        light_float_labels_bg: '#d6dadb',
                        dark_float_labels_bg: '#323738',
                        light_float_labels_text: '#333',
                        dark_float_labels_text: '#fff',
                    };
                },
                6781: t => {
                    t.exports = {
                        red: '#ff444f',
                        light_chart_text: '#555975',
                        dark_chart_text: '#999',
                        light_chart_grid: '#f2f3f4',
                        dark_chart_grid: '#1d1f20',
                        light_chart_mountain_border: '#85acb0',
                        light_chart_mountain_bg: 'rgba(133,172,176,.16)',
                        light_chart_mountain_bg_shade: 'rgba(255,255,255,0)',
                        light_chart_closed_mountain_border: 'rgba(133,172,176,.32)',
                        dark_chart_mountain_border: '#85acb0',
                        dark_chart_mountain_bg: 'rgba(255,255,255,.36)',
                        dark_chart_mountain_bg_shade: 'rgba(16,19,32,0)',
                        dark_chart_closed_mountain_border: 'rgba(255,255,255,.32)',
                        chart_closed_candle_up: 'rgba(133,172,176,.32)',
                        chart_closed_candle_down: 'rgba(255,68,79,.32)',
                        chart_closed_candle_border: 'rgba(51,51,51,.32)',
                        chart_current_hr: '#ff444f',
                        chart_closed_current_hr: 'rgba(255,68,79,.32)',
                        light_chart_bg: '#fff',
                        dark_chart_bg: '#0e0e0e',
                        light_float_labels_bg: '#d6dadb',
                        dark_float_labels_bg: '#323738',
                        light_float_labels_text: '#333',
                        dark_float_labels_text: '#fff',
                    };
                },
                4007: t => {
                    t.exports = {
                        red: '#ff444f',
                        light_chart_text: '#555975',
                        dark_chart_text: '#999',
                        light_chart_grid: '#f2f3f4',
                        dark_chart_grid: '#1d1f20',
                        light_chart_mountain_border: '#85acb0',
                        light_chart_mountain_bg: 'rgba(133,172,176,.16)',
                        light_chart_mountain_bg_shade: 'rgba(255,255,255,0)',
                        light_chart_closed_mountain_border: 'rgba(133,172,176,.32)',
                        dark_chart_mountain_border: '#85acb0',
                        dark_chart_mountain_bg: 'rgba(255,255,255,.36)',
                        dark_chart_mountain_bg_shade: 'rgba(16,19,32,0)',
                        dark_chart_closed_mountain_border: 'rgba(255,255,255,.32)',
                        chart_closed_candle_up: 'rgba(133,172,176,.32)',
                        chart_closed_candle_down: 'rgba(255,68,79,.32)',
                        chart_closed_candle_border: 'rgba(51,51,51,.32)',
                        chart_current_hr: '#ff444f',
                        chart_closed_current_hr: 'rgba(255,68,79,.32)',
                        light_chart_bg: '#fff',
                        dark_chart_bg: '#0e0e0e',
                        light_float_labels_bg: '#d6dadb',
                        dark_float_labels_bg: '#323738',
                        light_float_labels_text: '#333',
                        dark_float_labels_text: '#fff',
                    };
                },
                79: t => {
                    t.exports = {
                        red: '#ff444f',
                        light_chart_text: '#555975',
                        dark_chart_text: '#999',
                        light_chart_grid: '#f2f3f4',
                        dark_chart_grid: '#1d1f20',
                        light_chart_mountain_border: '#85acb0',
                        light_chart_mountain_bg: 'rgba(133,172,176,.16)',
                        light_chart_mountain_bg_shade: 'rgba(255,255,255,0)',
                        light_chart_closed_mountain_border: 'rgba(133,172,176,.32)',
                        dark_chart_mountain_border: '#85acb0',
                        dark_chart_mountain_bg: 'rgba(255,255,255,.36)',
                        dark_chart_mountain_bg_shade: 'rgba(16,19,32,0)',
                        dark_chart_closed_mountain_border: 'rgba(255,255,255,.32)',
                        chart_closed_candle_up: 'rgba(133,172,176,.32)',
                        chart_closed_candle_down: 'rgba(255,68,79,.32)',
                        chart_closed_candle_border: 'rgba(51,51,51,.32)',
                        chart_current_hr: '#ff444f',
                        chart_closed_current_hr: 'rgba(255,68,79,.32)',
                        light_chart_bg: '#fff',
                        dark_chart_bg: '#0e0e0e',
                        light_float_labels_bg: '#d6dadb',
                        dark_float_labels_bg: '#323738',
                        light_float_labels_text: '#333',
                        dark_float_labels_text: '#fff',
                    };
                },
                4001: t => {
                    t.exports = {
                        red: '#ff444f',
                        light_chart_text: '#555975',
                        dark_chart_text: '#999',
                        light_chart_grid: '#f2f3f4',
                        dark_chart_grid: '#1d1f20',
                        light_chart_mountain_border: '#85acb0',
                        light_chart_mountain_bg: 'rgba(133,172,176,.16)',
                        light_chart_mountain_bg_shade: 'rgba(255,255,255,0)',
                        light_chart_closed_mountain_border: 'rgba(133,172,176,.32)',
                        dark_chart_mountain_border: '#85acb0',
                        dark_chart_mountain_bg: 'rgba(255,255,255,.36)',
                        dark_chart_mountain_bg_shade: 'rgba(16,19,32,0)',
                        dark_chart_closed_mountain_border: 'rgba(255,255,255,.32)',
                        chart_closed_candle_up: 'rgba(133,172,176,.32)',
                        chart_closed_candle_down: 'rgba(255,68,79,.32)',
                        chart_closed_candle_border: 'rgba(51,51,51,.32)',
                        chart_current_hr: '#ff444f',
                        chart_closed_current_hr: 'rgba(255,68,79,.32)',
                        light_chart_bg: '#fff',
                        dark_chart_bg: '#0e0e0e',
                        light_float_labels_bg: '#d6dadb',
                        dark_float_labels_bg: '#323738',
                        light_float_labels_text: '#333',
                        dark_float_labels_text: '#fff',
                    };
                },
                4321: t => {
                    t.exports = {
                        red: '#ff444f',
                        light_chart_text: '#555975',
                        dark_chart_text: '#999',
                        light_chart_grid: '#f2f3f4',
                        dark_chart_grid: '#1d1f20',
                        light_chart_mountain_border: '#85acb0',
                        light_chart_mountain_bg: 'rgba(133,172,176,.16)',
                        light_chart_mountain_bg_shade: 'rgba(255,255,255,0)',
                        light_chart_closed_mountain_border: 'rgba(133,172,176,.32)',
                        dark_chart_mountain_border: '#85acb0',
                        dark_chart_mountain_bg: 'rgba(255,255,255,.36)',
                        dark_chart_mountain_bg_shade: 'rgba(16,19,32,0)',
                        dark_chart_closed_mountain_border: 'rgba(255,255,255,.32)',
                        chart_closed_candle_up: 'rgba(133,172,176,.32)',
                        chart_closed_candle_down: 'rgba(255,68,79,.32)',
                        chart_closed_candle_border: 'rgba(51,51,51,.32)',
                        chart_current_hr: '#ff444f',
                        chart_closed_current_hr: 'rgba(255,68,79,.32)',
                        light_chart_bg: '#fff',
                        dark_chart_bg: '#0e0e0e',
                        light_float_labels_bg: '#d6dadb',
                        dark_float_labels_bg: '#323738',
                        light_float_labels_text: '#333',
                        dark_float_labels_text: '#fff',
                    };
                },
                6271: t => {
                    t.exports = {
                        red: '#ff444f',
                        light_chart_text: '#555975',
                        dark_chart_text: '#999',
                        light_chart_grid: '#f2f3f4',
                        dark_chart_grid: '#1d1f20',
                        light_chart_mountain_border: '#85acb0',
                        light_chart_mountain_bg: 'rgba(133,172,176,.16)',
                        light_chart_mountain_bg_shade: 'rgba(255,255,255,0)',
                        light_chart_closed_mountain_border: 'rgba(133,172,176,.32)',
                        dark_chart_mountain_border: '#85acb0',
                        dark_chart_mountain_bg: 'rgba(255,255,255,.36)',
                        dark_chart_mountain_bg_shade: 'rgba(16,19,32,0)',
                        dark_chart_closed_mountain_border: 'rgba(255,255,255,.32)',
                        chart_closed_candle_up: 'rgba(133,172,176,.32)',
                        chart_closed_candle_down: 'rgba(255,68,79,.32)',
                        chart_closed_candle_border: 'rgba(51,51,51,.32)',
                        chart_current_hr: '#ff444f',
                        chart_closed_current_hr: 'rgba(255,68,79,.32)',
                        light_chart_bg: '#fff',
                        dark_chart_bg: '#0e0e0e',
                        light_float_labels_bg: '#d6dadb',
                        dark_float_labels_bg: '#323738',
                        light_float_labels_text: '#333',
                        dark_float_labels_text: '#fff',
                    };
                },
                7951: t => {
                    t.exports = {
                        red: '#ff444f',
                        light_chart_text: '#555975',
                        dark_chart_text: '#999',
                        light_chart_grid: '#f2f3f4',
                        dark_chart_grid: '#1d1f20',
                        light_chart_mountain_border: '#85acb0',
                        light_chart_mountain_bg: 'rgba(133,172,176,.16)',
                        light_chart_mountain_bg_shade: 'rgba(255,255,255,0)',
                        light_chart_closed_mountain_border: 'rgba(133,172,176,.32)',
                        dark_chart_mountain_border: '#85acb0',
                        dark_chart_mountain_bg: 'rgba(255,255,255,.36)',
                        dark_chart_mountain_bg_shade: 'rgba(16,19,32,0)',
                        dark_chart_closed_mountain_border: 'rgba(255,255,255,.32)',
                        chart_closed_candle_up: 'rgba(133,172,176,.32)',
                        chart_closed_candle_down: 'rgba(255,68,79,.32)',
                        chart_closed_candle_border: 'rgba(51,51,51,.32)',
                        chart_current_hr: '#ff444f',
                        chart_closed_current_hr: 'rgba(255,68,79,.32)',
                        light_chart_bg: '#fff',
                        dark_chart_bg: '#0e0e0e',
                        light_float_labels_bg: '#d6dadb',
                        dark_float_labels_bg: '#323738',
                        light_float_labels_text: '#333',
                        dark_float_labels_text: '#fff',
                    };
                },
                1061: t => {
                    t.exports = {
                        red: '#ff444f',
                        light_chart_text: '#555975',
                        dark_chart_text: '#999',
                        light_chart_grid: '#f2f3f4',
                        dark_chart_grid: '#1d1f20',
                        light_chart_mountain_border: '#85acb0',
                        light_chart_mountain_bg: 'rgba(133,172,176,.16)',
                        light_chart_mountain_bg_shade: 'rgba(255,255,255,0)',
                        light_chart_closed_mountain_border: 'rgba(133,172,176,.32)',
                        dark_chart_mountain_border: '#85acb0',
                        dark_chart_mountain_bg: 'rgba(255,255,255,.36)',
                        dark_chart_mountain_bg_shade: 'rgba(16,19,32,0)',
                        dark_chart_closed_mountain_border: 'rgba(255,255,255,.32)',
                        chart_closed_candle_up: 'rgba(133,172,176,.32)',
                        chart_closed_candle_down: 'rgba(255,68,79,.32)',
                        chart_closed_candle_border: 'rgba(51,51,51,.32)',
                        chart_current_hr: '#ff444f',
                        chart_closed_current_hr: 'rgba(255,68,79,.32)',
                        light_chart_bg: '#fff',
                        dark_chart_bg: '#0e0e0e',
                        light_float_labels_bg: '#d6dadb',
                        dark_float_labels_bg: '#323738',
                        light_float_labels_text: '#333',
                        dark_float_labels_text: '#fff',
                    };
                },
                8272: t => {
                    t.exports = {
                        red: '#ff444f',
                        light_chart_text: '#555975',
                        dark_chart_text: '#999',
                        light_chart_grid: '#f2f3f4',
                        dark_chart_grid: '#1d1f20',
                        light_chart_mountain_border: '#85acb0',
                        light_chart_mountain_bg: 'rgba(133,172,176,.16)',
                        light_chart_mountain_bg_shade: 'rgba(255,255,255,0)',
                        light_chart_closed_mountain_border: 'rgba(133,172,176,.32)',
                        dark_chart_mountain_border: '#85acb0',
                        dark_chart_mountain_bg: 'rgba(255,255,255,.36)',
                        dark_chart_mountain_bg_shade: 'rgba(16,19,32,0)',
                        dark_chart_closed_mountain_border: 'rgba(255,255,255,.32)',
                        chart_closed_candle_up: 'rgba(133,172,176,.32)',
                        chart_closed_candle_down: 'rgba(255,68,79,.32)',
                        chart_closed_candle_border: 'rgba(51,51,51,.32)',
                        chart_current_hr: '#ff444f',
                        chart_closed_current_hr: 'rgba(255,68,79,.32)',
                        light_chart_bg: '#fff',
                        dark_chart_bg: '#0e0e0e',
                        light_float_labels_bg: '#d6dadb',
                        dark_float_labels_bg: '#323738',
                        light_float_labels_text: '#333',
                        dark_float_labels_text: '#fff',
                    };
                },
                1238: t => {
                    t.exports = {
                        red: '#ff444f',
                        light_chart_text: '#555975',
                        dark_chart_text: '#999',
                        light_chart_grid: '#f2f3f4',
                        dark_chart_grid: '#1d1f20',
                        light_chart_mountain_border: '#85acb0',
                        light_chart_mountain_bg: 'rgba(133,172,176,.16)',
                        light_chart_mountain_bg_shade: 'rgba(255,255,255,0)',
                        light_chart_closed_mountain_border: 'rgba(133,172,176,.32)',
                        dark_chart_mountain_border: '#85acb0',
                        dark_chart_mountain_bg: 'rgba(255,255,255,.36)',
                        dark_chart_mountain_bg_shade: 'rgba(16,19,32,0)',
                        dark_chart_closed_mountain_border: 'rgba(255,255,255,.32)',
                        chart_closed_candle_up: 'rgba(133,172,176,.32)',
                        chart_closed_candle_down: 'rgba(255,68,79,.32)',
                        chart_closed_candle_border: 'rgba(51,51,51,.32)',
                        chart_current_hr: '#ff444f',
                        chart_closed_current_hr: 'rgba(255,68,79,.32)',
                        light_chart_bg: '#fff',
                        dark_chart_bg: '#0e0e0e',
                        light_float_labels_bg: '#d6dadb',
                        dark_float_labels_bg: '#323738',
                        light_float_labels_text: '#333',
                        dark_float_labels_text: '#fff',
                    };
                },
                1104: t => {
                    t.exports = {
                        red: '#ff444f',
                        light_chart_text: '#555975',
                        dark_chart_text: '#999',
                        light_chart_grid: '#f2f3f4',
                        dark_chart_grid: '#1d1f20',
                        light_chart_mountain_border: '#85acb0',
                        light_chart_mountain_bg: 'rgba(133,172,176,.16)',
                        light_chart_mountain_bg_shade: 'rgba(255,255,255,0)',
                        light_chart_closed_mountain_border: 'rgba(133,172,176,.32)',
                        dark_chart_mountain_border: '#85acb0',
                        dark_chart_mountain_bg: 'rgba(255,255,255,.36)',
                        dark_chart_mountain_bg_shade: 'rgba(16,19,32,0)',
                        dark_chart_closed_mountain_border: 'rgba(255,255,255,.32)',
                        chart_closed_candle_up: 'rgba(133,172,176,.32)',
                        chart_closed_candle_down: 'rgba(255,68,79,.32)',
                        chart_closed_candle_border: 'rgba(51,51,51,.32)',
                        chart_current_hr: '#ff444f',
                        chart_closed_current_hr: 'rgba(255,68,79,.32)',
                        light_chart_bg: '#fff',
                        dark_chart_bg: '#0e0e0e',
                        light_float_labels_bg: '#d6dadb',
                        dark_float_labels_bg: '#323738',
                        light_float_labels_text: '#333',
                        dark_float_labels_text: '#fff',
                    };
                },
                273: t => {
                    t.exports = {
                        red: '#ff444f',
                        light_chart_text: '#555975',
                        dark_chart_text: '#999',
                        light_chart_grid: '#f2f3f4',
                        dark_chart_grid: '#1d1f20',
                        light_chart_mountain_border: '#85acb0',
                        light_chart_mountain_bg: 'rgba(133,172,176,.16)',
                        light_chart_mountain_bg_shade: 'rgba(255,255,255,0)',
                        light_chart_closed_mountain_border: 'rgba(133,172,176,.32)',
                        dark_chart_mountain_border: '#85acb0',
                        dark_chart_mountain_bg: 'rgba(255,255,255,.36)',
                        dark_chart_mountain_bg_shade: 'rgba(16,19,32,0)',
                        dark_chart_closed_mountain_border: 'rgba(255,255,255,.32)',
                        chart_closed_candle_up: 'rgba(133,172,176,.32)',
                        chart_closed_candle_down: 'rgba(255,68,79,.32)',
                        chart_closed_candle_border: 'rgba(51,51,51,.32)',
                        chart_current_hr: '#ff444f',
                        chart_closed_current_hr: 'rgba(255,68,79,.32)',
                        light_chart_bg: '#fff',
                        dark_chart_bg: '#0e0e0e',
                        light_float_labels_bg: '#d6dadb',
                        dark_float_labels_bg: '#323738',
                        light_float_labels_text: '#333',
                        dark_float_labels_text: '#fff',
                    };
                },
                4282: t => {
                    t.exports = {
                        red: '#ff444f',
                        light_chart_text: '#555975',
                        dark_chart_text: '#999',
                        light_chart_grid: '#f2f3f4',
                        dark_chart_grid: '#1d1f20',
                        light_chart_mountain_border: '#85acb0',
                        light_chart_mountain_bg: 'rgba(133,172,176,.16)',
                        light_chart_mountain_bg_shade: 'rgba(255,255,255,0)',
                        light_chart_closed_mountain_border: 'rgba(133,172,176,.32)',
                        dark_chart_mountain_border: '#85acb0',
                        dark_chart_mountain_bg: 'rgba(255,255,255,.36)',
                        dark_chart_mountain_bg_shade: 'rgba(16,19,32,0)',
                        dark_chart_closed_mountain_border: 'rgba(255,255,255,.32)',
                        chart_closed_candle_up: 'rgba(133,172,176,.32)',
                        chart_closed_candle_down: 'rgba(255,68,79,.32)',
                        chart_closed_candle_border: 'rgba(51,51,51,.32)',
                        chart_current_hr: '#ff444f',
                        chart_closed_current_hr: 'rgba(255,68,79,.32)',
                        light_chart_bg: '#fff',
                        dark_chart_bg: '#0e0e0e',
                        light_float_labels_bg: '#d6dadb',
                        dark_float_labels_bg: '#323738',
                        light_float_labels_text: '#333',
                        dark_float_labels_text: '#fff',
                    };
                },
                6351: t => {
                    t.exports = {
                        red: '#ff444f',
                        light_chart_text: '#555975',
                        dark_chart_text: '#999',
                        light_chart_grid: '#f2f3f4',
                        dark_chart_grid: '#1d1f20',
                        light_chart_mountain_border: '#85acb0',
                        light_chart_mountain_bg: 'rgba(133,172,176,.16)',
                        light_chart_mountain_bg_shade: 'rgba(255,255,255,0)',
                        light_chart_closed_mountain_border: 'rgba(133,172,176,.32)',
                        dark_chart_mountain_border: '#85acb0',
                        dark_chart_mountain_bg: 'rgba(255,255,255,.36)',
                        dark_chart_mountain_bg_shade: 'rgba(16,19,32,0)',
                        dark_chart_closed_mountain_border: 'rgba(255,255,255,.32)',
                        chart_closed_candle_up: 'rgba(133,172,176,.32)',
                        chart_closed_candle_down: 'rgba(255,68,79,.32)',
                        chart_closed_candle_border: 'rgba(51,51,51,.32)',
                        chart_current_hr: '#ff444f',
                        chart_closed_current_hr: 'rgba(255,68,79,.32)',
                        light_chart_bg: '#fff',
                        dark_chart_bg: '#0e0e0e',
                        light_float_labels_bg: '#d6dadb',
                        dark_float_labels_bg: '#323738',
                        light_float_labels_text: '#333',
                        dark_float_labels_text: '#fff',
                    };
                },
                2445: t => {
                    t.exports = {
                        red: '#ff444f',
                        light_chart_text: '#555975',
                        dark_chart_text: '#999',
                        light_chart_grid: '#f2f3f4',
                        dark_chart_grid: '#1d1f20',
                        light_chart_mountain_border: '#85acb0',
                        light_chart_mountain_bg: 'rgba(133,172,176,.16)',
                        light_chart_mountain_bg_shade: 'rgba(255,255,255,0)',
                        light_chart_closed_mountain_border: 'rgba(133,172,176,.32)',
                        dark_chart_mountain_border: '#85acb0',
                        dark_chart_mountain_bg: 'rgba(255,255,255,.36)',
                        dark_chart_mountain_bg_shade: 'rgba(16,19,32,0)',
                        dark_chart_closed_mountain_border: 'rgba(255,255,255,.32)',
                        chart_closed_candle_up: 'rgba(133,172,176,.32)',
                        chart_closed_candle_down: 'rgba(255,68,79,.32)',
                        chart_closed_candle_border: 'rgba(51,51,51,.32)',
                        chart_current_hr: '#ff444f',
                        chart_closed_current_hr: 'rgba(255,68,79,.32)',
                        light_chart_bg: '#fff',
                        dark_chart_bg: '#0e0e0e',
                        light_float_labels_bg: '#d6dadb',
                        dark_float_labels_bg: '#323738',
                        light_float_labels_text: '#333',
                        dark_float_labels_text: '#fff',
                    };
                },
                7209: t => {
                    t.exports = {
                        red: '#ff444f',
                        light_chart_text: '#555975',
                        dark_chart_text: '#999',
                        light_chart_grid: '#f2f3f4',
                        dark_chart_grid: '#1d1f20',
                        light_chart_mountain_border: '#85acb0',
                        light_chart_mountain_bg: 'rgba(133,172,176,.16)',
                        light_chart_mountain_bg_shade: 'rgba(255,255,255,0)',
                        light_chart_closed_mountain_border: 'rgba(133,172,176,.32)',
                        dark_chart_mountain_border: '#85acb0',
                        dark_chart_mountain_bg: 'rgba(255,255,255,.36)',
                        dark_chart_mountain_bg_shade: 'rgba(16,19,32,0)',
                        dark_chart_closed_mountain_border: 'rgba(255,255,255,.32)',
                        chart_closed_candle_up: 'rgba(133,172,176,.32)',
                        chart_closed_candle_down: 'rgba(255,68,79,.32)',
                        chart_closed_candle_border: 'rgba(51,51,51,.32)',
                        chart_current_hr: '#ff444f',
                        chart_closed_current_hr: 'rgba(255,68,79,.32)',
                        light_chart_bg: '#fff',
                        dark_chart_bg: '#0e0e0e',
                        light_float_labels_bg: '#d6dadb',
                        dark_float_labels_bg: '#323738',
                        light_float_labels_text: '#333',
                        dark_float_labels_text: '#fff',
                    };
                },
                931: t => {
                    t.exports = {
                        red: '#ff444f',
                        light_chart_text: '#555975',
                        dark_chart_text: '#999',
                        light_chart_grid: '#f2f3f4',
                        dark_chart_grid: '#1d1f20',
                        light_chart_mountain_border: '#85acb0',
                        light_chart_mountain_bg: 'rgba(133,172,176,.16)',
                        light_chart_mountain_bg_shade: 'rgba(255,255,255,0)',
                        light_chart_closed_mountain_border: 'rgba(133,172,176,.32)',
                        dark_chart_mountain_border: '#85acb0',
                        dark_chart_mountain_bg: 'rgba(255,255,255,.36)',
                        dark_chart_mountain_bg_shade: 'rgba(16,19,32,0)',
                        dark_chart_closed_mountain_border: 'rgba(255,255,255,.32)',
                        chart_closed_candle_up: 'rgba(133,172,176,.32)',
                        chart_closed_candle_down: 'rgba(255,68,79,.32)',
                        chart_closed_candle_border: 'rgba(51,51,51,.32)',
                        chart_current_hr: '#ff444f',
                        chart_closed_current_hr: 'rgba(255,68,79,.32)',
                        light_chart_bg: '#fff',
                        dark_chart_bg: '#0e0e0e',
                        light_float_labels_bg: '#d6dadb',
                        dark_float_labels_bg: '#323738',
                        light_float_labels_text: '#333',
                        dark_float_labels_text: '#fff',
                    };
                },
                2313: t => {
                    t.exports = {
                        red: '#ff444f',
                        light_chart_text: '#555975',
                        dark_chart_text: '#999',
                        light_chart_grid: '#f2f3f4',
                        dark_chart_grid: '#1d1f20',
                        light_chart_mountain_border: '#85acb0',
                        light_chart_mountain_bg: 'rgba(133,172,176,.16)',
                        light_chart_mountain_bg_shade: 'rgba(255,255,255,0)',
                        light_chart_closed_mountain_border: 'rgba(133,172,176,.32)',
                        dark_chart_mountain_border: '#85acb0',
                        dark_chart_mountain_bg: 'rgba(255,255,255,.36)',
                        dark_chart_mountain_bg_shade: 'rgba(16,19,32,0)',
                        dark_chart_closed_mountain_border: 'rgba(255,255,255,.32)',
                        chart_closed_candle_up: 'rgba(133,172,176,.32)',
                        chart_closed_candle_down: 'rgba(255,68,79,.32)',
                        chart_closed_candle_border: 'rgba(51,51,51,.32)',
                        chart_current_hr: '#ff444f',
                        chart_closed_current_hr: 'rgba(255,68,79,.32)',
                        light_chart_bg: '#fff',
                        dark_chart_bg: '#0e0e0e',
                        light_float_labels_bg: '#d6dadb',
                        dark_float_labels_bg: '#323738',
                        light_float_labels_text: '#333',
                        dark_float_labels_text: '#fff',
                    };
                },
                6238: t => {
                    t.exports = {
                        red: '#ff444f',
                        light_chart_text: '#555975',
                        dark_chart_text: '#999',
                        light_chart_grid: '#f2f3f4',
                        dark_chart_grid: '#1d1f20',
                        light_chart_mountain_border: '#85acb0',
                        light_chart_mountain_bg: 'rgba(133,172,176,.16)',
                        light_chart_mountain_bg_shade: 'rgba(255,255,255,0)',
                        light_chart_closed_mountain_border: 'rgba(133,172,176,.32)',
                        dark_chart_mountain_border: '#85acb0',
                        dark_chart_mountain_bg: 'rgba(255,255,255,.36)',
                        dark_chart_mountain_bg_shade: 'rgba(16,19,32,0)',
                        dark_chart_closed_mountain_border: 'rgba(255,255,255,.32)',
                        chart_closed_candle_up: 'rgba(133,172,176,.32)',
                        chart_closed_candle_down: 'rgba(255,68,79,.32)',
                        chart_closed_candle_border: 'rgba(51,51,51,.32)',
                        chart_current_hr: '#ff444f',
                        chart_closed_current_hr: 'rgba(255,68,79,.32)',
                        light_chart_bg: '#fff',
                        dark_chart_bg: '#0e0e0e',
                        light_float_labels_bg: '#d6dadb',
                        dark_float_labels_bg: '#323738',
                        light_float_labels_text: '#333',
                        dark_float_labels_text: '#fff',
                    };
                },
                7092: t => {
                    t.exports = {
                        red: '#ff444f',
                        light_chart_text: '#555975',
                        dark_chart_text: '#999',
                        light_chart_grid: '#f2f3f4',
                        dark_chart_grid: '#1d1f20',
                        light_chart_mountain_border: '#85acb0',
                        light_chart_mountain_bg: 'rgba(133,172,176,.16)',
                        light_chart_mountain_bg_shade: 'rgba(255,255,255,0)',
                        light_chart_closed_mountain_border: 'rgba(133,172,176,.32)',
                        dark_chart_mountain_border: '#85acb0',
                        dark_chart_mountain_bg: 'rgba(255,255,255,.36)',
                        dark_chart_mountain_bg_shade: 'rgba(16,19,32,0)',
                        dark_chart_closed_mountain_border: 'rgba(255,255,255,.32)',
                        chart_closed_candle_up: 'rgba(133,172,176,.32)',
                        chart_closed_candle_down: 'rgba(255,68,79,.32)',
                        chart_closed_candle_border: 'rgba(51,51,51,.32)',
                        chart_current_hr: '#ff444f',
                        chart_closed_current_hr: 'rgba(255,68,79,.32)',
                        light_chart_bg: '#fff',
                        dark_chart_bg: '#0e0e0e',
                        light_float_labels_bg: '#d6dadb',
                        dark_float_labels_bg: '#323738',
                        light_float_labels_text: '#333',
                        dark_float_labels_text: '#fff',
                    };
                },
                9671: (t, e, r) => {
                    t.exports = {
                        id: 'ic-bchusd-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-bchusd-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                2048: (t, e, r) => {
                    t.exports = {
                        id: 'ic-bnbusd-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-bnbusd-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                2588: (t, e, r) => {
                    t.exports = {
                        id: 'ic-btceth-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-btceth-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                8438: (t, e, r) => {
                    t.exports = {
                        id: 'ic-btcltc-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-btcltc-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                2405: (t, e, r) => {
                    t.exports = {
                        id: 'ic-btcusd-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-btcusd-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                2049: (t, e, r) => {
                    t.exports = {
                        id: 'ic-dshusd-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-dshusd-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                5187: (t, e, r) => {
                    t.exports = {
                        id: 'ic-eosusd-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-eosusd-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                4065: (t, e, r) => {
                    t.exports = {
                        id: 'ic-ethusd-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-ethusd-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                7950: (t, e, r) => {
                    t.exports = {
                        id: 'ic-iotusd-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-iotusd-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                1071: (t, e, r) => {
                    t.exports = {
                        id: 'ic-ltcusd-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-ltcusd-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                2788: (t, e, r) => {
                    t.exports = {
                        id: 'ic-neousd-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-neousd-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                7183: (t, e, r) => {
                    t.exports = {
                        id: 'ic-omgusd-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-omgusd-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                3344: (t, e, r) => {
                    t.exports = {
                        id: 'ic-trxusd-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-trxusd-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                3297: (t, e, r) => {
                    t.exports = {
                        id: 'ic-xlmusd-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-xlmusd-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                2913: (t, e, r) => {
                    t.exports = {
                        id: 'ic-xmrusd-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-xmrusd-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                7823: (t, e, r) => {
                    t.exports = {
                        id: 'ic-xrpusd-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-xrpusd-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                4748: (t, e, r) => {
                    t.exports = {
                        id: 'ic-zecusd-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-zecusd-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                3785: (t, e, r) => {
                    t.exports = {
                        id: 'ic-oilusd-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-oilusd-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                6244: (t, e, r) => {
                    t.exports = {
                        id: 'ic-otcbadge-usage',
                        viewBox: '0 0 13 9',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-otcbadge-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                8341: (t, e, r) => {
                    t.exports = {
                        id: 'ic-metal-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-metal-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                3747: (t, e, r) => {
                    t.exports = {
                        id: 'ic-australian-200-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-australian-200-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                3669: (t, e, r) => {
                    t.exports = {
                        id: 'ic-euro-50-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-euro-50-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                2092: (t, e, r) => {
                    t.exports = {
                        id: 'ic-france-40-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-france-40-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                794: (t, e, r) => {
                    t.exports = {
                        id: 'ic-germany-40-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-germany-40-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                5092: (t, e, r) => {
                    t.exports = {
                        id: 'ic-hong-kong-50-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-hong-kong-50-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                6552: (t, e, r) => {
                    t.exports = {
                        id: 'ic-japan-225-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-japan-225-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                3119: (t, e, r) => {
                    t.exports = {
                        id: 'ic-netherland-25-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-netherland-25-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                542: (t, e, r) => {
                    t.exports = {
                        id: 'ic-swiss-20-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-swiss-20-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                7764: (t, e, r) => {
                    t.exports = {
                        id: 'ic-uk-100-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-uk-100-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                8832: (t, e, r) => {
                    t.exports = {
                        id: 'ic-usd-500-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-usd-500-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                5317: (t, e, r) => {
                    t.exports = {
                        id: 'ic-usd-tech-100-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-usd-tech-100-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                6669: (t, e, r) => {
                    t.exports = {
                        id: 'ic-wallstreet-30-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-wallstreet-30-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                4298: (t, e, r) => {
                    t.exports = {
                        id: 'ic-10-index-v-usage',
                        viewBox: '0 0 33 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-10-index-v-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                3864: (t, e, r) => {
                    t.exports = {
                        id: 'ic-100-index-v-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-100-index-v-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                2502: (t, e, r) => {
                    t.exports = {
                        id: 'ic-10-1s-index-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-10-1s-index-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                5704: (t, e, r) => {
                    t.exports = {
                        id: 'ic-100-1s-index-usage',
                        viewBox: '0 0 33 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-100-1s-index-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                4046: (t, e, r) => {
                    t.exports = {
                        id: 'ic-150-1s-index-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-150-1s-index-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                10: (t, e, r) => {
                    t.exports = {
                        id: 'ic-200-1s-index-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-200-1s-index-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                6723: (t, e, r) => {
                    t.exports = {
                        id: 'light-25(1s)index-usage',
                        viewBox: '0 0 33 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#light-25(1s)index-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                1008: (t, e, r) => {
                    t.exports = {
                        id: 'ic-250-1s-index-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-250-1s-index-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                3292: (t, e, r) => {
                    t.exports = {
                        id: 'ic-300-1s-index-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-300-1s-index-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                1449: (t, e, r) => {
                    t.exports = {
                        id: 'light-50(1s) index-usage',
                        viewBox: '0 0 33 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#light-50(1s) index-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                9715: (t, e, r) => {
                    t.exports = {
                        id: 'light-75(1s) index-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#light-75(1s) index-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                638: (t, e, r) => {
                    t.exports = {
                        id: 'ic-25-index-v-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-25-index-v-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                194: (t, e, r) => {
                    t.exports = {
                        id: 'ic-50-index-v-usage',
                        viewBox: '0 0 33 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-50-index-v-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                718: (t, e, r) => {
                    t.exports = {
                        id: 'ic-75-index-v-usage',
                        viewBox: '0 0 33 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-75-index-v-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                148: (t, e, r) => {
                    t.exports = {
                        id: 'ic-marketbear-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-marketbear-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                3751: (t, e, r) => {
                    t.exports = {
                        id: 'boom1000 index-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#boom1000 index-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                2821: (t, e, r) => {
                    t.exports = {
                        id: 'boom300 index-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#boom300 index-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                7213: (t, e, r) => {
                    t.exports = {
                        id: 'boom500 index-usage',
                        viewBox: '0 0 33 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#boom500 index-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                1553: (t, e, r) => {
                    t.exports = {
                        id: 'boom600 index-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#boom600 index-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                1085: (t, e, r) => {
                    t.exports = {
                        id: 'boom900 index-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#boom900 index-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                3562: (t, e, r) => {
                    t.exports = {
                        id: 'ic-marketbull-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-marketbull-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                6489: (t, e, r) => {
                    t.exports = {
                        id: 'crash1000 index-usage',
                        viewBox: '0 0 33 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#crash1000 index-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                4579: (t, e, r) => {
                    t.exports = {
                        id: 'crash300 index-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#crash300 index-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                7571: (t, e, r) => {
                    t.exports = {
                        id: 'crash500 index-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#crash500 index-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                6033: (t, e, r) => {
                    t.exports = {
                        id: 'crash600 index-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#crash600 index-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                2099: (t, e, r) => {
                    t.exports = {
                        id: 'crash900 index-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#crash900 index-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                5269: (t, e, r) => {
                    t.exports = {
                        id: 'ic-10-index-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-10-index-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                2167: (t, e, r) => {
                    t.exports = {
                        id: 'ic-100-index-usage',
                        viewBox: '0 0 33 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-100-index-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                4005: (t, e, r) => {
                    t.exports = {
                        id: 'ic-150-index-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-150-index-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                6617: (t, e, r) => {
                    t.exports = {
                        id: 'ic-200-index-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-200-index-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                3265: (t, e, r) => {
                    t.exports = {
                        id: 'ic-25-index-usage',
                        viewBox: '0 0 33 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-25-index-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                2853: (t, e, r) => {
                    t.exports = {
                        id: 'ic-50-index-usage',
                        viewBox: '0 0 33 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-50-index-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                3257: (t, e, r) => {
                    t.exports = {
                        id: 'ic-75-index-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-75-index-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                7358: (t, e, r) => {
                    t.exports = {
                        id: 'step-100-index-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#step-100-index-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                3425: (t, e, r) => {
                    t.exports = {
                        id: 'step-200-index-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#step-200-index-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                2188: (t, e, r) => {
                    t.exports = {
                        id: 'step-300-index-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#step-300-index-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                2839: (t, e, r) => {
                    t.exports = {
                        id: 'step-400-index-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#step-400-index-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                3010: (t, e, r) => {
                    t.exports = {
                        id: 'step-500-index-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#step-500-index-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                1561: (t, e, r) => {
                    t.exports = {
                        id: 'error-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#error-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                9429: (t, e, r) => {
                    t.exports = {
                        id: 'info-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#info-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                1610: (t, e, r) => {
                    t.exports = {
                        id: 'success-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#success-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                3775: (t, e, r) => {
                    t.exports = {
                        id: 'warning-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#warning-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                3578: (t, e, r) => {
                    t.exports = {
                        id: 'ic-arrow-green-usage',
                        viewBox: '0 0 22 31',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-arrow-green-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                3255: (t, e, r) => {
                    t.exports = {
                        id: 'ic-arrow-orange-usage',
                        viewBox: '0 0 22 31',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-arrow-orange-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                2327: (t, e, r) => {
                    t.exports = {
                        id: 'ic-back-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-back-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                7739: (t, e, r) => {
                    t.exports = {
                        id: 'ic-baseline-normal-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-baseline-normal-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                2979: (t, e, r) => {
                    t.exports = {
                        id: 'ic-candle-normal-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-candle-normal-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                6057: (t, e, r) => {
                    t.exports = {
                        id: 'ic-dot-normal-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-dot-normal-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                267: (t, e, r) => {
                    t.exports = {
                        id: 'ic-hollowcandle-normal-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-hollowcandle-normal-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                242: (t, e, r) => {
                    t.exports = {
                        id: 'ic-heikin-ashi-normal-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-heikin-ashi-normal-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                4542: (t, e, r) => {
                    t.exports = {
                        id: 'ic-kagi-normal-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-kagi-normal-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                1811: (t, e, r) => {
                    t.exports = {
                        id: 'ic-linebreak-normal-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-linebreak-normal-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                6240: (t, e, r) => {
                    t.exports = {
                        id: 'ic-pointfigure-normal-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-pointfigure-normal-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                1337: (t, e, r) => {
                    t.exports = {
                        id: 'ic-rangebars-normal-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-rangebars-normal-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                5829: (t, e, r) => {
                    t.exports = {
                        id: 'ic-renko-normal-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-renko-normal-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                9955: (t, e, r) => {
                    t.exports = {
                        id: 'ic-linedot-normal-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-linedot-normal-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                363: (t, e, r) => {
                    t.exports = {
                        id: 'ic-line-normal-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-line-normal-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                5439: (t, e, r) => {
                    t.exports = {
                        id: 'ic-ohlc-normal-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-ohlc-normal-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                4619: (t, e, r) => {
                    t.exports = {
                        id: 'ic-spline-normal-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-spline-normal-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                2910: (t, e, r) => {
                    t.exports = {
                        id: 'table-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#table-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                5833: (t, e, r) => {
                    t.exports = {
                        id: 'ic-comparison-normal-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-comparison-normal-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                7463: (t, e, r) => {
                    t.exports = {
                        id: 'ic-crosshair-off-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-crosshair-off-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                3211: (t, e, r) => {
                    t.exports = {
                        id: 'ic-crosshair-on-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-crosshair-on-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                3377: (t, e, r) => {
                    t.exports = {
                        id: 'ic-crosshair-tooltip-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-crosshair-tooltip-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                6331: (t, e, r) => {
                    t.exports = {
                        id: 'ic-drawingtools-normal-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-drawingtools-normal-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                6432: (t, e, r) => {
                    t.exports = {
                        id: 'ic-position-bottom-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-position-bottom-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                4674: (t, e, r) => {
                    t.exports = {
                        id: 'ic-position-left-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-position-left-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                9185: (t, e, r) => {
                    t.exports = {
                        id: 'ic-zoomin-light-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-zoomin-light-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                8983: (t, e, r) => {
                    t.exports = {
                        id: 'ic-zoomout-light-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-zoomout-light-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                4431: (t, e, r) => {
                    t.exports = {
                        id: 'ic-area-grayscale-usage',
                        viewBox: '0 0 24 24',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-area-grayscale-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                9129: (t, e, r) => {
                    t.exports = {
                        id: 'ic-area-usage',
                        viewBox: '0 0 24 24',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-area-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                263: (t, e, r) => {
                    t.exports = {
                        id: 'ic-candle-grayscale-usage',
                        viewBox: '0 0 24 24',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-candle-grayscale-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                7249: (t, e, r) => {
                    t.exports = {
                        id: 'ic-candle-usage',
                        viewBox: '0 0 24 24',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-candle-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                301: (t, e, r) => {
                    t.exports = {
                        id: 'ic-hollow-grayscale-usage',
                        viewBox: '0 0 24 24',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-hollow-grayscale-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                9607: (t, e, r) => {
                    t.exports = {
                        id: 'ic-hollow-usage',
                        viewBox: '0 0 24 24',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-hollow-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                7414: (t, e, r) => {
                    t.exports = {
                        id: 'ic-ohlc-grayscale-usage',
                        viewBox: '0 0 24 24',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-ohlc-grayscale-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                9564: (t, e, r) => {
                    t.exports = {
                        id: 'ic-ohlc-usage',
                        viewBox: '0 0 24 24',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-ohlc-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                4629: (t, e, r) => {
                    t.exports = {
                        id: 'ic-clear-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-clear-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                9625: (t, e, r) => {
                    t.exports = {
                        id: 'ic-close-bold-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-close-bold-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                9324: (t, e, r) => {
                    t.exports = {
                        id: 'ic-close-circle-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-close-circle-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                3293: (t, e, r) => {
                    t.exports = {
                        id: 'full-screen-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#full-screen-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                1278: (t, e, r) => {
                    t.exports = {
                        id: 'ic-active-usage',
                        viewBox: '0 0 17 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-active-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                9289: (t, e, r) => {
                    t.exports = {
                        id: 'ic-add-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-add-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                9891: (t, e, r) => {
                    t.exports = {
                        id: 'ic-charts-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-charts-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                3997: (t, e, r) => {
                    t.exports = {
                        id: 'ic-checkbox-active-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-checkbox-active-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                8451: (t, e, r) => {
                    t.exports = {
                        id: 'ic-checkbox-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-checkbox-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                204: (t, e, r) => {
                    t.exports = {
                        id: 'ic-close-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-close-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                1320: (t, e, r) => {
                    t.exports = {
                        id: 'ic-download-usage',
                        viewBox: '0 0 24 24',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-download-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                4497: (t, e, r) => {
                    t.exports = {
                        id: 'ic-drawing-tool-usage',
                        viewBox: '0 0 24 24',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-drawing-tool-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                4325: (t, e, r) => {
                    t.exports = {
                        id: 'ic-help-center-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-help-center-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                8250: (t, e, r) => {
                    t.exports = {
                        id: 'ic-indicators-usage',
                        viewBox: '0 0 24 24',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-indicators-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                2532: (t, e, r) => {
                    t.exports = {
                        id: 'ic-info-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-info-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                3365: (t, e, r) => {
                    t.exports = {
                        id: 'ic-input-number-minus-usage',
                        viewBox: '0 0 8 8',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-input-number-minus-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                3031: (t, e, r) => {
                    t.exports = {
                        id: 'ic-input-number-plus-usage',
                        viewBox: '0 0 8 8',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-input-number-plus-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                5038: (t, e, r) => {
                    t.exports = {
                        id: 'ic-language-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-language-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                1041: (t, e, r) => {
                    t.exports = {
                        id: 'ic-templates-usage',
                        viewBox: '0 0 24 24',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-templates-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                1655: (t, e, r) => {
                    t.exports = {
                        id: 'ic-theme-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-theme-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                9707: (t, e, r) => {
                    t.exports = {
                        id: 'ic-delete-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-delete-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                7885: (t, e, r) => {
                    t.exports = {
                        id: 'ic-csv-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-csv-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                7420: (t, e, r) => {
                    t.exports = {
                        id: 'ic-png-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-png-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                3576: (t, e, r) => {
                    t.exports = {
                        id: 'ic-channel-usage',
                        viewBox: '0 0 24 24',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-channel-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                6706: (t, e, r) => {
                    t.exports = {
                        id: 'ic-continuous-usage',
                        viewBox: '0 0 24 24',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-continuous-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                7365: (t, e, r) => {
                    t.exports = {
                        id: 'ic-fibonacci-fan-usage',
                        viewBox: '0 0 24 24',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-fibonacci-fan-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                4311: (t, e, r) => {
                    t.exports = {
                        id: 'ic-horizontal-usage',
                        viewBox: '0 0 24 24',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-horizontal-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                3385: (t, e, r) => {
                    t.exports = {
                        id: 'ic-line-usage',
                        viewBox: '0 0 24 24',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-line-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                7425: (t, e, r) => {
                    t.exports = {
                        id: 'ic-ray-usage',
                        viewBox: '0 0 24 24',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-ray-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                1134: (t, e, r) => {
                    t.exports = {
                        id: 'ic-rectangle-usage',
                        viewBox: '0 0 24 24',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-rectangle-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                2308: (t, e, r) => {
                    t.exports = {
                        id: 'ic-trend-usage',
                        viewBox: '0 0 24 24',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-trend-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                5477: (t, e, r) => {
                    t.exports = {
                        id: 'ic-vertical-usage',
                        viewBox: '0 0 24 24',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-vertical-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                9307: (t, e, r) => {
                    t.exports = {
                        id: 'ic-dropdown-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-dropdown-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                9411: (t, e, r) => {
                    t.exports = {
                        id: 'ic-edit-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-edit-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                8093: (t, e, r) => {
                    t.exports = {
                        id: 'ic-favorite-normal-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-favorite-normal-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                1795: (t, e, r) => {
                    t.exports = {
                        id: 'arabic-usage',
                        viewBox: '0 0 24 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#arabic-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                3719: (t, e, r) => {
                    t.exports = {
                        id: 'aud-usage',
                        viewBox: '0 0 24 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#aud-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                7428: (t, e, r) => {
                    t.exports = {
                        id: 'bangladesh-usage',
                        viewBox: '0 0 24 17',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#bangladesh-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                1445: (t, e, r) => {
                    t.exports = {
                        id: 'cad-usage',
                        viewBox: '0 0 24 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#cad-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                8217: (t, e, r) => {
                    t.exports = {
                        id: 'cambodia-usage',
                        viewBox: '0 0 24 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#cambodia-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                4056: (t, e, r) => {
                    t.exports = {
                        id: 'chf-usage',
                        viewBox: '0 0 24 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#chf-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                5004: (t, e, r) => {
                    t.exports = {
                        id: 'chinese-traditional-usage',
                        viewBox: '0 0 24 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#chinese-traditional-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                7256: (t, e, r) => {
                    t.exports = {
                        id: 'chinese-usage',
                        viewBox: '0 0 24 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#chinese-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                7451: (t, e, r) => {
                    t.exports = {
                        id: 'dutch-usage',
                        viewBox: '0 0 24 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#dutch-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                1477: (t, e, r) => {
                    t.exports = {
                        id: 'eur-usage',
                        viewBox: '0 0 24 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#eur-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                3135: (t, e, r) => {
                    t.exports = {
                        id: 'french-usage',
                        viewBox: '0 0 24 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#french-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                3332: (t, e, r) => {
                    t.exports = {
                        id: 'gbp-usage',
                        viewBox: '0 0 24 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#gbp-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                5729: (t, e, r) => {
                    t.exports = {
                        id: 'german-usage',
                        viewBox: '0 0 24 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#german-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                9876: (t, e, r) => {
                    t.exports = {
                        id: 'hong kong-usage',
                        viewBox: '0 0 24 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#hong kong-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                451: (t, e, r) => {
                    t.exports = {
                        id: 'indonesia-usage',
                        viewBox: '0 0 24 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#indonesia-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                2620: (t, e, r) => {
                    t.exports = {
                        id: 'italy-usage',
                        viewBox: '0 0 24 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#italy-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                6902: (t, e, r) => {
                    t.exports = {
                        id: 'jpy-usage',
                        viewBox: '0 0 24 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#jpy-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                1089: (t, e, r) => {
                    t.exports = {
                        id: 'kenya-usage',
                        viewBox: '0 0 24 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#kenya-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                3179: (t, e, r) => {
                    t.exports = {
                        id: 'korean-usage',
                        viewBox: '0 0 36 24',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#korean-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                1069: (t, e, r) => {
                    t.exports = {
                        id: 'mongolian-usage',
                        viewBox: '0 0 24 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#mongolian-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                9702: (t, e, r) => {
                    t.exports = {
                        id: 'mxn-usage',
                        viewBox: '0 0 24 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#mxn-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                1649: (t, e, r) => {
                    t.exports = {
                        id: 'nok-usage',
                        viewBox: '0 0 24 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#nok-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                1229: (t, e, r) => {
                    t.exports = {
                        id: 'nzd-usage',
                        viewBox: '0 0 24 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#nzd-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                2607: (t, e, r) => {
                    t.exports = {
                        id: 'pln-usage',
                        viewBox: '0 0 24 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#pln-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                37: (t, e, r) => {
                    t.exports = {
                        id: 'portugal-usage',
                        viewBox: '0 0 24 17',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#portugal-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                4236: (t, e, r) => {
                    t.exports = {
                        id: 'russia-usage',
                        viewBox: '0 0 24 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#russia-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                7558: (t, e, r) => {
                    t.exports = {
                        id: 'sek-usage',
                        viewBox: '0 0 24 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#sek-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                9705: (t, e, r) => {
                    t.exports = {
                        id: 'spanish-usage',
                        viewBox: '0 0 24 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#spanish-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                7038: (t, e, r) => {
                    t.exports = {
                        id: 'srilanka-usage',
                        viewBox: '0 0 24 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#srilanka-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                6226: (t, e, r) => {
                    t.exports = {
                        id: 'thailand-usage',
                        viewBox: '0 0 24 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#thailand-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                5357: (t, e, r) => {
                    t.exports = {
                        id: 'turkey-usage',
                        viewBox: '0 0 24 17',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#turkey-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                8901: (t, e, r) => {
                    t.exports = {
                        id: 'usd-usage',
                        viewBox: '0 0 24 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#usd-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                6681: (t, e, r) => {
                    t.exports = {
                        id: 'uzbekistan-usage',
                        viewBox: '0 0 24 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#uzbekistan-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                8457: (t, e, r) => {
                    t.exports = {
                        id: 'vietnam-usage',
                        viewBox: '0 0 24 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#vietnam-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                3770: (t, e, r) => {
                    t.exports = {
                        id: 'wallstreet-usage',
                        viewBox: '0 0 24 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#wallstreet-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                5407: (t, e, r) => {
                    t.exports = {
                        id: 'xau-usage',
                        viewBox: '0 0 8 8',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#xau-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                1270: (t, e, r) => {
                    t.exports = {
                        id: 'ic-adx-usage',
                        viewBox: '0 0 25 24',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-adx-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                8246: (t, e, r) => {
                    t.exports = {
                        id: 'ic-alligator-usage',
                        viewBox: '0 0 25 24',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-alligator-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                1108: (t, e, r) => {
                    t.exports = {
                        id: 'ic-aroon-usage',
                        viewBox: '0 0 25 24',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-aroon-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                5: (t, e, r) => {
                    t.exports = {
                        id: 'ic-averages-usage',
                        viewBox: '0 0 25 24',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-averages-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                1077: (t, e, r) => {
                    t.exports = {
                        id: 'ic-awesome-oscillator-usage',
                        viewBox: '0 0 25 24',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-awesome-oscillator-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                6537: (t, e, r) => {
                    t.exports = {
                        id: 'ic-bollinger-usage',
                        viewBox: '0 0 25 24',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-bollinger-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                1908: (t, e, r) => {
                    t.exports = {
                        id: 'ic-cat-averages-usage',
                        viewBox: '0 0 17 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-cat-averages-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                2421: (t, e, r) => {
                    t.exports = {
                        id: 'ic-commodity-channel-index-usage',
                        viewBox: '0 0 25 24',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-commodity-channel-index-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                5459: (t, e, r) => {
                    t.exports = {
                        id: 'ic-donchian-usage',
                        viewBox: '0 0 25 24',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-donchian-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                155: (t, e, r) => {
                    t.exports = {
                        id: 'ic-dtrended-usage',
                        viewBox: '0 0 25 24',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-dtrended-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                3821: (t, e, r) => {
                    t.exports = {
                        id: 'ic-envelope-usage',
                        viewBox: '0 0 25 24',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-envelope-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                3163: (t, e, r) => {
                    t.exports = {
                        id: 'ic-fractal-chaos-usage',
                        viewBox: '0 0 25 24',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-fractal-chaos-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                9424: (t, e, r) => {
                    t.exports = {
                        id: 'ic-gator-usage',
                        viewBox: '0 0 25 24',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-gator-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                5976: (t, e, r) => {
                    t.exports = {
                        id: 'ic-ichimoku-usage',
                        viewBox: '0 0 25 24',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-ichimoku-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                9442: (t, e, r) => {
                    t.exports = {
                        id: 'ic-macd-usage',
                        viewBox: '0 0 25 24',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-macd-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                6583: (t, e, r) => {
                    t.exports = {
                        id: 'ic-momentum-usage',
                        viewBox: '0 0 17 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-momentum-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                9149: (t, e, r) => {
                    t.exports = {
                        id: 'ic-other-usage',
                        viewBox: '0 0 17 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-other-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                3982: (t, e, r) => {
                    t.exports = {
                        id: 'ic-parabolic-usage',
                        viewBox: '0 0 25 24',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-parabolic-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                9877: (t, e, r) => {
                    t.exports = {
                        id: 'ic-rainbow-usage',
                        viewBox: '0 0 25 24',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-rainbow-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                9080: (t, e, r) => {
                    t.exports = {
                        id: 'ic-rate-of-change-usage',
                        viewBox: '0 0 25 24',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-rate-of-change-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                3417: (t, e, r) => {
                    t.exports = {
                        id: 'ic-rsi-usage',
                        viewBox: '0 0 25 24',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-rsi-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                6661: (t, e, r) => {
                    t.exports = {
                        id: 'ic-stochastic-momentum-usage',
                        viewBox: '0 0 25 24',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-stochastic-momentum-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                7709: (t, e, r) => {
                    t.exports = {
                        id: 'ic-stochastic-oscillator-usage',
                        viewBox: '0 0 25 24',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-stochastic-oscillator-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                4575: (t, e, r) => {
                    t.exports = {
                        id: 'ic-trend-dark-usage',
                        viewBox: '0 0 17 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-trend-dark-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                7037: (t, e, r) => {
                    t.exports = {
                        id: 'ic-trend-light-usage',
                        viewBox: '0 0 17 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-trend-light-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                3800: (t, e, r) => {
                    t.exports = {
                        id: 'ic-volatility-usage',
                        viewBox: '0 0 17 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-volatility-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                1904: (t, e, r) => {
                    t.exports = {
                        id: 'ic-william-percent-usage',
                        viewBox: '0 0 25 24',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-william-percent-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                1820: (t, e, r) => {
                    t.exports = {
                        id: 'ic-zig-zag-usage',
                        viewBox: '0 0 25 24',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-zig-zag-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                1891: (t, e, r) => {
                    t.exports = {
                        id: 'ic-measure-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-measure-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                8584: (t, e, r) => {
                    t.exports = {
                        id: 'ic-home-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-home-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                7521: (t, e, r) => {
                    t.exports = {
                        id: 'ic-scale-full-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-scale-full-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                4185: (t, e, r) => {
                    t.exports = {
                        id: 'ic-zoomin-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-zoomin-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                6776: (t, e, r) => {
                    t.exports = {
                        id: 'ic-zoomout-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-zoomout-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                6183: (t, e, r) => {
                    t.exports = {
                        id: 'ic-pencil-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-pencil-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                7625: (t, e, r) => {
                    t.exports = {
                        id: 'ic-placeholder-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-placeholder-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                4333: (t, e, r) => {
                    t.exports = {
                        id: 'ic-search-normal-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-search-normal-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                8414: (t, e, r) => {
                    t.exports = {
                        id: 'ic-countdown-dark-active-usage',
                        viewBox: '0 0 160 120',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-countdown-dark-active-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                3273: (t, e, r) => {
                    t.exports = {
                        id: 'ic-countdown-dark-normal-usage',
                        viewBox: '0 0 160 120',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-countdown-dark-normal-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                416: (t, e, r) => {
                    t.exports = {
                        id: 'ic-countdown-light-active-usage',
                        viewBox: '0 0 160 120',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-countdown-light-active-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                9423: (t, e, r) => {
                    t.exports = {
                        id: 'ic-countdown-light-normal-usage',
                        viewBox: '0 0 160 120',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-countdown-light-normal-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                5692: (t, e, r) => {
                    t.exports = {
                        id: 'ic-highest-lowest-dark-active-usage',
                        viewBox: '0 0 160 120',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-highest-lowest-dark-active-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                3235: (t, e, r) => {
                    t.exports = {
                        id: 'ic-highest-lowest-dark-normal-usage',
                        viewBox: '0 0 160 120',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-highest-lowest-dark-normal-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                5126: (t, e, r) => {
                    t.exports = {
                        id: 'ic-highest-lowest-light-active-usage',
                        viewBox: '0 0 160 120',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-highest-lowest-light-active-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                6577: (t, e, r) => {
                    t.exports = {
                        id: 'ic-highest-lowest-light-normal-usage',
                        viewBox: '0 0 160 120',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-highest-lowest-light-normal-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                3544: (t, e, r) => {
                    t.exports = {
                        id: 'ic-historical-dark-active-usage',
                        viewBox: '0 0 160 120',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-historical-dark-active-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                135: (t, e, r) => {
                    t.exports = {
                        id: 'ic-historical-dark-normal-usage',
                        viewBox: '0 0 160 120',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-historical-dark-normal-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                1722: (t, e, r) => {
                    t.exports = {
                        id: 'ic-historical-light-active-usage',
                        viewBox: '0 0 160 120',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-historical-light-active-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                1949: (t, e, r) => {
                    t.exports = {
                        id: 'ic-historical-light-normal-usage',
                        viewBox: '0 0 160 120',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-historical-light-normal-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                3893: (t, e, r) => {
                    t.exports = {
                        id: 'ic-theme-dark-usage',
                        viewBox: '0 0 236 180',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-theme-dark-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                963: (t, e, r) => {
                    t.exports = {
                        id: 'ic-theme-light-usage',
                        viewBox: '0 0 236 180',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-theme-light-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                1345: (t, e, r) => {
                    t.exports = {
                        id: 'ic-empty-state-usage',
                        viewBox: '0 0 128 118',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-empty-state-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                1593: (t, e, r) => {
                    t.exports = {
                        id: 'ic-overwrite-state-usage',
                        viewBox: '0 0 128 128',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-overwrite-state-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                6456: (t, e, r) => {
                    t.exports = {
                        id: 'ic-basket-active-usage',
                        viewBox: '0 0 32 32',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-basket-active-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                2999: (t, e, r) => {
                    t.exports = {
                        id: 'ic-basket-normal-usage',
                        viewBox: '0 0 16 15',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-basket-normal-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                8310: (t, e, r) => {
                    t.exports = {
                        id: 'ic-commodities-normal-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-commodities-normal-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                1288: (t, e, r) => {
                    t.exports = {
                        id: 'ic-cryptocurrency-normal-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-cryptocurrency-normal-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                7528: (t, e, r) => {
                    t.exports = {
                        id: 'ic-forex-normal-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-forex-normal-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                3522: (t, e, r) => {
                    t.exports = {
                        id: 'ic-indices-normal-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-indices-normal-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                6380: (t, e, r) => {
                    t.exports = {
                        id: 'ic-otc-normal-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-otc-normal-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                9317: (t, e, r) => {
                    t.exports = {
                        id: 'ic-synth-normal-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-synth-normal-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                6800: (t, e, r) => {
                    t.exports = {
                        id: 'ic-volatility-normal-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-volatility-normal-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                8927: (t, e, r) => {
                    t.exports = {
                        id: 'ic-tick-usage',
                        viewBox: '0 0 16 16',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-tick-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                6667: (t, e, r) => {
                    t.exports = {
                        id: 'ic-time-usage',
                        viewBox: '0 0 12 12',
                        url: r.p + 'sprite-a4edd7.smartcharts.svg#ic-time-usage',
                        toString: function () {
                            return this.url;
                        },
                    };
                },
                6648: (t, e, r) => {
                    var i = {
                        './ar.json': [1405, 785],
                        './bn.json': [8462, 50],
                        './de.json': [393, 409],
                        './es.json': [6870, 146],
                        './fr.json': [9358, 826],
                        './id.json': [87, 823],
                        './it.json': [5191, 159],
                        './km.json': [3926, 422],
                        './ko.json': [2900, 800],
                        './messages.json': [7730, 710],
                        './mn.json': [3221, 521],
                        './nl.json': [7840, 424],
                        './pl.json': [6426, 634],
                        './pt.json': [8082, 490],
                        './ru.json': [3351, 191],
                        './si.json': [3026, 834],
                        './sw.json': [4500, 456],
                        './th.json': [8106, 522],
                        './tr.json': [2880, 28],
                        './uz.json': [8201, 813],
                        './vi.json': [9143, 935],
                        './zh.json': [6424, 864],
                        './zh_cn.json': [5988, 606],
                        './zh_tw.json': [9524, 602],
                    };
                    function a(t) {
                        if (!r.o(i, t))
                            return Promise.resolve().then(() => {
                                var e = new Error("Cannot find module '" + t + "'");
                                throw ((e.code = 'MODULE_NOT_FOUND'), e);
                            });
                        var e = i[t],
                            a = e[0];
                        return r.e(e[1]).then(() => r.t(a, 19));
                    }
                    (a.keys = () => Object.keys(i)), (a.id = 6648), (t.exports = a);
                },
                4511: e => {
                    'use strict';
                    e.exports = t;
                },
                255: t => {
                    'use strict';
                    t.exports = e;
                },
                809: t => {
                    'use strict';
                    t.exports = r;
                },
                6092: t => {
                    'use strict';
                    t.exports = i;
                },
                7073: (t, e) => {
                    var r;
                    !(function () {
                        'use strict';
                        var i = {}.hasOwnProperty;
                        function a() {
                            for (var t = '', e = 0; e < arguments.length; e++) {
                                var r = arguments[e];
                                r && (t = s(t, n(r)));
                            }
                            return t;
                        }
                        function n(t) {
                            if ('string' == typeof t || 'number' == typeof t) return t;
                            if ('object' != typeof t) return '';
                            if (Array.isArray(t)) return a.apply(null, t);
                            if (
                                t.toString !== Object.prototype.toString &&
                                !t.toString.toString().includes('[native code]')
                            )
                                return t.toString();
                            var e = '';
                            for (var r in t) i.call(t, r) && t[r] && (e = s(e, r));
                            return e;
                        }
                        function s(t, e) {
                            return e ? (t ? t + ' ' + e : t + e) : t;
                        }
                        t.exports
                            ? ((a.default = a), (t.exports = a))
                            : void 0 ===
                                  (r = function () {
                                      return a;
                                  }.apply(e, [])) || (t.exports = r);
                    })();
                },
            },
            c = {};
        function h(t) {
            var e = c[t];
            if (void 0 !== e) return e.exports;
            var r = (c[t] = { exports: {} });
            return l[t].call(r.exports, r, r.exports, h), r.exports;
        }
        (h.m = l),
            (h.n = t => {
                var e = t && t.__esModule ? () => t.default : () => t;
                return h.d(e, { a: e }), e;
            }),
            (n = Object.getPrototypeOf ? t => Object.getPrototypeOf(t) : t => t.__proto__),
            (h.t = function (t, e) {
                if ((1 & e && (t = this(t)), 8 & e)) return t;
                if ('object' == typeof t && t) {
                    if (4 & e && t.__esModule) return t;
                    if (16 & e && 'function' == typeof t.then) return t;
                }
                var r = Object.create(null);
                h.r(r);
                var i = {};
                a = a || [null, n({}), n([]), n(n)];
                for (var s = 2 & e && t; 'object' == typeof s && !~a.indexOf(s); s = n(s))
                    Object.getOwnPropertyNames(s).forEach(e => (i[e] = () => t[e]));
                return (i.default = () => t), h.d(r, i), r;
            }),
            (h.d = (t, e) => {
                for (var r in e) h.o(e, r) && !h.o(t, r) && Object.defineProperty(t, r, { enumerable: !0, get: e[r] });
            }),
            (h.f = {}),
            (h.e = t => Promise.all(Object.keys(h.f).reduce((e, r) => (h.f[r](t, e), e), []))),
            (h.u = t =>
                ({
                    28: 'tr-json',
                    50: 'bn-json',
                    146: 'es-json',
                    159: 'it-json',
                    191: 'ru-json',
                    409: 'de-json',
                    422: 'km-json',
                    424: 'nl-json',
                    456: 'sw-json',
                    490: 'pt-json',
                    518: 'flutter-chart-adapter',
                    521: 'mn-json',
                    522: 'th-json',
                    526: 'html2canvas',
                    590: 'resize-observer-polyfill',
                    602: 'zh_tw-json',
                    606: 'zh_cn-json',
                    634: 'pl-json',
                    710: 'messages-json',
                    785: 'ar-json',
                    800: 'ko-json',
                    813: 'uz-json',
                    823: 'id-json',
                    826: 'fr-json',
                    834: 'si-json',
                    864: 'zh-json',
                    935: 'vi-json',
                })[t] +
                '-' +
                {
                    28: 'a9cd3e',
                    50: '9c0e5f',
                    146: '4bfad7',
                    159: '5a017f',
                    191: 'cd22eb',
                    409: 'e99a36',
                    422: '6e649f',
                    424: '3c6e26',
                    456: '1bcaaf',
                    490: '444264',
                    518: '5bcc3c',
                    521: 'e20afd',
                    522: '9a1cb9',
                    526: '7375f9',
                    590: '9d6f84',
                    602: '53f3eb',
                    606: 'a60677',
                    634: 'd0f7f8',
                    710: '045f0b',
                    785: '09a236',
                    800: '164315',
                    813: '6fec7f',
                    823: '3614f3',
                    826: '4c679b',
                    834: 'c9518f',
                    864: '263198',
                    935: 'cb843e',
                }[t] +
                '.smartcharts.js'),
            (h.miniCssF = t => {}),
            (h.g = (function () {
                if ('object' == typeof globalThis) return globalThis;
                try {
                    return this || new Function('return this')();
                } catch (t) {
                    if ('object' == typeof window) return window;
                }
            })()),
            (h.o = (t, e) => Object.prototype.hasOwnProperty.call(t, e)),
            (s = {}),
            (o = 'smartcharts:'),
            (h.l = (t, e, r, i) => {
                if (s[t]) s[t].push(e);
                else {
                    var a, n;
                    if (void 0 !== r)
                        for (var l = document.getElementsByTagName('script'), c = 0; c < l.length; c++) {
                            var u = l[c];
                            if (u.getAttribute('src') == t || u.getAttribute('data-webpack') == o + r) {
                                a = u;
                                break;
                            }
                        }
                    a ||
                        ((n = !0),
                        ((a = document.createElement('script')).charset = 'utf-8'),
                        (a.timeout = 120),
                        h.nc && a.setAttribute('nonce', h.nc),
                        a.setAttribute('data-webpack', o + r),
                        (a.src = t)),
                        (s[t] = [e]);
                    var d = (e, r) => {
                            (a.onerror = a.onload = null), clearTimeout(g);
                            var i = s[t];
                            if (
                                (delete s[t], a.parentNode && a.parentNode.removeChild(a), i && i.forEach(t => t(r)), e)
                            )
                                return e(r);
                        },
                        g = setTimeout(d.bind(null, void 0, { type: 'timeout', target: a }), 12e4);
                    (a.onerror = d.bind(null, a.onerror)),
                        (a.onload = d.bind(null, a.onload)),
                        n && document.head.appendChild(a);
                }
            }),
            (h.r = t => {
                'undefined' != typeof Symbol &&
                    Symbol.toStringTag &&
                    Object.defineProperty(t, Symbol.toStringTag, { value: 'Module' }),
                    Object.defineProperty(t, '__esModule', { value: !0 });
            }),
            (h.p = ''),
            (() => {
                var t = { 792: 0 };
                h.f.j = (e, r) => {
                    var i = h.o(t, e) ? t[e] : void 0;
                    if (0 !== i)
                        if (i) r.push(i[2]);
                        else {
                            var a = new Promise((r, a) => (i = t[e] = [r, a]));
                            r.push((i[2] = a));
                            var n = h.p + h.u(e),
                                s = new Error();
                            h.l(
                                n,
                                r => {
                                    if (h.o(t, e) && (0 !== (i = t[e]) && (t[e] = void 0), i)) {
                                        var a = r && ('load' === r.type ? 'missing' : r.type),
                                            n = r && r.target && r.target.src;
                                        (s.message = 'Loading chunk ' + e + ' failed.\n(' + a + ': ' + n + ')'),
                                            (s.name = 'ChunkLoadError'),
                                            (s.type = a),
                                            (s.request = n),
                                            i[1](s);
                                    }
                                },
                                'chunk-' + e,
                                e
                            );
                        }
                };
                var e = (e, r) => {
                        var i,
                            a,
                            n = r[0],
                            s = r[1],
                            o = r[2],
                            l = 0;
                        if (n.some(e => 0 !== t[e])) {
                            for (i in s) h.o(s, i) && (h.m[i] = s[i]);
                            o && o(h);
                        }
                        for (e && e(r); l < n.length; l++) (a = n[l]), h.o(t, a) && t[a] && t[a][0](), (t[a] = 0);
                    },
                    r = (self.webpackChunksmartcharts = self.webpackChunksmartcharts || []);
                r.forEach(e.bind(null, 0)), (r.push = e.bind(null, r.push.bind(r)));
            })();
        var u = {};
        return (
            (() => {
                'use strict';
                h.d(u, { default: () => xS });
                var t = h(7073),
                    e = h.n(t);
                function r(t) {
                    for (var e = arguments.length, r = new Array(e > 1 ? e - 1 : 0), i = 1; i < e; i++)
                        r[i - 1] = arguments[i];
                    throw new Error(
                        'number' == typeof t
                            ? '[MobX] minified error nr: ' +
                              t +
                              (r.length ? ' ' + r.map(String).join(',') : '') +
                              '. Find the full error at: https://github.com/mobxjs/mobx/blob/main/packages/mobx/src/errors.ts'
                            : '[MobX] ' + t
                    );
                }
                var i = {};
                function a() {
                    return 'undefined' != typeof globalThis
                        ? globalThis
                        : 'undefined' != typeof window
                          ? window
                          : void 0 !== h.g
                            ? h.g
                            : 'undefined' != typeof self
                              ? self
                              : i;
                }
                var n = Object.assign,
                    s = Object.getOwnPropertyDescriptor,
                    o = Object.defineProperty,
                    l = Object.prototype,
                    c = [];
                Object.freeze(c);
                var d = {};
                Object.freeze(d);
                var g = 'undefined' != typeof Proxy,
                    m = Object.toString();
                function p() {
                    g || r('Proxy not available');
                }
                function f(t) {
                    var e = !1;
                    return function () {
                        if (!e) return (e = !0), t.apply(this, arguments);
                    };
                }
                var _ = function () {};
                function v(t) {
                    return 'function' == typeof t;
                }
                function b(t) {
                    switch (typeof t) {
                        case 'string':
                        case 'symbol':
                        case 'number':
                            return !0;
                    }
                    return !1;
                }
                function y(t) {
                    return null !== t && 'object' == typeof t;
                }
                function S(t) {
                    if (!y(t)) return !1;
                    var e = Object.getPrototypeOf(t);
                    if (null == e) return !0;
                    var r = Object.hasOwnProperty.call(e, 'constructor') && e.constructor;
                    return 'function' == typeof r && r.toString() === m;
                }
                function w(t) {
                    var e = null == t ? void 0 : t.constructor;
                    return !!e && ('GeneratorFunction' === e.name || 'GeneratorFunction' === e.displayName);
                }
                function C(t, e, r) {
                    o(t, e, { enumerable: !1, writable: !0, configurable: !0, value: r });
                }
                function E(t, e, r) {
                    o(t, e, { enumerable: !1, writable: !1, configurable: !0, value: r });
                }
                function x(t, e) {
                    var r = 'isMobX' + t;
                    return (
                        (e.prototype[r] = !0),
                        function (t) {
                            return y(t) && !0 === t[r];
                        }
                    );
                }
                function T(t) {
                    return t instanceof Map;
                }
                function k(t) {
                    return t instanceof Set;
                }
                var A = void 0 !== Object.getOwnPropertySymbols,
                    O =
                        'undefined' != typeof Reflect && Reflect.ownKeys
                            ? Reflect.ownKeys
                            : A
                              ? function (t) {
                                    return Object.getOwnPropertyNames(t).concat(Object.getOwnPropertySymbols(t));
                                }
                              : Object.getOwnPropertyNames;
                function N(t) {
                    return null === t ? null : 'object' == typeof t ? '' + t : t;
                }
                function I(t, e) {
                    return l.hasOwnProperty.call(t, e);
                }
                var D =
                    Object.getOwnPropertyDescriptors ||
                    function (t) {
                        var e = {};
                        return (
                            O(t).forEach(function (r) {
                                e[r] = s(t, r);
                            }),
                            e
                        );
                    };
                function P(t, e) {
                    for (var r = 0; r < e.length; r++) {
                        var i = e[r];
                        (i.enumerable = i.enumerable || !1),
                            (i.configurable = !0),
                            'value' in i && (i.writable = !0),
                            Object.defineProperty(
                                t,
                                (void 0,
                                'symbol' ==
                                typeof (a = (function (t, e) {
                                    if ('object' != typeof t || null === t) return t;
                                    var r = t[Symbol.toPrimitive];
                                    if (void 0 !== r) {
                                        var i = r.call(t, 'string');
                                        if ('object' != typeof i) return i;
                                        throw new TypeError('@@toPrimitive must return a primitive value.');
                                    }
                                    return String(t);
                                })(i.key))
                                    ? a
                                    : String(a)),
                                i
                            );
                    }
                    var a;
                }
                function L(t, e, r) {
                    return (
                        e && P(t.prototype, e), r && P(t, r), Object.defineProperty(t, 'prototype', { writable: !1 }), t
                    );
                }
                function M() {
                    return (
                        (M = Object.assign
                            ? Object.assign.bind()
                            : function (t) {
                                  for (var e = 1; e < arguments.length; e++) {
                                      var r = arguments[e];
                                      for (var i in r) Object.prototype.hasOwnProperty.call(r, i) && (t[i] = r[i]);
                                  }
                                  return t;
                              }),
                        M.apply(this, arguments)
                    );
                }
                function B(t, e) {
                    (t.prototype = Object.create(e.prototype)), (t.prototype.constructor = t), R(t, e);
                }
                function R(t, e) {
                    return (
                        (R = Object.setPrototypeOf
                            ? Object.setPrototypeOf.bind()
                            : function (t, e) {
                                  return (t.__proto__ = e), t;
                              }),
                        R(t, e)
                    );
                }
                function j(t) {
                    if (void 0 === t)
                        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t;
                }
                function F(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for (var r = 0, i = new Array(e); r < e; r++) i[r] = t[r];
                    return i;
                }
                function V(t, e) {
                    var r = ('undefined' != typeof Symbol && t[Symbol.iterator]) || t['@@iterator'];
                    if (r) return (r = r.call(t)).next.bind(r);
                    if (
                        Array.isArray(t) ||
                        (r = (function (t, e) {
                            if (t) {
                                if ('string' == typeof t) return F(t, e);
                                var r = Object.prototype.toString.call(t).slice(8, -1);
                                return (
                                    'Object' === r && t.constructor && (r = t.constructor.name),
                                    'Map' === r || 'Set' === r
                                        ? Array.from(t)
                                        : 'Arguments' === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)
                                          ? F(t, e)
                                          : void 0
                                );
                            }
                        })(t)) ||
                        (e && t && 'number' == typeof t.length)
                    ) {
                        r && (t = r);
                        var i = 0;
                        return function () {
                            return i >= t.length ? { done: !0 } : { done: !1, value: t[i++] };
                        };
                    }
                    throw new TypeError(
                        'Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
                    );
                }
                var H = Symbol('mobx-stored-annotations');
                function q(t) {
                    return Object.assign(function (e, r) {
                        if ($(r)) return t.decorate_20223_(e, r);
                        U(e, r, t);
                    }, t);
                }
                function U(t, e, r) {
                    I(t, H) || C(t, H, M({}, t[H])),
                        (function (t) {
                            return t.annotationType_ === Q;
                        })(r) || (t[H][e] = r);
                }
                function $(t) {
                    return 'object' == typeof t && 'string' == typeof t.kind;
                }
                var z = Symbol('mobx administration'),
                    G = (function () {
                        function t(t) {
                            void 0 === t && (t = 'Atom'),
                                (this.name_ = void 0),
                                (this.isPendingUnobservation_ = !1),
                                (this.isBeingObserved_ = !1),
                                (this.observers_ = new Set()),
                                (this.diffValue_ = 0),
                                (this.lastAccessedBy_ = 0),
                                (this.lowestObserverState_ = Qt.NOT_TRACKING_),
                                (this.onBOL = void 0),
                                (this.onBUOL = void 0),
                                (this.name_ = t);
                        }
                        var e = t.prototype;
                        return (
                            (e.onBO = function () {
                                this.onBOL &&
                                    this.onBOL.forEach(function (t) {
                                        return t();
                                    });
                            }),
                            (e.onBUO = function () {
                                this.onBUOL &&
                                    this.onBUOL.forEach(function (t) {
                                        return t();
                                    });
                            }),
                            (e.reportObserved = function () {
                                return Se(this);
                            }),
                            (e.reportChanged = function () {
                                be(), we(this), ye();
                            }),
                            (e.toString = function () {
                                return this.name_;
                            }),
                            t
                        );
                    })(),
                    W = x('Atom', G);
                function K(t, e, r) {
                    void 0 === e && (e = _), void 0 === r && (r = _);
                    var i = new G(t);
                    return e !== _ && We($e, i, e, undefined), r !== _ && Ge(i, r), i;
                }
                var X = {
                    identity: function (t, e) {
                        return t === e;
                    },
                    structural: function (t, e) {
                        return mi(t, e);
                    },
                    default: function (t, e) {
                        return Object.is ? Object.is(t, e) : t === e ? 0 !== t || 1 / t == 1 / e : t != t && e != e;
                    },
                    shallow: function (t, e) {
                        return mi(t, e, 1);
                    },
                };
                function Y(t, e, r) {
                    return ar(t)
                        ? t
                        : Array.isArray(t)
                          ? Lt.array(t, { name: r })
                          : S(t)
                            ? Lt.object(t, void 0, { name: r })
                            : T(t)
                              ? Lt.map(t, { name: r })
                              : k(t)
                                ? Lt.set(t, { name: r })
                                : 'function' != typeof t || Fe(t) || ir(t)
                                  ? t
                                  : w(t)
                                    ? er(t)
                                    : Re(r, t);
                }
                function Z(t) {
                    return t;
                }
                var Q = 'override';
                function J(t, e) {
                    return { annotationType_: t, options_: e, make_: tt, extend_: et, decorate_20223_: rt };
                }
                function tt(t, e, r, i) {
                    var a;
                    if (null != (a = this.options_) && a.bound) return null === this.extend_(t, e, r, !1) ? 0 : 1;
                    if (i === t.target_) return null === this.extend_(t, e, r, !1) ? 0 : 2;
                    if (Fe(r.value)) return 1;
                    var n = it(t, this, e, r, !1);
                    return o(i, e, n), 2;
                }
                function et(t, e, r, i) {
                    var a = it(t, this, e, r);
                    return t.defineProperty_(e, a, i);
                }
                function rt(t, e) {
                    var i = e.kind,
                        a = e.name,
                        n = e.addInitializer,
                        s = this;
                    if ('field' != i) {
                        var o, l, c, h, u, d;
                        if ('method' == i)
                            return (
                                Fe(t) ||
                                    ((l = t),
                                    (t = $t(
                                        null != (c = null == (h = s.options_) ? void 0 : h.name) ? c : a.toString(),
                                        l,
                                        null != (u = null == (d = s.options_) ? void 0 : d.autoAction) && u
                                    ))),
                                null != (o = this.options_) &&
                                    o.bound &&
                                    n(function () {
                                        var t = this,
                                            e = t[a].bind(t);
                                        (e.isMobxAction = !0), (t[a] = e);
                                    }),
                                t
                            );
                        r(
                            "Cannot apply '" +
                                s.annotationType_ +
                                "' to '" +
                                String(a) +
                                "' (kind: " +
                                i +
                                "):\n'" +
                                s.annotationType_ +
                                "' can only be used on properties with a function value."
                        );
                    } else
                        n(function () {
                            U(this, a, s);
                        });
                }
                function it(t, e, r, i, a) {
                    var n, s, o, l, c, h, u, d;
                    void 0 === a && (a = fe.safeDescriptors), (d = i), e.annotationType_, d.value;
                    var g,
                        m = i.value;
                    return (
                        null != (n = e.options_) && n.bound && (m = m.bind(null != (g = t.proxy_) ? g : t.target_)),
                        {
                            value: $t(
                                null != (s = null == (o = e.options_) ? void 0 : o.name) ? s : r.toString(),
                                m,
                                null != (l = null == (c = e.options_) ? void 0 : c.autoAction) && l,
                                null != (h = e.options_) && h.bound ? (null != (u = t.proxy_) ? u : t.target_) : void 0
                            ),
                            configurable: !a || t.isPlainObject_,
                            enumerable: !1,
                            writable: !a,
                        }
                    );
                }
                function at(t, e) {
                    return { annotationType_: t, options_: e, make_: nt, extend_: st, decorate_20223_: ot };
                }
                function nt(t, e, r, i) {
                    var a;
                    if (i === t.target_) return null === this.extend_(t, e, r, !1) ? 0 : 2;
                    if (
                        null != (a = this.options_) &&
                        a.bound &&
                        (!I(t.target_, e) || !ir(t.target_[e])) &&
                        null === this.extend_(t, e, r, !1)
                    )
                        return 0;
                    if (ir(r.value)) return 1;
                    var n = lt(t, this, 0, r, !1, !1);
                    return o(i, e, n), 2;
                }
                function st(t, e, r, i) {
                    var a,
                        n = lt(t, this, 0, r, null == (a = this.options_) ? void 0 : a.bound);
                    return t.defineProperty_(e, n, i);
                }
                function ot(t, e) {
                    var r,
                        i = e.name,
                        a = e.addInitializer;
                    return (
                        ir(t) || (t = er(t)),
                        null != (r = this.options_) &&
                            r.bound &&
                            a(function () {
                                var t = this,
                                    e = t[i].bind(t);
                                (e.isMobXFlow = !0), (t[i] = e);
                            }),
                        t
                    );
                }
                function lt(t, e, r, i, a, n) {
                    var s;
                    void 0 === n && (n = fe.safeDescriptors), (s = i), e.annotationType_, s.value;
                    var o,
                        l = i.value;
                    return (
                        ir(l) || (l = er(l)),
                        a && ((l = l.bind(null != (o = t.proxy_) ? o : t.target_)).isMobXFlow = !0),
                        { value: l, configurable: !n || t.isPlainObject_, enumerable: !1, writable: !n }
                    );
                }
                function ct(t, e) {
                    return { annotationType_: t, options_: e, make_: ht, extend_: ut, decorate_20223_: dt };
                }
                function ht(t, e, r) {
                    return null === this.extend_(t, e, r, !1) ? 0 : 1;
                }
                function ut(t, e, r, i) {
                    return (
                        (a = r),
                        this.annotationType_,
                        a.get,
                        t.defineComputedProperty_(e, M({}, this.options_, { get: r.get, set: r.set }), i)
                    );
                    var a;
                }
                function dt(t, e) {
                    var r = this,
                        i = e.name;
                    return (
                        (0, e.addInitializer)(function () {
                            var e = Wr(this)[z],
                                a = M({}, r.options_, { get: t, context: this });
                            a.name || (a.name = 'ObservableObject.' + i.toString()), e.values_.set(i, new te(a));
                        }),
                        function () {
                            return this[z].getObservablePropValue_(i);
                        }
                    );
                }
                function gt(t, e) {
                    return { annotationType_: t, options_: e, make_: mt, extend_: pt, decorate_20223_: ft };
                }
                function mt(t, e, r) {
                    return null === this.extend_(t, e, r, !1) ? 0 : 1;
                }
                function pt(t, e, r, i) {
                    var a, n;
                    return (
                        this.annotationType_,
                        t.defineObservableProperty_(
                            e,
                            r.value,
                            null != (a = null == (n = this.options_) ? void 0 : n.enhancer) ? a : Y,
                            i
                        )
                    );
                }
                function ft(t, e) {
                    var r = this,
                        i = e.kind,
                        a = e.name,
                        n = new WeakSet();
                    function s(t, e) {
                        var i,
                            s,
                            o = Wr(t)[z],
                            l = new Yt(
                                e,
                                null != (i = null == (s = r.options_) ? void 0 : s.enhancer) ? i : Y,
                                'ObservableObject.' + a.toString(),
                                !1
                            );
                        o.values_.set(a, l), n.add(t);
                    }
                    if ('accessor' == i)
                        return {
                            get: function () {
                                return n.has(this) || s(this, t.get.call(this)), this[z].getObservablePropValue_(a);
                            },
                            set: function (t) {
                                return n.has(this) || s(this, t), this[z].setObservablePropValue_(a, t);
                            },
                            init: function (t) {
                                return n.has(this) || s(this, t), t;
                            },
                        };
                }
                var _t = 'true',
                    vt = bt();
                function bt(t) {
                    return { annotationType_: _t, options_: t, make_: yt, extend_: St, decorate_20223_: wt };
                }
                function yt(t, e, r, i) {
                    var a, n, s, l;
                    if (r.get) return jt.make_(t, e, r, i);
                    if (r.set) {
                        var c = $t(e.toString(), r.set);
                        return i === t.target_
                            ? null ===
                              t.defineProperty_(e, { configurable: !fe.safeDescriptors || t.isPlainObject_, set: c })
                                ? 0
                                : 2
                            : (o(i, e, { configurable: !0, set: c }), 2);
                    }
                    if (i !== t.target_ && 'function' == typeof r.value)
                        return w(r.value)
                            ? (null != (l = this.options_) && l.autoBind ? er.bound : er).make_(t, e, r, i)
                            : (null != (s = this.options_) && s.autoBind ? Re.bound : Re).make_(t, e, r, i);
                    var h,
                        u = !1 === (null == (a = this.options_) ? void 0 : a.deep) ? Lt.ref : Lt;
                    return (
                        'function' == typeof r.value &&
                            null != (n = this.options_) &&
                            n.autoBind &&
                            (r.value = r.value.bind(null != (h = t.proxy_) ? h : t.target_)),
                        u.make_(t, e, r, i)
                    );
                }
                function St(t, e, r, i) {
                    var a, n, s;
                    return r.get
                        ? jt.extend_(t, e, r, i)
                        : r.set
                          ? t.defineProperty_(
                                e,
                                { configurable: !fe.safeDescriptors || t.isPlainObject_, set: $t(e.toString(), r.set) },
                                i
                            )
                          : ('function' == typeof r.value &&
                                null != (a = this.options_) &&
                                a.autoBind &&
                                (r.value = r.value.bind(null != (s = t.proxy_) ? s : t.target_)),
                            (!1 === (null == (n = this.options_) ? void 0 : n.deep) ? Lt.ref : Lt).extend_(t, e, r, i));
                }
                function wt(t, e) {
                    r("'" + this.annotationType_ + "' cannot be used as a decorator");
                }
                var Ct = { deep: !0, name: void 0, defaultDecorator: void 0, proxy: !0 };
                function Et(t) {
                    return t || Ct;
                }
                Object.freeze(Ct);
                var xt = gt('observable'),
                    Tt = gt('observable.ref', { enhancer: Z }),
                    kt = gt('observable.shallow', {
                        enhancer: function (t, e, r) {
                            return null == t || Yr(t) || Pr(t) || Vr(t) || Ur(t)
                                ? t
                                : Array.isArray(t)
                                  ? Lt.array(t, { name: r, deep: !1 })
                                  : S(t)
                                    ? Lt.object(t, void 0, { name: r, deep: !1 })
                                    : T(t)
                                      ? Lt.map(t, { name: r, deep: !1 })
                                      : k(t)
                                        ? Lt.set(t, { name: r, deep: !1 })
                                        : void 0;
                        },
                    }),
                    At = gt('observable.struct', {
                        enhancer: function (t, e) {
                            return mi(t, e) ? e : t;
                        },
                    }),
                    Ot = q(xt);
                function Nt(t) {
                    return !0 === t.deep
                        ? Y
                        : !1 === t.deep
                          ? Z
                          : (e = t.defaultDecorator) && null != (r = null == (i = e.options_) ? void 0 : i.enhancer)
                            ? r
                            : Y;
                    var e, r, i;
                }
                function It(t, e, r) {
                    return $(e)
                        ? xt.decorate_20223_(t, e)
                        : b(e)
                          ? void U(t, e, xt)
                          : ar(t)
                            ? t
                            : S(t)
                              ? Lt.object(t, e, r)
                              : Array.isArray(t)
                                ? Lt.array(t, e)
                                : T(t)
                                  ? Lt.map(t, e)
                                  : k(t)
                                    ? Lt.set(t, e)
                                    : 'object' == typeof t && null !== t
                                      ? t
                                      : Lt.box(t, e);
                }
                n(It, Ot);
                var Dt,
                    Pt,
                    Lt = n(It, {
                        box: function (t, e) {
                            var r = Et(e);
                            return new Yt(t, Nt(r), r.name, !0, r.equals);
                        },
                        array: function (t, e) {
                            var r = Et(e);
                            return (!1 === fe.useProxies || !1 === r.proxy ? li : Er)(t, Nt(r), r.name);
                        },
                        map: function (t, e) {
                            var r = Et(e);
                            return new Fr(t, Nt(r), r.name);
                        },
                        set: function (t, e) {
                            var r = Et(e);
                            return new qr(t, Nt(r), r.name);
                        },
                        object: function (t, e, r) {
                            return di(function () {
                                return (function (t, e, r, i) {
                                    var a = D(e);
                                    return (
                                        di(function () {
                                            var e = Wr(t, i)[z];
                                            O(a).forEach(function (t) {
                                                e.extend_(t, a[t], !r || !(t in r) || r[t]);
                                            });
                                        }),
                                        t
                                    );
                                })(
                                    !1 === fe.useProxies || !1 === (null == r ? void 0 : r.proxy)
                                        ? Wr({}, r)
                                        : (function (t, e) {
                                              var r, i;
                                              return (
                                                  p(),
                                                  null != (i = (r = (t = Wr(t, e))[z]).proxy_)
                                                      ? i
                                                      : (r.proxy_ = new Proxy(t, dr))
                                              );
                                          })({}, r),
                                    t,
                                    e
                                );
                            });
                        },
                        ref: q(Tt),
                        shallow: q(kt),
                        deep: Ot,
                        struct: q(At),
                    }),
                    Mt = 'computed',
                    Bt = ct(Mt),
                    Rt = ct('computed.struct', { equals: X.structural }),
                    jt = function (t, e) {
                        if ($(e)) return Bt.decorate_20223_(t, e);
                        if (b(e)) return U(t, e, Bt);
                        if (S(t)) return q(ct(Mt, t));
                        var r = S(e) ? e : {};
                        return (r.get = t), r.name || (r.name = t.name || ''), new te(r);
                    };
                Object.assign(jt, Bt), (jt.struct = q(Rt));
                var Ft,
                    Vt = 0,
                    Ht = 1,
                    qt = null != (Dt = null == (Pt = s(function () {}, 'name')) ? void 0 : Pt.configurable) && Dt,
                    Ut = { value: 'action', configurable: !0, writable: !1, enumerable: !1 };
                function $t(t, e, r, i) {
                    function a() {
                        return zt(0, r, e, i || this, arguments);
                    }
                    return (
                        void 0 === r && (r = !1),
                        (a.isMobxAction = !0),
                        (a.toString = function () {
                            return e.toString();
                        }),
                        qt && ((Ut.value = t), o(a, 'name', Ut)),
                        a
                    );
                }
                function zt(t, e, i, a, n) {
                    var s = (function (t, e, r, i) {
                        var a = fe.trackingDerivation,
                            n = !e || !a;
                        be();
                        var s = fe.allowStateChanges;
                        n && (le(), (s = Wt(!0)));
                        var o = {
                            runAsAction_: n,
                            prevDerivation_: a,
                            prevAllowStateChanges_: s,
                            prevAllowStateReads_: he(!0),
                            notifySpy_: !1,
                            startTime_: 0,
                            actionId_: Ht++,
                            parentActionId_: Vt,
                        };
                        return (Vt = o.actionId_), o;
                    })(0, e);
                    try {
                        return i.apply(a, n);
                    } catch (t) {
                        throw ((s.error_ = t), t);
                    } finally {
                        !(function (t) {
                            Vt !== t.actionId_ && r(30),
                                (Vt = t.parentActionId_),
                                void 0 !== t.error_ && (fe.suppressReactionErrors = !0),
                                Kt(t.prevAllowStateChanges_),
                                ue(t.prevAllowStateReads_),
                                ye(),
                                t.runAsAction_ && ce(t.prevDerivation_),
                                (fe.suppressReactionErrors = !1);
                        })(s);
                    }
                }
                function Gt(t, e) {
                    var r = Wt(t);
                    try {
                        return e();
                    } finally {
                        Kt(r);
                    }
                }
                function Wt(t) {
                    var e = fe.allowStateChanges;
                    return (fe.allowStateChanges = t), e;
                }
                function Kt(t) {
                    fe.allowStateChanges = t;
                }
                Ft = Symbol.toPrimitive;
                var Xt,
                    Yt = (function (t) {
                        function e(e, r, i, a, n) {
                            var s;
                            return (
                                void 0 === i && (i = 'ObservableValue'),
                                void 0 === a && (a = !0),
                                void 0 === n && (n = X.default),
                                ((s = t.call(this, i) || this).enhancer = void 0),
                                (s.name_ = void 0),
                                (s.equals = void 0),
                                (s.hasUnreportedChange_ = !1),
                                (s.interceptors_ = void 0),
                                (s.changeListeners_ = void 0),
                                (s.value_ = void 0),
                                (s.dehancer = void 0),
                                (s.enhancer = r),
                                (s.name_ = i),
                                (s.equals = n),
                                (s.value_ = r(e, void 0, i)),
                                s
                            );
                        }
                        B(e, t);
                        var r = e.prototype;
                        return (
                            (r.dehanceValue = function (t) {
                                return void 0 !== this.dehancer ? this.dehancer(t) : t;
                            }),
                            (r.set = function (t) {
                                this.value_, (t = this.prepareNewValue_(t)) !== fe.UNCHANGED && this.setNewValue_(t);
                            }),
                            (r.prepareNewValue_ = function (t) {
                                if (gr(this)) {
                                    var e = pr(this, { object: this, type: Sr, newValue: t });
                                    if (!e) return fe.UNCHANGED;
                                    t = e.newValue;
                                }
                                return (
                                    (t = this.enhancer(t, this.value_, this.name_)),
                                    this.equals(this.value_, t) ? fe.UNCHANGED : t
                                );
                            }),
                            (r.setNewValue_ = function (t) {
                                var e = this.value_;
                                (this.value_ = t),
                                    this.reportChanged(),
                                    fr(this) && vr(this, { type: Sr, object: this, newValue: t, oldValue: e });
                            }),
                            (r.get = function () {
                                return this.reportObserved(), this.dehanceValue(this.value_);
                            }),
                            (r.intercept_ = function (t) {
                                return mr(this, t);
                            }),
                            (r.observe_ = function (t, e) {
                                return (
                                    e &&
                                        t({
                                            observableKind: 'value',
                                            debugObjectName: this.name_,
                                            object: this,
                                            type: Sr,
                                            newValue: this.value_,
                                            oldValue: void 0,
                                        }),
                                    _r(this, t)
                                );
                            }),
                            (r.raw = function () {
                                return this.value_;
                            }),
                            (r.toJSON = function () {
                                return this.get();
                            }),
                            (r.toString = function () {
                                return this.name_ + '[' + this.value_ + ']';
                            }),
                            (r.valueOf = function () {
                                return N(this.get());
                            }),
                            (r[Ft] = function () {
                                return this.valueOf();
                            }),
                            e
                        );
                    })(G),
                    Zt = x('ObservableValue', Yt);
                Xt = Symbol.toPrimitive;
                var Qt,
                    Jt,
                    te = (function () {
                        function t(t) {
                            (this.dependenciesState_ = Qt.NOT_TRACKING_),
                                (this.observing_ = []),
                                (this.newObserving_ = null),
                                (this.isBeingObserved_ = !1),
                                (this.isPendingUnobservation_ = !1),
                                (this.observers_ = new Set()),
                                (this.diffValue_ = 0),
                                (this.runId_ = 0),
                                (this.lastAccessedBy_ = 0),
                                (this.lowestObserverState_ = Qt.UP_TO_DATE_),
                                (this.unboundDepsCount_ = 0),
                                (this.value_ = new re(null)),
                                (this.name_ = void 0),
                                (this.triggeredBy_ = void 0),
                                (this.isComputing_ = !1),
                                (this.isRunningSetter_ = !1),
                                (this.derivation = void 0),
                                (this.setter_ = void 0),
                                (this.isTracing_ = Jt.NONE),
                                (this.scope_ = void 0),
                                (this.equals_ = void 0),
                                (this.requiresReaction_ = void 0),
                                (this.keepAlive_ = void 0),
                                (this.onBOL = void 0),
                                (this.onBUOL = void 0),
                                t.get || r(31),
                                (this.derivation = t.get),
                                (this.name_ = t.name || 'ComputedValue'),
                                t.set && (this.setter_ = $t('ComputedValue-setter', t.set)),
                                (this.equals_ =
                                    t.equals || (t.compareStructural || t.struct ? X.structural : X.default)),
                                (this.scope_ = t.context),
                                (this.requiresReaction_ = t.requiresReaction),
                                (this.keepAlive_ = !!t.keepAlive);
                        }
                        var e = t.prototype;
                        return (
                            (e.onBecomeStale_ = function () {
                                var t;
                                (t = this).lowestObserverState_ === Qt.UP_TO_DATE_ &&
                                    ((t.lowestObserverState_ = Qt.POSSIBLY_STALE_),
                                    t.observers_.forEach(function (t) {
                                        t.dependenciesState_ === Qt.UP_TO_DATE_ &&
                                            ((t.dependenciesState_ = Qt.POSSIBLY_STALE_), t.onBecomeStale_());
                                    }));
                            }),
                            (e.onBO = function () {
                                this.onBOL &&
                                    this.onBOL.forEach(function (t) {
                                        return t();
                                    });
                            }),
                            (e.onBUO = function () {
                                this.onBUOL &&
                                    this.onBUOL.forEach(function (t) {
                                        return t();
                                    });
                            }),
                            (e.get = function () {
                                if (
                                    (this.isComputing_ && r(32, this.name_, this.derivation),
                                    0 !== fe.inBatch || 0 !== this.observers_.size || this.keepAlive_)
                                ) {
                                    if ((Se(this), ae(this))) {
                                        var t = fe.trackingContext;
                                        this.keepAlive_ && !t && (fe.trackingContext = this),
                                            this.trackAndCompute() &&
                                                (e = this).lowestObserverState_ !== Qt.STALE_ &&
                                                ((e.lowestObserverState_ = Qt.STALE_),
                                                e.observers_.forEach(function (t) {
                                                    t.dependenciesState_ === Qt.POSSIBLY_STALE_
                                                        ? (t.dependenciesState_ = Qt.STALE_)
                                                        : t.dependenciesState_ === Qt.UP_TO_DATE_ &&
                                                          (e.lowestObserverState_ = Qt.UP_TO_DATE_);
                                                })),
                                            (fe.trackingContext = t);
                                    }
                                } else
                                    ae(this) &&
                                        (this.warnAboutUntrackedRead_(),
                                        be(),
                                        (this.value_ = this.computeValue_(!1)),
                                        ye());
                                var e,
                                    i = this.value_;
                                if (ie(i)) throw i.cause;
                                return i;
                            }),
                            (e.set = function (t) {
                                if (this.setter_) {
                                    this.isRunningSetter_ && r(33, this.name_), (this.isRunningSetter_ = !0);
                                    try {
                                        this.setter_.call(this.scope_, t);
                                    } finally {
                                        this.isRunningSetter_ = !1;
                                    }
                                } else r(34, this.name_);
                            }),
                            (e.trackAndCompute = function () {
                                var t = this.value_,
                                    e = this.dependenciesState_ === Qt.NOT_TRACKING_,
                                    r = this.computeValue_(!0),
                                    i = e || ie(t) || ie(r) || !this.equals_(t, r);
                                return i && (this.value_ = r), i;
                            }),
                            (e.computeValue_ = function (t) {
                                this.isComputing_ = !0;
                                var e,
                                    r = Wt(!1);
                                if (t) e = ne(this, this.derivation, this.scope_);
                                else if (!0 === fe.disableErrorBoundaries) e = this.derivation.call(this.scope_);
                                else
                                    try {
                                        e = this.derivation.call(this.scope_);
                                    } catch (t) {
                                        e = new re(t);
                                    }
                                return Kt(r), (this.isComputing_ = !1), e;
                            }),
                            (e.suspend_ = function () {
                                this.keepAlive_ || (se(this), (this.value_ = void 0));
                            }),
                            (e.observe_ = function (t, e) {
                                var r = this,
                                    i = !0,
                                    a = void 0;
                                return Ve(function () {
                                    var n = r.get();
                                    if (!i || e) {
                                        var s = le();
                                        t({
                                            observableKind: 'computed',
                                            debugObjectName: r.name_,
                                            type: Sr,
                                            object: r,
                                            newValue: n,
                                            oldValue: a,
                                        }),
                                            ce(s);
                                    }
                                    (i = !1), (a = n);
                                });
                            }),
                            (e.warnAboutUntrackedRead_ = function () {}),
                            (e.toString = function () {
                                return this.name_ + '[' + this.derivation.toString() + ']';
                            }),
                            (e.valueOf = function () {
                                return N(this.get());
                            }),
                            (e[Xt] = function () {
                                return this.valueOf();
                            }),
                            t
                        );
                    })(),
                    ee = x('ComputedValue', te);
                !(function (t) {
                    (t[(t.NOT_TRACKING_ = -1)] = 'NOT_TRACKING_'),
                        (t[(t.UP_TO_DATE_ = 0)] = 'UP_TO_DATE_'),
                        (t[(t.POSSIBLY_STALE_ = 1)] = 'POSSIBLY_STALE_'),
                        (t[(t.STALE_ = 2)] = 'STALE_');
                })(Qt || (Qt = {})),
                    (function (t) {
                        (t[(t.NONE = 0)] = 'NONE'), (t[(t.LOG = 1)] = 'LOG'), (t[(t.BREAK = 2)] = 'BREAK');
                    })(Jt || (Jt = {}));
                var re = function (t) {
                    (this.cause = void 0), (this.cause = t);
                };
                function ie(t) {
                    return t instanceof re;
                }
                function ae(t) {
                    switch (t.dependenciesState_) {
                        case Qt.UP_TO_DATE_:
                            return !1;
                        case Qt.NOT_TRACKING_:
                        case Qt.STALE_:
                            return !0;
                        case Qt.POSSIBLY_STALE_:
                            for (var e = he(!0), r = le(), i = t.observing_, a = i.length, n = 0; n < a; n++) {
                                var s = i[n];
                                if (ee(s)) {
                                    if (fe.disableErrorBoundaries) s.get();
                                    else
                                        try {
                                            s.get();
                                        } catch (t) {
                                            return ce(r), ue(e), !0;
                                        }
                                    if (t.dependenciesState_ === Qt.STALE_) return ce(r), ue(e), !0;
                                }
                            }
                            return de(t), ce(r), ue(e), !1;
                    }
                }
                function ne(t, e, r) {
                    var i = he(!0);
                    de(t),
                        (t.newObserving_ = new Array(t.observing_.length + 100)),
                        (t.unboundDepsCount_ = 0),
                        (t.runId_ = ++fe.runId);
                    var a,
                        n = fe.trackingDerivation;
                    if (((fe.trackingDerivation = t), fe.inBatch++, !0 === fe.disableErrorBoundaries)) a = e.call(r);
                    else
                        try {
                            a = e.call(r);
                        } catch (t) {
                            a = new re(t);
                        }
                    return (
                        fe.inBatch--,
                        (fe.trackingDerivation = n),
                        (function (t) {
                            for (
                                var e = t.observing_,
                                    r = (t.observing_ = t.newObserving_),
                                    i = Qt.UP_TO_DATE_,
                                    a = 0,
                                    n = t.unboundDepsCount_,
                                    s = 0;
                                s < n;
                                s++
                            ) {
                                var o = r[s];
                                0 === o.diffValue_ && ((o.diffValue_ = 1), a !== s && (r[a] = o), a++),
                                    o.dependenciesState_ > i && (i = o.dependenciesState_);
                            }
                            for (r.length = a, t.newObserving_ = null, n = e.length; n--; ) {
                                var l = e[n];
                                0 === l.diffValue_ && _e(l, t), (l.diffValue_ = 0);
                            }
                            for (; a--; ) {
                                var c = r[a];
                                1 === c.diffValue_ &&
                                    ((c.diffValue_ = 0),
                                    (u = t),
                                    (h = c).observers_.add(u),
                                    h.lowestObserverState_ > u.dependenciesState_ &&
                                        (h.lowestObserverState_ = u.dependenciesState_));
                            }
                            var h, u;
                            i !== Qt.UP_TO_DATE_ && ((t.dependenciesState_ = i), t.onBecomeStale_());
                        })(t),
                        ue(i),
                        a
                    );
                }
                function se(t) {
                    var e = t.observing_;
                    t.observing_ = [];
                    for (var r = e.length; r--; ) _e(e[r], t);
                    t.dependenciesState_ = Qt.NOT_TRACKING_;
                }
                function oe(t) {
                    var e = le();
                    try {
                        return t();
                    } finally {
                        ce(e);
                    }
                }
                function le() {
                    var t = fe.trackingDerivation;
                    return (fe.trackingDerivation = null), t;
                }
                function ce(t) {
                    fe.trackingDerivation = t;
                }
                function he(t) {
                    var e = fe.allowStateReads;
                    return (fe.allowStateReads = t), e;
                }
                function ue(t) {
                    fe.allowStateReads = t;
                }
                function de(t) {
                    if (t.dependenciesState_ !== Qt.UP_TO_DATE_) {
                        t.dependenciesState_ = Qt.UP_TO_DATE_;
                        for (var e = t.observing_, r = e.length; r--; ) e[r].lowestObserverState_ = Qt.UP_TO_DATE_;
                    }
                }
                var ge = function () {
                        (this.version = 6),
                            (this.UNCHANGED = {}),
                            (this.trackingDerivation = null),
                            (this.trackingContext = null),
                            (this.runId = 0),
                            (this.mobxGuid = 0),
                            (this.inBatch = 0),
                            (this.pendingUnobservations = []),
                            (this.pendingReactions = []),
                            (this.isRunningReactions = !1),
                            (this.allowStateChanges = !1),
                            (this.allowStateReads = !0),
                            (this.enforceActions = !0),
                            (this.spyListeners = []),
                            (this.globalReactionErrorHandlers = []),
                            (this.computedRequiresReaction = !1),
                            (this.reactionRequiresObservable = !1),
                            (this.observableRequiresReaction = !1),
                            (this.disableErrorBoundaries = !1),
                            (this.suppressReactionErrors = !1),
                            (this.useProxies = !0),
                            (this.verifyProxies = !1),
                            (this.safeDescriptors = !0);
                    },
                    me = !0,
                    pe = !1,
                    fe = (function () {
                        var t = a();
                        return (
                            t.__mobxInstanceCount > 0 && !t.__mobxGlobals && (me = !1),
                            t.__mobxGlobals && t.__mobxGlobals.version !== new ge().version && (me = !1),
                            me
                                ? t.__mobxGlobals
                                    ? ((t.__mobxInstanceCount += 1),
                                      t.__mobxGlobals.UNCHANGED || (t.__mobxGlobals.UNCHANGED = {}),
                                      t.__mobxGlobals)
                                    : ((t.__mobxInstanceCount = 1), (t.__mobxGlobals = new ge()))
                                : (setTimeout(function () {
                                      pe || r(35);
                                  }, 1),
                                  new ge())
                        );
                    })();
                function _e(t, e) {
                    t.observers_.delete(e), 0 === t.observers_.size && ve(t);
                }
                function ve(t) {
                    !1 === t.isPendingUnobservation_ &&
                        ((t.isPendingUnobservation_ = !0), fe.pendingUnobservations.push(t));
                }
                function be() {
                    fe.inBatch++;
                }
                function ye() {
                    if (0 == --fe.inBatch) {
                        Te();
                        for (var t = fe.pendingUnobservations, e = 0; e < t.length; e++) {
                            var r = t[e];
                            (r.isPendingUnobservation_ = !1),
                                0 === r.observers_.size &&
                                    (r.isBeingObserved_ && ((r.isBeingObserved_ = !1), r.onBUO()),
                                    r instanceof te && r.suspend_());
                        }
                        fe.pendingUnobservations = [];
                    }
                }
                function Se(t) {
                    var e = fe.trackingDerivation;
                    return null !== e
                        ? (e.runId_ !== t.lastAccessedBy_ &&
                              ((t.lastAccessedBy_ = e.runId_),
                              (e.newObserving_[e.unboundDepsCount_++] = t),
                              !t.isBeingObserved_ && fe.trackingContext && ((t.isBeingObserved_ = !0), t.onBO())),
                          t.isBeingObserved_)
                        : (0 === t.observers_.size && fe.inBatch > 0 && ve(t), !1);
                }
                function we(t) {
                    t.lowestObserverState_ !== Qt.STALE_ &&
                        ((t.lowestObserverState_ = Qt.STALE_),
                        t.observers_.forEach(function (t) {
                            t.dependenciesState_ === Qt.UP_TO_DATE_ && t.onBecomeStale_(),
                                (t.dependenciesState_ = Qt.STALE_);
                        }));
                }
                var Ce = (function () {
                        function t(t, e, r, i) {
                            void 0 === t && (t = 'Reaction'),
                                (this.name_ = void 0),
                                (this.onInvalidate_ = void 0),
                                (this.errorHandler_ = void 0),
                                (this.requiresObservable_ = void 0),
                                (this.observing_ = []),
                                (this.newObserving_ = []),
                                (this.dependenciesState_ = Qt.NOT_TRACKING_),
                                (this.diffValue_ = 0),
                                (this.runId_ = 0),
                                (this.unboundDepsCount_ = 0),
                                (this.isDisposed_ = !1),
                                (this.isScheduled_ = !1),
                                (this.isTrackPending_ = !1),
                                (this.isRunning_ = !1),
                                (this.isTracing_ = Jt.NONE),
                                (this.name_ = t),
                                (this.onInvalidate_ = e),
                                (this.errorHandler_ = r),
                                (this.requiresObservable_ = i);
                        }
                        var e = t.prototype;
                        return (
                            (e.onBecomeStale_ = function () {
                                this.schedule_();
                            }),
                            (e.schedule_ = function () {
                                this.isScheduled_ || ((this.isScheduled_ = !0), fe.pendingReactions.push(this), Te());
                            }),
                            (e.isScheduled = function () {
                                return this.isScheduled_;
                            }),
                            (e.runReaction_ = function () {
                                if (!this.isDisposed_) {
                                    be(), (this.isScheduled_ = !1);
                                    var t = fe.trackingContext;
                                    if (((fe.trackingContext = this), ae(this))) {
                                        this.isTrackPending_ = !0;
                                        try {
                                            this.onInvalidate_();
                                        } catch (t) {
                                            this.reportExceptionInDerivation_(t);
                                        }
                                    }
                                    (fe.trackingContext = t), ye();
                                }
                            }),
                            (e.track = function (t) {
                                if (!this.isDisposed_) {
                                    be(), (this.isRunning_ = !0);
                                    var e = fe.trackingContext;
                                    fe.trackingContext = this;
                                    var r = ne(this, t, void 0);
                                    (fe.trackingContext = e),
                                        (this.isRunning_ = !1),
                                        (this.isTrackPending_ = !1),
                                        this.isDisposed_ && se(this),
                                        ie(r) && this.reportExceptionInDerivation_(r.cause),
                                        ye();
                                }
                            }),
                            (e.reportExceptionInDerivation_ = function (t) {
                                var e = this;
                                if (this.errorHandler_) this.errorHandler_(t, this);
                                else {
                                    if (fe.disableErrorBoundaries) throw t;
                                    var r = "[mobx] uncaught error in '" + this + "'";
                                    fe.suppressReactionErrors || console.error(r, t),
                                        fe.globalReactionErrorHandlers.forEach(function (r) {
                                            return r(t, e);
                                        });
                                }
                            }),
                            (e.dispose = function () {
                                this.isDisposed_ ||
                                    ((this.isDisposed_ = !0), this.isRunning_ || (be(), se(this), ye()));
                            }),
                            (e.getDisposer_ = function (t) {
                                var e = this,
                                    r = function r() {
                                        e.dispose(),
                                            null == t ||
                                                null == t.removeEventListener ||
                                                t.removeEventListener('abort', r);
                                    };
                                return (
                                    null == t || null == t.addEventListener || t.addEventListener('abort', r),
                                    (r[z] = this),
                                    r
                                );
                            }),
                            (e.toString = function () {
                                return 'Reaction[' + this.name_ + ']';
                            }),
                            (e.trace = function (t) {
                                void 0 === t && (t = !1);
                            }),
                            t
                        );
                    })(),
                    Ee = 100,
                    xe = function (t) {
                        return t();
                    };
                function Te() {
                    fe.inBatch > 0 || fe.isRunningReactions || xe(ke);
                }
                function ke() {
                    fe.isRunningReactions = !0;
                    for (var t = fe.pendingReactions, e = 0; t.length > 0; ) {
                        ++e === Ee && (console.error('[mobx] cycle in reaction: ' + t[0]), t.splice(0));
                        for (var r = t.splice(0), i = 0, a = r.length; i < a; i++) r[i].runReaction_();
                    }
                    fe.isRunningReactions = !1;
                }
                var Ae = x('Reaction', Ce),
                    Oe = 'action',
                    Ne = 'autoAction',
                    Ie = J(Oe),
                    De = J('action.bound', { bound: !0 }),
                    Pe = J(Ne, { autoAction: !0 }),
                    Le = J('autoAction.bound', { autoAction: !0, bound: !0 });
                function Me(t) {
                    return function (e, r) {
                        return v(e)
                            ? $t(e.name || '<unnamed action>', e, t)
                            : v(r)
                              ? $t(e, r, t)
                              : $(r)
                                ? (t ? Pe : Ie).decorate_20223_(e, r)
                                : b(r)
                                  ? U(e, r, t ? Pe : Ie)
                                  : b(e)
                                    ? q(J(t ? Ne : Oe, { name: e, autoAction: t }))
                                    : void 0;
                    };
                }
                var Be = Me(!1);
                Object.assign(Be, Ie);
                var Re = Me(!0);
                function je(t) {
                    return zt(t.name, !1, t, this, void 0);
                }
                function Fe(t) {
                    return v(t) && !0 === t.isMobxAction;
                }
                function Ve(t, e) {
                    var r, i, a, n, s;
                    void 0 === e && (e = d);
                    var o,
                        l = null != (r = null == (i = e) ? void 0 : i.name) ? r : 'Autorun';
                    if (e.scheduler || e.delay) {
                        var c = qe(e),
                            h = !1;
                        o = new Ce(
                            l,
                            function () {
                                h ||
                                    ((h = !0),
                                    c(function () {
                                        (h = !1), o.isDisposed_ || o.track(u);
                                    }));
                            },
                            e.onError,
                            e.requiresObservable
                        );
                    } else
                        o = new Ce(
                            l,
                            function () {
                                this.track(u);
                            },
                            e.onError,
                            e.requiresObservable
                        );
                    function u() {
                        t(o);
                    }
                    return (
                        (null != (a = e) && null != (n = a.signal) && n.aborted) || o.schedule_(),
                        o.getDisposer_(null == (s = e) ? void 0 : s.signal)
                    );
                }
                Object.assign(Re, Pe), (Be.bound = q(De)), (Re.bound = q(Le));
                var He = function (t) {
                    return t();
                };
                function qe(t) {
                    return t.scheduler
                        ? t.scheduler
                        : t.delay
                          ? function (e) {
                                return setTimeout(e, t.delay);
                            }
                          : He;
                }
                function Ue(t, e, r) {
                    var i, a, n, s;
                    void 0 === r && (r = d);
                    var o,
                        l,
                        c,
                        h,
                        u = null != (i = r.name) ? i : 'Reaction',
                        g = Be(
                            u,
                            r.onError
                                ? ((o = r.onError),
                                  (l = e),
                                  function () {
                                      try {
                                          return l.apply(this, arguments);
                                      } catch (t) {
                                          o.call(this, t);
                                      }
                                  })
                                : e
                        ),
                        m = !r.scheduler && !r.delay,
                        p = qe(r),
                        f = !0,
                        _ = !1,
                        v = r.compareStructural ? X.structural : r.equals || X.default,
                        b = new Ce(
                            u,
                            function () {
                                f || m ? y() : _ || ((_ = !0), p(y));
                            },
                            r.onError,
                            r.requiresObservable
                        );
                    function y() {
                        if (((_ = !1), !b.isDisposed_)) {
                            var e = !1;
                            b.track(function () {
                                var r = Gt(!1, function () {
                                    return t(b);
                                });
                                (e = f || !v(c, r)), (h = c), (c = r);
                            }),
                                ((f && r.fireImmediately) || (!f && e)) && g(c, h, b),
                                (f = !1);
                        }
                    }
                    return (
                        (null != (a = r) && null != (n = a.signal) && n.aborted) || b.schedule_(),
                        b.getDisposer_(null == (s = r) ? void 0 : s.signal)
                    );
                }
                var $e = 'onBO',
                    ze = 'onBUO';
                function Ge(t, e, r) {
                    return We(ze, t, e, r);
                }
                function We(t, e, r, i) {
                    var a = 'function' == typeof i ? ci(e, r) : ci(e),
                        n = v(i) ? i : r,
                        s = t + 'L';
                    return (
                        a[s] ? a[s].add(n) : (a[s] = new Set([n])),
                        function () {
                            var t = a[s];
                            t && (t.delete(n), 0 === t.size && delete a[s]);
                        }
                    );
                }
                var Ke = 'always';
                function Xe(t) {
                    !0 === t.isolateGlobalState &&
                        (function () {
                            if (
                                ((fe.pendingReactions.length || fe.inBatch || fe.isRunningReactions) && r(36),
                                (pe = !0),
                                me)
                            ) {
                                var t = a();
                                0 == --t.__mobxInstanceCount && (t.__mobxGlobals = void 0), (fe = new ge());
                            }
                        })();
                    var e,
                        i,
                        n = t.useProxies,
                        s = t.enforceActions;
                    if (
                        (void 0 !== n && (fe.useProxies = n === Ke || ('never' !== n && 'undefined' != typeof Proxy)),
                        'ifavailable' === n && (fe.verifyProxies = !0),
                        void 0 !== s)
                    ) {
                        var o = s === Ke ? Ke : 'observed' === s;
                        (fe.enforceActions = o), (fe.allowStateChanges = !0 !== o && o !== Ke);
                    }
                    [
                        'computedRequiresReaction',
                        'reactionRequiresObservable',
                        'observableRequiresReaction',
                        'disableErrorBoundaries',
                        'safeDescriptors',
                    ].forEach(function (e) {
                        e in t && (fe[e] = !!t[e]);
                    }),
                        (fe.allowStateReads = !fe.observableRequiresReaction),
                        t.reactionScheduler &&
                            ((e = t.reactionScheduler),
                            (i = xe),
                            (xe = function (t) {
                                return e(function () {
                                    return i(t);
                                });
                            }));
                }
                function Ye(t) {
                    var e,
                        r = { name: t.name_ };
                    return (
                        t.observing_ &&
                            t.observing_.length > 0 &&
                            (r.dependencies = ((e = t.observing_), Array.from(new Set(e))).map(Ye)),
                        r
                    );
                }
                var Ze = 0;
                function Qe() {
                    this.message = 'FLOW_CANCELLED';
                }
                Qe.prototype = Object.create(Error.prototype);
                var Je = at('flow'),
                    tr = at('flow.bound', { bound: !0 }),
                    er = Object.assign(function (t, e) {
                        if ($(e)) return Je.decorate_20223_(t, e);
                        if (b(e)) return U(t, e, Je);
                        var r = t,
                            i = r.name || '<unnamed flow>',
                            a = function () {
                                var t,
                                    e = arguments,
                                    a = ++Ze,
                                    n = Be(i + ' - runid: ' + a + ' - init', r).apply(this, e),
                                    s = void 0,
                                    o = new Promise(function (e, r) {
                                        var o = 0;
                                        function l(t) {
                                            var e;
                                            s = void 0;
                                            try {
                                                e = Be(i + ' - runid: ' + a + ' - yield ' + o++, n.next).call(n, t);
                                            } catch (t) {
                                                return r(t);
                                            }
                                            h(e);
                                        }
                                        function c(t) {
                                            var e;
                                            s = void 0;
                                            try {
                                                e = Be(i + ' - runid: ' + a + ' - yield ' + o++, n.throw).call(n, t);
                                            } catch (t) {
                                                return r(t);
                                            }
                                            h(e);
                                        }
                                        function h(t) {
                                            if (!v(null == t ? void 0 : t.then))
                                                return t.done ? e(t.value) : (s = Promise.resolve(t.value)).then(l, c);
                                            t.then(h, r);
                                        }
                                        (t = r), l(void 0);
                                    });
                                return (
                                    (o.cancel = Be(i + ' - runid: ' + a + ' - cancel', function () {
                                        try {
                                            s && rr(s);
                                            var e = n.return(void 0),
                                                r = Promise.resolve(e.value);
                                            r.then(_, _), rr(r), t(new Qe());
                                        } catch (e) {
                                            t(e);
                                        }
                                    })),
                                    o
                                );
                            };
                        return (a.isMobXFlow = !0), a;
                    }, Je);
                function rr(t) {
                    v(t.cancel) && t.cancel();
                }
                function ir(t) {
                    return !0 === (null == t ? void 0 : t.isMobXFlow);
                }
                function ar(t) {
                    return (function (t, e) {
                        return (
                            !!t &&
                            (void 0 !== e ? !!Yr(t) && t[z].values_.has(e) : Yr(t) || !!t[z] || W(t) || Ae(t) || ee(t))
                        );
                    })(t);
                }
                function nr(t, e, r) {
                    return t.set(e, r), r;
                }
                function sr(t, e) {
                    if (null == t || 'object' != typeof t || t instanceof Date || !ar(t)) return t;
                    if (Zt(t) || ee(t)) return sr(t.get(), e);
                    if (e.has(t)) return e.get(t);
                    if (Pr(t)) {
                        var i = nr(e, t, new Array(t.length));
                        return (
                            t.forEach(function (t, r) {
                                i[r] = sr(t, e);
                            }),
                            i
                        );
                    }
                    if (Ur(t)) {
                        var a = nr(e, t, new Set());
                        return (
                            t.forEach(function (t) {
                                a.add(sr(t, e));
                            }),
                            a
                        );
                    }
                    if (Vr(t)) {
                        var n = nr(e, t, new Map());
                        return (
                            t.forEach(function (t, r) {
                                n.set(r, sr(t, e));
                            }),
                            n
                        );
                    }
                    var s = nr(e, t, {});
                    return (
                        (function (t) {
                            if (Yr(t)) return t[z].ownKeys_();
                            r(38);
                        })(t).forEach(function (r) {
                            l.propertyIsEnumerable.call(t, r) && (s[r] = sr(t[r], e));
                        }),
                        s
                    );
                }
                function or(t, e) {
                    return sr(t, new Map());
                }
                function lr(t, e) {
                    void 0 === e && (e = void 0), be();
                    try {
                        return t.apply(e);
                    } finally {
                        ye();
                    }
                }
                function cr(t, e, r) {
                    return 1 === arguments.length || (e && 'object' == typeof e)
                        ? (function (t, e) {
                              var r, i, a;
                              if (null != e && null != (r = e.signal) && r.aborted)
                                  return Object.assign(Promise.reject(new Error('WHEN_ABORTED')), {
                                      cancel: function () {
                                          return null;
                                      },
                                  });
                              var n = new Promise(function (r, n) {
                                  var s,
                                      o = hr(t, r, M({}, e, { onError: n }));
                                  (i = function () {
                                      o(), n(new Error('WHEN_CANCELLED'));
                                  }),
                                      (a = function () {
                                          o(), n(new Error('WHEN_ABORTED'));
                                      }),
                                      null == e ||
                                          null == (s = e.signal) ||
                                          null == s.addEventListener ||
                                          s.addEventListener('abort', a);
                              }).finally(function () {
                                  var t;
                                  return null == e || null == (t = e.signal) || null == t.removeEventListener
                                      ? void 0
                                      : t.removeEventListener('abort', a);
                              });
                              return (n.cancel = i), n;
                          })(t, e)
                        : hr(t, e, r || {});
                }
                function hr(t, e, r) {
                    var i;
                    if ('number' == typeof r.timeout) {
                        var a = new Error('WHEN_TIMEOUT');
                        i = setTimeout(function () {
                            if (!s[z].isDisposed_) {
                                if ((s(), !r.onError)) throw a;
                                r.onError(a);
                            }
                        }, r.timeout);
                    }
                    r.name = 'When';
                    var n = $t('When-effect', e),
                        s = Ve(function (e) {
                            Gt(!1, t) && (e.dispose(), i && clearTimeout(i), n());
                        }, r);
                    return s;
                }
                function ur(t) {
                    return t[z];
                }
                er.bound = q(tr);
                var dr = {
                    has: function (t, e) {
                        return ur(t).has_(e);
                    },
                    get: function (t, e) {
                        return ur(t).get_(e);
                    },
                    set: function (t, e, r) {
                        var i;
                        return !!b(e) && (null == (i = ur(t).set_(e, r, !0)) || i);
                    },
                    deleteProperty: function (t, e) {
                        var r;
                        return !!b(e) && (null == (r = ur(t).delete_(e, !0)) || r);
                    },
                    defineProperty: function (t, e, r) {
                        var i;
                        return null == (i = ur(t).defineProperty_(e, r)) || i;
                    },
                    ownKeys: function (t) {
                        return ur(t).ownKeys_();
                    },
                    preventExtensions: function (t) {
                        r(13);
                    },
                };
                function gr(t) {
                    return void 0 !== t.interceptors_ && t.interceptors_.length > 0;
                }
                function mr(t, e) {
                    var r = t.interceptors_ || (t.interceptors_ = []);
                    return (
                        r.push(e),
                        f(function () {
                            var t = r.indexOf(e);
                            -1 !== t && r.splice(t, 1);
                        })
                    );
                }
                function pr(t, e) {
                    var i = le();
                    try {
                        for (
                            var a = [].concat(t.interceptors_ || []), n = 0, s = a.length;
                            n < s && ((e = a[n](e)) && !e.type && r(14), e);
                            n++
                        );
                        return e;
                    } finally {
                        ce(i);
                    }
                }
                function fr(t) {
                    return void 0 !== t.changeListeners_ && t.changeListeners_.length > 0;
                }
                function _r(t, e) {
                    var r = t.changeListeners_ || (t.changeListeners_ = []);
                    return (
                        r.push(e),
                        f(function () {
                            var t = r.indexOf(e);
                            -1 !== t && r.splice(t, 1);
                        })
                    );
                }
                function vr(t, e) {
                    var r = le(),
                        i = t.changeListeners_;
                    if (i) {
                        for (var a = 0, n = (i = i.slice()).length; a < n; a++) i[a](e);
                        ce(r);
                    }
                }
                function br(t, e, r) {
                    return (
                        di(function () {
                            var i = Wr(t, r)[z];
                            null != e ||
                                (e = (function (t) {
                                    return I(t, H) || C(t, H, M({}, t[H])), t[H];
                                })(t)),
                                O(e).forEach(function (t) {
                                    return i.make_(t, e[t]);
                                });
                        }),
                        t
                    );
                }
                var yr = 'splice',
                    Sr = 'update',
                    wr = {
                        get: function (t, e) {
                            var r = t[z];
                            return e === z
                                ? r
                                : 'length' === e
                                  ? r.getArrayLength_()
                                  : 'string' != typeof e || isNaN(e)
                                    ? I(xr, e)
                                        ? xr[e]
                                        : t[e]
                                    : r.get_(parseInt(e));
                        },
                        set: function (t, e, r) {
                            var i = t[z];
                            return (
                                'length' === e && i.setArrayLength_(r),
                                'symbol' == typeof e || isNaN(e) ? (t[e] = r) : i.set_(parseInt(e), r),
                                !0
                            );
                        },
                        preventExtensions: function () {
                            r(15);
                        },
                    },
                    Cr = (function () {
                        function t(t, e, r, i) {
                            void 0 === t && (t = 'ObservableArray'),
                                (this.owned_ = void 0),
                                (this.legacyMode_ = void 0),
                                (this.atom_ = void 0),
                                (this.values_ = []),
                                (this.interceptors_ = void 0),
                                (this.changeListeners_ = void 0),
                                (this.enhancer_ = void 0),
                                (this.dehancer = void 0),
                                (this.proxy_ = void 0),
                                (this.lastKnownLength_ = 0),
                                (this.owned_ = r),
                                (this.legacyMode_ = i),
                                (this.atom_ = new G(t)),
                                (this.enhancer_ = function (t, r) {
                                    return e(t, r, 'ObservableArray[..]');
                                });
                        }
                        var e = t.prototype;
                        return (
                            (e.dehanceValue_ = function (t) {
                                return void 0 !== this.dehancer ? this.dehancer(t) : t;
                            }),
                            (e.dehanceValues_ = function (t) {
                                return void 0 !== this.dehancer && t.length > 0 ? t.map(this.dehancer) : t;
                            }),
                            (e.intercept_ = function (t) {
                                return mr(this, t);
                            }),
                            (e.observe_ = function (t, e) {
                                return (
                                    void 0 === e && (e = !1),
                                    e &&
                                        t({
                                            observableKind: 'array',
                                            object: this.proxy_,
                                            debugObjectName: this.atom_.name_,
                                            type: 'splice',
                                            index: 0,
                                            added: this.values_.slice(),
                                            addedCount: this.values_.length,
                                            removed: [],
                                            removedCount: 0,
                                        }),
                                    _r(this, t)
                                );
                            }),
                            (e.getArrayLength_ = function () {
                                return this.atom_.reportObserved(), this.values_.length;
                            }),
                            (e.setArrayLength_ = function (t) {
                                ('number' != typeof t || isNaN(t) || t < 0) && r('Out of range: ' + t);
                                var e = this.values_.length;
                                if (t !== e)
                                    if (t > e) {
                                        for (var i = new Array(t - e), a = 0; a < t - e; a++) i[a] = void 0;
                                        this.spliceWithArray_(e, 0, i);
                                    } else this.spliceWithArray_(t, e - t);
                            }),
                            (e.updateArrayLength_ = function (t, e) {
                                t !== this.lastKnownLength_ && r(16),
                                    (this.lastKnownLength_ += e),
                                    this.legacyMode_ && e > 0 && oi(t + e + 1);
                            }),
                            (e.spliceWithArray_ = function (t, e, r) {
                                var i = this;
                                this.atom_;
                                var a = this.values_.length;
                                if (
                                    (void 0 === t ? (t = 0) : t > a ? (t = a) : t < 0 && (t = Math.max(0, a + t)),
                                    (e =
                                        1 === arguments.length
                                            ? a - t
                                            : null == e
                                              ? 0
                                              : Math.max(0, Math.min(e, a - t))),
                                    void 0 === r && (r = c),
                                    gr(this))
                                ) {
                                    var n = pr(this, {
                                        object: this.proxy_,
                                        type: yr,
                                        index: t,
                                        removedCount: e,
                                        added: r,
                                    });
                                    if (!n) return c;
                                    (e = n.removedCount), (r = n.added);
                                }
                                if (
                                    ((r =
                                        0 === r.length
                                            ? r
                                            : r.map(function (t) {
                                                  return i.enhancer_(t, void 0);
                                              })),
                                    this.legacyMode_)
                                ) {
                                    var s = r.length - e;
                                    this.updateArrayLength_(a, s);
                                }
                                var o = this.spliceItemsIntoValues_(t, e, r);
                                return (
                                    (0 === e && 0 === r.length) || this.notifyArraySplice_(t, r, o),
                                    this.dehanceValues_(o)
                                );
                            }),
                            (e.spliceItemsIntoValues_ = function (t, e, r) {
                                var i;
                                if (r.length < 1e4) return (i = this.values_).splice.apply(i, [t, e].concat(r));
                                var a = this.values_.slice(t, t + e),
                                    n = this.values_.slice(t + e);
                                this.values_.length += r.length - e;
                                for (var s = 0; s < r.length; s++) this.values_[t + s] = r[s];
                                for (var o = 0; o < n.length; o++) this.values_[t + r.length + o] = n[o];
                                return a;
                            }),
                            (e.notifyArrayChildUpdate_ = function (t, e, r) {
                                var i = !this.owned_ && !1,
                                    a = fr(this),
                                    n =
                                        a || i
                                            ? {
                                                  observableKind: 'array',
                                                  object: this.proxy_,
                                                  type: Sr,
                                                  debugObjectName: this.atom_.name_,
                                                  index: t,
                                                  newValue: e,
                                                  oldValue: r,
                                              }
                                            : null;
                                this.atom_.reportChanged(), a && vr(this, n);
                            }),
                            (e.notifyArraySplice_ = function (t, e, r) {
                                var i = !this.owned_ && !1,
                                    a = fr(this),
                                    n =
                                        a || i
                                            ? {
                                                  observableKind: 'array',
                                                  object: this.proxy_,
                                                  debugObjectName: this.atom_.name_,
                                                  type: yr,
                                                  index: t,
                                                  removed: r,
                                                  added: e,
                                                  removedCount: r.length,
                                                  addedCount: e.length,
                                              }
                                            : null;
                                this.atom_.reportChanged(), a && vr(this, n);
                            }),
                            (e.get_ = function (t) {
                                if (!(this.legacyMode_ && t >= this.values_.length))
                                    return this.atom_.reportObserved(), this.dehanceValue_(this.values_[t]);
                                console.warn('[mobx] Out of bounds read: ' + t);
                            }),
                            (e.set_ = function (t, e) {
                                var i = this.values_;
                                if ((this.legacyMode_ && t > i.length && r(17, t, i.length), t < i.length)) {
                                    this.atom_;
                                    var a = i[t];
                                    if (gr(this)) {
                                        var n = pr(this, { type: Sr, object: this.proxy_, index: t, newValue: e });
                                        if (!n) return;
                                        e = n.newValue;
                                    }
                                    (e = this.enhancer_(e, a)) !== a &&
                                        ((i[t] = e), this.notifyArrayChildUpdate_(t, e, a));
                                } else {
                                    for (var s = new Array(t + 1 - i.length), o = 0; o < s.length - 1; o++)
                                        s[o] = void 0;
                                    (s[s.length - 1] = e), this.spliceWithArray_(i.length, 0, s);
                                }
                            }),
                            t
                        );
                    })();
                function Er(t, e, r, i) {
                    return (
                        void 0 === r && (r = 'ObservableArray'),
                        void 0 === i && (i = !1),
                        p(),
                        di(function () {
                            var a = new Cr(r, e, i, !1);
                            E(a.values_, z, a);
                            var n = new Proxy(a.values_, wr);
                            return (a.proxy_ = n), t && t.length && a.spliceWithArray_(0, 0, t), n;
                        })
                    );
                }
                var xr = {
                    clear: function () {
                        return this.splice(0);
                    },
                    replace: function (t) {
                        var e = this[z];
                        return e.spliceWithArray_(0, e.values_.length, t);
                    },
                    toJSON: function () {
                        return this.slice();
                    },
                    splice: function (t, e) {
                        for (var r = arguments.length, i = new Array(r > 2 ? r - 2 : 0), a = 2; a < r; a++)
                            i[a - 2] = arguments[a];
                        var n = this[z];
                        switch (arguments.length) {
                            case 0:
                                return [];
                            case 1:
                                return n.spliceWithArray_(t);
                            case 2:
                                return n.spliceWithArray_(t, e);
                        }
                        return n.spliceWithArray_(t, e, i);
                    },
                    spliceWithArray: function (t, e, r) {
                        return this[z].spliceWithArray_(t, e, r);
                    },
                    push: function () {
                        for (var t = this[z], e = arguments.length, r = new Array(e), i = 0; i < e; i++)
                            r[i] = arguments[i];
                        return t.spliceWithArray_(t.values_.length, 0, r), t.values_.length;
                    },
                    pop: function () {
                        return this.splice(Math.max(this[z].values_.length - 1, 0), 1)[0];
                    },
                    shift: function () {
                        return this.splice(0, 1)[0];
                    },
                    unshift: function () {
                        for (var t = this[z], e = arguments.length, r = new Array(e), i = 0; i < e; i++)
                            r[i] = arguments[i];
                        return t.spliceWithArray_(0, 0, r), t.values_.length;
                    },
                    reverse: function () {
                        return fe.trackingDerivation && r(37, 'reverse'), this.replace(this.slice().reverse()), this;
                    },
                    sort: function () {
                        fe.trackingDerivation && r(37, 'sort');
                        var t = this.slice();
                        return t.sort.apply(t, arguments), this.replace(t), this;
                    },
                    remove: function (t) {
                        var e = this[z],
                            r = e.dehanceValues_(e.values_).indexOf(t);
                        return r > -1 && (this.splice(r, 1), !0);
                    },
                };
                function Tr(t, e) {
                    'function' == typeof Array.prototype[t] && (xr[t] = e(t));
                }
                function kr(t) {
                    return function () {
                        var e = this[z];
                        e.atom_.reportObserved();
                        var r = e.dehanceValues_(e.values_);
                        return r[t].apply(r, arguments);
                    };
                }
                function Ar(t) {
                    return function (e, r) {
                        var i = this,
                            a = this[z];
                        return (
                            a.atom_.reportObserved(),
                            a.dehanceValues_(a.values_)[t](function (t, a) {
                                return e.call(r, t, a, i);
                            })
                        );
                    };
                }
                function Or(t) {
                    return function () {
                        var e = this,
                            r = this[z];
                        r.atom_.reportObserved();
                        var i = r.dehanceValues_(r.values_),
                            a = arguments[0];
                        return (
                            (arguments[0] = function (t, r, i) {
                                return a(t, r, i, e);
                            }),
                            i[t].apply(i, arguments)
                        );
                    };
                }
                Tr('at', kr),
                    Tr('concat', kr),
                    Tr('flat', kr),
                    Tr('includes', kr),
                    Tr('indexOf', kr),
                    Tr('join', kr),
                    Tr('lastIndexOf', kr),
                    Tr('slice', kr),
                    Tr('toString', kr),
                    Tr('toLocaleString', kr),
                    Tr('toSorted', kr),
                    Tr('toSpliced', kr),
                    Tr('with', kr),
                    Tr('every', Ar),
                    Tr('filter', Ar),
                    Tr('find', Ar),
                    Tr('findIndex', Ar),
                    Tr('findLast', Ar),
                    Tr('findLastIndex', Ar),
                    Tr('flatMap', Ar),
                    Tr('forEach', Ar),
                    Tr('map', Ar),
                    Tr('some', Ar),
                    Tr('toReversed', Ar),
                    Tr('reduce', Or),
                    Tr('reduceRight', Or);
                var Nr,
                    Ir,
                    Dr = x('ObservableArrayAdministration', Cr);
                function Pr(t) {
                    return y(t) && Dr(t[z]);
                }
                var Lr = {},
                    Mr = 'add',
                    Br = 'delete';
                (Nr = Symbol.iterator), (Ir = Symbol.toStringTag);
                var Rr,
                    jr,
                    Fr = (function () {
                        function t(t, e, i) {
                            var a = this;
                            void 0 === e && (e = Y),
                                void 0 === i && (i = 'ObservableMap'),
                                (this.enhancer_ = void 0),
                                (this.name_ = void 0),
                                (this[z] = Lr),
                                (this.data_ = void 0),
                                (this.hasMap_ = void 0),
                                (this.keysAtom_ = void 0),
                                (this.interceptors_ = void 0),
                                (this.changeListeners_ = void 0),
                                (this.dehancer = void 0),
                                (this.enhancer_ = e),
                                (this.name_ = i),
                                v(Map) || r(18),
                                di(function () {
                                    (a.keysAtom_ = K('ObservableMap.keys()')),
                                        (a.data_ = new Map()),
                                        (a.hasMap_ = new Map()),
                                        t && a.merge(t);
                                });
                        }
                        var e = t.prototype;
                        return (
                            (e.has_ = function (t) {
                                return this.data_.has(t);
                            }),
                            (e.has = function (t) {
                                var e = this;
                                if (!fe.trackingDerivation) return this.has_(t);
                                var r = this.hasMap_.get(t);
                                if (!r) {
                                    var i = (r = new Yt(this.has_(t), Z, 'ObservableMap.key?', !1));
                                    this.hasMap_.set(t, i),
                                        Ge(i, function () {
                                            return e.hasMap_.delete(t);
                                        });
                                }
                                return r.get();
                            }),
                            (e.set = function (t, e) {
                                var r = this.has_(t);
                                if (gr(this)) {
                                    var i = pr(this, { type: r ? Sr : Mr, object: this, newValue: e, name: t });
                                    if (!i) return this;
                                    e = i.newValue;
                                }
                                return r ? this.updateValue_(t, e) : this.addValue_(t, e), this;
                            }),
                            (e.delete = function (t) {
                                var e = this;
                                if ((this.keysAtom_, gr(this) && !pr(this, { type: Br, object: this, name: t })))
                                    return !1;
                                if (this.has_(t)) {
                                    var r = fr(this),
                                        i = r
                                            ? {
                                                  observableKind: 'map',
                                                  debugObjectName: this.name_,
                                                  type: Br,
                                                  object: this,
                                                  oldValue: this.data_.get(t).value_,
                                                  name: t,
                                              }
                                            : null;
                                    return (
                                        lr(function () {
                                            var r;
                                            e.keysAtom_.reportChanged(),
                                                null == (r = e.hasMap_.get(t)) || r.setNewValue_(!1),
                                                e.data_.get(t).setNewValue_(void 0),
                                                e.data_.delete(t);
                                        }),
                                        r && vr(this, i),
                                        !0
                                    );
                                }
                                return !1;
                            }),
                            (e.updateValue_ = function (t, e) {
                                var r = this.data_.get(t);
                                if ((e = r.prepareNewValue_(e)) !== fe.UNCHANGED) {
                                    var i = fr(this),
                                        a = i
                                            ? {
                                                  observableKind: 'map',
                                                  debugObjectName: this.name_,
                                                  type: Sr,
                                                  object: this,
                                                  oldValue: r.value_,
                                                  name: t,
                                                  newValue: e,
                                              }
                                            : null;
                                    r.setNewValue_(e), i && vr(this, a);
                                }
                            }),
                            (e.addValue_ = function (t, e) {
                                var r = this;
                                this.keysAtom_,
                                    lr(function () {
                                        var i,
                                            a = new Yt(e, r.enhancer_, 'ObservableMap.key', !1);
                                        r.data_.set(t, a),
                                            (e = a.value_),
                                            null == (i = r.hasMap_.get(t)) || i.setNewValue_(!0),
                                            r.keysAtom_.reportChanged();
                                    });
                                var i = fr(this),
                                    a = i
                                        ? {
                                              observableKind: 'map',
                                              debugObjectName: this.name_,
                                              type: Mr,
                                              object: this,
                                              name: t,
                                              newValue: e,
                                          }
                                        : null;
                                i && vr(this, a);
                            }),
                            (e.get = function (t) {
                                return this.has(t)
                                    ? this.dehanceValue_(this.data_.get(t).get())
                                    : this.dehanceValue_(void 0);
                            }),
                            (e.dehanceValue_ = function (t) {
                                return void 0 !== this.dehancer ? this.dehancer(t) : t;
                            }),
                            (e.keys = function () {
                                return this.keysAtom_.reportObserved(), this.data_.keys();
                            }),
                            (e.values = function () {
                                var t = this,
                                    e = this.keys();
                                return _i({
                                    next: function () {
                                        var r = e.next(),
                                            i = r.done,
                                            a = r.value;
                                        return { done: i, value: i ? void 0 : t.get(a) };
                                    },
                                });
                            }),
                            (e.entries = function () {
                                var t = this,
                                    e = this.keys();
                                return _i({
                                    next: function () {
                                        var r = e.next(),
                                            i = r.done,
                                            a = r.value;
                                        return { done: i, value: i ? void 0 : [a, t.get(a)] };
                                    },
                                });
                            }),
                            (e[Nr] = function () {
                                return this.entries();
                            }),
                            (e.forEach = function (t, e) {
                                for (var r, i = V(this); !(r = i()).done; ) {
                                    var a = r.value,
                                        n = a[0],
                                        s = a[1];
                                    t.call(e, s, n, this);
                                }
                            }),
                            (e.merge = function (t) {
                                var e = this;
                                return (
                                    Vr(t) && (t = new Map(t)),
                                    lr(function () {
                                        S(t)
                                            ? (function (t) {
                                                  var e = Object.keys(t);
                                                  if (!A) return e;
                                                  var r = Object.getOwnPropertySymbols(t);
                                                  return r.length
                                                      ? [].concat(
                                                            e,
                                                            r.filter(function (e) {
                                                                return l.propertyIsEnumerable.call(t, e);
                                                            })
                                                        )
                                                      : e;
                                              })(t).forEach(function (r) {
                                                  return e.set(r, t[r]);
                                              })
                                            : Array.isArray(t)
                                              ? t.forEach(function (t) {
                                                    var r = t[0],
                                                        i = t[1];
                                                    return e.set(r, i);
                                                })
                                              : T(t)
                                                ? (t.constructor !== Map && r(19, t),
                                                  t.forEach(function (t, r) {
                                                      return e.set(r, t);
                                                  }))
                                                : null != t && r(20, t);
                                    }),
                                    this
                                );
                            }),
                            (e.clear = function () {
                                var t = this;
                                lr(function () {
                                    oe(function () {
                                        for (var e, r = V(t.keys()); !(e = r()).done; ) {
                                            var i = e.value;
                                            t.delete(i);
                                        }
                                    });
                                });
                            }),
                            (e.replace = function (t) {
                                var e = this;
                                return (
                                    lr(function () {
                                        for (
                                            var i,
                                                a = (function (t) {
                                                    if (T(t) || Vr(t)) return t;
                                                    if (Array.isArray(t)) return new Map(t);
                                                    if (S(t)) {
                                                        var e = new Map();
                                                        for (var i in t) e.set(i, t[i]);
                                                        return e;
                                                    }
                                                    return r(21, t);
                                                })(t),
                                                n = new Map(),
                                                s = !1,
                                                o = V(e.data_.keys());
                                            !(i = o()).done;

                                        ) {
                                            var l = i.value;
                                            if (!a.has(l))
                                                if (e.delete(l)) s = !0;
                                                else {
                                                    var c = e.data_.get(l);
                                                    n.set(l, c);
                                                }
                                        }
                                        for (var h, u = V(a.entries()); !(h = u()).done; ) {
                                            var d = h.value,
                                                g = d[0],
                                                m = d[1],
                                                p = e.data_.has(g);
                                            if ((e.set(g, m), e.data_.has(g))) {
                                                var f = e.data_.get(g);
                                                n.set(g, f), p || (s = !0);
                                            }
                                        }
                                        if (!s)
                                            if (e.data_.size !== n.size) e.keysAtom_.reportChanged();
                                            else
                                                for (
                                                    var _ = e.data_.keys(), v = n.keys(), b = _.next(), y = v.next();
                                                    !b.done;

                                                ) {
                                                    if (b.value !== y.value) {
                                                        e.keysAtom_.reportChanged();
                                                        break;
                                                    }
                                                    (b = _.next()), (y = v.next());
                                                }
                                        e.data_ = n;
                                    }),
                                    this
                                );
                            }),
                            (e.toString = function () {
                                return '[object ObservableMap]';
                            }),
                            (e.toJSON = function () {
                                return Array.from(this);
                            }),
                            (e.observe_ = function (t, e) {
                                return _r(this, t);
                            }),
                            (e.intercept_ = function (t) {
                                return mr(this, t);
                            }),
                            L(t, [
                                {
                                    key: 'size',
                                    get: function () {
                                        return this.keysAtom_.reportObserved(), this.data_.size;
                                    },
                                },
                                {
                                    key: Ir,
                                    get: function () {
                                        return 'Map';
                                    },
                                },
                            ]),
                            t
                        );
                    })(),
                    Vr = x('ObservableMap', Fr),
                    Hr = {};
                (Rr = Symbol.iterator), (jr = Symbol.toStringTag);
                var qr = (function () {
                        function t(t, e, i) {
                            var a = this;
                            void 0 === e && (e = Y),
                                void 0 === i && (i = 'ObservableSet'),
                                (this.name_ = void 0),
                                (this[z] = Hr),
                                (this.data_ = new Set()),
                                (this.atom_ = void 0),
                                (this.changeListeners_ = void 0),
                                (this.interceptors_ = void 0),
                                (this.dehancer = void 0),
                                (this.enhancer_ = void 0),
                                (this.name_ = i),
                                v(Set) || r(22),
                                (this.enhancer_ = function (t, r) {
                                    return e(t, r, i);
                                }),
                                di(function () {
                                    (a.atom_ = K(a.name_)), t && a.replace(t);
                                });
                        }
                        var e = t.prototype;
                        return (
                            (e.dehanceValue_ = function (t) {
                                return void 0 !== this.dehancer ? this.dehancer(t) : t;
                            }),
                            (e.clear = function () {
                                var t = this;
                                lr(function () {
                                    oe(function () {
                                        for (var e, r = V(t.data_.values()); !(e = r()).done; ) {
                                            var i = e.value;
                                            t.delete(i);
                                        }
                                    });
                                });
                            }),
                            (e.forEach = function (t, e) {
                                for (var r, i = V(this); !(r = i()).done; ) {
                                    var a = r.value;
                                    t.call(e, a, a, this);
                                }
                            }),
                            (e.add = function (t) {
                                var e = this;
                                if ((this.atom_, gr(this) && !pr(this, { type: Mr, object: this, newValue: t })))
                                    return this;
                                if (!this.has(t)) {
                                    lr(function () {
                                        e.data_.add(e.enhancer_(t, void 0)), e.atom_.reportChanged();
                                    });
                                    var r = fr(this),
                                        i = r
                                            ? {
                                                  observableKind: 'set',
                                                  debugObjectName: this.name_,
                                                  type: Mr,
                                                  object: this,
                                                  newValue: t,
                                              }
                                            : null;
                                    r && vr(this, i);
                                }
                                return this;
                            }),
                            (e.delete = function (t) {
                                var e = this;
                                if (gr(this) && !pr(this, { type: Br, object: this, oldValue: t })) return !1;
                                if (this.has(t)) {
                                    var r = fr(this),
                                        i = r
                                            ? {
                                                  observableKind: 'set',
                                                  debugObjectName: this.name_,
                                                  type: Br,
                                                  object: this,
                                                  oldValue: t,
                                              }
                                            : null;
                                    return (
                                        lr(function () {
                                            e.atom_.reportChanged(), e.data_.delete(t);
                                        }),
                                        r && vr(this, i),
                                        !0
                                    );
                                }
                                return !1;
                            }),
                            (e.has = function (t) {
                                return this.atom_.reportObserved(), this.data_.has(this.dehanceValue_(t));
                            }),
                            (e.entries = function () {
                                var t = 0,
                                    e = Array.from(this.keys()),
                                    r = Array.from(this.values());
                                return _i({
                                    next: function () {
                                        var i = t;
                                        return (
                                            (t += 1), i < r.length ? { value: [e[i], r[i]], done: !1 } : { done: !0 }
                                        );
                                    },
                                });
                            }),
                            (e.keys = function () {
                                return this.values();
                            }),
                            (e.values = function () {
                                this.atom_.reportObserved();
                                var t = this,
                                    e = 0,
                                    r = Array.from(this.data_.values());
                                return _i({
                                    next: function () {
                                        return e < r.length
                                            ? { value: t.dehanceValue_(r[e++]), done: !1 }
                                            : { done: !0 };
                                    },
                                });
                            }),
                            (e.replace = function (t) {
                                var e = this;
                                return (
                                    Ur(t) && (t = new Set(t)),
                                    lr(function () {
                                        Array.isArray(t) || k(t)
                                            ? (e.clear(),
                                              t.forEach(function (t) {
                                                  return e.add(t);
                                              }))
                                            : null != t && r('Cannot initialize set from ' + t);
                                    }),
                                    this
                                );
                            }),
                            (e.observe_ = function (t, e) {
                                return _r(this, t);
                            }),
                            (e.intercept_ = function (t) {
                                return mr(this, t);
                            }),
                            (e.toJSON = function () {
                                return Array.from(this);
                            }),
                            (e.toString = function () {
                                return '[object ObservableSet]';
                            }),
                            (e[Rr] = function () {
                                return this.values();
                            }),
                            L(t, [
                                {
                                    key: 'size',
                                    get: function () {
                                        return this.atom_.reportObserved(), this.data_.size;
                                    },
                                },
                                {
                                    key: jr,
                                    get: function () {
                                        return 'Set';
                                    },
                                },
                            ]),
                            t
                        );
                    })(),
                    Ur = x('ObservableSet', qr),
                    $r = Object.create(null),
                    zr = 'remove',
                    Gr = (function () {
                        function t(t, e, r, i) {
                            void 0 === e && (e = new Map()),
                                void 0 === i && (i = vt),
                                (this.target_ = void 0),
                                (this.values_ = void 0),
                                (this.name_ = void 0),
                                (this.defaultAnnotation_ = void 0),
                                (this.keysAtom_ = void 0),
                                (this.changeListeners_ = void 0),
                                (this.interceptors_ = void 0),
                                (this.proxy_ = void 0),
                                (this.isPlainObject_ = void 0),
                                (this.appliedAnnotations_ = void 0),
                                (this.pendingKeys_ = void 0),
                                (this.target_ = t),
                                (this.values_ = e),
                                (this.name_ = r),
                                (this.defaultAnnotation_ = i),
                                (this.keysAtom_ = new G('ObservableObject.keys')),
                                (this.isPlainObject_ = S(this.target_));
                        }
                        var e = t.prototype;
                        return (
                            (e.getObservablePropValue_ = function (t) {
                                return this.values_.get(t).get();
                            }),
                            (e.setObservablePropValue_ = function (t, e) {
                                var r = this.values_.get(t);
                                if (r instanceof te) return r.set(e), !0;
                                if (gr(this)) {
                                    var i = pr(this, {
                                        type: Sr,
                                        object: this.proxy_ || this.target_,
                                        name: t,
                                        newValue: e,
                                    });
                                    if (!i) return null;
                                    e = i.newValue;
                                }
                                if ((e = r.prepareNewValue_(e)) !== fe.UNCHANGED) {
                                    var a = fr(this),
                                        n = a
                                            ? {
                                                  type: Sr,
                                                  observableKind: 'object',
                                                  debugObjectName: this.name_,
                                                  object: this.proxy_ || this.target_,
                                                  oldValue: r.value_,
                                                  name: t,
                                                  newValue: e,
                                              }
                                            : null;
                                    r.setNewValue_(e), a && vr(this, n);
                                }
                                return !0;
                            }),
                            (e.get_ = function (t) {
                                return fe.trackingDerivation && !I(this.target_, t) && this.has_(t), this.target_[t];
                            }),
                            (e.set_ = function (t, e, r) {
                                return (
                                    void 0 === r && (r = !1),
                                    I(this.target_, t)
                                        ? this.values_.has(t)
                                            ? this.setObservablePropValue_(t, e)
                                            : r
                                              ? Reflect.set(this.target_, t, e)
                                              : ((this.target_[t] = e), !0)
                                        : this.extend_(
                                              t,
                                              { value: e, enumerable: !0, writable: !0, configurable: !0 },
                                              this.defaultAnnotation_,
                                              r
                                          )
                                );
                            }),
                            (e.has_ = function (t) {
                                if (!fe.trackingDerivation) return t in this.target_;
                                this.pendingKeys_ || (this.pendingKeys_ = new Map());
                                var e = this.pendingKeys_.get(t);
                                return (
                                    e ||
                                        ((e = new Yt(t in this.target_, Z, 'ObservableObject.key?', !1)),
                                        this.pendingKeys_.set(t, e)),
                                    e.get()
                                );
                            }),
                            (e.make_ = function (t, e) {
                                if ((!0 === e && (e = this.defaultAnnotation_), !1 !== e)) {
                                    if (!(t in this.target_)) {
                                        var i;
                                        if (null != (i = this.target_[H]) && i[t]) return;
                                        r(1, e.annotationType_, this.name_ + '.' + t.toString());
                                    }
                                    for (var a = this.target_; a && a !== l; ) {
                                        var n = s(a, t);
                                        if (n) {
                                            var o = e.make_(this, t, n, a);
                                            if (0 === o) return;
                                            if (1 === o) break;
                                        }
                                        a = Object.getPrototypeOf(a);
                                    }
                                    Zr(this, 0, t);
                                }
                            }),
                            (e.extend_ = function (t, e, r, i) {
                                if ((void 0 === i && (i = !1), !0 === r && (r = this.defaultAnnotation_), !1 === r))
                                    return this.defineProperty_(t, e, i);
                                var a = r.extend_(this, t, e, i);
                                return a && Zr(this, 0, t), a;
                            }),
                            (e.defineProperty_ = function (t, e, r) {
                                void 0 === r && (r = !1), this.keysAtom_;
                                try {
                                    be();
                                    var i = this.delete_(t);
                                    if (!i) return i;
                                    if (gr(this)) {
                                        var a = pr(this, {
                                            object: this.proxy_ || this.target_,
                                            name: t,
                                            type: Mr,
                                            newValue: e.value,
                                        });
                                        if (!a) return null;
                                        var n = a.newValue;
                                        e.value !== n && (e = M({}, e, { value: n }));
                                    }
                                    if (r) {
                                        if (!Reflect.defineProperty(this.target_, t, e)) return !1;
                                    } else o(this.target_, t, e);
                                    this.notifyPropertyAddition_(t, e.value);
                                } finally {
                                    ye();
                                }
                                return !0;
                            }),
                            (e.defineObservableProperty_ = function (t, e, r, i) {
                                void 0 === i && (i = !1), this.keysAtom_;
                                try {
                                    be();
                                    var a = this.delete_(t);
                                    if (!a) return a;
                                    if (gr(this)) {
                                        var n = pr(this, {
                                            object: this.proxy_ || this.target_,
                                            name: t,
                                            type: Mr,
                                            newValue: e,
                                        });
                                        if (!n) return null;
                                        e = n.newValue;
                                    }
                                    var s = Xr(t),
                                        l = {
                                            configurable: !fe.safeDescriptors || this.isPlainObject_,
                                            enumerable: !0,
                                            get: s.get,
                                            set: s.set,
                                        };
                                    if (i) {
                                        if (!Reflect.defineProperty(this.target_, t, l)) return !1;
                                    } else o(this.target_, t, l);
                                    var c = new Yt(e, r, 'ObservableObject.key', !1);
                                    this.values_.set(t, c), this.notifyPropertyAddition_(t, c.value_);
                                } finally {
                                    ye();
                                }
                                return !0;
                            }),
                            (e.defineComputedProperty_ = function (t, e, r) {
                                void 0 === r && (r = !1), this.keysAtom_;
                                try {
                                    be();
                                    var i = this.delete_(t);
                                    if (!i) return i;
                                    if (
                                        gr(this) &&
                                        !pr(this, {
                                            object: this.proxy_ || this.target_,
                                            name: t,
                                            type: Mr,
                                            newValue: void 0,
                                        })
                                    )
                                        return null;
                                    e.name || (e.name = 'ObservableObject.key'),
                                        (e.context = this.proxy_ || this.target_);
                                    var a = Xr(t),
                                        n = {
                                            configurable: !fe.safeDescriptors || this.isPlainObject_,
                                            enumerable: !1,
                                            get: a.get,
                                            set: a.set,
                                        };
                                    if (r) {
                                        if (!Reflect.defineProperty(this.target_, t, n)) return !1;
                                    } else o(this.target_, t, n);
                                    this.values_.set(t, new te(e)), this.notifyPropertyAddition_(t, void 0);
                                } finally {
                                    ye();
                                }
                                return !0;
                            }),
                            (e.delete_ = function (t, e) {
                                if ((void 0 === e && (e = !1), this.keysAtom_, !I(this.target_, t))) return !0;
                                if (gr(this) && !pr(this, { object: this.proxy_ || this.target_, name: t, type: zr }))
                                    return null;
                                try {
                                    var r, i;
                                    be();
                                    var a,
                                        n = fr(this),
                                        o = this.values_.get(t),
                                        l = void 0;
                                    if ((!o && n && (l = null == (a = s(this.target_, t)) ? void 0 : a.value), e)) {
                                        if (!Reflect.deleteProperty(this.target_, t)) return !1;
                                    } else delete this.target_[t];
                                    if (
                                        (o && (this.values_.delete(t), o instanceof Yt && (l = o.value_), we(o)),
                                        this.keysAtom_.reportChanged(),
                                        null == (r = this.pendingKeys_) ||
                                            null == (i = r.get(t)) ||
                                            i.set(t in this.target_),
                                        n)
                                    ) {
                                        var c = {
                                            type: zr,
                                            observableKind: 'object',
                                            object: this.proxy_ || this.target_,
                                            debugObjectName: this.name_,
                                            oldValue: l,
                                            name: t,
                                        };
                                        n && vr(this, c);
                                    }
                                } finally {
                                    ye();
                                }
                                return !0;
                            }),
                            (e.observe_ = function (t, e) {
                                return _r(this, t);
                            }),
                            (e.intercept_ = function (t) {
                                return mr(this, t);
                            }),
                            (e.notifyPropertyAddition_ = function (t, e) {
                                var r,
                                    i,
                                    a = fr(this);
                                if (a) {
                                    var n = a
                                        ? {
                                              type: Mr,
                                              observableKind: 'object',
                                              debugObjectName: this.name_,
                                              object: this.proxy_ || this.target_,
                                              name: t,
                                              newValue: e,
                                          }
                                        : null;
                                    a && vr(this, n);
                                }
                                null == (r = this.pendingKeys_) || null == (i = r.get(t)) || i.set(!0),
                                    this.keysAtom_.reportChanged();
                            }),
                            (e.ownKeys_ = function () {
                                return this.keysAtom_.reportObserved(), O(this.target_);
                            }),
                            (e.keys_ = function () {
                                return this.keysAtom_.reportObserved(), Object.keys(this.target_);
                            }),
                            t
                        );
                    })();
                function Wr(t, e) {
                    var r;
                    if (I(t, z)) return t;
                    var i = null != (r = null == e ? void 0 : e.name) ? r : 'ObservableObject',
                        a = new Gr(
                            t,
                            new Map(),
                            String(i),
                            (function (t) {
                                var e;
                                return t ? (null != (e = t.defaultDecorator) ? e : bt(t)) : void 0;
                            })(e)
                        );
                    return C(t, z, a), t;
                }
                var Kr = x('ObservableObjectAdministration', Gr);
                function Xr(t) {
                    return (
                        $r[t] ||
                        ($r[t] = {
                            get: function () {
                                return this[z].getObservablePropValue_(t);
                            },
                            set: function (e) {
                                return this[z].setObservablePropValue_(t, e);
                            },
                        })
                    );
                }
                function Yr(t) {
                    return !!y(t) && Kr(t[z]);
                }
                function Zr(t, e, r) {
                    var i;
                    null == (i = t.target_[H]) || delete i[r];
                }
                var Qr,
                    Jr,
                    ti = ni(0),
                    ei = (function () {
                        var t = !1,
                            e = {};
                        return (
                            Object.defineProperty(e, '0', {
                                set: function () {
                                    t = !0;
                                },
                            }),
                            (Object.create(e)[0] = 1),
                            !1 === t
                        );
                    })(),
                    ri = 0,
                    ii = function () {};
                (Qr = ii),
                    (Jr = Array.prototype),
                    Object.setPrototypeOf
                        ? Object.setPrototypeOf(Qr.prototype, Jr)
                        : void 0 !== Qr.prototype.__proto__
                          ? (Qr.prototype.__proto__ = Jr)
                          : (Qr.prototype = Jr);
                var ai = (function (t, e, r) {
                    function i(e, r, i, a) {
                        var n;
                        return (
                            void 0 === i && (i = 'ObservableArray'),
                            void 0 === a && (a = !1),
                            (n = t.call(this) || this),
                            di(function () {
                                var t = new Cr(i, r, a, !0);
                                (t.proxy_ = j(n)),
                                    E(j(n), z, t),
                                    e && e.length && n.spliceWithArray(0, 0, e),
                                    ei && Object.defineProperty(j(n), '0', ti);
                            }),
                            n
                        );
                    }
                    B(i, t);
                    var a = i.prototype;
                    return (
                        (a.concat = function () {
                            this[z].atom_.reportObserved();
                            for (var t = arguments.length, e = new Array(t), r = 0; r < t; r++) e[r] = arguments[r];
                            return Array.prototype.concat.apply(
                                this.slice(),
                                e.map(function (t) {
                                    return Pr(t) ? t.slice() : t;
                                })
                            );
                        }),
                        (a[r] = function () {
                            var t = this,
                                e = 0;
                            return _i({
                                next: function () {
                                    return e < t.length ? { value: t[e++], done: !1 } : { done: !0, value: void 0 };
                                },
                            });
                        }),
                        L(i, [
                            {
                                key: 'length',
                                get: function () {
                                    return this[z].getArrayLength_();
                                },
                                set: function (t) {
                                    this[z].setArrayLength_(t);
                                },
                            },
                            {
                                key: e,
                                get: function () {
                                    return 'Array';
                                },
                            },
                        ]),
                        i
                    );
                })(ii, Symbol.toStringTag, Symbol.iterator);
                function ni(t) {
                    return {
                        enumerable: !1,
                        configurable: !0,
                        get: function () {
                            return this[z].get_(t);
                        },
                        set: function (e) {
                            this[z].set_(t, e);
                        },
                    };
                }
                function si(t) {
                    o(ai.prototype, '' + t, ni(t));
                }
                function oi(t) {
                    if (t > ri) {
                        for (var e = ri; e < t + 100; e++) si(e);
                        ri = t;
                    }
                }
                function li(t, e, r) {
                    return new ai(t, e, r);
                }
                function ci(t, e) {
                    if ('object' == typeof t && null !== t) {
                        if (Pr(t)) return void 0 !== e && r(23), t[z].atom_;
                        if (Ur(t)) return t.atom_;
                        if (Vr(t)) {
                            if (void 0 === e) return t.keysAtom_;
                            var i = t.data_.get(e) || t.hasMap_.get(e);
                            return i || r(25, e, ui(t)), i;
                        }
                        if (Yr(t)) {
                            if (!e) return r(26);
                            var a = t[z].values_.get(e);
                            return a || r(27, e, ui(t)), a;
                        }
                        if (W(t) || ee(t) || Ae(t)) return t;
                    } else if (v(t) && Ae(t[z])) return t[z];
                    r(28);
                }
                function hi(t, e) {
                    return (
                        t || r(29),
                        void 0 !== e
                            ? hi(ci(t, e))
                            : W(t) || ee(t) || Ae(t) || Vr(t) || Ur(t)
                              ? t
                              : t[z]
                                ? t[z]
                                : void r(24, t)
                    );
                }
                function ui(t, e) {
                    var r;
                    if (void 0 !== e) r = ci(t, e);
                    else {
                        if (Fe(t)) return t.name;
                        r = Yr(t) || Vr(t) || Ur(t) ? hi(t) : ci(t);
                    }
                    return r.name_;
                }
                function di(t) {
                    var e = le(),
                        r = Wt(!0);
                    be();
                    try {
                        return t();
                    } finally {
                        ye(), Kt(r), ce(e);
                    }
                }
                Object.entries(xr).forEach(function (t) {
                    var e = t[0],
                        r = t[1];
                    'concat' !== e && C(ai.prototype, e, r);
                }),
                    oi(1e3);
                var gi = l.toString;
                function mi(t, e, r) {
                    return void 0 === r && (r = -1), pi(t, e, r);
                }
                function pi(t, e, r, i, a) {
                    if (t === e) return 0 !== t || 1 / t == 1 / e;
                    if (null == t || null == e) return !1;
                    if (t != t) return e != e;
                    var n = typeof t;
                    if ('function' !== n && 'object' !== n && 'object' != typeof e) return !1;
                    var s = gi.call(t);
                    if (s !== gi.call(e)) return !1;
                    switch (s) {
                        case '[object RegExp]':
                        case '[object String]':
                            return '' + t == '' + e;
                        case '[object Number]':
                            return +t != +t ? +e != +e : 0 == +t ? 1 / +t == 1 / e : +t == +e;
                        case '[object Date]':
                        case '[object Boolean]':
                            return +t == +e;
                        case '[object Symbol]':
                            return 'undefined' != typeof Symbol && Symbol.valueOf.call(t) === Symbol.valueOf.call(e);
                        case '[object Map]':
                        case '[object Set]':
                            r >= 0 && r++;
                    }
                    (t = fi(t)), (e = fi(e));
                    var o = '[object Array]' === s;
                    if (!o) {
                        if ('object' != typeof t || 'object' != typeof e) return !1;
                        var l = t.constructor,
                            c = e.constructor;
                        if (
                            l !== c &&
                            !(v(l) && l instanceof l && v(c) && c instanceof c) &&
                            'constructor' in t &&
                            'constructor' in e
                        )
                            return !1;
                    }
                    if (0 === r) return !1;
                    r < 0 && (r = -1), (a = a || []);
                    for (var h = (i = i || []).length; h--; ) if (i[h] === t) return a[h] === e;
                    if ((i.push(t), a.push(e), o)) {
                        if ((h = t.length) !== e.length) return !1;
                        for (; h--; ) if (!pi(t[h], e[h], r - 1, i, a)) return !1;
                    } else {
                        var u,
                            d = Object.keys(t);
                        if (((h = d.length), Object.keys(e).length !== h)) return !1;
                        for (; h--; ) if (!I(e, (u = d[h])) || !pi(t[u], e[u], r - 1, i, a)) return !1;
                    }
                    return i.pop(), a.pop(), !0;
                }
                function fi(t) {
                    return Pr(t) ? t.slice() : T(t) || Vr(t) || k(t) || Ur(t) ? Array.from(t.entries()) : t;
                }
                function _i(t) {
                    return (t[Symbol.iterator] = vi), t;
                }
                function vi() {
                    return this;
                }
                ['Symbol', 'Map', 'Set'].forEach(function (t) {
                    void 0 === a()[t] && r("MobX requires global '" + t + "' to be available or polyfilled");
                }),
                    'object' == typeof __MOBX_DEVTOOLS_GLOBAL_HOOK__ &&
                        __MOBX_DEVTOOLS_GLOBAL_HOOK__.injectMobx({
                            spy: function (t) {
                                return console.warn('[mobx.spy] Is a no-op in production builds'), function () {};
                            },
                            extras: { getDebugName: ui },
                            $mobx: z,
                        });
                var bi = h(809),
                    yi = h.n(bi);
                if (!bi.useState) throw new Error('mobx-react-lite requires React with Hooks support');
                if (!br) throw new Error('mobx-react-lite@3 requires mobx at least version 6 to be available');
                var Si = h(4511),
                    wi = h.n(Si);
                function Ci(t) {
                    t();
                }
                function Ei(t) {
                    return Ye(ci(t, e));
                    var e;
                }
                var xi = (function () {
                        function t(t) {
                            var e = this;
                            Object.defineProperty(this, 'finalize', {
                                enumerable: !0,
                                configurable: !0,
                                writable: !0,
                                value: t,
                            }),
                                Object.defineProperty(this, 'registrations', {
                                    enumerable: !0,
                                    configurable: !0,
                                    writable: !0,
                                    value: new Map(),
                                }),
                                Object.defineProperty(this, 'sweepTimeout', {
                                    enumerable: !0,
                                    configurable: !0,
                                    writable: !0,
                                    value: void 0,
                                }),
                                Object.defineProperty(this, 'sweep', {
                                    enumerable: !0,
                                    configurable: !0,
                                    writable: !0,
                                    value: function (t) {
                                        void 0 === t && (t = 1e4),
                                            clearTimeout(e.sweepTimeout),
                                            (e.sweepTimeout = void 0);
                                        var r = Date.now();
                                        e.registrations.forEach(function (i, a) {
                                            r - i.registeredAt >= t && (e.finalize(i.value), e.registrations.delete(a));
                                        }),
                                            e.registrations.size > 0 && e.scheduleSweep();
                                    },
                                }),
                                Object.defineProperty(this, 'finalizeAllImmediately', {
                                    enumerable: !0,
                                    configurable: !0,
                                    writable: !0,
                                    value: function () {
                                        e.sweep(0);
                                    },
                                });
                        }
                        return (
                            Object.defineProperty(t.prototype, 'register', {
                                enumerable: !1,
                                configurable: !0,
                                writable: !0,
                                value: function (t, e, r) {
                                    this.registrations.set(r, { value: e, registeredAt: Date.now() }),
                                        this.scheduleSweep();
                                },
                            }),
                            Object.defineProperty(t.prototype, 'unregister', {
                                enumerable: !1,
                                configurable: !0,
                                writable: !0,
                                value: function (t) {
                                    this.registrations.delete(t);
                                },
                            }),
                            Object.defineProperty(t.prototype, 'scheduleSweep', {
                                enumerable: !1,
                                configurable: !0,
                                writable: !0,
                                value: function () {
                                    void 0 === this.sweepTimeout && (this.sweepTimeout = setTimeout(this.sweep, 1e4));
                                },
                            }),
                            t
                        );
                    })(),
                    Ti = new ('undefined' != typeof FinalizationRegistry ? FinalizationRegistry : xi)(function (t) {
                        var e;
                        null === (e = t.reaction) || void 0 === e || e.dispose(), (t.reaction = null);
                    }),
                    ki = !1;
                function Ai() {
                    return ki;
                }
                var Oi = function (t, e) {
                    var r = 'function' == typeof Symbol && t[Symbol.iterator];
                    if (!r) return t;
                    var i,
                        a,
                        n = r.call(t),
                        s = [];
                    try {
                        for (; (void 0 === e || e-- > 0) && !(i = n.next()).done; ) s.push(i.value);
                    } catch (t) {
                        a = { error: t };
                    } finally {
                        try {
                            i && !i.done && (r = n.return) && r.call(n);
                        } finally {
                            if (a) throw a.error;
                        }
                    }
                    return s;
                };
                function Ni(t) {
                    return 'observer'.concat(t);
                }
                var Ii = function () {};
                function Di() {
                    return new Ii();
                }
                var Pi = 'function' == typeof Symbol && Symbol.for,
                    Li = Pi
                        ? Symbol.for('react.forward_ref')
                        : 'function' == typeof bi.forwardRef &&
                          (0, bi.forwardRef)(function (t) {
                              return null;
                          }).$$typeof,
                    Mi = Pi
                        ? Symbol.for('react.memo')
                        : 'function' == typeof bi.memo &&
                          (0, bi.memo)(function (t) {
                              return null;
                          }).$$typeof;
                function Bi(t, e) {
                    var r;
                    if (Mi && t.$$typeof === Mi)
                        throw new Error(
                            "[mobx-react-lite] You are trying to use `observer` on a function component wrapped in either another `observer` or `React.memo`. The observer already applies 'React.memo' for you."
                        );
                    if (Ai()) return t;
                    var i = null !== (r = null == e ? void 0 : e.forwardRef) && void 0 !== r && r,
                        a = t,
                        n = t.displayName || t.name;
                    if (Li && t.$$typeof === Li && ((i = !0), 'function' != typeof (a = t.render)))
                        throw new Error('[mobx-react-lite] `render` property of ForwardRef was not a function');
                    var s,
                        o,
                        l = function (t, e) {
                            return (function (t, e) {
                                if ((void 0 === e && (e = 'observed'), Ai())) return t();
                                var r = Oi(yi().useState(Di), 1)[0],
                                    i = Oi(yi().useState(), 2)[1],
                                    a = function () {
                                        return i([]);
                                    },
                                    n = yi().useRef(null);
                                n.current || (n.current = { reaction: null, mounted: !1, changedBeforeMount: !1 });
                                var s,
                                    o,
                                    l = n.current;
                                if (
                                    (l.reaction ||
                                        ((l.reaction = new Ce(Ni(e), function () {
                                            l.mounted ? a() : (l.changedBeforeMount = !0);
                                        })),
                                        Ti.register(r, l, l)),
                                    yi().useDebugValue(l.reaction, Ei),
                                    yi().useEffect(function () {
                                        return (
                                            Ti.unregister(l),
                                            (l.mounted = !0),
                                            l.reaction
                                                ? l.changedBeforeMount && ((l.changedBeforeMount = !1), a())
                                                : ((l.reaction = new Ce(Ni(e), function () {
                                                      a();
                                                  })),
                                                  a()),
                                            function () {
                                                l.reaction.dispose(),
                                                    (l.reaction = null),
                                                    (l.mounted = !1),
                                                    (l.changedBeforeMount = !1);
                                            }
                                        );
                                    }, []),
                                    l.reaction.track(function () {
                                        try {
                                            s = t();
                                        } catch (t) {
                                            o = t;
                                        }
                                    }),
                                    o)
                                )
                                    throw o;
                                return s;
                            })(function () {
                                return a(t, e);
                            }, n);
                        };
                    return (
                        '' !== n && (l.displayName = n),
                        t.contextTypes && (l.contextTypes = t.contextTypes),
                        i && (l = (0, bi.forwardRef)(l)),
                        (l = (0, bi.memo)(l)),
                        (s = t),
                        (o = l),
                        Object.keys(s).forEach(function (t) {
                            Ri[t] || Object.defineProperty(o, t, Object.getOwnPropertyDescriptor(s, t));
                        }),
                        l
                    );
                }
                var Ri = { $$typeof: !0, render: !0, compare: !0, type: !0, displayName: !0 };
                function ji() {
                    let t,
                        e,
                        r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
                    const i = new Promise((r, i) => {
                        (t = r), (e = i);
                    });
                    return (
                        (i.resolve = e => {
                            (i.isPending = !1), t(e);
                        }),
                        (i.reject = t => {
                            (i.isPending = !1), e(t);
                        }),
                        (i.data = r),
                        i
                    );
                }
                !(function (t) {
                    t || (t = Ci), Xe({ reactionScheduler: t });
                })(Si.unstable_batchedUpdates),
                    Ti.finalizeAllImmediately;
                var Fi = h(12),
                    Vi = h.n(Fi);
                function Hi(t) {
                    const e = localStorage.getItem(t);
                    if (null !== e)
                        try {
                            return JSON.parse(e);
                        } catch (t) {
                            return;
                        }
                }
                function qi(t) {
                    try {
                        return JSON.parse(t);
                    } catch (t) {
                        return;
                    }
                }
                function Ui(t, e) {
                    const r = JSON.stringify(e);
                    localStorage.setItem(t, r);
                }
                function $i(t, e) {
                    return 'string' == typeof t ? t : t.toFixed(e);
                }
                const zi = t => {
                        const { market_display_name: e, submarket_display_name: r, subgroup: i } = t || {};
                        if (!e) return '';
                        const a = e.replace(' ', '_'),
                            n = r.replace(' ', '_');
                        return i && 'none' !== i ? `${a}-${i}-${n}`.toLowerCase() : `${a}-${n}`.toLowerCase();
                    },
                    Gi = (t, e) => {
                        const r = e.find(e => e.items.some(e => e.interval === t)),
                            i = r?.items?.find(e => e.interval === t)?.num,
                            a = 1 === i ? r?.single : r?.plural;
                        return a ? `${i} ${a}` : '';
                    },
                    Wi = () =>
                        -1 !== navigator.userAgent.indexOf('Firefox') &&
                        -1 === navigator.userAgent.indexOf('Seamonkey'),
                    Ki = () =>
                        -1 !== navigator.userAgent.indexOf('Safari') && !navigator.userAgent.match(/Chrome|Chromium/i);
                function Xi(t, e, r, i) {
                    const a = new Blob([e], { type: r });
                    if (navigator.msSaveBlob) return void navigator.msSaveBlob(a, t);
                    const n = 'image/png;' === r ? e : URL.createObjectURL(a),
                        s = document.createElement('a');
                    if (void 0 !== s.download)
                        return (
                            s.setAttribute('href', n),
                            s.setAttribute('download', t),
                            (s.style.visibility = 'hidden'),
                            document.body.appendChild(s),
                            s.click(),
                            void document.body?.removeChild?.(s)
                        );
                    if (i)
                        if ('image/png;' === r)
                            i.document.write(
                                `<iframe src="${n}" frameborder="0" style="border:0; top:0px; left:0px; bottom:0px; right:0px; width:100%; height:100%;" allowfullscreen></iframe>`
                            );
                        else {
                            const t = e.split('\n');
                            for (let e = 0; e < t.length; e++) i.document.write(`${t[e]}<br/>`);
                        }
                }
                function Yi(t) {
                    return (t.getTime() / 1e3 - 60 * t.getTimezoneOffset()) | 0;
                }
                function Zi(t) {
                    return new Date(1e3 * t).toISOString().substring(0, 19);
                }
                function Qi(t) {
                    const e = t / 1e3;
                    if (e <= 0) return null;
                    const r = t => `0${t}`.slice(-2),
                        i = r(Math.trunc(e % 60)),
                        a = r(Math.trunc((e / 60) % 60));
                    let n = Math.trunc((e / 3600) % 24);
                    return (n = n ? `${n}:` : ''), `${n}${a}:${i}`;
                }
                function Ji(t) {
                    let e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : t => t;
                    const r = [],
                        i = { ...t, data: r };
                    if (t.hasSubcategory) {
                        for (const i of t.data)
                            if ('data' in i) {
                                const t = [],
                                    a = { ...i, data: t };
                                for (const r of i.data) t.push(e(r));
                                r.push(a);
                            }
                    } else for (const i of t.data) r.push(e(i));
                    return i;
                }
                function ta(t) {
                    let e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : t => t;
                    const r = [];
                    for (const i of t)
                        if (i.hasSubgroup) {
                            const t = i.subgroups.map(t => Ji(t, e));
                            r.push({ ...i, subgroups: t });
                        } else r.push(Ji(i, e));
                    return r;
                }
                Object.freeze({ GREEN: '#4bb4b3', ORANGE: '#ff6444' });
                const ea = Object.freeze({ UP: 'UP', DOWN: 'DOWN' }),
                    ra = t => (t.charAt(0).toUpperCase() + t.slice(1)).replace(/([a-z](?=[A-Z]))/g, '$1 '),
                    ia = {
                        doubleExponential: 'DEMA',
                        exponential: 'EMA',
                        hull: 'HMA',
                        simple: 'MA',
                        timeSeries: 'TSMA',
                        triangular: 'TMA',
                        tripleExponential: 'TEMA',
                        variable: 'VMA',
                        weighted: 'WMA',
                        wellesWilder: 'SMMA',
                        zeroLag: 'ZMA',
                    },
                    aa = {
                        open: 'O',
                        high: 'H',
                        close: 'C',
                        low: 'L',
                        'Hl/2': 'Hl/2',
                        'HlC/3': 'Hlc/3',
                        'HlCC/4': 'Hlcc/4',
                        'OHlC/4': 'Ohlc/4',
                    },
                    na = function (t) {
                        const e =
                            (arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [])
                                .filter(
                                    t =>
                                        ['movingAverageType', 'maType', 'fieldType'].includes(t.path || '') ||
                                        ['number', 'switch'].includes(t.type)
                                )
                                .map(t =>
                                    'movingAverageType' === t.path || 'maType' === t.path
                                        ? ia[t.value]
                                        : 'fieldType' === t.path
                                          ? aa[t.value]
                                          : 'switch' === t.type
                                            ? t.value
                                                ? 'Y'
                                                : 'N'
                                            : t.value || t.defaultValue
                                )
                                .join(',') || void 0;
                        return { name: ra(t.replace(`(${e})`, '').replace('-', ' ')).trim(), bars: e };
                    },
                    sa = (t, e) => {
                        if (t.length > e) {
                            let r = t;
                            const i = Math.floor(t.length / e);
                            for (let t = 1; t <= i; t++) r = `${r.slice(0, e * t)} ${r.slice(e * t, r.length)}`;
                            return r;
                        }
                        return t;
                    },
                    oa = (t, e, r) => (t = t ?? 0) * (1 - r) + (e = e ?? 0) * r,
                    la = (t, e) => {
                        if ('string' == typeof t && (t.startsWith('#') || t.toLowerCase().startsWith('0x')))
                            return 'light' === e && '#FFFFFF' === t
                                ? '#000000'
                                : 'dark' === e && '#000000' === t
                                  ? '#FFFFFF'
                                  : t;
                        if (ha(t)) {
                            const r = t;
                            Object.keys(t).forEach(t => {
                                r[t] = la(r[t], e);
                            });
                        } else if (Array.isArray(t)) for (let r = 0; r < t.length; r++) t[r] = la(t[r], e);
                        return t;
                    },
                    ca = t => {
                        var e;
                        if (null == t || 'object' != typeof t) return t;
                        if (t instanceof Date) return (e = new Date()).setTime(t.getTime()), e;
                        if (t instanceof Array) {
                            e = [];
                            for (var r = 0, i = t.length; r < i; r++) e[r] = ca(t[r]);
                            return e;
                        }
                        if (t instanceof Object) {
                            for (var a in ((e = {}), t)) t.hasOwnProperty(a) && (e[a] = ca(t[a]));
                            return e;
                        }
                        throw t;
                    },
                    ha = function (t) {
                        return !!t && t.constructor === Object;
                    };
                function ua(t, e, r) {
                    return (
                        (e = (function (t) {
                            var e = (function (t, e) {
                                if ('object' != typeof t || !t) return t;
                                var r = t[Symbol.toPrimitive];
                                if (void 0 !== r) {
                                    var i = r.call(t, 'string');
                                    if ('object' != typeof i) return i;
                                    throw new TypeError('@@toPrimitive must return a primitive value.');
                                }
                                return String(t);
                            })(t);
                            return 'symbol' == typeof e ? e : String(e);
                        })(e)),
                        e in t
                            ? Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = r),
                        t
                    );
                }
                class da {
                    set zIndex(t) {
                        this._line && t && (this._line.style.zIndex = t.toString());
                    }
                    get pip() {
                        return this.mainStore.chart.currentActiveSymbol?.decimal_places;
                    }
                    constructor(t) {
                        ua(this, '__top', 0),
                            ua(this, '_emitter', void 0),
                            ua(this, '_line', void 0),
                            ua(this, '_priceConstrainer', 0),
                            ua(this, '_startDragPrice', '0'),
                            ua(this, 'className', void 0),
                            ua(this, 'hideBarrierLine', void 0),
                            ua(this, 'hideOffscreenLine', void 0),
                            ua(this, 'mainStore', void 0),
                            ua(this, 'opacityOnOverlap', 0),
                            ua(this, 'showOffscreenArrows', !1),
                            ua(this, '_relative', !1),
                            ua(this, 'draggable', !0),
                            ua(this, 'isDragging', !1),
                            ua(this, 'visible', !0),
                            ua(this, '_price', '0'),
                            ua(this, '_dragPrice', '0'),
                            ua(this, 'offScreen', !1),
                            ua(this, 'title', void 0),
                            ua(this, 'isOverlapping', !1),
                            ua(this, 'isOverlappingWithPriceLine', !1),
                            ua(this, 'offScreenDirection', null),
                            ua(this, 'disposeDrawReaction', void 0),
                            ua(this, 'onChartLoaded', () => {
                                (this.disposeDrawReaction = Ue(
                                    () => [
                                        this.mainStore.chartAdapter.epochBounds,
                                        this.mainStore.chartAdapter.quoteBounds,
                                        this.mainStore.chart.lastQuote,
                                    ],
                                    () => {
                                        this.isDragging || this._draw();
                                    }
                                )),
                                    this.mainStore.chartAdapter.painter.registerCallback(this.drawBarrier);
                            }),
                            ua(this, 'init', () => {
                                const t = (t, e) => {
                                        this.visible && this.draggable && e.call(this, t);
                                    },
                                    e = document.querySelector('.ciq-chart-area');
                                this._line &&
                                    e &&
                                    ((t, e, r) => {
                                        let { onDragStart: i, onDrag: a, onDragReleased: n } = r;
                                        t.addEventListener('mousedown', function (t) {
                                            window.addEventListener('mousemove', o),
                                                e.addEventListener('mouseup', l),
                                                (s = !0),
                                                i?.(t);
                                        });
                                        let s = !1;
                                        function o(t) {
                                            s && a?.(t);
                                        }
                                        function l(t) {
                                            (s = !1),
                                                n?.(t),
                                                window.removeEventListener('mousemove', o),
                                                e.removeEventListener('mouseup', l);
                                        }
                                    })(this._line, e, {
                                        onDragStart: e => t(e, this._startDrag),
                                        onDrag: r => t(r, t => this._dragLine(t, e)),
                                        onDragReleased: e => t(e, this._endDrag),
                                    });
                            }),
                            ua(this, '_startDrag', () => {
                                (this.isDragging = !0),
                                    (this.mainStore.chart.isBarrierDragging = !0),
                                    (this.dragPrice = this.price),
                                    (this._startDragPrice = this._price);
                            }),
                            ua(this, '_dragLine', (t, e) => {
                                if (!this._line) return;
                                const { top: r } = e.getBoundingClientRect(),
                                    i = t.pageY - r,
                                    a = i && i + 2;
                                let n = a && this._priceFromLocation(a);
                                'function' == typeof this._priceConstrainer && (n = this._priceConstrainer(n)),
                                    this.relative && (n -= this.mainStore.chart.currentClose),
                                    (this.dragPrice = `${n}`);
                            }),
                            ua(this, '_endDrag', () => {
                                (this.isDragging = !1),
                                    (this.mainStore.chart.isBarrierDragging = !1),
                                    Number(this._startDragPrice).toFixed(this.pip) !==
                                        Number(this.dragPrice).toFixed(this.pip) &&
                                        ((this.price = this.dragPrice),
                                        this._emitter.emit(da.EVENT_DRAG_RELEASED, this._price));
                            }),
                            ua(this, '_calculateTop', t => {
                                if (
                                    null === this.mainStore.chart.currentCloseQuote() ||
                                    !this.mainStore.chartAdapter.isChartLoaded
                                )
                                    return;
                                let e = this._locationFromPrice(t || +this.realPrice);
                                const r = window.flutterChartElement?.clientHeight || 0;
                                return (
                                    e < 0
                                        ? (e < -2 && (this.offScreenDirection = ea.UP), (e = 0))
                                        : e + 4 > r
                                          ? (e + 4 - r > 2 && (this.offScreenDirection = ea.DOWN), (e = r - 4))
                                          : (this.offScreenDirection = null),
                                    (this.offScreen = !!this.offScreenDirection),
                                    e + 30 > r ? (e = r - 30) : e < 10 && (e = 10),
                                    this.offScreenDirection &&
                                        this.showOffscreenArrows &&
                                        (e += this.offScreenDirection === ea.UP ? 41 : -41),
                                    this.opacityOnOverlap && (this.isOverlapping = this.overlapCheck(e)),
                                    (this.isOverlappingWithPriceLine =
                                        this.isContractOngoing && this._distanceFromCurrentPrice() < 25),
                                    0 | Math.round(e)
                                );
                            }),
                            ua(this, '_draw', () => {
                                this.visible && this._line && (this.top = this._calculateTop());
                            }),
                            br(this, {
                                _dragPrice: Lt,
                                _price: Lt,
                                draggable: Lt,
                                isDragging: Lt,
                                isOverlapping: Lt,
                                isOverlappingWithPriceLine: Lt,
                                offScreen: Lt,
                                offScreenDirection: Lt,
                                title: Lt,
                                visible: Lt,
                                overlappedBarrierWidth: jt,
                                pip: jt,
                                priceDisplay: jt,
                                _calculateTop: Be.bound,
                                _dragLine: Be.bound,
                                _endDrag: Be.bound,
                                _startDrag: Be.bound,
                                drawBarrier: Be.bound,
                                setDragLine: Be.bound,
                            }),
                            (this.mainStore = t),
                            (this._emitter = new (Vi())({ emitDelay: 0 })),
                            cr(() => this.mainStore.chartAdapter.isChartLoaded, this.onChartLoaded);
                    }
                    drawBarrier(t) {
                        if (this.isDragging) return;
                        const e = this.mainStore.chart.feed?.quotes;
                        if (!e || e.length < 2) return;
                        const r = this._getPrice(e[e.length - 1].Close),
                            i = this._getPrice(e[e.length - 2].Close),
                            a = oa(i, r, t);
                        this.top = this._calculateTop(a);
                    }
                    destructor() {
                        this.disposeDrawReaction?.(),
                            this.mainStore.chartAdapter.painter.unregisterCallback(this.drawBarrier);
                    }
                    static get EVENT_PRICE_CHANGED() {
                        return 'EVENT_PRICE_CHANGED';
                    }
                    static get EVENT_DRAG_RELEASED() {
                        return 'EVENT_DRAG_RELEASED';
                    }
                    get priceDisplay() {
                        let t = this.isDragging ? Number(this.dragPrice).toFixed(this.pip) : this._price;
                        return this.relative && +this._price > 0 && '+' !== t[0] && (t = `+${t}`), t;
                    }
                    get price() {
                        return this._price;
                    }
                    set price(t) {
                        t === this._price ||
                            this.isDragging ||
                            ((this._price = t), this._draw(), this._emitter.emit(da.EVENT_PRICE_CHANGED, this._price));
                    }
                    get dragPrice() {
                        return this._dragPrice;
                    }
                    set dragPrice(t) {
                        t != this._dragPrice &&
                            ((this._dragPrice = t),
                            this._draw(),
                            this._emitter.emit(da.EVENT_PRICE_CHANGED, this._dragPrice));
                    }
                    get relative() {
                        return this._relative;
                    }
                    set relative(t) {
                        if (this._relative === t) return;
                        this._relative = t;
                        const e = this.mainStore.chart.currentCloseQuote();
                        let r = e ? e.Close : 0;
                        this._relative && (r = -r), (this.price = (+this._price + r).toString());
                    }
                    get context() {
                        return this.mainStore.chart.context;
                    }
                    set priceConstrainer(t) {
                        this._priceConstrainer = t;
                    }
                    get realPrice() {
                        return this._getPrice(this.mainStore.chart.currentCloseQuote()?.Close).toString();
                    }
                    get currentClosePrice() {
                        return this.mainStore.chart.currentCloseQuote()?.Close || 0;
                    }
                    get priceLineWidth() {
                        return window.flutterChart?.app.getCurrentTickWidth() || 60;
                    }
                    get overlappedBarrierWidth() {
                        return 16;
                    }
                    get isContractOngoing() {
                        return this.mainStore.chart.isLive;
                    }
                    _getPrice(t) {
                        const e = this.isDragging ? this.dragPrice : this.price;
                        return this.relative ? t + Number(e) : Number(e);
                    }
                    setDragLine(t) {
                        (this._line = t), this._line && this._draw();
                    }
                    _locationFromPrice(t) {
                        return this.mainStore.chartAdapter.getYFromQuote(t);
                    }
                    _priceFromLocation(t) {
                        return this.mainStore.chartAdapter.getQuoteFromY(t);
                    }
                    _distanceFromCurrentPrice() {
                        return Math.abs(
                            this._locationFromPrice(+this.realPrice) -
                                (this.relative
                                    ? this._locationFromPrice(
                                          +this.realPrice - (this.isDragging ? +this._dragPrice : +this._price)
                                      )
                                    : this._locationFromPrice(this.currentClosePrice))
                        );
                    }
                    set top(t) {
                        (this.__top = t), this._line && (this._line.style.transform = `translateY(${this.top - 13}px)`);
                    }
                    get top() {
                        return this.__top;
                    }
                    onPriceChanged(t) {
                        this._emitter.on(da.EVENT_PRICE_CHANGED, t);
                    }
                    onDragReleased(t) {
                        this._emitter.on(da.EVENT_DRAG_RELEASED, t);
                    }
                    overlapCheck(t) {
                        const { _barriers: e } = this.mainStore.chart,
                            r = e.filter(t => 0 != +t._high_barrier.price),
                            i = r.findIndex(t => t._high_barrier === this);
                        for (let e = 0; e < r.length; e++) {
                            if (e === i) continue;
                            const a = r[e],
                                n = a._high_barrier.top && Math.abs(a._high_barrier.top - t);
                            if (n && n < 25) return !0;
                        }
                        return !1;
                    }
                    get isMobile() {
                        return this.mainStore.chart.isMobile;
                    }
                }
                function ma(t, e, r) {
                    return (
                        (e = (function (t) {
                            var e = (function (t, e) {
                                if ('object' != typeof t || !t) return t;
                                var r = t[Symbol.toPrimitive];
                                if (void 0 !== r) {
                                    var i = r.call(t, 'string');
                                    if ('object' != typeof i) return i;
                                    throw new TypeError('@@toPrimitive must return a primitive value.');
                                }
                                return String(t);
                            })(t);
                            return 'symbol' == typeof e ? e : String(e);
                        })(e)),
                        e in t
                            ? Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = r),
                        t
                    );
                }
                class pa {
                    constructor(t) {
                        ma(this, '_div', null),
                            ma(this, 'className', ''),
                            ma(this, 'visible', !1),
                            ma(this, 'setPosition', t => {
                                let { top: e, bottom: r, right: i } = t;
                                if (this._div) {
                                    let t = null;
                                    r && e
                                        ? (t = `translate(${-i}px, ${(r + e) / 2 + 60}px) scale(1, ${(r - e) / 120})`)
                                        : r
                                          ? (t = `translate(${-i}px, ${r}px)`)
                                          : e && (t = `translate(${-i}px, ${e + 120}px)`),
                                        (this._div.style.transform = t);
                                }
                            }),
                            ma(this, 'setShadeRef', t => {
                                this._div = t;
                            }),
                            br(this, { className: Lt, visible: Lt }),
                            (this.className = t);
                    }
                }
                function fa(t, e, r) {
                    return (
                        (e = (function (t) {
                            var e = (function (t, e) {
                                if ('object' != typeof t || !t) return t;
                                var r = t[Symbol.toPrimitive];
                                if (void 0 !== r) {
                                    var i = r.call(t, 'string');
                                    if ('object' != typeof i) return i;
                                    throw new TypeError('@@toPrimitive must return a primitive value.');
                                }
                                return String(t);
                            })(t);
                            return 'symbol' == typeof e ? e : String(e);
                        })(e)),
                        e in t
                            ? Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = r),
                        t
                    );
                }
                class _a {
                    static get SHADE_NONE_SINGLE() {
                        return 'SHADE_NONE_SINGLE';
                    }
                    static get SHADE_NONE_DOUBLE() {
                        return 'SHADE_NONE_DOUBLE';
                    }
                    static get SHADE_ABOVE() {
                        return 'SHADE_ABOVE';
                    }
                    static get SHADE_BELOW() {
                        return 'SHADE_BELOW';
                    }
                    static get SHADE_BETWEEN() {
                        return 'SHADE_BETWEEN';
                    }
                    static get SHADE_OUTSIDE() {
                        return 'SHADE_OUTSIDE';
                    }
                    static get BARRIER_CHANGED() {
                        return 'BARRIER_CHANGED';
                    }
                    get pip() {
                        return this.mainStore.chart.currentActiveSymbol?.decimal_places;
                    }
                    constructor(t) {
                        fa(this, '_high_barrier', void 0),
                            fa(this, '_low_barrier', void 0),
                            fa(this, 'aboveShadeStore', void 0),
                            fa(this, 'belowShadeStore', void 0),
                            fa(this, 'betweenShadeStore', void 0),
                            fa(this, 'mainStore', void 0),
                            fa(this, 'title', void 0),
                            fa(this, 'shadeColor', void 0),
                            fa(this, 'color', void 0),
                            fa(this, 'foregroundColor', void 0),
                            fa(this, 'isBetweenShadeVisible', !1),
                            fa(this, 'isTopShadeVisible', !1),
                            fa(this, 'isBottomShadeVisible', !1),
                            fa(this, 'hidePriceLines', !1),
                            fa(this, 'lineStyle', void 0),
                            fa(this, 'isInitialized', !1),
                            fa(this, 'initializePromise', ji()),
                            fa(this, 'hideBarrierLine', !1),
                            fa(this, 'hideOffscreenLine', !1),
                            fa(this, 'hideOffscreenBarrier', !1),
                            fa(this, 'isSingleBarrier', !1),
                            fa(this, '_shadeState', ''),
                            fa(this, 'disposeDrawReaction', void 0),
                            fa(this, 'onChartLoaded', () => {
                                this.init(),
                                    (this.disposeDrawReaction = Ue(
                                        () => [
                                            this.mainStore.chartAdapter.epochBounds,
                                            this.mainStore.chartAdapter.quoteBounds,
                                        ],
                                        this._drawShadedArea
                                    )),
                                    this.mainStore.chartAdapter.painter.registerCallback(this._drawShadedArea);
                            }),
                            fa(this, '_onBarrierChange', null),
                            fa(this, '_fireOnBarrierChange', () => {
                                const t = this._high_barrier.visible
                                        ? Number(this._high_barrier.price).toFixed(this.pip)
                                        : void 0,
                                    e = this._low_barrier.visible
                                        ? Number(this._low_barrier.price).toFixed(this.pip)
                                        : void 0;
                                'function' == typeof this._onBarrierChange &&
                                    this._onBarrierChange({ high: t, low: e });
                            }),
                            fa(this, '_drawShadedArea', () => {
                                if (
                                    this.isInitialized &&
                                    (this._shadeState === _a.SHADE_ABOVE
                                        ? this._shadeAbove()
                                        : this._shadeState === _a.SHADE_BELOW
                                          ? this._shadeBelow()
                                          : this._shadeState === _a.SHADE_BETWEEN
                                            ? this._shadeBetween()
                                            : this._shadeState === _a.SHADE_OUTSIDE && this._shadeOutside(),
                                    this._low_barrier.visible && this._isBarriersOffScreen())
                                ) {
                                    const t = 0 === this._high_barrier.top ? null : 101;
                                    this._high_barrier.zIndex = t;
                                }
                            }),
                            br(this, {
                                color: Lt,
                                destructor: Be.bound,
                                foregroundColor: Lt,
                                hideBarrierLine: Lt,
                                hideOffscreenBarrier: Lt,
                                hideOffscreenLine: Lt,
                                hidePriceLines: Lt,
                                init: Be.bound,
                                initializePromise: Lt,
                                isBetweenShadeVisible: Lt,
                                isBottomShadeVisible: Lt,
                                isInitialized: Lt,
                                isSingleBarrier: Lt,
                                isTopShadeVisible: Lt,
                                lineStyle: Lt,
                                pip: jt,
                                shadeColor: Lt,
                                updateProps: Be.bound,
                            }),
                            (this.mainStore = t),
                            (this._high_barrier = new da(this.mainStore)),
                            (this._low_barrier = new da(this.mainStore)),
                            this._high_barrier.onPriceChanged(this._drawShadedArea),
                            this._low_barrier.onPriceChanged(this._drawShadedArea),
                            this._high_barrier.onDragReleased(this._fireOnBarrierChange),
                            this._low_barrier.onDragReleased(this._fireOnBarrierChange),
                            this._setupConstrainBarrierPrices(),
                            (this.aboveShadeStore = new pa('top-shade')),
                            (this.betweenShadeStore = new pa('between-shade')),
                            (this.belowShadeStore = new pa('bottom-shade')),
                            (this.shadeState = _a.SHADE_NONE_SINGLE),
                            cr(() => this.mainStore.chartAdapter.isChartLoaded, this.onChartLoaded),
                            this.mainStore.chart._barriers.push(this);
                    }
                    init() {
                        (this.isInitialized = !0), this.initializePromise.resolve();
                    }
                    updateProps(t) {
                        let {
                            color: e,
                            foregroundColor: r,
                            shadeColor: i,
                            shade: a,
                            high: n,
                            low: s,
                            relative: o,
                            draggable: l,
                            onChange: c,
                            hideBarrierLine: h,
                            hideOffscreenBarrier: u,
                            hideOffscreenLine: d,
                            hidePriceLines: g,
                            lineStyle: m,
                            title: p,
                            showOffscreenArrows: f,
                            isSingleBarrier: _,
                            opacityOnOverlap: v,
                        } = t;
                        this.initializePromise.then(
                            Be(() => {
                                e && (this.color = e),
                                    r && (this.foregroundColor = r),
                                    i && (this.shadeColor = i),
                                    a && (this.shadeState = `SHADE_${a}`.toUpperCase()),
                                    void 0 !== o && (this.relative = o),
                                    void 0 !== l && (this.draggable = l),
                                    void 0 !== n && (this.high_barrier = $i(n, this.pip)),
                                    void 0 !== s && (this.low_barrier = $i(s, this.pip)),
                                    c && (this.onBarrierChange = c),
                                    p && (this.title = p),
                                    (this.lineStyle = m),
                                    (this.hideBarrierLine = !!h),
                                    (this.hidePriceLines = !!g),
                                    (this.hideOffscreenLine = !!d),
                                    (this.hideOffscreenBarrier = !!u),
                                    (this.isSingleBarrier = !!_);
                            })
                        ),
                            v && (this.opacityOnOverlap = v),
                            f && (this.showOffscreenArrows = f);
                    }
                    destructor() {
                        if (!this.context) return;
                        this._high_barrier.destructor(),
                            this._low_barrier.destructor(),
                            this.disposeDrawReaction?.(),
                            this.mainStore.chartAdapter.painter.unregisterCallback(this._drawShadedArea);
                        const t = this.mainStore.chart._barriers.findIndex(t => t === this);
                        -1 !== t && this.mainStore.chart._barriers.splice(t, 1);
                    }
                    get high_barrier() {
                        return this._high_barrier.price;
                    }
                    set high_barrier(t) {
                        this._high_barrier.price = t;
                    }
                    get low_barrier() {
                        return this._low_barrier.price;
                    }
                    set low_barrier(t) {
                        this._low_barrier.price = t;
                    }
                    _setupConstrainBarrierPrices() {
                        (this._high_barrier.priceConstrainer = t =>
                            +(this._low_barrier.visible && t < +this._low_barrier.realPrice
                                ? this._high_barrier.realPrice
                                : t)),
                            (this._low_barrier.priceConstrainer = t =>
                                +(t > +this._high_barrier.realPrice ? this._low_barrier.realPrice : t));
                    }
                    get context() {
                        return this.mainStore.chart.context;
                    }
                    set onBarrierChange(t) {
                        this._onBarrierChange !== t && (this._onBarrierChange = t);
                    }
                    get shadeState() {
                        return this._shadeState;
                    }
                    set shadeState(t) {
                        if (this._shadeState === t) return;
                        if (
                            ((this._shadeState = t),
                            this._shadeState === _a.SHADE_NONE_SINGLE || this._shadeState === _a.SHADE_NONE_DOUBLE)
                        )
                            (this.aboveShadeStore.visible = !1),
                                (this.betweenShadeStore.visible = !1),
                                (this.belowShadeStore.visible = !1);
                        else {
                            const t = this._shadeState === _a.SHADE_ABOVE || this._shadeState === _a.SHADE_OUTSIDE,
                                e = this._shadeState === _a.SHADE_BELOW || this._shadeState === _a.SHADE_OUTSIDE,
                                r = this._shadeState === _a.SHADE_BETWEEN;
                            (this.aboveShadeStore.visible = t),
                                (this.betweenShadeStore.visible = r),
                                (this.belowShadeStore.visible = e),
                                this._drawShadedArea();
                        }
                        const e =
                                this._shadeState === _a.SHADE_OUTSIDE ||
                                this._shadeState === _a.SHADE_BETWEEN ||
                                this._shadeState === _a.SHADE_NONE_DOUBLE,
                            r = this._low_barrier.visible;
                        (this._low_barrier.visible = e),
                            this.isInitialized &&
                                e &&
                                !r &&
                                this._low_barrier.realPrice >= this._high_barrier.realPrice &&
                                this.mainStore.chart.currentClose &&
                                (this._low_barrier.price = (
                                    +this._high_barrier.price - this.mainStore.chart.currentClose
                                ).toString());
                    }
                    get relative() {
                        return this._high_barrier.relative;
                    }
                    set relative(t) {
                        (this._high_barrier.relative = t), (this._low_barrier.relative = t);
                    }
                    get draggable() {
                        return this._high_barrier.draggable;
                    }
                    set draggable(t) {
                        (this._high_barrier.draggable = t), (this._low_barrier.draggable = t);
                    }
                    get showOffscreenArrows() {
                        return this._high_barrier.showOffscreenArrows;
                    }
                    set showOffscreenArrows(t) {
                        this._high_barrier.showOffscreenArrows = t;
                    }
                    get opacityOnOverlap() {
                        return this._high_barrier.opacityOnOverlap;
                    }
                    set opacityOnOverlap(t) {
                        this._high_barrier.opacityOnOverlap = t;
                    }
                    _isBarriersOffScreen() {
                        return this._high_barrier.offScreen && this._low_barrier.offScreen;
                    }
                    _shadeBetween() {
                        this.betweenShadeStore.setPosition({
                            top: this._high_barrier.top,
                            bottom: this._low_barrier.top,
                            right: this.mainStore.chart.yAxisWidth,
                        });
                    }
                    _shadeBelow() {
                        let t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this._high_barrier;
                        this.belowShadeStore.setPosition({
                            top: t.top,
                            bottom: 0,
                            right: this.mainStore.chart.yAxisWidth,
                        });
                    }
                    _shadeAbove() {
                        let t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this._high_barrier;
                        this.aboveShadeStore.setPosition({
                            top: 0,
                            bottom: t.top,
                            right: this.mainStore.chart.yAxisWidth,
                        });
                    }
                    _shadeOutside() {
                        this._shadeAbove(this._high_barrier), this._shadeBelow(this._low_barrier);
                    }
                }
                function va(t, e, r) {
                    return (
                        (e = (function (t) {
                            var e = (function (t, e) {
                                if ('object' != typeof t || !t) return t;
                                var r = t[Symbol.toPrimitive];
                                if (void 0 !== r) {
                                    var i = r.call(t, 'string');
                                    if ('object' != typeof i) return i;
                                    throw new TypeError('@@toPrimitive must return a primitive value.');
                                }
                                return String(t);
                            })(t);
                            return 'symbol' == typeof e ? e : String(e);
                        })(e)),
                        e in t
                            ? Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = r),
                        t
                    );
                }
                class ba {
                    get context() {
                        return this.mainStore.chart.context;
                    }
                    get state() {
                        return this.mainStore.state;
                    }
                    constructor(t) {
                        va(this, 'mainStore', void 0),
                            va(this, 'bottom', 30),
                            va(this, 'isReadyToShow', !1),
                            va(this, 'mainChartHeight', 0),
                            va(this, 'totalHeight', 0),
                            va(this, 'initial', () => {
                                this.isReadyToShow = !0;
                            }),
                            va(this, 'updateChartHeight', async () => {
                                setTimeout(() => {
                                    if (!this.mainStore.chart.chartContainerHeight) return;
                                    const t = this.mainStore.chartAdapter,
                                        { bottomQuote: e } = t.quoteBounds,
                                        r = t.getYFromQuote(e),
                                        i = this.mainStore.chart.chartContainerHeight - r;
                                    this.bottom = this.mainStore.chartAdapter.isFeedLoaded && i > 80 ? i : 30;
                                }, 300);
                            }),
                            br(this, {
                                bottom: Lt,
                                isReadyToShow: Lt,
                                mainChartHeight: Lt,
                                totalHeight: Lt,
                                updateChartHeight: Be.bound,
                            }),
                            (this.mainStore = t),
                            cr(() => !!this.context, this.initial);
                    }
                }
                h(7951);
                var ya = h(7739),
                    Sa = h.n(ya),
                    wa = h(2979),
                    Ca = h.n(wa),
                    Ea = h(6057),
                    xa = h.n(Ea),
                    Ta = h(9955),
                    ka = h.n(Ta),
                    Aa = h(242),
                    Oa = h.n(Aa),
                    Na = h(267),
                    Ia = h.n(Na),
                    Da = h(4542),
                    Pa = h.n(Da),
                    La = h(363),
                    Ma = h.n(La),
                    Ba = h(1811),
                    Ra = h.n(Ba),
                    ja = h(5439),
                    Fa = h.n(ja),
                    Va = h(6240),
                    Ha = h.n(Va),
                    qa = h(1337),
                    Ua = h.n(qa),
                    $a = h(5829),
                    za = h.n($a),
                    Ga = h(4619),
                    Wa = h.n(Ga),
                    Ka = h(2910),
                    Xa = h.n(Ka),
                    Ya = h(7420),
                    Za = h.n(Ya),
                    Qa = h(7885),
                    Ja = h.n(Qa),
                    tn = h(9185),
                    en = h.n(tn),
                    rn = h(9289),
                    an = h.n(rn),
                    nn = h(204),
                    sn = h.n(nn),
                    on = h(3365),
                    ln = h.n(on),
                    cn = h(3031),
                    hn = h.n(cn),
                    un = h(9324),
                    dn = h.n(un),
                    gn = h(9625),
                    mn = h.n(gn),
                    pn = h(5833),
                    fn = h.n(pn),
                    _n = h(7463),
                    vn = h.n(_n),
                    bn = h(3211),
                    yn = h.n(bn),
                    Sn = h(3377),
                    wn = h.n(Sn),
                    Cn = h(9707),
                    En = h.n(Cn),
                    xn = h(4629),
                    Tn = h.n(xn),
                    kn = h(6331),
                    An = h.n(kn),
                    On = h(1891),
                    Nn = h.n(On),
                    In = h(8983),
                    Dn = h.n(In),
                    Pn = h(8093),
                    Ln = h.n(Pn),
                    Mn = h(8927),
                    Bn = h.n(Mn),
                    Rn = h(6667),
                    jn = h.n(Rn),
                    Fn = h(1278),
                    Vn = h.n(Fn),
                    Hn = h(1288),
                    qn = h.n(Hn),
                    Un = h(8310),
                    $n = h.n(Un),
                    zn = h(7528),
                    Gn = h.n(zn),
                    Wn = h(2999),
                    Kn = h.n(Wn),
                    Xn = h(6456),
                    Yn = h.n(Xn),
                    Zn = h(3522),
                    Qn = h.n(Zn),
                    Jn = h(6380),
                    ts = h.n(Jn),
                    es = h(9317),
                    rs = h.n(es),
                    is = h(6800),
                    as = h.n(is),
                    ns = h(4333),
                    ss = h.n(ns),
                    os = h(9411),
                    ls = h.n(os),
                    cs = h(9307),
                    hs = h.n(cs),
                    us = h(4674),
                    ds = h.n(us),
                    gs = h(6432),
                    ms = h.n(gs),
                    ps = h(2327),
                    fs = h.n(ps),
                    _s = h(6183),
                    vs = h.n(_s),
                    bs = h(4497),
                    ys = h.n(bs),
                    Ss = h(4325),
                    ws = h.n(Ss),
                    Cs = h(1320),
                    Es = h.n(Cs),
                    xs = h(8250),
                    Ts = h.n(xs),
                    ks = h(1041),
                    As = h.n(ks),
                    Os = h(3293),
                    Ns = h.n(Os),
                    Is = h(3775),
                    Ds = h.n(Is),
                    Ps = h(1561),
                    Ls = h.n(Ps),
                    Ms = h(1610),
                    Bs = h.n(Ms),
                    Rs = h(9429),
                    js = h.n(Rs),
                    Fs = h(8584),
                    Vs = h.n(Fs),
                    Hs = h(7521),
                    qs = h.n(Hs),
                    Us = h(4185),
                    $s = h.n(Us),
                    zs = h(6776),
                    Gs = h.n(zs),
                    Ws = h(9129),
                    Ks = h.n(Ws),
                    Xs = h(7249),
                    Ys = h.n(Xs),
                    Zs = h(9607),
                    Qs = h.n(Zs),
                    Js = h(9564),
                    to = h.n(Js),
                    eo = h(4431),
                    ro = h.n(eo),
                    io = h(263),
                    ao = h.n(io),
                    no = h(301),
                    so = h.n(no),
                    oo = h(7414),
                    lo = h.n(oo),
                    co = h(3578),
                    ho = h.n(co),
                    uo = h(3255),
                    go = h.n(uo),
                    mo = h(7625),
                    po = h.n(mo),
                    fo = h(3719),
                    _o = h.n(fo),
                    vo = h(1445),
                    bo = h.n(vo),
                    yo = h(4056),
                    So = h.n(yo),
                    wo = h(1477),
                    Co = h.n(wo),
                    Eo = h(3332),
                    xo = h.n(Eo),
                    To = h(6902),
                    ko = h.n(To),
                    Ao = h(9702),
                    Oo = h.n(Ao),
                    No = h(1649),
                    Io = h.n(No),
                    Do = h(1229),
                    Po = h.n(Do),
                    Lo = h(2607),
                    Mo = h.n(Lo),
                    Bo = h(7558),
                    Ro = h.n(Bo),
                    jo = h(8901),
                    Fo = h.n(jo),
                    Vo = h(5407),
                    Ho = h.n(Vo),
                    qo = h(4236),
                    Uo = h.n(qo),
                    $o = h(1795),
                    zo = h.n($o),
                    Go = h(7428),
                    Wo = h.n(Go),
                    Ko = h(8217),
                    Xo = h.n(Ko),
                    Yo = h(7038),
                    Zo = h.n(Yo),
                    Qo = h(1069),
                    Jo = h.n(Qo),
                    tl = h(1089),
                    el = h.n(tl),
                    rl = h(6226),
                    il = h.n(rl),
                    al = h(5357),
                    nl = h.n(al),
                    sl = h(451),
                    ol = h.n(sl),
                    ll = h(8457),
                    cl = h.n(ll),
                    hl = h(2620),
                    ul = h.n(hl),
                    dl = h(3179),
                    gl = h.n(dl),
                    ml = h(37),
                    pl = h.n(ml),
                    fl = h(7256),
                    _l = h.n(fl),
                    vl = h(5004),
                    bl = h.n(vl),
                    yl = h(5729),
                    Sl = h.n(yl),
                    wl = h(9876),
                    Cl = h.n(wl),
                    El = h(3135),
                    xl = h.n(El),
                    Tl = h(7451),
                    kl = h.n(Tl),
                    Al = h(9705),
                    Ol = h.n(Al),
                    Nl = h(3770),
                    Il = h.n(Nl),
                    Dl = h(6681),
                    Pl = h.n(Dl),
                    Ll = h(3785),
                    Ml = h.n(Ll),
                    Bl = h(8341),
                    Rl = h.n(Bl),
                    jl = h(4298),
                    Fl = h.n(jl),
                    Vl = h(638),
                    Hl = h.n(Vl),
                    ql = h(194),
                    Ul = h.n(ql),
                    $l = h(718),
                    zl = h.n($l),
                    Gl = h(3864),
                    Wl = h.n(Gl),
                    Kl = h(2502),
                    Xl = h.n(Kl),
                    Yl = h(6723),
                    Zl = h.n(Yl),
                    Ql = h(1449),
                    Jl = h.n(Ql),
                    tc = h(9715),
                    ec = h.n(tc),
                    rc = h(5704),
                    ic = h.n(rc),
                    ac = h(4046),
                    nc = h.n(ac),
                    sc = h(10),
                    oc = h.n(sc),
                    lc = h(1008),
                    cc = h.n(lc),
                    hc = h(3292),
                    uc = h.n(hc),
                    dc = h(4579),
                    gc = h.n(dc),
                    mc = h(7571),
                    pc = h.n(mc),
                    fc = h(6033),
                    _c = h.n(fc),
                    vc = h(2099),
                    bc = h.n(vc),
                    yc = h(6489),
                    Sc = h.n(yc),
                    wc = h(2821),
                    Cc = h.n(wc),
                    Ec = h(7213),
                    xc = h.n(Ec),
                    Tc = h(1553),
                    kc = h.n(Tc),
                    Ac = h(1085),
                    Oc = h.n(Ac),
                    Nc = h(3751),
                    Ic = h.n(Nc),
                    Dc = h(148),
                    Pc = h.n(Dc),
                    Lc = h(3562),
                    Mc = h.n(Lc),
                    Bc = h(7358),
                    Rc = h.n(Bc),
                    jc = h(3425),
                    Fc = h.n(jc),
                    Vc = h(2188),
                    Hc = h.n(Vc),
                    qc = h(2839),
                    Uc = h.n(qc),
                    $c = h(3010),
                    zc = h.n($c),
                    Gc = h(5269),
                    Wc = h.n(Gc),
                    Kc = h(3265),
                    Xc = h.n(Kc),
                    Yc = h(2853),
                    Zc = h.n(Yc),
                    Qc = h(3257),
                    Jc = h.n(Qc),
                    th = h(2167),
                    eh = h.n(th),
                    rh = h(4005),
                    ih = h.n(rh),
                    ah = h(6617),
                    nh = h.n(ah),
                    sh = h(2048),
                    oh = h.n(sh),
                    lh = h(8438),
                    ch = h.n(lh),
                    hh = h(7950),
                    uh = h.n(hh),
                    dh = h(2788),
                    gh = h.n(dh),
                    mh = h(7183),
                    ph = h.n(mh),
                    fh = h(3344),
                    _h = h.n(fh),
                    vh = h(3297),
                    bh = h.n(vh),
                    yh = h(2913),
                    Sh = h.n(yh),
                    wh = h(4748),
                    Ch = h.n(wh),
                    Eh = h(2588),
                    xh = h.n(Eh),
                    Th = h(2049),
                    kh = h.n(Th),
                    Ah = h(4065),
                    Oh = h.n(Ah),
                    Nh = h(9671),
                    Ih = h.n(Nh),
                    Dh = h(1071),
                    Ph = h.n(Dh),
                    Lh = h(5187),
                    Mh = h.n(Lh),
                    Bh = h(7823),
                    Rh = h.n(Bh),
                    jh = h(2405),
                    Fh = h.n(jh),
                    Vh = h(8832),
                    Hh = h.n(Vh),
                    qh = h(5317),
                    Uh = h.n(qh),
                    $h = h(6669),
                    zh = h.n($h),
                    Gh = h(7764),
                    Wh = h.n(Gh),
                    Kh = h(542),
                    Xh = h.n(Kh),
                    Yh = h(3119),
                    Zh = h.n(Yh),
                    Qh = h(6552),
                    Jh = h.n(Qh),
                    tu = h(5092),
                    eu = h.n(tu),
                    ru = h(794),
                    iu = h.n(ru),
                    au = h(2092),
                    nu = h.n(au),
                    su = h(3669),
                    ou = h.n(su),
                    lu = h(3747),
                    cu = h.n(lu),
                    hu = h(6244),
                    uu = h.n(hu),
                    du = h(1345),
                    gu = h.n(du),
                    mu = h(1593),
                    pu = h.n(mu),
                    fu = h(2532),
                    _u = h.n(fu),
                    vu = h(5038),
                    bu = h.n(vu),
                    yu = h(1655),
                    Su = h.n(yu),
                    wu = h(9891),
                    Cu = h.n(wu),
                    Eu = h(8451),
                    xu = h.n(Eu),
                    Tu = h(3997),
                    ku = h.n(Tu),
                    Au = h(963),
                    Ou = h.n(Au),
                    Nu = h(3893),
                    Iu = h.n(Nu),
                    Du = h(9423),
                    Pu = h.n(Du),
                    Lu = h(416),
                    Mu = h.n(Lu),
                    Bu = h(3273),
                    Ru = h.n(Bu),
                    ju = h(8414),
                    Fu = h.n(ju),
                    Vu = h(1949),
                    Hu = h.n(Vu),
                    qu = h(1722),
                    Uu = h.n(qu),
                    $u = h(135),
                    zu = h.n($u),
                    Gu = h(3544),
                    Wu = h.n(Gu),
                    Ku = h(6577),
                    Xu = h.n(Ku),
                    Yu = h(5126),
                    Zu = h.n(Yu),
                    Qu = h(3235),
                    Ju = h.n(Qu),
                    td = h(5692),
                    ed = h.n(td),
                    rd = h(6583),
                    id = h.n(rd),
                    ad = h(7037),
                    nd = h.n(ad),
                    sd = h(4575),
                    od = h.n(sd),
                    ld = h(3800),
                    cd = h.n(ld),
                    hd = h(1908),
                    ud = h.n(hd),
                    dd = h(9149),
                    gd = h.n(dd),
                    md = h(1077),
                    pd = h.n(md),
                    fd = h(155),
                    _d = h.n(fd),
                    vd = h(9424),
                    bd = h.n(vd),
                    yd = h(9442),
                    Sd = h.n(yd),
                    wd = h(9080),
                    Cd = h.n(wd),
                    Ed = h(3417),
                    xd = h.n(Ed),
                    Td = h(7709),
                    kd = h.n(Td),
                    Ad = h(6661),
                    Od = h.n(Ad),
                    Nd = h(1904),
                    Id = h.n(Nd),
                    Dd = h(1108),
                    Pd = h.n(Dd),
                    Ld = h(1270),
                    Md = h.n(Ld),
                    Bd = h(2421),
                    Rd = h.n(Bd),
                    jd = h(5976),
                    Fd = h.n(jd),
                    Vd = h(3982),
                    Hd = h.n(Vd),
                    qd = h(1820),
                    Ud = h.n(qd),
                    $d = h(6537),
                    zd = h.n($d),
                    Gd = h(5459),
                    Wd = h.n(Gd),
                    Kd = h(5),
                    Xd = h.n(Kd),
                    Yd = h(3821),
                    Zd = h.n(Yd),
                    Qd = h(8246),
                    Jd = h.n(Qd),
                    tg = h(3163),
                    eg = h.n(tg),
                    rg = h(9877),
                    ig = h.n(rg),
                    ag = h(3576),
                    ng = h.n(ag),
                    sg = h(6706),
                    og = h.n(sg),
                    lg = h(7365),
                    cg = h.n(lg),
                    hg = h(4311),
                    ug = h.n(hg),
                    dg = h(3385),
                    gg = h.n(dg),
                    mg = h(7425),
                    pg = h.n(mg),
                    fg = h(1134),
                    _g = h.n(fg),
                    vg = h(2308),
                    bg = h.n(vg),
                    yg = h(5477),
                    Sg = h.n(yg);
                function wg() {
                    return (
                        (wg = Object.assign
                            ? Object.assign.bind()
                            : function (t) {
                                  for (var e = 1; e < arguments.length; e++) {
                                      var r = arguments[e];
                                      for (var i in r) Object.prototype.hasOwnProperty.call(r, i) && (t[i] = r[i]);
                                  }
                                  return t;
                              }),
                        wg.apply(this, arguments)
                    );
                }
                const Cg = t => e => {
                        let { className: r, 'tooltip-title': i, ...a } = e;
                        r = `ic-icon ${r || ''}`;
                        const n = t.viewBox?.split(' ').slice(2) || [];
                        return yi().createElement(
                            'span',
                            wg({ className: r, 'tooltip-title': i }, a),
                            yi().createElement(
                                'svg',
                                { width: n[0], height: n[1] },
                                yi().createElement('use', { xlinkHref: h.p + t.url })
                            ),
                            i &&
                                yi().createElement(
                                    yi().Fragment,
                                    null,
                                    yi().createElement('br', null),
                                    yi().createElement('span', { className: 'ic-subtitle' }, i)
                                )
                        );
                    },
                    Eg = (Cg(vs()), Cg(Ou())),
                    xg = Cg(Iu()),
                    Tg = Cg(ys()),
                    kg = Cg(Vn()),
                    Ag = Cg(Ns()),
                    Og =
                        (Cg(Sa()),
                        Cg(Ca()),
                        Cg(xa()),
                        Cg(ka()),
                        Cg(Oa()),
                        Cg(Ia()),
                        Cg(Pa()),
                        Cg(Ra()),
                        Cg(Ma()),
                        Cg(Fa()),
                        Cg(Ha()),
                        Cg(Ua()),
                        Cg(za()),
                        Cg(Xa()),
                        Cg(an())),
                    Ng = Cg(en()),
                    Ig = Cg(sn()),
                    Dg = Cg(ln()),
                    Pg = Cg(hn()),
                    Lg = Cg(dn()),
                    Mg = (Cg(mn()), Cg(fn()), Cg(vn())),
                    Bg = Cg(yn()),
                    Rg = Cg(wn()),
                    jg = Cg(En()),
                    Fg = (Cg(Tn()), Cg(An()), Cg(Ts())),
                    Vg = (Cg(Nn()), Cg(Dn())),
                    Hg = (Cg(Wa()), Cg(Za())),
                    qg = Cg(Ja()),
                    Ug = (Cg(Ln()), Cg(As())),
                    $g = (Cg(Bn()), Cg(jn())),
                    zg = Cg(ss()),
                    Gg = (Cg(ls()), Cg(ls())),
                    Wg = Cg(hs()),
                    Kg = Cg(Ln()),
                    Xg = Cg(ws()),
                    Yg = Cg(Es()),
                    Zg = (Cg(js()), Cg(_u())),
                    Qg = (Cg(ds()), Cg(ms()), Cg(fs())),
                    Jg = Cg(Vs()),
                    tm = Cg(qs()),
                    em = Cg($s()),
                    rm = Cg(Gs()),
                    im = Cg(bu()),
                    am = Cg(Su()),
                    nm = Cg(Cu()),
                    sm = Cg(xu()),
                    om = Cg(ku()),
                    lm = Cg(Ks()),
                    cm = Cg(Ys()),
                    hm = Cg(Qs()),
                    um = Cg(to()),
                    dm = Cg(ro()),
                    gm = Cg(ao()),
                    mm = Cg(so()),
                    pm = Cg(lo()),
                    fm = Cg(id()),
                    _m = Cg(nd()),
                    vm = Cg(od()),
                    bm = Cg(cd()),
                    ym = Cg(ud()),
                    Sm = Cg(gd()),
                    wm = Cg(pd()),
                    Cm = Cg(_d()),
                    Em = (Cg(bd()), Cg(Sd())),
                    xm = Cg(Cd()),
                    Tm = Cg(xd()),
                    km = Cg(kd()),
                    Am = Cg(Od()),
                    Om = Cg(Id()),
                    Nm = Cg(Pd()),
                    Im = Cg(Md()),
                    Dm = Cg(Rd()),
                    Pm = Cg(Fd()),
                    Lm = Cg(Hd()),
                    Mm = Cg(Ud()),
                    Bm = Cg(zd()),
                    Rm = Cg(Wd()),
                    jm = Cg(Xd()),
                    Fm = Cg(Zd()),
                    Vm = Cg(Jd()),
                    Hm = Cg(eg()),
                    qm = Cg(ig()),
                    Um = Cg(Rl()),
                    $m = Cg(gu()),
                    zm = Cg(pu()),
                    Gm = Cg(ho()),
                    Wm = Cg(go()),
                    Km = Cg(ng()),
                    Xm = Cg(og()),
                    Ym = Cg(cg()),
                    Zm = Cg(ug()),
                    Qm = Cg(gg()),
                    Jm = Cg(pg()),
                    tp = Cg(_g()),
                    ep = Cg(bg()),
                    rp = Cg(Sg()),
                    ip = (Cg(js()), Cg(Bs()), Cg(Ds()), Cg(Ls()), Cg(po())),
                    ap = {
                        active: Cg(Vn()),
                        commodities: Cg($n()),
                        cryptocurrency: Cg(qn()),
                        favorite: Cg(Ln()),
                        forex: Cg(Gn()),
                        basket_index: Cg(Kn()),
                        indices: Cg(Qn()),
                        stocks: Cg(ts()),
                        volidx: Cg(as()),
                        synthetic_index: Cg(rs()),
                        indicators: Cg(Ts()),
                    },
                    np = {
                        light: { normal: Cg(Pu()), active: Cg(Mu()) },
                        dark: { normal: Cg(Ru()), active: Cg(Fu()) },
                    },
                    sp = {
                        light: { normal: Cg(Hu()), active: Cg(Uu()) },
                        dark: { normal: Cg(zu()), active: Cg(Wu()) },
                    },
                    op = {
                        light: { normal: Cg(Xu()), active: Cg(Zu()) },
                        dark: { normal: Cg(Ju()), active: Cg(ed()) },
                    },
                    lp = {
                        AUD: Cg(_o()),
                        CAD: Cg(bo()),
                        CHF: Cg(So()),
                        EUR: Cg(Co()),
                        GBP: Cg(xo()),
                        JPY: Cg(ko()),
                        MXN: Cg(Oo()),
                        NOK: Cg(Io()),
                        NZD: Cg(Po()),
                        PLN: Cg(Mo()),
                        SEK: Cg(Ro()),
                        USD: Cg(Fo()),
                        XAU: Cg(Ho()),
                        HongKong: Cg(Cl()),
                        Dutch: Cg(kl()),
                        German: Cg(Sl()),
                        French: Cg(xl()),
                        Spanish: Cg(Ol()),
                        WallStreet: Cg(Il()),
                    },
                    cp = {
                        USD: Cg(Fo()),
                        GBP: Cg(xo()),
                        German: Cg(Sl()),
                        French: Cg(xl()),
                        Russia: Cg(Uo()),
                        Arabic: Cg(zo()),
                        Bangladesh: Cg(Wo()),
                        Cambodia: Cg(Xo()),
                        Srilanka: Cg(Zo()),
                        Mongolian: Cg(Jo()),
                        Kenya: Cg(el()),
                        Thailand: Cg(il()),
                        Turkey: Cg(nl()),
                        Indonesia: Cg(ol()),
                        Vietnam: Cg(cl()),
                        Italy: Cg(ul()),
                        Korean: Cg(gl()),
                        Portugal: Cg(pl()),
                        Chinese: Cg(_l()),
                        ChineseTraditional: Cg(bl()),
                        Poland: Cg(Mo()),
                        Spanish: Cg(Ol()),
                        Uzbekistan: Cg(Pl()),
                    },
                    hp = {
                        SPC: lp.USD,
                        AS51: lp.AUD,
                        HSI: lp.HongKong,
                        N225: lp.JPY,
                        AEX: lp.Dutch,
                        FCHI: lp.French,
                        SSMI: lp.CHF,
                        GDAXI: lp.German,
                        frxBROUSD: Cg(Ml()),
                        frxXAUUSD: Um,
                        frxXPDUSD: Um,
                        frxXPTUSD: Um,
                        frxXAGUSD: Um,
                        R_10: Cg(Fl()),
                        R_25: Cg(Hl()),
                        R_50: Cg(Ul()),
                        R_75: Cg(zl()),
                        R_100: Cg(Wl()),
                        '1HZ10V': Cg(Xl()),
                        '1HZ25V': Cg(Zl()),
                        '1HZ50V': Cg(Jl()),
                        '1HZ75V': Cg(ec()),
                        '1HZ100V': Cg(ic()),
                        '1HZ150V': Cg(nc()),
                        '1HZ200V': Cg(oc()),
                        '1HZ250V': Cg(cc()),
                        '1HZ300V': Cg(uc()),
                        BOOM300N: Cg(Cc()),
                        BOOM500: Cg(xc()),
                        BOOM600: Cg(kc()),
                        BOOM900: Cg(Oc()),
                        BOOM1000: Cg(Ic()),
                        CRASH300N: Cg(gc()),
                        CRASH500: Cg(pc()),
                        CRASH600: Cg(_c()),
                        CRASH900: Cg(bc()),
                        CRASH1000: Cg(Sc()),
                        RDBEAR: Cg(Pc()),
                        RDBULL: Cg(Mc()),
                        stpRNG: Cg(Rc()),
                        stpRNG2: Cg(Fc()),
                        stpRNG3: Cg(Hc()),
                        stpRNG4: Cg(Uc()),
                        stpRNG5: Cg(zc()),
                        JD10: Cg(Wc()),
                        JD25: Cg(Xc()),
                        JD50: Cg(Zc()),
                        JD75: Cg(Jc()),
                        JD100: Cg(eh()),
                        JD150: Cg(ih()),
                        JD200: Cg(nh()),
                        cryBNBUSD: Cg(oh()),
                        cryBTCLTC: Cg(ch()),
                        cryIOTUSD: Cg(uh()),
                        cryNEOUSD: Cg(gh()),
                        cryOMGUSD: Cg(ph()),
                        cryTRXUSD: Cg(_h()),
                        cryBTCETH: Cg(xh()),
                        cryZECUSD: Cg(Ch()),
                        cryXMRUSD: Cg(Sh()),
                        cryXLMUSD: Cg(bh()),
                        cryDSHUSD: Cg(kh()),
                        cryETHUSD: Cg(Oh()),
                        cryBCHUSD: Cg(Ih()),
                        cryLTCUSD: Cg(Ph()),
                        cryEOSUSD: Cg(Mh()),
                        cryXRPUSD: Cg(Rh()),
                        cryBTCUSD: Cg(Fh()),
                        OTC_AEX: Cg(Zh()),
                        OTC_FTSE: Cg(Wh()),
                        OTC_SX5E: Cg(ou()),
                        OTC_FCHI: Cg(nu()),
                        OTC_GDAXI: Cg(iu()),
                        OTC_N225: Cg(Jh()),
                        OTC_SPC: Cg(Hh()),
                        OTC_DJI: Cg(zh()),
                        OTC_NDX: Cg(Uh()),
                        OTC_SSMI: Cg(Xh()),
                        OTC_HSI: Cg(eu()),
                        OTC_AS51: Cg(cu()),
                    },
                    up = (t, e, r) => i => {
                        const { className: a, ...n } = i;
                        return yi().createElement(
                            'span',
                            wg({ className: `${r} ${a}` }, n),
                            yi().createElement(t, null),
                            yi().createElement(e, null)
                        );
                    };
                function dp(t, e) {
                    const r = lp[t],
                        i = lp[e];
                    hp[`frx${t}${e}`] = up(r, i, 'ic-frx');
                }
                Cg(uu());
                const gp = Cg(Yn());
                function mp(t) {
                    const e = lp[t];
                    hp[`WLD${t}`] = up(gp, e, 'ic-wld');
                }
                mp('AUD'),
                    mp('EUR'),
                    mp('GBP'),
                    mp('USD'),
                    mp('XAU'),
                    dp('AUD', 'JPY'),
                    dp('AUD', 'USD'),
                    dp('EUR', 'AUD'),
                    dp('EUR', 'CHF'),
                    dp('EUR', 'JPY'),
                    dp('EUR', 'CAD'),
                    dp('EUR', 'GBP'),
                    dp('EUR', 'USD'),
                    dp('GBP', 'AUD'),
                    dp('GBP', 'JPY'),
                    dp('GBP', 'USD'),
                    dp('USD', 'CAD'),
                    dp('USD', 'CHF'),
                    dp('USD', 'JPY'),
                    dp('AUD', 'CAD'),
                    dp('AUD', 'CHF'),
                    dp('AUD', 'NZD'),
                    dp('AUD', 'PLN'),
                    dp('EUR', 'NZD'),
                    dp('GBP', 'CAD'),
                    dp('GBP', 'CHF'),
                    dp('GBP', 'NOK'),
                    dp('GBP', 'NZD'),
                    dp('GBP', 'PLN'),
                    dp('NZD', 'JPY'),
                    dp('NZD', 'USD'),
                    dp('USD', 'MXN'),
                    dp('USD', 'NOK'),
                    dp('USD', 'PLN'),
                    dp('USD', 'SEK');
                var pp = h(9160).t;
                const fp = () => ({
                        channel: { id: 'channel', text: pp.translate('Channel [num]'), icon: Km },
                        continuous: { id: 'continuous', text: pp.translate('Continuous [num]'), icon: Xm },
                        fibfan: { id: 'fibfan', text: pp.translate('Fib Fan [num]'), icon: Ym },
                        horizontal: { id: 'horizontal', text: pp.translate('Horizontal [num]'), icon: Zm },
                        line: { id: 'line', text: pp.translate('Line [num]'), icon: Qm },
                        ray: { id: 'ray', text: pp.translate('Ray [num]'), icon: Jm },
                        rectangle: { id: 'rectangle', text: pp.translate('Rectangle [num]'), icon: tp },
                        trend: { id: 'trend', text: pp.translate('Trend [num]'), icon: ep },
                        vertical: { id: 'vertical', text: pp.translate('Vertical [num]'), icon: rp },
                    }),
                    _p = () => [
                        {
                            category: 'momentum',
                            name: pp.translate('Momentum'),
                            icon: fm,
                            items: [
                                {
                                    flutter_chart_id: 'AwesomeOscillator',
                                    name: pp.translate('Awesome Oscillator'),
                                    short_name: pp.translate('Awesome'),
                                    description: pp.translate(
                                        "The Awesome Oscillator is an indicator used to measure market momentum. AO calculates the difference of a 34 Period and 5 Period Simple Moving Averages. The Simple Moving Averages that are used are not calculated using closing price but rather each bar's midpoints. AO is generally used to affirm trends or to anticipate possible reversals."
                                    ),
                                    icon: wm,
                                    isPrediction: !0,
                                },
                                {
                                    flutter_chart_id: 'dpo',
                                    name: pp.translate('Detrended Price Oscillator'),
                                    short_name: pp.translate('Detrended'),
                                    description: pp.translate(
                                        'The Detrended Price Oscillator (DPO) helps to identify price cycles without the influence of short- and long-term trends. The DPO compares a simple moving average to a historical pricenear the middle of a specified period. It also shows the peaks and drops over that particular period, making it easier to predict buy points.'
                                    ),
                                    icon: Cm,
                                },
                                {
                                    flutter_chart_id: 'macd',
                                    name: pp.translate('MACD'),
                                    short_name: pp.translate('MACD'),
                                    description: pp.translate(
                                        "MACD is a trading indicator used in technical analysis of stock prices. It is supposed to reveal changes in the strength, direction, momentum, and duration of a trend in a stock's price."
                                    ),
                                    icon: Em,
                                },
                                {
                                    flutter_chart_id: 'ROC',
                                    name: pp.translate('Price Rate of Change'),
                                    short_name: pp.translate('Price ROC'),
                                    description: pp.translate(
                                        'The Price Rate-of-Change (ROC) indicator displays the difference between the current price and the price x-time periods ago. The difference can be displayed in either points or as a percentage.'
                                    ),
                                    icon: xm,
                                },
                                {
                                    flutter_chart_id: 'RSI',
                                    name: pp.translate('Relative Strength Index (RSI)'),
                                    short_name: pp.translate('RSI'),
                                    description: pp.translate(
                                        'The Relative Strength Index (RSI) was published by J. Welles Wilder. The current price is normalized as a percentage between 0 and 100. The name of this oscillator is misleading because it does not compare the instrument relative to another instrument or set of instruments, but rather represents the current price relative to other recent prices within the selected lookback window length.'
                                    ),
                                    icon: Tm,
                                },
                                {
                                    flutter_chart_id: 'StochasticOscillator',
                                    name: pp.translate('Stochastic Oscillator'),
                                    short_name: pp.translate('Stochastic'),
                                    description: pp.translate(
                                        "A technical momentum indicator that compares a security's closing price to its price range over a given time period. The oscillator's sensitivity to market movements can be reduced by adjusting the time period or by taking a moving average of the result."
                                    ),
                                    icon: km,
                                    isPrediction: !0,
                                },
                                {
                                    flutter_chart_id: 'SMI',
                                    name: pp.translate('Stochastic Momentum Index'),
                                    short_name: pp.translate('Stch Mtm'),
                                    description: pp.translate(
                                        'The Stochastic Momentum Index (SMI) helps to identify overbought or oversold conditions in the market and to predict bearish or bullish trends. It calculates the distance between the current closing price and the median of the high/low range, and displays 2 lines on the chart: the first (known as %K) represents the price movement while the second (known as %D) is a moving average of the first line. If the closing price is higher than the median of the high/low range, the SMI returns a positive value. If the closing price is lower than the average price, a negative value is returned. Values above 40 indicate a bullish trend while values below -40 indicate a bearish trend.'
                                    ),
                                    icon: Am,
                                },
                                {
                                    flutter_chart_id: 'WilliamsR',
                                    name: pp.translate("William's Percent Range"),
                                    short_name: pp.translate("William's %R"),
                                    description: pp.translate(
                                        'Developed by Larry Williams, Williams %R is a momentum indicator that is the inverse of the Fast Stochastic Oscillator. Also referred to as %R, Williams %R reflects the level of the close relative to the highest high for the look-back period.'
                                    ),
                                    icon: Om,
                                    isPrediction: !0,
                                },
                            ],
                        },
                        {
                            category: 'trend',
                            name: pp.translate('Trend'),
                            icon: _m,
                            items: [
                                {
                                    flutter_chart_id: 'Aroon',
                                    name: pp.translate('Aroon'),
                                    short_name: pp.translate('Aroon'),
                                    description: pp.translate(
                                        'Developed by Tushar Chande in 1995, Aroon is an indicator system that determines whether a stock is trending or not and how strong the trend is. There are two separate indicators: Aroon-Up and Aroon-Down. A 25-day Aroon-Up measures the number of days since a 25-day high. A 25-day Aroon-Down measures the number of days since a 25-day low.'
                                    ),
                                    icon: Nm,
                                },
                                {
                                    flutter_chart_id: 'adx',
                                    name: pp.translate('ADX/DMS'),
                                    short_name: pp.translate('ADX'),
                                    description: pp.translate(
                                        'The Average Directional Movement Index index (ADX) was developed in 1978 by J. Welles Wilder as an indicator of trend strength in a series of prices of a financial instrument ADX will range between 0 and 100. Generally, ADX readings below 20 indicate trend weakness, and readings above 40 indicate trend strength.'
                                    ),
                                    icon: Im,
                                    isPrediction: !0,
                                },
                                {
                                    flutter_chart_id: 'commodity_channel_index',
                                    name: pp.translate('Commodity Channel Index'),
                                    short_name: pp.translate('CCI'),
                                    description: pp.translate(
                                        'The Commodity Channel Index (CCI) is a versatile indicator that can be used to identify a new trend or warn of extreme conditions.'
                                    ),
                                    icon: Dm,
                                    isPrediction: !0,
                                },
                                {
                                    flutter_chart_id: 'ichimoku',
                                    name: pp.translate('Ichimoku Clouds'),
                                    short_name: pp.translate('Ichimoku Clouds'),
                                    description: pp.translate(
                                        'The Ichimoku Cloud, also known as Ichimoku Kinko Hyo, is a versatile indicator that defines support and resistance, identifies trend direction, gauges momentum and provides trading signals. Ichimoku Kinko Hyo translates into “one look equilibrium chart”.'
                                    ),
                                    icon: Pm,
                                    isPrediction: !0,
                                },
                                {
                                    flutter_chart_id: 'ParabolicSAR',
                                    name: pp.translate('Parabolic SAR'),
                                    short_name: pp.translate('PSAR'),
                                    description: pp.translate(
                                        'The parabolic SAR is calculated almost independently for each trend in the price. When the price is in an uptrend, the SAR emerges below the price and converges upwards towards it. Similarly, on a downtrend, the SAR emerges above the price and converges downwards. At each step within a trend, the SAR is calculated one period in advance.'
                                    ),
                                    icon: Lm,
                                    isPrediction: !0,
                                },
                                {
                                    flutter_chart_id: 'zigzag',
                                    name: pp.translate('Zig Zag'),
                                    short_name: pp.translate('Zig Zag'),
                                    description: pp.translate(
                                        'Zig Zag helps to identify trend reversals and filters out relatively small price movements by determining the support and resistance levels of the market. It accepts a percentage of deviation as the input and displays a line if the price change is larger than the percentage of deviation. Zig Zag ignores any sideways movement and is useful to filter out “market noise”.'
                                    ),
                                    icon: Mm,
                                    isPrediction: !0,
                                },
                            ],
                        },
                        {
                            category: 'volatility',
                            name: pp.translate('Volatility'),
                            icon: bm,
                            items: [
                                {
                                    flutter_chart_id: 'bollinger_bands',
                                    name: pp.translate('Bollinger Bands'),
                                    short_name: pp.translate('Bollinger Bands'),
                                    description: pp.translate(
                                        'Bollinger Bands can be used to measure the highness or lowness of the price relative to previous trades.'
                                    ),
                                    icon: Bm,
                                },
                                {
                                    flutter_chart_id: 'donchian_channel',
                                    name: pp.translate('Donchian Channel'),
                                    short_name: pp.translate('Donchian Channel'),
                                    description: pp.translate(
                                        'The Donchian Channel is an indicator used in market trading developed by Richard Donchian. It is formed by taking the highest high and the lowest low of the last n periods. The area between the high and the low is the channel for the period chosen.'
                                    ),
                                    icon: Rm,
                                    isPrediction: !0,
                                },
                            ],
                        },
                        {
                            category: 'moving-averages',
                            name: pp.translate('Moving averages'),
                            icon: ym,
                            items: [
                                {
                                    flutter_chart_id: 'moving_average',
                                    name: pp.translate('Moving Average (MA)'),
                                    short_name: pp.translate('MA'),
                                    description: pp.translate(
                                        'The Moving Average (MA) helps to identify the overall market trend by filtering out short-term price fluctuations. Using historical data, it calculates the average price over a specific period and plots a line on the chart. If the MA line moves upwards, it’s an indicator of an uptrend, a downtrend if it moves downwards. A buy signal occurs when the price moves above the MA line.'
                                    ),
                                    icon: jm,
                                },
                                {
                                    flutter_chart_id: 'moving_envelope_average',
                                    name: pp.translate('Moving Average Envelope'),
                                    short_name: pp.translate('MA Env'),
                                    description: pp.translate(
                                        'The Moving Average Envelope (MAE) helps to identify strong price movement that indicates the start of a trend. The MAE creates a moving average line as well as 2 bands around it. In theory, when the market price touches the upper or lower bands, a trend reversal will occur, indicating a buy signal.'
                                    ),
                                    icon: Fm,
                                    isPrediction: !0,
                                },
                                {
                                    flutter_chart_id: 'rainbow',
                                    name: pp.translate('Rainbow Moving Average'),
                                    short_name: pp.translate('Rainbow MA'),
                                    description: pp.translate(
                                        'The Rainbow Moving Average (RMA) displays several moving average lines simultaneously. When the lines intersect, it’s an indicator of price reversal and the angle of the lines are helpful to predict the trend strength. The steeper the curve, the stronger the trend. When the price crosses the moving average lines from below, it signals an upward trend. When the price crosses the moving average lines from above, it signals a downward trend. The RMA is easier to use compared to using several different moving average indicators at once.'
                                    ),
                                    icon: qm,
                                    isPrediction: !0,
                                },
                            ],
                        },
                        {
                            category: 'others',
                            name: pp.translate('Others'),
                            icon: Sm,
                            items: [
                                {
                                    flutter_chart_id: 'alligator',
                                    name: pp.translate('Alligator'),
                                    short_name: pp.translate('Alligator'),
                                    description: pp.translate(
                                        'Bill Williams introduced the Alligator indicator in 1995. The Alligator is as much a metaphor as it is an indicator. It consists of three lines, overlaid on a pricing chart, that represent the jaw, the teeth and the lips of the beast, and was created to help the trader confirm the presence of a trend and its direction. The Alligator indicator can also help traders designate impulse and corrective wave formations, but the tool works best when combined with a momentum indicator.'
                                    ),
                                    icon: Vm,
                                    isPrediction: !0,
                                },
                                {
                                    flutter_chart_id: 'fcb',
                                    name: pp.translate('Fractal Chaos Band'),
                                    short_name: pp.translate('Fractal Chaos Band'),
                                    description: pp.translate(
                                        'Fractals are indicators on candlestick charts that identify reversal points in the market. Traders often use fractals to get an idea about the direction in which the price will develop. A fractal will form when a particular price pattern happens on a chart.'
                                    ),
                                    icon: Hm,
                                    isPrediction: !0,
                                },
                            ],
                        },
                    ],
                    vp = { thickness: 1, hasArea: !1 },
                    bp =
                        (ca(vp),
                        () => ({
                            config: { lineStyle: ca(vp), pattern: 'solid', color: '#000000', isOverlay: !0 },
                            parameters: [
                                {
                                    path: 'lineStyle',
                                    title: pp.translate('Color'),
                                    defaultValue: '#000000',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                                {
                                    path: 'enableLabel',
                                    title: pp.translate('Axis Label'),
                                    type: 'switch',
                                    category: 'parameters',
                                    defaultValue: !0,
                                },
                            ],
                        })),
                    yp = () => ({
                        config: { lineStyle: ca(vp), pattern: 'solid', color: '#000000', isOverlay: !0 },
                        parameters: [
                            {
                                path: 'lineStyle',
                                title: pp.translate('Color'),
                                defaultValue: '#000000',
                                category: 'inputs',
                                type: 'colorpicker',
                            },
                        ],
                    }),
                    Sp = () => ({
                        config: { lineStyle: ca(vp), pattern: 'solid', color: '#000000', isOverlay: !0 },
                        parameters: [
                            {
                                path: 'lineStyle',
                                title: pp.translate('Color'),
                                defaultValue: '#000000',
                                category: 'inputs',
                                type: 'colorpicker',
                            },
                            {
                                path: 'fillStyle',
                                title: pp.translate('Fill Color'),
                                defaultValue: '#000000',
                                category: 'inputs',
                                type: 'colorpicker',
                            },
                        ],
                    }),
                    wp = {
                        vertical: bp,
                        line: yp,
                        ray: yp,
                        trend: Sp,
                        channel: Sp,
                        fibfan: Sp,
                        rectangle: Sp,
                        horizontal: bp,
                        continuous: yp,
                    },
                    Cp = () => ({
                        open: pp.translate('Open'),
                        high: pp.translate('High'),
                        low: pp.translate('Low'),
                        close: pp.translate('Close'),
                        'Hl/2': pp.translate('Hl/2'),
                        'HlC/3': pp.translate('Hlc/3'),
                        'HlCC/4': pp.translate('Hlcc/4'),
                        'OHlC/4': pp.translate('Ohlc/4'),
                    }),
                    Ep = () => ({
                        simple: pp.translate('Simple'),
                        exponential: pp.translate('Exponential'),
                        weighted: pp.translate('Weighted'),
                        hull: pp.translate('Hull'),
                        zeroLag: pp.translate('Zero Lag'),
                        timeSeries: pp.translate('Time Series'),
                        wellesWilder: pp.translate('Welles Wilder'),
                        variable: pp.translate('Variable'),
                        triangular: pp.translate('Triangular'),
                        doubleExponential: pp.translate('2-Exponential'),
                        tripleExponential: pp.translate('3-Exponential'),
                    }),
                    xp = {
                        RSI: () => ({
                            config: {
                                lineStyle: ca(vp),
                                oscillatorLinesConfig: { overboughtStyle: ca(vp), oversoldStyle: ca(vp) },
                                pinLabels: !1,
                                pipSize: 2,
                                showLastIndicator: !0,
                            },
                            parameters: [
                                {
                                    path: 'lineStyle.color',
                                    title: pp.translate('Color'),
                                    defaultValue: '#000000',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                                {
                                    path: 'period',
                                    title: pp.translate('Period'),
                                    defaultValue: 14,
                                    category: 'inputs',
                                    type: 'number',
                                },
                                {
                                    path: 'fieldType',
                                    title: pp.translate('Field'),
                                    defaultValue: 'close',
                                    category: 'inputs',
                                    type: 'select',
                                    options: Cp(),
                                },
                                {
                                    paths: {
                                        value: 'oscillatorLinesConfig.overboughtValue',
                                        color: 'oscillatorLinesConfig.overboughtStyle.color',
                                    },
                                    group_key: 'over_bought',
                                    title: pp.translate('OverBought'),
                                    type: 'numbercolorpicker',
                                    category: 'parameters',
                                    defaultValue: { value: 80, color: '#000000' },
                                },
                                {
                                    paths: {
                                        value: 'oscillatorLinesConfig.oversoldValue',
                                        color: 'oscillatorLinesConfig.oversoldStyle.color',
                                    },
                                    group_key: 'over_sold',
                                    title: pp.translate('OverSold'),
                                    type: 'numbercolorpicker',
                                    category: 'parameters',
                                    defaultValue: { value: 20, color: '#000000' },
                                },
                                {
                                    path: 'showZones',
                                    group_key: 'show_zones',
                                    title: pp.translate('Show Zones'),
                                    type: 'switch',
                                    category: 'parameters',
                                    defaultValue: !0,
                                },
                            ],
                        }),
                        adx: () => ({
                            config: {
                                lineStyle: ca(vp),
                                positiveLineStyle: ca(vp),
                                negativeLineStyle: ca(vp),
                                pipSize: 2,
                                showLastIndicator: !0,
                            },
                            parameters: [
                                {
                                    path: 'positiveLineStyle.color',
                                    title: pp.translate('+DI'),
                                    defaultValue: '#00DD00',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                                {
                                    path: 'negativeLineStyle.color',
                                    title: pp.translate('-DI'),
                                    defaultValue: '#FF0000',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                                {
                                    path: 'lineStyle.color',
                                    title: pp.translate('Color'),
                                    defaultValue: '#000000',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                                {
                                    path: 'barStyle.positiveColor',
                                    title: pp.translate('Positive Bar'),
                                    defaultValue: '#00DD00',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                                {
                                    path: 'barStyle.negativeColor',
                                    title: pp.translate('Negative Bar'),
                                    defaultValue: '#FF0000',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                                {
                                    path: 'period',
                                    title: pp.translate('Period'),
                                    defaultValue: 14,
                                    category: 'inputs',
                                    type: 'number',
                                },
                                {
                                    path: 'smoothingPeriod',
                                    title: pp.translate('Smoothing Period'),
                                    defaultValue: 14,
                                    category: 'inputs',
                                    type: 'number',
                                },
                                {
                                    path: 'showSeries',
                                    title: pp.translate('Series'),
                                    type: 'switch',
                                    category: 'parameters',
                                    defaultValue: !0,
                                },
                                {
                                    path: 'showShading',
                                    title: pp.translate('Shading'),
                                    type: 'switch',
                                    category: 'parameters',
                                    defaultValue: !1,
                                },
                                {
                                    path: 'showHistogram',
                                    title: pp.translate('Histogram'),
                                    type: 'switch',
                                    category: 'parameters',
                                    defaultValue: !1,
                                },
                            ],
                        }),
                        AwesomeOscillator: () => ({
                            config: { pipSize: 2, showLastIndicator: !0 },
                            parameters: [
                                {
                                    path: 'barStyle.positiveColor',
                                    title: pp.translate('Increasing Bar'),
                                    defaultValue: '#00DD00',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                                {
                                    path: 'barStyle.negativeColor',
                                    title: pp.translate('Decreasing Bar'),
                                    defaultValue: '#FF0000',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                            ],
                        }),
                        dpo: () => ({
                            config: { lineStyle: ca(vp), isCentered: !0, pipSize: 2, showLastIndicator: !0 },
                            parameters: [
                                {
                                    path: 'lineStyle.color',
                                    title: pp.translate('Color'),
                                    defaultValue: '#000000',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                                {
                                    path: 'period',
                                    title: pp.translate('Period'),
                                    defaultValue: 14,
                                    category: 'inputs',
                                    type: 'number',
                                },
                                {
                                    path: 'fieldType',
                                    title: pp.translate('Field'),
                                    defaultValue: 'close',
                                    category: 'inputs',
                                    type: 'select',
                                    options: Cp(),
                                },
                                {
                                    path: 'movingAverageType',
                                    title: pp.translate('Moving Average Type'),
                                    defaultValue: 'simple',
                                    category: 'inputs',
                                    type: 'select',
                                    options: Ep(),
                                },
                            ],
                        }),
                        gator: () => ({
                            config: { pipSize: 2, showLastIndicator: !0 },
                            parameters: [
                                {
                                    path: 'barStyle.positiveColor',
                                    title: pp.translate('Increasing Bar'),
                                    defaultValue: '#00DD00',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                                {
                                    path: 'barStyle.negativeColor',
                                    title: pp.translate('Decreasing Bar'),
                                    defaultValue: '#FF0000',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                                {
                                    path: 'jawPeriod',
                                    title: pp.translate('Jaw Period'),
                                    defaultValue: 13,
                                    category: 'inputs',
                                    type: 'number',
                                },
                                {
                                    path: 'jawOffset',
                                    title: pp.translate('Jaw Offset'),
                                    defaultValue: 8,
                                    category: 'inputs',
                                    type: 'number',
                                },
                                {
                                    path: 'teethPeriod',
                                    title: pp.translate('Teeth Period'),
                                    defaultValue: 8,
                                    category: 'inputs',
                                    type: 'number',
                                },
                                {
                                    path: 'teethOffset',
                                    title: pp.translate('Teeth Offset'),
                                    defaultValue: 5,
                                    category: 'inputs',
                                    type: 'number',
                                },
                                {
                                    path: 'lipsPeriod',
                                    title: pp.translate('Lips Period'),
                                    defaultValue: 5,
                                    category: 'inputs',
                                    type: 'number',
                                },
                                {
                                    path: 'lipsOffset',
                                    title: pp.translate('Lips Offset'),
                                    defaultValue: 3,
                                    category: 'inputs',
                                    type: 'number',
                                },
                            ],
                        }),
                        macd: () => ({
                            config: { lineStyle: ca(vp), signalLineStyle: ca(vp), pipSize: 2, showLastIndicator: !0 },
                            parameters: [
                                {
                                    path: 'lineStyle.color',
                                    title: pp.translate('Color'),
                                    defaultValue: '#000000',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                                {
                                    path: 'signalLineStyle.color',
                                    title: pp.translate('Signal'),
                                    defaultValue: '#FF0000',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                                {
                                    path: 'barStyle.positiveColor',
                                    title: pp.translate('Increasing Bar'),
                                    defaultValue: '#00DD00',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                                {
                                    path: 'barStyle.negativeColor',
                                    title: pp.translate('Decreasing Bar'),
                                    defaultValue: '#FF0000',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                                {
                                    path: 'fastMAPeriod',
                                    title: pp.translate('Fast MA Period'),
                                    defaultValue: 12,
                                    category: 'inputs',
                                    type: 'number',
                                },
                                {
                                    path: 'slowMAPeriod',
                                    title: pp.translate('Slow MA Period'),
                                    defaultValue: 26,
                                    category: 'inputs',
                                    type: 'number',
                                },
                                {
                                    path: 'signalPeriod',
                                    title: pp.translate('Signal Period'),
                                    defaultValue: 9,
                                    category: 'inputs',
                                    type: 'number',
                                },
                            ],
                        }),
                        ROC: () => ({
                            config: { lineStyle: ca(vp), pipSize: 4, showLastIndicator: !0 },
                            parameters: [
                                {
                                    path: 'lineStyle.color',
                                    title: pp.translate('Color'),
                                    defaultValue: '#000000',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                                {
                                    path: 'period',
                                    title: pp.translate('Period'),
                                    defaultValue: 14,
                                    category: 'inputs',
                                    type: 'number',
                                },
                                {
                                    path: 'fieldType',
                                    title: pp.translate('Field'),
                                    defaultValue: 'close',
                                    category: 'inputs',
                                    type: 'select',
                                    options: Cp(),
                                },
                            ],
                        }),
                        StochasticOscillator: () => ({
                            config: {
                                lineStyle: { ...ca(vp), color: '#FFFFFF' },
                                fastLineStyle: ca(vp),
                                slowLineStyle: ca(vp),
                                oscillatorLinesConfig: { overboughtStyle: ca(vp), oversoldStyle: ca(vp) },
                                pinLabels: !1,
                                overBoughtPrice: 80,
                                overSoldPrice: 20,
                                pipSize: 2,
                                showLastIndicator: !0,
                            },
                            parameters: [
                                {
                                    path: 'fastLineStyle.color',
                                    title: pp.translate('Fast'),
                                    defaultValue: '#000000',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                                {
                                    path: 'slowLineStyle.color',
                                    title: pp.translate('Slow'),
                                    defaultValue: '#FF0000',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                                {
                                    path: 'period',
                                    title: pp.translate('Period'),
                                    defaultValue: 14,
                                    category: 'inputs',
                                    type: 'number',
                                },
                                {
                                    path: 'fieldType',
                                    title: pp.translate('Field'),
                                    defaultValue: 'close',
                                    category: 'inputs',
                                    type: 'select',
                                    options: Cp(),
                                },
                                {
                                    path: 'isSmooth',
                                    title: pp.translate('Smooth'),
                                    type: 'switch',
                                    category: 'parameters',
                                    defaultValue: !0,
                                },
                                {
                                    paths: {
                                        value: 'oscillatorLinesConfig.overboughtValue',
                                        color: 'oscillatorLinesConfig.overboughtStyle.color',
                                    },
                                    group_key: 'over_bought',
                                    title: pp.translate('OverBought'),
                                    type: 'numbercolorpicker',
                                    category: 'parameters',
                                    defaultValue: { value: 80, color: '#000000' },
                                },
                                {
                                    paths: {
                                        value: 'oscillatorLinesConfig.oversoldValue',
                                        color: 'oscillatorLinesConfig.oversoldStyle.color',
                                    },
                                    group_key: 'over_sold',
                                    title: pp.translate('OverSold'),
                                    type: 'numbercolorpicker',
                                    category: 'parameters',
                                    defaultValue: { value: 20, color: '#000000' },
                                },
                                {
                                    path: 'showZones',
                                    group_key: 'show_zones',
                                    title: pp.translate('Show Zones'),
                                    type: 'switch',
                                    category: 'parameters',
                                    defaultValue: !0,
                                },
                            ],
                        }),
                        SMI: () => ({
                            config: {
                                lineStyle: ca(vp),
                                signalLineStyle: ca(vp),
                                pipSize: 2,
                                showLastIndicator: !0,
                                smiOscillatorLimits: {
                                    overboughtStyle: { ...ca(vp), color: '#626b73' },
                                    oversoldStyle: { ...ca(vp), color: '#626b73' },
                                },
                            },
                            parameters: [
                                {
                                    path: 'lineStyle.color',
                                    group_key: '%k',
                                    title: pp.translate('Color'),
                                    defaultValue: '#000000',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                                {
                                    path: 'period',
                                    group_key: '%k',
                                    title: pp.translate('Period'),
                                    defaultValue: 10,
                                    category: 'inputs',
                                    type: 'number',
                                },
                                {
                                    path: 'smoothingPeriod',
                                    group_key: '%k',
                                    title: pp.translate('Smoothing Period'),
                                    defaultValue: 3,
                                    category: 'inputs',
                                    type: 'number',
                                },
                                {
                                    path: 'doubleSmoothingPeriod',
                                    group_key: '%k',
                                    title: pp.translate('Double Smoothing Period'),
                                    defaultValue: 3,
                                    category: 'inputs',
                                    type: 'number',
                                },
                                {
                                    path: 'signalLineStyle.color',
                                    group_key: '%d',
                                    title: pp.translate('Color'),
                                    defaultValue: '#FF0000',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                                {
                                    path: 'signalPeriod',
                                    group_key: '%d',
                                    title: pp.translate('Signal Period'),
                                    defaultValue: 10,
                                    category: 'inputs',
                                    type: 'number',
                                },
                                {
                                    path: 'maType',
                                    group_key: '%d',
                                    title: pp.translate('Field'),
                                    defaultValue: 'exponential',
                                    category: 'inputs',
                                    type: 'select',
                                    options: Ep(),
                                },
                                {
                                    paths: {
                                        value: 'smiOscillatorLimits.overboughtValue',
                                        color: 'smiOscillatorLimits.overboughtStyle.color',
                                    },
                                    group_key: 'over_bought',
                                    title: pp.translate('OverBought'),
                                    type: 'numbercolorpicker',
                                    category: 'parameters',
                                    defaultValue: { value: 40, color: '#626b73' },
                                },
                                {
                                    paths: {
                                        value: 'smiOscillatorLimits.oversoldValue',
                                        color: 'smiOscillatorLimits.oversoldStyle.color',
                                    },
                                    group_key: 'over_sold',
                                    title: pp.translate('OverSold'),
                                    type: 'numbercolorpicker',
                                    category: 'parameters',
                                    defaultValue: { value: -40, color: '#626b73' },
                                },
                                {
                                    path: 'showZones',
                                    group_key: 'show_zones',
                                    title: pp.translate('Show Zones'),
                                    type: 'switch',
                                    category: 'parameters',
                                    defaultValue: !0,
                                },
                            ],
                        }),
                        WilliamsR: () => ({
                            config: {
                                lineStyle: ca(vp),
                                zeroHorizontalLinesStyle: { ...ca(vp), color: '0xFFF44336' },
                                oscillatorLimits: { overboughtStyle: ca(vp), oversoldStyle: ca(vp) },
                                pipSize: 2,
                                showLastIndicator: !0,
                            },
                            parameters: [
                                {
                                    path: 'lineStyle.color',
                                    title: pp.translate('Color'),
                                    defaultValue: '#000000',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                                {
                                    path: 'period',
                                    title: pp.translate('Period'),
                                    defaultValue: 14,
                                    category: 'inputs',
                                    type: 'number',
                                },
                                {
                                    paths: {
                                        value: 'oscillatorLimits.overboughtValue',
                                        color: 'oscillatorLimits.overboughtStyle.color',
                                    },
                                    group_key: 'over_bought',
                                    title: pp.translate('OverBought'),
                                    type: 'numbercolorpicker',
                                    category: 'parameters',
                                    defaultValue: { value: -20, color: '#000000' },
                                },
                                {
                                    paths: {
                                        value: 'oscillatorLimits.oversoldValue',
                                        color: 'oscillatorLimits.oversoldStyle.color',
                                    },
                                    group_key: 'over_sold',
                                    title: pp.translate('OverSold'),
                                    type: 'numbercolorpicker',
                                    category: 'parameters',
                                    defaultValue: { value: -80, color: '#000000' },
                                },
                                {
                                    path: 'showZones',
                                    group_key: 'show_zones',
                                    title: pp.translate('Show Zones'),
                                    type: 'switch',
                                    category: 'parameters',
                                    defaultValue: !0,
                                },
                            ],
                        }),
                        Aroon: () => ({
                            config: { upLineStyle: ca(vp), downLineStyle: ca(vp), pipSize: 2, showLastIndicator: !0 },
                            parameters: [
                                {
                                    path: 'upLineStyle.color',
                                    title: pp.translate('Aroon Up'),
                                    defaultValue: '#00DD00',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                                {
                                    path: 'downLineStyle.color',
                                    title: pp.translate('Aroon Down'),
                                    defaultValue: '#FF0000',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                                {
                                    path: 'period',
                                    title: pp.translate('Period'),
                                    defaultValue: 14,
                                    category: 'inputs',
                                    type: 'number',
                                },
                            ],
                        }),
                        commodity_channel_index: () => ({
                            config: {
                                lineStyle: ca(vp),
                                oscillatorLinesConfig: { overboughtStyle: ca(vp), oversoldStyle: ca(vp) },
                                pipSize: 2,
                                showLastIndicator: !0,
                            },
                            parameters: [
                                {
                                    path: 'lineStyle.color',
                                    title: pp.translate('Color'),
                                    defaultValue: '#000000',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                                {
                                    path: 'period',
                                    title: pp.translate('Period'),
                                    defaultValue: 20,
                                    category: 'inputs',
                                    type: 'number',
                                },
                                {
                                    paths: {
                                        value: 'oscillatorLinesConfig.overboughtValue',
                                        color: 'oscillatorLinesConfig.overboughtStyle.color',
                                    },
                                    group_key: 'over_bought',
                                    title: pp.translate('OverBought'),
                                    type: 'numbercolorpicker',
                                    category: 'parameters',
                                    defaultValue: { value: 100, color: '#000000' },
                                },
                                {
                                    paths: {
                                        value: 'oscillatorLinesConfig.oversoldValue',
                                        color: 'oscillatorLinesConfig.oversoldStyle.color',
                                    },
                                    group_key: 'over_sold',
                                    title: pp.translate('OverSold'),
                                    type: 'numbercolorpicker',
                                    category: 'parameters',
                                    defaultValue: { value: -100, color: '#000000' },
                                },
                                {
                                    path: 'showZones',
                                    group_key: 'show_zones',
                                    title: pp.translate('Show Zones'),
                                    type: 'switch',
                                    category: 'parameters',
                                    defaultValue: !0,
                                },
                            ],
                        }),
                        ichimoku: () => ({
                            config: {
                                conversionLineStyle: ca(vp),
                                baseLineStyle: ca(vp),
                                spanALineStyle: ca(vp),
                                laggingLineStyle: ca(vp),
                                spanBLineStyle: ca(vp),
                                conversionLinePeriod: ca(vp),
                                showLastIndicator: !0,
                            },
                            parameters: [
                                {
                                    path: 'conversionLineStyle.color',
                                    title: pp.translate('Conversion Line'),
                                    defaultValue: '#0000FF',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                                {
                                    path: 'baseLineStyle.color',
                                    title: pp.translate('Base Line'),
                                    defaultValue: '#FF0000',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                                {
                                    path: 'spanALineStyle.color',
                                    title: pp.translate('Leading Span A'),
                                    defaultValue: '#00FF00',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                                {
                                    path: 'spanBLineStyle.color',
                                    title: pp.translate('Leading Span B'),
                                    defaultValue: '#FF0000',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                                {
                                    path: 'laggingLineStyle.color',
                                    title: pp.translate('Lagging Span'),
                                    defaultValue: '#808000',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                                {
                                    path: 'conversionLinePeriod',
                                    title: pp.translate('Conversion Line Period'),
                                    defaultValue: 9,
                                    category: 'inputs',
                                    type: 'number',
                                },
                                {
                                    path: 'baseLinePeriod',
                                    title: pp.translate('Base Line Period'),
                                    defaultValue: 26,
                                    category: 'inputs',
                                    type: 'number',
                                },
                                {
                                    path: 'spanBPeriod',
                                    title: pp.translate('Leading Span B Period'),
                                    defaultValue: 52,
                                    category: 'inputs',
                                    type: 'number',
                                },
                                {
                                    path: 'laggingSpanOffset',
                                    title: pp.translate('Lagging Span Period'),
                                    defaultValue: -26,
                                    category: 'inputs',
                                    type: 'number',
                                    min: -100,
                                    max: 0,
                                },
                            ],
                        }),
                        ParabolicSAR: () => ({
                            config: { scatterStyle: { radius: 1.5 }, showLastIndicator: !0 },
                            parameters: [
                                {
                                    path: 'scatterStyle.color',
                                    title: pp.translate('Color'),
                                    defaultValue: '#000000',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                                {
                                    path: 'minAccelerationFactor',
                                    title: pp.translate('Minimum AF'),
                                    defaultValue: 0.02,
                                    category: 'inputs',
                                    type: 'number',
                                    step: 0.01,
                                },
                                {
                                    path: 'maxAccelerationFactor',
                                    title: pp.translate('Maximum AF'),
                                    defaultValue: 0.2,
                                    category: 'inputs',
                                    type: 'number',
                                    step: 0.01,
                                },
                            ],
                        }),
                        zigzag: () => ({
                            config: { lineStyle: ca(vp), showLastIndicator: !0 },
                            parameters: [
                                {
                                    path: 'lineStyle.color',
                                    title: pp.translate('Color'),
                                    defaultValue: '#000000',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                                {
                                    path: 'distance',
                                    title: pp.translate('Distance(%)'),
                                    defaultValue: 10,
                                    category: 'inputs',
                                    type: 'number',
                                },
                            ],
                        }),
                        bollinger_bands: () => ({
                            config: {
                                upperLineStyle: ca(vp),
                                middleLineStyle: ca(vp),
                                lowerLineStyle: ca(vp),
                                showLastIndicator: !0,
                            },
                            parameters: [
                                {
                                    path: 'upperLineStyle.color',
                                    title: pp.translate('Bollinger Bands Top'),
                                    defaultValue: '#000000',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                                {
                                    path: 'middleLineStyle.color',
                                    title: pp.translate('Bollinger Bands Median'),
                                    defaultValue: '#000000',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                                {
                                    path: 'lowerLineStyle.color',
                                    title: pp.translate('Bollinger Bands Bottom'),
                                    defaultValue: '#000000',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                                {
                                    path: 'fillColor',
                                    title: pp.translate('Fill Color'),
                                    defaultValue: '#000000',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                                {
                                    path: 'period',
                                    title: pp.translate('Period'),
                                    defaultValue: 20,
                                    category: 'inputs',
                                    type: 'number',
                                },
                                {
                                    path: 'fieldType',
                                    title: pp.translate('Field'),
                                    defaultValue: 'close',
                                    category: 'inputs',
                                    type: 'select',
                                    options: Cp(),
                                },
                                {
                                    path: 'standardDeviation',
                                    title: pp.translate('Standard Deviations'),
                                    defaultValue: 2,
                                    category: 'inputs',
                                    type: 'number',
                                },
                                {
                                    path: 'movingAverageType',
                                    title: pp.translate('Moving Average Type'),
                                    defaultValue: 'simple',
                                    category: 'inputs',
                                    type: 'select',
                                    options: Ep(),
                                },
                                {
                                    path: 'showChannelFill',
                                    title: pp.translate('Channel Fill'),
                                    type: 'switch',
                                    category: 'parameters',
                                    defaultValue: !0,
                                },
                            ],
                        }),
                        donchian_channel: () => ({
                            config: {
                                upperLineStyle: ca(vp),
                                middleLineStyle: ca(vp),
                                lowerLineStyle: ca(vp),
                                showLastIndicator: !0,
                            },
                            parameters: [
                                {
                                    path: 'upperLineStyle.color',
                                    title: pp.translate('Donchian High'),
                                    defaultValue: '#000000',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                                {
                                    path: 'middleLineStyle.color',
                                    title: pp.translate('Donchian Median'),
                                    defaultValue: '#000000',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                                {
                                    path: 'lowerLineStyle.color',
                                    title: pp.translate('Donchian Low'),
                                    defaultValue: '#000000',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                                {
                                    path: 'fillColor',
                                    title: pp.translate('Fill Color'),
                                    defaultValue: '#000000',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                                {
                                    path: 'highPeriod',
                                    title: pp.translate('High Period'),
                                    defaultValue: 20,
                                    category: 'inputs',
                                    type: 'number',
                                },
                                {
                                    path: 'lowPeriod',
                                    title: pp.translate('Low Period'),
                                    defaultValue: 20,
                                    category: 'inputs',
                                    type: 'number',
                                },
                                {
                                    path: 'showChannelFill',
                                    title: pp.translate('Channel Fill'),
                                    type: 'switch',
                                    category: 'parameters',
                                    defaultValue: !0,
                                },
                            ],
                        }),
                        moving_average: () => ({
                            config: { lineStyle: ca(vp), isOverlay: !0, showLastIndicator: !0 },
                            parameters: [
                                {
                                    path: 'lineStyle.color',
                                    title: pp.translate('Color'),
                                    defaultValue: '#FF0000',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                                {
                                    path: 'period',
                                    title: pp.translate('Period'),
                                    defaultValue: 50,
                                    category: 'inputs',
                                    type: 'number',
                                },
                                {
                                    path: 'fieldType',
                                    title: pp.translate('Field'),
                                    defaultValue: 'close',
                                    category: 'inputs',
                                    type: 'select',
                                    options: Cp(),
                                },
                                {
                                    path: 'movingAverageType',
                                    title: pp.translate('Type'),
                                    defaultValue: 'simple',
                                    category: 'inputs',
                                    type: 'select',
                                    options: Ep(),
                                },
                                {
                                    path: 'offset',
                                    title: pp.translate('Offset'),
                                    defaultValue: 0,
                                    category: 'inputs',
                                    type: 'number',
                                },
                            ],
                        }),
                        moving_envelope_average: () => ({
                            config: {
                                upperLineStyle: ca(vp),
                                middleLineStyle: ca(vp),
                                lowerLineStyle: ca(vp),
                                showLastIndicator: !0,
                            },
                            parameters: [
                                {
                                    path: 'upperLineStyle.color',
                                    title: pp.translate('MA Env Top'),
                                    defaultValue: '#000000',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                                {
                                    path: 'middleLineStyle.color',
                                    title: pp.translate('MA Env Median'),
                                    defaultValue: '#000000',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                                {
                                    path: 'lowerLineStyle.color',
                                    title: pp.translate('MA Env Bottom'),
                                    defaultValue: '#000000',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                                {
                                    path: 'fillColor',
                                    title: pp.translate('Fill Color'),
                                    defaultValue: '#000000',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                                {
                                    path: 'period',
                                    title: pp.translate('Period'),
                                    defaultValue: 50,
                                    category: 'inputs',
                                    type: 'number',
                                },
                                {
                                    path: 'fieldType',
                                    title: pp.translate('Field'),
                                    defaultValue: 'close',
                                    category: 'inputs',
                                    type: 'select',
                                    options: Cp(),
                                },
                                {
                                    path: 'shiftType',
                                    title: pp.translate('Shift Type'),
                                    defaultValue: 'percent',
                                    category: 'inputs',
                                    type: 'select',
                                    options: { percent: pp.translate('Percent'), point: pp.translate('Point') },
                                },
                                {
                                    path: 'shift',
                                    title: pp.translate('Shift'),
                                    defaultValue: 5,
                                    category: 'inputs',
                                    type: 'number',
                                },
                                {
                                    path: 'movingAverageType',
                                    title: pp.translate('Type'),
                                    defaultValue: 'simple',
                                    category: 'inputs',
                                    type: 'select',
                                    options: Ep(),
                                },
                                {
                                    path: 'showChannelFill',
                                    title: pp.translate('Channel Fill'),
                                    type: 'switch',
                                    category: 'parameters',
                                    defaultValue: !0,
                                },
                            ],
                        }),
                        rainbow: () => ({
                            config: {
                                bandsCount: 10,
                                movingAverageType: 'simple',
                                rainbowLineStyles: [],
                                showLastIndicator: !0,
                            },
                            parameters: [
                                {
                                    path: 'period',
                                    title: pp.translate('Period'),
                                    defaultValue: 2,
                                    category: 'inputs',
                                    type: 'number',
                                },
                                {
                                    path: 'fieldType',
                                    title: pp.translate('Field'),
                                    defaultValue: 'close',
                                    category: 'inputs',
                                    type: 'select',
                                    options: Cp(),
                                },
                                {
                                    path: 'rainbowLineStyles[0].color',
                                    title: pp.translate('SMA1'),
                                    defaultValue: '#ff0000',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                                {
                                    path: 'rainbowLineStyles[1].color',
                                    title: pp.translate('SMA2'),
                                    defaultValue: '#ff7f00',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                                {
                                    path: 'rainbowLineStyles[2].color',
                                    title: pp.translate('SMA3'),
                                    defaultValue: '#ffff00',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                                {
                                    path: 'rainbowLineStyles[3].color',
                                    title: pp.translate('SMA4'),
                                    defaultValue: '#7fff00',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                                {
                                    path: 'rainbowLineStyles[4].color',
                                    title: pp.translate('SMA5'),
                                    defaultValue: '#00ff7f',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                                {
                                    path: 'rainbowLineStyles[5].color',
                                    title: pp.translate('SMA6'),
                                    defaultValue: '#00ffff',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                                {
                                    path: 'rainbowLineStyles[6].color',
                                    title: pp.translate('SMA7'),
                                    defaultValue: '#007fff',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                                {
                                    path: 'rainbowLineStyles[7].color',
                                    title: pp.translate('SMA8'),
                                    defaultValue: '#0000ff',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                                {
                                    path: 'rainbowLineStyles[8].color',
                                    title: pp.translate('SMA9'),
                                    defaultValue: '#7f00ff',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                                {
                                    path: 'rainbowLineStyles[9].color',
                                    title: pp.translate('SMA10'),
                                    defaultValue: '#ff00ff',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                            ],
                        }),
                        alligator: () => ({
                            config: {
                                jawLineStyle: ca(vp),
                                teethLineStyle: ca(vp),
                                lipsLineStyle: ca(vp),
                                showLastIndicator: !0,
                            },
                            parameters: [
                                {
                                    path: 'jawLineStyle.color',
                                    title: pp.translate('Jaw'),
                                    defaultValue: '#0000FF',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                                {
                                    path: 'teethLineStyle.color',
                                    title: pp.translate('Teeth'),
                                    defaultValue: '#FF0000',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                                {
                                    path: 'lipsLineStyle.color',
                                    title: pp.translate('Lips'),
                                    defaultValue: '#00FF00',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                                {
                                    path: 'showLines',
                                    title: pp.translate('Show Lines'),
                                    type: 'switch',
                                    category: 'parameters',
                                    defaultValue: !0,
                                },
                                {
                                    path: 'jawPeriod',
                                    title: pp.translate('Jaw Period'),
                                    defaultValue: 13,
                                    category: 'inputs',
                                    type: 'number',
                                },
                                {
                                    path: 'jawOffset',
                                    title: pp.translate('Jaw Offset'),
                                    defaultValue: 8,
                                    category: 'inputs',
                                    type: 'number',
                                },
                                {
                                    path: 'teethPeriod',
                                    title: pp.translate('Teeth Period'),
                                    defaultValue: 8,
                                    category: 'inputs',
                                    type: 'number',
                                },
                                {
                                    path: 'teethOffset',
                                    title: pp.translate('Teeth Offset'),
                                    defaultValue: 5,
                                    category: 'inputs',
                                    type: 'number',
                                },
                                {
                                    path: 'lipsPeriod',
                                    title: pp.translate('Lips Period'),
                                    defaultValue: 5,
                                    category: 'inputs',
                                    type: 'number',
                                },
                                {
                                    path: 'lipsOffset',
                                    title: pp.translate('Lips Offset'),
                                    defaultValue: 3,
                                    category: 'inputs',
                                    type: 'number',
                                },
                                {
                                    path: 'showFractal',
                                    title: pp.translate('Show Fractals'),
                                    type: 'switch',
                                    category: 'parameters',
                                    defaultValue: !1,
                                },
                            ],
                        }),
                        fcb: () => ({
                            config: { highLineStyle: ca(vp), lowLineStyle: ca(vp), showLastIndicator: !0 },
                            parameters: [
                                {
                                    path: 'highLineStyle.color',
                                    title: pp.translate('Fractal High'),
                                    defaultValue: '#000000',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                                {
                                    path: 'lowLineStyle.color',
                                    title: pp.translate('Fractal Low'),
                                    defaultValue: '#000000',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                                {
                                    path: 'fillColor',
                                    title: pp.translate('Fractal Channel'),
                                    defaultValue: '#000000',
                                    category: 'inputs',
                                    type: 'colorpicker',
                                },
                                {
                                    path: 'showChannelFill',
                                    title: pp.translate('Channel Fill'),
                                    type: 'switch',
                                    category: 'parameters',
                                    defaultValue: !0,
                                },
                            ],
                        }),
                    },
                    Tp = t => xp[t](),
                    kp = [
                        { id: 'line', text: pp.translate('Area'), candleOnly: !1, icon: lm },
                        { id: 'candles', text: pp.translate('Candle'), candleOnly: !0, icon: cm },
                        { id: 'hollow', text: pp.translate('Hollow'), candleOnly: !0, icon: hm },
                        { id: 'ohlc', text: pp.translate('OHLC'), candleOnly: !0, icon: um },
                    ],
                    Ap = [
                        { key: 'tick', single: pp.translate('tick'), items: [{ interval: 0, num: 1 }] },
                        {
                            key: 'minute',
                            single: pp.translate('minute'),
                            plural: pp.translate('minutes'),
                            items: [
                                { interval: 60, num: 1 },
                                { interval: 120, num: 2 },
                                { interval: 180, num: 3 },
                                { interval: 300, num: 5 },
                                { interval: 600, num: 10 },
                                { interval: 900, num: 15 },
                                { interval: 1800, num: 30 },
                            ],
                        },
                        {
                            key: 'hour',
                            single: pp.translate('hour'),
                            plural: pp.translate('hours'),
                            items: [
                                { interval: 3600, num: 1 },
                                { interval: 7200, num: 2 },
                                { interval: 14400, num: 4 },
                                { interval: 28800, num: 8 },
                            ],
                        },
                        {
                            key: 'day',
                            single: pp.translate('day'),
                            plural: pp.translate('days'),
                            items: [{ interval: 86400, num: 1 }],
                        },
                    ],
                    Op = [
                        { key: 'en', name: 'English', icon: yi().createElement(cp.GBP, null) },
                        { key: 'bn', name: 'বাংলা', icon: yi().createElement(cp.Bangladesh, null) },
                        { key: 'de', name: 'Deutsch', icon: yi().createElement(cp.German, null) },
                        { key: 'ar', name: 'العربية', icon: yi().createElement(cp.Arabic, null) },
                        { key: 'fr', name: 'French', icon: yi().createElement(cp.French, null) },
                        { key: 'mn', name: 'Монгол', icon: yi().createElement(cp.Mongolian, null) },
                        { key: 'ru', name: 'Русский', icon: yi().createElement(cp.Russia, null) },
                        { key: 'si', name: 'සිංහල', icon: yi().createElement(cp.Srilanka, null) },
                        { key: 'sw', name: 'Kiswahili', icon: yi().createElement(cp.Kenya, null) },
                        { key: 'th', name: 'Thai', icon: yi().createElement(cp.Thailand, null) },
                        { key: 'id', name: 'Indonesia', icon: yi().createElement(cp.Indonesia, null) },
                        { key: 'vi', name: 'Tiếng Việt', icon: yi().createElement(cp.Vietnam, null) },
                        { key: 'it', name: 'Italiano', icon: yi().createElement(cp.Italy, null) },
                        { key: 'km', name: 'ខ្មែរ', icon: yi().createElement(cp.Cambodia, null) },
                        { key: 'ko', name: '한국어', icon: yi().createElement(cp.Korean, null) },
                        { key: 'pt', name: 'Português', icon: yi().createElement(cp.Portugal, null) },
                        { key: 'tr', name: 'Türkçe', icon: yi().createElement(cp.Turkey, null) },
                        { key: 'uz', name: "O'zbek", icon: yi().createElement(cp.Uzbekistan, null) },
                        { key: 'zh_cn', name: '简体中文', icon: yi().createElement(cp.Chinese, null) },
                        { key: 'pl', name: 'Polish', icon: yi().createElement(cp.Poland, null) },
                        { key: 'zh_tw', name: '繁體中文', icon: yi().createElement(cp.ChineseTraditional, null) },
                        { key: 'es', name: 'espanyol', icon: yi().createElement(cp.Spanish, null) },
                    ],
                    Np = 'INDICATOR_ADDED',
                    Ip = 'INDICATOR_DELETED',
                    Dp = 'INDICATOR_INFO_TOGGLE',
                    Pp = 'SCROLL_TO_LEFT',
                    Lp = {
                        predictionIndicator: pp.translate(
                            'This indicator does not support 1-tick intervals. To use this indicator, change your chart time interval to 1 minute or more.'
                        ),
                    },
                    Mp = Object.freeze({
                        ChartTitle: 'Chart Title',
                        CategoricalDisplay: 'Categorical Display',
                        ChartControl: 'Chart Control',
                    }),
                    Bp = Object.freeze({
                        MarketSelector: 'Market Selector',
                        Favorite: 'Favorite',
                        ChartSetting: 'Chart Setting',
                        ChartSize: 'Chart Size',
                        ChartType: 'Chart Type',
                        Comparison: 'Comparison',
                        DrawTools: 'Draw Tools',
                        Download: 'Download',
                        Indicator: 'Indicator',
                        Interval: 'Interval',
                        Template: 'Template',
                    });
                function Rp(t, e, r) {
                    window.isProductionWebsite && window.ga && ga('send', 'event', t, e, r);
                }
                const jp = new RegExp('\\d{17}'),
                    Fp = t => {
                        if (!t || t.getFullYear) return t;
                        var e,
                            r,
                            i,
                            a,
                            n,
                            s,
                            o,
                            l = [];
                        if (12 == t.length || 14 == t.length)
                            return (
                                (e = parseFloat(t.substring(0, 4))),
                                (r = parseFloat(t.substring(4, 6)) - 1),
                                (i = parseFloat(t.substring(6, 8))),
                                (a = parseFloat(t.substring(8, 10))),
                                (n = parseFloat(t.substring(10, 12))),
                                (s = parseFloat(t.substring(12, 14)) || 0),
                                new Date(e, r, i, a, n, s, 0)
                            );
                        if (jp.test(t))
                            return (
                                (e = parseFloat(t.substring(0, 4))),
                                (r = parseFloat(t.substring(4, 6)) - 1),
                                (i = parseFloat(t.substring(6, 8))),
                                (a = parseFloat(t.substring(8, 10))),
                                (n = parseFloat(t.substring(10, 12))),
                                (s = parseFloat(t.substring(12, 14))),
                                (o = parseFloat(t.substring(14, 17))),
                                new Date(e, r, i, a, n, s, o)
                            );
                        var c = [t],
                            h = t.indexOf('T');
                        if (-1 != h) {
                            var u = t.substring(h);
                            if (-1 != u.indexOf('Z') || -1 != u.indexOf('-') || -1 != u.indexOf('+'))
                                return new Date(t);
                            c = t.split('T');
                        } else -1 != t.indexOf(' ') && (c = t.split(' '));
                        if (-1 != c[0].indexOf('/')) l = c[0].split('/');
                        else {
                            if (-1 == c[0].indexOf('-')) return Vp(t);
                            l = c[0].split('-');
                        }
                        var d = parseFloat(l[2]);
                        if (
                            (l[0] && 4 == l[0].length && ((d = parseFloat(l[0])), (l[0] = l[1]), (l[1] = l[2])),
                            c.length > 1)
                        ) {
                            var g = c[2];
                            (c = c[1].split(':')),
                                g &&
                                    ('12' == c[0] && 'AM' == g.toUpperCase()
                                        ? (c[0] = 0)
                                        : '12' != c[0] && 'PM' == g.toUpperCase() && (c[0] = parseInt(c[0], 10) + 12));
                            var m = 0,
                                p = 0;
                            return (
                                3 == c.length &&
                                    (-1 == c[2].indexOf('.')
                                        ? (m = parseInt(c[2], 10))
                                        : 3 == (m = c[2].split('.'))[1].length && ((p = m[1]), (m = m[0]))),
                                new Date(d, l[0] - 1, l[1], c[0], c[1], m, p)
                            );
                        }
                        return new Date(d, l[0] - 1, l[1], 0, 0, 0, 0);
                    },
                    Vp = t => {
                        var e;
                        if (-1 != t.indexOf('/')) e = t.split('/');
                        else {
                            if (-1 == t.indexOf('-'))
                                return t.length >= 8
                                    ? new Date(
                                          parseFloat(t.substring(0, 4)),
                                          parseFloat(t.substring(4, 6)) - 1,
                                          parseFloat(t.substring(6, 8))
                                      )
                                    : new Date();
                            e = t.split('-');
                        }
                        if (e.length < 3) return new Date();
                        -1 != e[2].indexOf(' ')
                            ? (e[2] = e[2].substring(0, e[2].indexOf(' ')))
                            : -1 != e[2].indexOf('T') && (e[2] = e[2].substring(0, e[2].indexOf('T')));
                        var r = parseFloat(e[2]);
                        return (
                            r < 20 && (r += 2e3),
                            4 == e[0].length && ((r = parseFloat(e[0])), (e[0] = e[1]), (e[1] = e[2])),
                            new Date(r, e[0] - 1, e[1])
                        );
                    };
                function Hp(t, e, r) {
                    return (
                        (e = (function (t) {
                            var e = (function (t, e) {
                                if ('object' != typeof t || !t) return t;
                                var r = t[Symbol.toPrimitive];
                                if (void 0 !== r) {
                                    var i = r.call(t, 'string');
                                    if ('object' != typeof i) return i;
                                    throw new TypeError('@@toPrimitive must return a primitive value.');
                                }
                                return String(t);
                            })(t);
                            return 'symbol' == typeof e ? e : String(e);
                        })(e)),
                        e in t
                            ? Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = r),
                        t
                    );
                }
                class qp {
                    constructor() {
                        Hp(this, '_api', void 0),
                            Hp(this, 'clientTimeAtRequest', void 0),
                            Hp(this, 'getTimeInterval', void 0),
                            Hp(this, 'onTimeUpdated', void 0),
                            Hp(this, 'serverTimeAtResponse', void 0),
                            Hp(this, 'updateTimeInterval', void 0),
                            Hp(this, 'clockStarted', !1),
                            Hp(this, 'clockStartedPromise', ji()),
                            Hp(this, '_timeResponse', t => {
                                if (('msg_type' in t && t.error && (this.clockStarted = !1), !this.clockStarted))
                                    return void this.init();
                                const e = t.time,
                                    r = Yi(new Date());
                                e &&
                                    this.clientTimeAtRequest &&
                                    (this.serverTimeAtResponse = e + (r - this.clientTimeAtRequest) / 2),
                                    this.updateTimeInterval && clearInterval(this.updateTimeInterval),
                                    (this.updateTimeInterval = setInterval(() => {
                                        this.serverTimeAtResponse && (this.serverTimeAtResponse += 1),
                                            'function' == typeof this.onTimeUpdated && this.onTimeUpdated();
                                    }, 1e3));
                            });
                    }
                    async init(t, e) {
                        if (((this._api = t), (this.onTimeUpdated = e), this.clockStarted))
                            return this.clockStartedPromise;
                        (this.clockStarted = !0),
                            this.getTimeInterval && clearInterval(this.getTimeInterval),
                            await this.requestTime(),
                            (this.getTimeInterval = setInterval(this.requestTime.bind(this), 3e4));
                    }
                    async requestTime() {
                        (this.clientTimeAtRequest = Yi(new Date())),
                            this.serverTimeAtResponse
                                ? await this._api?.getServerTime().then(this._timeResponse)
                                : this._timeResponse({ time: Math.floor(new Date().getTime() / 1e3) }),
                            this.clockStartedPromise.resolve();
                    }
                    getEpoch() {
                        return this.serverTimeAtResponse ? this.serverTimeAtResponse : Yi(new Date());
                    }
                    getLocalDate() {
                        return (t = this.getEpoch()), new Date(1e3 * t);
                        var t;
                    }
                    getUTCDate() {
                        return Fp(Zi(this.getEpoch()));
                    }
                    static getInstance() {
                        return this._instance || (this._instance = new qp()), this._instance;
                    }
                }
                Hp(qp, '_instance', void 0);
                const Up = qp;
                var $p = h(730),
                    zp = h.n($p);
                function Gp(t, e, r) {
                    return (
                        (e = (function (t) {
                            var e = (function (t, e) {
                                if ('object' != typeof t || !t) return t;
                                var r = t[Symbol.toPrimitive];
                                if (void 0 !== r) {
                                    var i = r.call(t, 'string');
                                    if ('object' != typeof i) return i;
                                    throw new TypeError('@@toPrimitive must return a primitive value.');
                                }
                                return String(t);
                            })(t);
                            return 'symbol' == typeof e ? e : String(e);
                        })(e)),
                        e in t
                            ? Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = r),
                        t
                    );
                }
                let Wp;
                class Kp {
                    constructor(t) {
                        Gp(this, 'mainStore', void 0),
                            Gp(this, 'open', !1),
                            Gp(this, 'onClose', () => this.setOpen(!1)),
                            Gp(this, 'outsideClickCallback', () => this.setOpen(!1)),
                            Gp(
                                this,
                                'setOpen',
                                zp()(
                                    t => {
                                        this.openDialog(t);
                                    },
                                    10,
                                    { leading: !0, trailing: !1 }
                                )
                            ),
                            Gp(this, 'handleClickOutside', t => {
                                let e = !1;
                                'which' in t ? (e = 3 === t.which) : 'button' in t && (e = 2 === t.button),
                                    t.isHandledByDialog || e || this.outsideClickCallback();
                            }),
                            Gp(this, 'closeOnEscape', t => {
                                27 === t.keyCode && this.onClose();
                            }),
                            br(this, {
                                open: Lt,
                                openDialog: Be.bound,
                                register: Be.bound,
                                unregister: Be.bound,
                                onContainerClick: Be.bound,
                                updateCloseCallback: Be.bound,
                                updateOutsideClickCallback: Be.bound,
                                outsideClickCallback: Lt,
                            }),
                            (this.mainStore = t),
                            cr(
                                () => !!this.context,
                                () => {
                                    this.routingStore.registerDialog(this);
                                }
                            );
                    }
                    get context() {
                        return this.mainStore.chart.context;
                    }
                    get routingStore() {
                        return this.mainStore.routing;
                    }
                    openDialog(t) {
                        this.open !== t &&
                            ((this.open = t),
                            this.open ? setTimeout(this.register, 100) : this.unregister(),
                            !0 === t ? (Wp && Wp.openDialog(!1), (Wp = this)) : (Wp = void 0));
                    }
                    updateOutsideClickCallback(t) {
                        void 0 !== t && (this.outsideClickCallback = t);
                    }
                    register() {
                        document.addEventListener('click', this.handleClickOutside, !1),
                            document.addEventListener('keydown', this.closeOnEscape, !1);
                    }
                    unregister() {
                        document.removeEventListener('click', this.handleClickOutside),
                            document.removeEventListener('keydown', this.closeOnEscape);
                    }
                    onContainerClick(t) {
                        t.nativeEvent.isHandledByDialog = !0;
                    }
                    updateCloseCallback(t) {
                        void 0 !== t && (this.onClose = t);
                    }
                }
                function Xp(t, e, r) {
                    return (
                        (e = (function (t) {
                            var e = (function (t, e) {
                                if ('object' != typeof t || !t) return t;
                                var r = t[Symbol.toPrimitive];
                                if (void 0 !== r) {
                                    var i = r.call(t, 'string');
                                    if ('object' != typeof i) return i;
                                    throw new TypeError('@@toPrimitive must return a primitive value.');
                                }
                                return String(t);
                            })(t);
                            return 'symbol' == typeof e ? e : String(e);
                        })(e)),
                        e in t
                            ? Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = r),
                        t
                    );
                }
                class Yp {
                    constructor(t, e) {
                        Xp(this, 'dialogStore', void 0),
                            Xp(this, 'mainStore', void 0),
                            Xp(this, 'dialogStatus', !1),
                            Xp(this, 'route', ''),
                            br(this, {
                                dialogStatus: Lt,
                                route: Lt,
                                open: jt,
                                setOpen: Be.bound,
                                onTitleClick: Be.bound,
                                handleDialogStatus: Be.bound,
                                handleCloseDialog: Be.bound,
                            }),
                            (this.mainStore = t),
                            (this.dialogStore = new Kp(t)),
                            Ue(
                                () => this.open,
                                () => this.blurInput()
                            ),
                            e && e.route && (this.route = e.route);
                    }
                    get context() {
                        return this.mainStore.chart.context;
                    }
                    get routingStore() {
                        return this.mainStore.routing;
                    }
                    get open() {
                        return this.dialogStore.open;
                    }
                    setOpen(t) {
                        this.dialogStore.setOpen(t), this.routingStore.updateRoute(this.route, t);
                    }
                    blurInput() {
                        setTimeout(this.handleDialogStatus, 300);
                    }
                    onTitleClick(t) {
                        t && t.stopPropagation(), this.setOpen(!this.open);
                    }
                    handleDialogStatus() {
                        'indicators' === this.route &&
                            this.mainStore.state.stateChange('INDICATORS_MODAL_TOGGLE', { is_open: this.open }),
                            (this.dialogStatus = this.open);
                    }
                    handleCloseDialog() {
                        (this.dialogStatus = !1), setTimeout(() => this.setOpen(!1), 300);
                    }
                }
                function Zp(t, e, r) {
                    return (
                        (e = (function (t) {
                            var e = (function (t, e) {
                                if ('object' != typeof t || !t) return t;
                                var r = t[Symbol.toPrimitive];
                                if (void 0 !== r) {
                                    var i = r.call(t, 'string');
                                    if ('object' != typeof i) return i;
                                    throw new TypeError('@@toPrimitive must return a primitive value.');
                                }
                                return String(t);
                            })(t);
                            return 'symbol' == typeof e ? e : String(e);
                        })(e)),
                        e in t
                            ? Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = r),
                        t
                    );
                }
                class Qp {
                    constructor(t) {
                        let { mainStore: e } = t;
                        Zp(this, 'dialogPortalNodeId', void 0),
                            Zp(this, 'mainStore', void 0),
                            Zp(this, 'menuStore', void 0),
                            Zp(this, 'scrollPanel', void 0),
                            Zp(this, 'cancelCallback', void 0),
                            br(this, {
                                dialogPortalNodeId: Lt,
                                open: jt,
                                cancelCallback: Lt,
                                setOpen: Be.bound,
                                setCancel: Be.bound,
                                handleCancel: Be.bound,
                                handleContinue: Be.bound,
                            }),
                            (this.mainStore = e),
                            (this.menuStore = new Yp(e, { route: 'indicator-setting' }));
                    }
                    get open() {
                        return this.menuStore.open;
                    }
                    setOpen(t) {
                        return t && this.scrollPanel && (this.scrollPanel.scrollTop = 0), this.menuStore.setOpen(t);
                    }
                    handleCancel() {
                        this.cancelCallback && this.cancelCallback(), this.setOpen(!1), (this.cancelCallback = null);
                    }
                    setCancel(t) {
                        this.cancelCallback = t;
                    }
                    handleContinue() {
                        this.mainStore.timeperiod.setGranularity(0),
                            this.mainStore.studies.deletePredictionStudies(),
                            this.mainStore.studies.cleanupPredictionIndicator(),
                            setTimeout(() => {
                                this.setOpen(!1);
                            }, 100);
                    }
                }
                function Jp(t, e, r) {
                    return (
                        (e = (function (t) {
                            var e = (function (t, e) {
                                if ('object' != typeof t || !t) return t;
                                var r = t[Symbol.toPrimitive];
                                if (void 0 !== r) {
                                    var i = r.call(t, 'string');
                                    if ('object' != typeof i) return i;
                                    throw new TypeError('@@toPrimitive must return a primitive value.');
                                }
                                return String(t);
                            })(t);
                            return 'symbol' == typeof e ? e : String(e);
                        })(e)),
                        e in t
                            ? Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = r),
                        t
                    );
                }
                const tf = { tick: 'T', minute: 'M', hour: 'H', day: 'D' },
                    ef = { minute: 60, hour: 3600, day: 86400 };
                class rf {
                    constructor(t) {
                        Jp(this, '_serverTime', void 0),
                            Jp(this, 'mainStore', void 0),
                            Jp(this, 'portalNodeIdChanged', void 0),
                            Jp(this, 'predictionIndicator', void 0),
                            Jp(this, 'onGranularityChange', () => null),
                            Jp(this, 'remain', null),
                            Jp(this, 'onDataInitialized', () => {
                                this.updateCountdown(),
                                    Ue(
                                        () => [
                                            this.timeUnit,
                                            this.mainStore.chartSetting.countdown,
                                            this.mainStore.chartType.type,
                                            this.loader.currentState,
                                            this.isSymbolOpen,
                                        ],
                                        this.updateCountdown.bind(this)
                                    ),
                                    Ue(
                                        () => this.mainStore.state.granularity,
                                        t => this.onGranularityChange(t)
                                    );
                            }),
                            Jp(this, 'countdownInterval', void 0),
                            Jp(this, 'remainLabelY', () => {
                                const t = this.mainStore.chart.currentClose;
                                if (t) return this.mainStore.chartAdapter.getYFromQuote(t);
                            }),
                            br(this, {
                                changeGranularity: Be.bound,
                                portalNodeIdChanged: Lt,
                                setGranularity: Be.bound,
                                updateProps: Be.bound,
                                updatePortalNode: Be.bound,
                            }),
                            (this.mainStore = t),
                            (this.predictionIndicator = new Qp({ mainStore: t })),
                            (this._serverTime = Up.getInstance()),
                            cr(() => this.mainStore.chartAdapter.isFeedLoaded, this.onDataInitialized);
                    }
                    get loader() {
                        return this.mainStore.loader;
                    }
                    get isTick() {
                        return 'tick' === this.timeUnit;
                    }
                    get isSymbolOpen() {
                        return this.mainStore.chartTitle.isSymbolOpen;
                    }
                    get timeUnit() {
                        return (t => {
                            if (void 0 !== t)
                                return 86400 === t
                                    ? 'day'
                                    : 0 === t
                                      ? 'tick'
                                      : t >= 60 && t <= 1800
                                        ? 'minute'
                                        : 'hour';
                        })(this.mainStore.chart.granularity);
                    }
                    get display() {
                        return void 0 === this.mainStore.chart.granularity
                            ? ''
                            : `${0 === this.mainStore.chart.granularity ? 1 : this.mainStore.chart.granularity / ef[this.timeUnit]} ${tf[this.timeUnit]}`;
                    }
                    clearCountdown() {
                        this.countdownInterval && clearInterval(this.countdownInterval),
                            (this.countdownInterval = void 0);
                    }
                    updateCountdown() {
                        (this.remain = null), this.clearCountdown();
                        const t = () => {
                            if (this.isTick || !this.isSymbolOpen) return void this.clearCountdown();
                            const t = this.mainStore.chart?.feed?.quotes;
                            if (t && t.length) {
                                const e = [...t].filter(t => t && t.Close);
                                if (e && e.length) {
                                    const t = e[e.length - 1];
                                    if (t.DT) {
                                        const e = this._serverTime?.getLocalDate()?.getTime(),
                                            r = e - t.DT.getTime(),
                                            i = 1e3 * (this.mainStore.chart.granularity || 1),
                                            a = r > i ? Math.floor(r / i) + 1 : 1;
                                        (this.remain = Qi(a * i - r)),
                                            this.mainStore.chartAdapter.flutterChart?.config.setRemainingTime(
                                                this.remain || ''
                                            );
                                    }
                                }
                            }
                        };
                        this.mainStore.chartSetting.countdown &&
                            !this.isTick &&
                            (this.countdownInterval || ((this.countdownInterval = setInterval(t, 1e3)), t()));
                    }
                    setGranularity(t) {
                        Rp(Mp.ChartControl, Bp.Interval, t?.toString()),
                            this.onGranularityChange
                                ? this.onGranularityChange(t)
                                : this.mainStore.chart.changeSymbol(void 0, t);
                    }
                    updateProps(t) {
                        void 0 !== this.mainStore.state.granularity && (this.onGranularityChange = t);
                    }
                    changeGranularity(t) {
                        if (t) {
                            const e = kp.find(t => t.id === this.mainStore.chartType.type.id)?.text ?? '';
                            this.mainStore.state.stateChange('CHART_INTERVAL_CHANGE', {
                                time_interval_name: Gi(t, Ap),
                                chart_type_name:
                                    'colored_bar' === this.mainStore.chartType.type.id ? e : e.toLowerCase(),
                            });
                        }
                        0 === t && this.mainStore.studies.hasPredictionIndicator
                            ? ((this.predictionIndicator.dialogPortalNodeId = this.portalNodeIdChanged),
                              this.predictionIndicator.setOpen(!0))
                            : this.onGranularityChange(t);
                    }
                    updatePortalNode(t) {
                        this.portalNodeIdChanged = t;
                    }
                }
                var af = h(6092),
                    nf = h.n(af);
                const sf = (t, e) =>
                        typeof t == typeof e &&
                        (Array.isArray(t)
                            ? of(t, e)
                            : t && e && 'object' == typeof t
                              ? lf(t, e)
                              : !(
                                    'number' != typeof t ||
                                    'number' != typeof e ||
                                    !Number.isNaN(t) ||
                                    !Number.isNaN(e)
                                ) || t === e),
                    of = (t, e) => t === e || (t.length === e.length && t.every((t, r) => sf(t, e[r]))),
                    lf = (t, e) =>
                        t === e ||
                        (Object.keys(t).length === Object.keys(e).length && Object.keys(t).every(r => sf(t[r], e[r])));
                function cf(t, e, r) {
                    return (
                        (e = (function (t) {
                            var e = (function (t, e) {
                                if ('object' != typeof t || !t) return t;
                                var r = t[Symbol.toPrimitive];
                                if (void 0 !== r) {
                                    var i = r.call(t, 'string');
                                    if ('object' != typeof i) return i;
                                    throw new TypeError('@@toPrimitive must return a primitive value.');
                                }
                                return String(t);
                            })(t);
                            return 'symbol' == typeof e ? e : String(e);
                        })(e)),
                        e in t
                            ? Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = r),
                        t
                    );
                }
                const hf = [
                    'synthetic_index',
                    'basket_index',
                    'forex',
                    'indices',
                    'stocks',
                    'cryptocurrency',
                    'commodities',
                ];
                class uf {
                    constructor(t, e, r) {
                        cf(this, '_api', void 0),
                            cf(this, '_params', void 0),
                            cf(this, '_tradingTimes', void 0),
                            cf(this, 'processedSymbols', void 0),
                            cf(this, 'changes', {}),
                            cf(this, 'categorizedSymbols', []),
                            cf(this, 'symbolMap', {}),
                            cf(this, 'symbolsPromise', ji()),
                            cf(this, 'isRetrievingSymbols', !1),
                            br(this, {
                                categorizedSymbols: Lt,
                                changes: Lt,
                                retrieveActiveSymbols: Be.bound,
                                computeActiveSymbols: Be.bound,
                                activeSymbols: jt,
                            }),
                            (this._api = t),
                            (this._tradingTimes = e),
                            (this._params = r);
                    }
                    async retrieveActiveSymbols() {
                        let t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                        if (this.isRetrievingSymbols && !t) return await this.symbolsPromise, this.activeSymbols;
                        const e = await this._api.getActiveSymbols();
                        this.isRetrievingSymbols = !0;
                        let r = [];
                        if (this._params.activeSymbols && !this.processedSymbols) r = this._params.activeSymbols;
                        else {
                            if (!1 === this._params.enable && sf(e.active_symbols, this._params.activeSymbols))
                                return this._params.chartData && !1 === this._params.enable
                                    ? void console.log('ActiveSymbols would render through chartData.')
                                    : void console.error('ActiveSymbols feed is not enable nor has initial data!');
                            (r = e.active_symbols), (this._params.activeSymbols = e.active_symbols);
                        }
                        return (
                            void 0 !== r && this.computeActiveSymbols(r),
                            this.symbolsPromise.resolve(),
                            this.activeSymbols
                        );
                    }
                    computeActiveSymbols(t) {
                        je(() => {
                            (this.processedSymbols = this._processSymbols(t)),
                                (this.categorizedSymbols = this._categorizeActiveSymbols(this.processedSymbols));
                        });
                        for (const t of this.processedSymbols || []) this.symbolMap[t.symbol] = t;
                        this._tradingTimes.onMarketOpenCloseChanged(
                            Be(t => {
                                for (const e in t) {
                                    const r = this.symbolMap[e];
                                    r && (r.exchange_is_open = t[e]);
                                }
                                this.changes = t;
                            })
                        );
                    }
                    get activeSymbols() {
                        return ta(this.categorizedSymbols, t => {
                            const e = t,
                                { symbol: r } = e.dataObject;
                            return r in this.changes && (e.dataObject.exchange_is_open = this.changes[r]), { ...t };
                        });
                    }
                    getSymbolObj(t) {
                        return this.symbolMap[t];
                    }
                    _processSymbols(t) {
                        const e = [],
                            r = (function (t, e) {
                                const r = t;
                                return t.slice(0).sort((t, e) => {
                                    const i = ((t, e) =>
                                        t.submarket_display_name.localeCompare(e.submarket_display_name))(t, e);
                                    return 0 === i ? r.indexOf(t) - r.indexOf(e) : i;
                                });
                            })(t);
                        for (const t of r)
                            e.push({
                                symbol: t.symbol,
                                name: t.display_name,
                                market: t.market,
                                market_display_name: t.market_display_name,
                                subgroup: t.subgroup,
                                subgroup_display_name: t.subgroup_display_name,
                                submarket_display_name: t.submarket_display_name,
                                exchange_is_open: !!t.exchange_is_open,
                                decimal_places: t.pip.toString().length - 2,
                            });
                        const i =
                                'function' == typeof this._params.getMarketsOrder
                                    ? this._params.getMarketsOrder(t)
                                    : hf,
                            a = [];
                        for (const t of i) for (const r of e) t === r.market && a.push(r);
                        return a;
                    }
                    _categorizeActiveSymbols(t) {
                        const e = [],
                            r = t[0],
                            i = t => ({ subcategoryName: t.submarket_display_name, data: [] }),
                            a = t => ({
                                categoryName: t.market_display_name,
                                categoryId: t.market,
                                hasSubcategory: !0,
                                hasSubgroup: !(!t.subgroup || 'none' === t.subgroup),
                                data: [],
                                subgroups: [],
                            });
                        let n = i(r),
                            s = a(r);
                        for (const r of t)
                            s.categoryName !== r.market_display_name &&
                                s.categoryName !== r.subgroup_display_name &&
                                (s.data.push(n), e.push(s), (n = i(r)), (s = a(r))),
                                s.hasSubgroup &&
                                    (s.subgroups?.some(t => t.categoryId === r.subgroup) ||
                                        s.subgroups?.push({
                                            data: [],
                                            categoryName: r.subgroup_display_name,
                                            categoryId: r.subgroup,
                                            hasSubcategory: !0,
                                            hasSubgroup: !1,
                                            subgroups: [],
                                        }),
                                    s.subgroups
                                        ?.find(t => t.categoryId === r.subgroup)
                                        ?.data.find(t => t.subcategoryName === r.submarket_display_name) ||
                                        ((n = i(r)),
                                        s.subgroups?.find(t => t.categoryId === r.subgroup)?.data.push(n),
                                        (n = i(r))),
                                    s.subgroups
                                        ?.find(t => t.categoryId === r.subgroup)
                                        ?.data.find(t => t.subcategoryName === r.submarket_display_name)
                                        ?.data.push({ enabled: !0, itemId: r.symbol, display: r.name, dataObject: r })),
                                n.subcategoryName !== r.submarket_display_name && (s.data.push(n), (n = i(r))),
                                n.data.push({ enabled: !0, itemId: r.symbol, display: r.name, dataObject: r });
                        return s.data.push(n), e.push(s), e;
                    }
                }
                function df(t, e, r) {
                    return (
                        (e = (function (t) {
                            var e = (function (t, e) {
                                if ('object' != typeof t || !t) return t;
                                var r = t[Symbol.toPrimitive];
                                if (void 0 !== r) {
                                    var i = r.call(t, 'string');
                                    if ('object' != typeof i) return i;
                                    throw new TypeError('@@toPrimitive must return a primitive value.');
                                }
                                return String(t);
                            })(t);
                            return 'symbol' == typeof e ? e : String(e);
                        })(e)),
                        e in t
                            ? Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = r),
                        t
                    );
                }
                const gf = ['Sundays', 'Mondays', 'Tuesdays', 'Wednesdays', 'Thursdays', 'Fridays', 'Saturdays'];
                class mf {
                    static get EVENT_MARKET_OPEN_CLOSE_CHANGE() {
                        return 'EVENT_MARKET_OPEN_CLOSE_CHANGE';
                    }
                    static get FEED_UNAVAILABLE() {
                        return 'chartonly';
                    }
                    constructor(t, e) {
                        df(this, '_api', void 0),
                            df(this, '_emitter', void 0),
                            df(this, '_params', void 0),
                            df(this, '_serverTime', void 0),
                            df(this, '_shouldFetchTradingTimes', void 0),
                            df(this, '_tradingTimesMap', void 0),
                            df(this, '_updateTimer', void 0),
                            df(this, 'lastUpdateDate', void 0),
                            df(this, 'isInitialized', !1),
                            df(this, 'tradingTimesPromise', ji()),
                            df(this, 'timeUpdateCallback', void 0),
                            (this._params = e || {}),
                            (this._shouldFetchTradingTimes = !1 !== e?.shouldFetchTradingTimes),
                            (this._api = t),
                            (this._serverTime = Up.getInstance()),
                            (this._emitter = new (Vi())({ emitDelay: 0 }));
                    }
                    destructor() {
                        this._updateTimer && clearTimeout(this._updateTimer);
                    }
                    async initialize() {
                        if (
                            (await this._serverTime.init(this._api, () => {
                                'function' == typeof this.timeUpdateCallback && this.timeUpdateCallback();
                            }),
                            this.isInitialized)
                        )
                            return this.tradingTimesPromise;
                        if (
                            ((this.isInitialized = !0),
                            (this.lastUpdateDate = this._serverTime.getLocalDate().toISOString().substring(0, 10)),
                            !this._tradingTimesMap && this._shouldFetchTradingTimes)
                        ) {
                            await this._updateTradeTimes(), this.tradingTimesPromise.resolve();
                            const t = async () => {
                                const e = this._updateMarketOpenClosed();
                                Object.keys(e).length > 0 && this._emitter.emit(mf.EVENT_MARKET_OPEN_CLOSE_CHANGE, e);
                                let r = this._nextUpdateDate();
                                if (!r) {
                                    const t = this._serverTime.getLocalDate(),
                                        e = new Date(`${this.lastUpdateDate}T00:00:00Z`);
                                    e.setDate(e.getDate() + 1),
                                        (this.lastUpdateDate = (t > e ? t : e).toISOString().substring(0, 10));
                                    const i = {};
                                    for (const t in this._tradingTimesMap) i[t] = !!this._tradingTimesMap[t].isOpened;
                                    await this._updateTradeTimes();
                                    for (const t in this._tradingTimesMap) this._tradingTimesMap[t].isOpened = i[t];
                                    r = e;
                                }
                                const i = r - this._serverTime.getLocalDate();
                                this._updateTimer = setTimeout(t, i);
                            };
                            await t();
                        }
                    }
                    _updateMarketOpenClosed() {
                        const t = {};
                        for (const e in this._tradingTimesMap) {
                            const r = this._calcIsMarketOpened(e);
                            this._tradingTimesMap[e].isOpened !== r &&
                                ((this._tradingTimesMap[e].isOpened = r), (t[e] = r));
                        }
                        return t;
                    }
                    async _updateTradeTimes() {
                        let t = {};
                        if (!this._tradingTimesMap && this._params.tradingTimes) t = this._params.tradingTimes;
                        else {
                            if (!1 === this._params.enable)
                                return void console.error('TradingTimes feed is not enable nor has initial data!');
                            t = await this._api.getTradingTimes(this.lastUpdateDate);
                        }
                        if ('error' in t && t?.error) {
                            const e = t.error;
                            console.error(
                                `Error getting trading times on ${this.lastUpdateDate}: [${e.code}] "${e.message}"`
                            );
                        } else this._calculatingTradingTime(t.trading_times);
                    }
                    _calculatingTradingTime(t) {
                        if (!t) return;
                        this._tradingTimesMap = {};
                        const e = this._serverTime.getLocalDate(),
                            r = e.toISOString().substring(0, 11),
                            i = t => new Date(`${r}${t}Z`);
                        if (!t) return;
                        const { markets: a } = t;
                        for (const t of a) {
                            const { submarkets: a = [] } = t;
                            for (const t of a) {
                                const { symbols: a = [] } = t;
                                for (const t of a) {
                                    const {
                                            events: a,
                                            feed_license: n,
                                            delay_amount: s,
                                            times: o,
                                            trading_days: l,
                                            symbol: c,
                                        } = t,
                                        { open: h, close: u } = o;
                                    let d = !1;
                                    const g = [],
                                        m = [],
                                        p = [];
                                    let f;
                                    a.map(t =>
                                        t.dates.includes(',')
                                            ? t.dates.split(',').map(e => ({ date: e.trim(), description: t.descrip }))
                                            : [{ date: t.dates, description: t.descrip }]
                                    )
                                        .reduce((t, e) => t.concat(e), [])
                                        .forEach(t => {
                                            const i = t.description.toLowerCase();
                                            if (
                                                /^opens late \(at (\d{1,2}:\d{1,2})\)$/gm.test(
                                                    t.description.toLowerCase()
                                                )
                                            ) {
                                                const a = `${i.replace('opens late (at ', '').replace(')', '')}:00`,
                                                    n =
                                                        'today' === t.date || t.date === gf[e.getDay()]
                                                            ? r.substring(0, 10)
                                                            : t.date;
                                                p.push({
                                                    date: n,
                                                    open: new Date(`${n}T${a}Z`),
                                                    close: new Date(`${n}T${u[0]}Z`),
                                                });
                                            } else if (/^closes early \(at (\d{1,2}:\d{1,2})\)$/gm.test(i)) {
                                                const a = `${i.replace('closes early (at ', '').replace(')', '')}:00`,
                                                    n =
                                                        'today' === t.date || t.date === gf[e.getDay()]
                                                            ? r.substring(0, 10)
                                                            : t.date;
                                                m.push({
                                                    date: n,
                                                    open: new Date(`${n}T${h[0]}Z`),
                                                    close: new Date(`${n}T${a}Z`),
                                                });
                                            } else /^\d{4}-\d{2}-\d{2}$/.test(t.date) && g.push(t.date);
                                            l.every(t => t !== gf[e.getDay()].slice(0, 3)) && (d = !0);
                                        });
                                    const _ = 1 === h.length && '00:00:00' === h[0] && '23:59:59' === u[0],
                                        v = 1 === h.length && '--' === h[0] && '--' === u[0];
                                    _ || v || (f = h.map((t, e) => ({ open: i(t), close: i(u[e]) }))),
                                        (this._tradingTimesMap[c] = {
                                            feed_license: n,
                                            isClosedToday: d,
                                            holidays: g,
                                            closes_early: m,
                                            opens_late: p,
                                            delay_amount: s || 0,
                                            times: f,
                                            isOpenAllDay: _,
                                            isClosedAllDay: v,
                                        });
                                }
                            }
                        }
                        const n = this._updateMarketOpenClosed();
                        Object.keys(n).length > 0 && this._emitter.emit(mf.EVENT_MARKET_OPEN_CLOSE_CHANGE, n);
                    }
                    isFeedUnavailable(t) {
                        if (this._tradingTimesMap)
                            return t in this._tradingTimesMap
                                ? this._tradingTimesMap[t]?.feed_license === mf.FEED_UNAVAILABLE
                                : (console.error(
                                      'Symbol not in _tradingTimesMap:',
                                      t,
                                      ' trading map:',
                                      this._tradingTimesMap
                                  ),
                                  !1);
                    }
                    getDelayedMinutes(t) {
                        return this._tradingTimesMap?.[t].delay_amount;
                    }
                    isMarketOpened(t) {
                        if (this._tradingTimesMap)
                            return t in this._tradingTimesMap
                                ? this._tradingTimesMap[t].isOpened
                                : (console.error(
                                      'Symbol not in _tradingTimesMap:',
                                      t,
                                      ' trading map:',
                                      this._tradingTimesMap
                                  ),
                                  !1);
                    }
                    _calcIsMarketOpened(t) {
                        const e = this._serverTime.getLocalDate(),
                            r = e.toISOString().substring(0, 10);
                        if (!this._tradingTimesMap) return;
                        const {
                            times: i,
                            feed_license: a,
                            isOpenAllDay: n,
                            isClosedAllDay: s,
                            holidays: o,
                            closes_early: l,
                            opens_late: c,
                            isClosedToday: h,
                        } = this._tradingTimesMap[t];
                        if (s || a === mf.FEED_UNAVAILABLE || h || o.includes(r)) return !1;
                        const u = c.find(t => t.date === r);
                        if (u) {
                            const { open: t, close: r } = u;
                            return !!(e >= t && e < r);
                        }
                        const d = l.find(t => t.date === r);
                        if (d) {
                            const { open: t, close: r } = d;
                            return !!(e >= t && e < r);
                        }
                        if (n) return !0;
                        if (i)
                            for (const t of i) {
                                const { open: r, close: i } = t;
                                if (e >= r && e < i) return !0;
                            }
                        return !1;
                    }
                    _nextUpdateDate() {
                        const t = this._serverTime.getLocalDate();
                        let e;
                        for (const r in this._tradingTimesMap) {
                            const {
                                times: i,
                                feed_license: a,
                                isOpenAllDay: n,
                                isClosedAllDay: s,
                            } = this._tradingTimesMap[r];
                            if (!n && !s && a !== mf.FEED_UNAVAILABLE && i)
                                for (const r of i) {
                                    const { open: i, close: a } = r;
                                    i > t && (!e || i < e) && (e = i), a > t && (!e || a < e) && (e = a);
                                }
                        }
                        return e;
                    }
                    onMarketOpenCloseChanged(t) {
                        this._emitter.on(mf.EVENT_MARKET_OPEN_CLOSE_CHANGE, t);
                    }
                    onTimeChanged(t) {
                        this.timeUpdateCallback = t;
                    }
                }
                const pf = mf;
                function ff(t, e, r) {
                    return (
                        (e = (function (t) {
                            var e = (function (t, e) {
                                if ('object' != typeof t || !t) return t;
                                var r = t[Symbol.toPrimitive];
                                if (void 0 !== r) {
                                    var i = r.call(t, 'string');
                                    if ('object' != typeof i) return i;
                                    throw new TypeError('@@toPrimitive must return a primitive value.');
                                }
                                return String(t);
                            })(t);
                            return 'symbol' == typeof e ? e : String(e);
                        })(e)),
                        e in t
                            ? Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = r),
                        t
                    );
                }
                class _f {
                    static get DEFAULT_COUNT() {
                        return 1e3;
                    }
                    constructor(t, e, r, i) {
                        ff(this, 'requestAPI', void 0),
                            ff(this, 'requestForget', void 0),
                            ff(this, 'requestForgetStream', void 0),
                            ff(this, 'requestSubscribe', void 0),
                            ff(this, 'streamRequests', {}),
                            ff(this, 'tradingTimesCache', null),
                            (this.requestAPI = t),
                            (this.requestSubscribe = e),
                            (this.requestForget = r),
                            (this.requestForgetStream = i);
                    }
                    getActiveSymbols() {
                        return this.requestAPI({ active_symbols: 'brief' });
                    }
                    getServerTime() {
                        return this.requestAPI({ time: 1 });
                    }
                    async getTradingTimes() {
                        let t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 'today';
                        if (this.tradingTimesCache && this.tradingTimesCache.trading_times === t)
                            return { ...this.tradingTimesCache };
                        const e = await this.requestAPI({ trading_times: t });
                        return 'today' !== t && (this.tradingTimesCache = { ...e }), e;
                    }
                    getTickHistory(t) {
                        const e = _f.createTickHistoryRequest(t);
                        return this.requestAPI(e);
                    }
                    subscribeTickHistory(t, e) {
                        const r = this._getKey(t),
                            i = _f.createTickHistoryRequest({ ...t, subscribe: 1 });
                        (this.streamRequests[r] = { request: i, callback: e }), this.requestSubscribe({ ...i }, e);
                    }
                    forget(t) {
                        const e = this._getKey(t);
                        if (!this.streamRequests[e]) return;
                        const { request: r, callback: i } = this.streamRequests[e];
                        return delete this.streamRequests[e], this.requestForget(r, i);
                    }
                    forgetStream(t) {
                        if (this.requestForgetStream && 'function' == typeof this.requestForgetStream)
                            return this.requestForgetStream(t);
                    }
                    static createTickHistoryRequest(t) {
                        let {
                            symbol: e,
                            granularity: r,
                            start: i,
                            end: a,
                            subscribe: n,
                            adjust_start_time: s = 1,
                            count: o,
                        } = t;
                        const l = {
                            ticks_history: e,
                            style: r ? 'candles' : 'ticks',
                            end: 'latest',
                            count: o || _f.DEFAULT_COUNT,
                        };
                        return (
                            r && (l.granularity = +r),
                            s && (l.adjust_start_time = s),
                            n && (l.subscribe = 1),
                            i && (delete l.count, (l.start = i)),
                            a && (l.end = a),
                            l
                        );
                    }
                    _getKey(t) {
                        let { symbol: e, granularity: r } = t;
                        return `${e}-${r}`;
                    }
                }
                function vf(t, e, r) {
                    return (
                        (e = (function (t) {
                            var e = (function (t, e) {
                                if ('object' != typeof t || !t) return t;
                                var r = t[Symbol.toPrimitive];
                                if (void 0 !== r) {
                                    var i = r.call(t, 'string');
                                    if ('object' != typeof i) return i;
                                    throw new TypeError('@@toPrimitive must return a primitive value.');
                                }
                                return String(t);
                            })(t);
                            return 'symbol' == typeof e ? e : String(e);
                        })(e)),
                        e in t
                            ? Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = r),
                        t
                    );
                }
                const bf = class {
                    constructor(t, e) {
                        vf(this, 'params', void 0),
                            vf(this, 'topNode', void 0),
                            (this.params = e || {}),
                            (this.topNode = t);
                    }
                };
                class yf {
                    static formatHistory(t) {
                        const { history: e, candles: r } = t;
                        if (e) {
                            const { times: t = [], prices: r = [] } = e;
                            return r.map((e, r) => ({ Date: Zi(+t[r]), Close: +e }));
                        }
                        if (r)
                            return r.map(t => {
                                const e = t;
                                return {
                                    Date: Zi(+e.epoch),
                                    Open: +e.open,
                                    High: +e.high,
                                    Low: +e.low,
                                    Close: +e.close,
                                };
                            });
                    }
                    static formatTick(t) {
                        if ('tick' in t) {
                            const { tick: e } = t,
                                r = e;
                            return { Date: Zi(+r.epoch), Close: +r.quote, tick: e };
                        }
                        if ('ohlc' in t) {
                            const { ohlc: e } = t;
                            return {
                                Date: Zi(+e.open_time),
                                Open: +e.open,
                                High: +e.high,
                                Low: +e.low,
                                Close: +e.close,
                                ohlc: e,
                            };
                        }
                    }
                    static formatAllTicks(t) {
                        const e = e => {
                            const r = t?.[e + 1],
                                i = t?.[e - 1];
                            return i?.tick && r?.tick ? oa(i?.tick, r?.tick, 0.5) : r?.tick || i?.tick;
                        };
                        return t?.map((t, r) => ({ Date: Zi(+t.epoch), Close: +(t.tick || e(r)) }));
                    }
                    static formatPOCTick(t) {
                        const { tick_stream: e = [], underlying: r = '' } = t || {};
                        return e.length && r
                            ? e.map(t => {
                                  let { epoch: e = 0, tick: i, tick_display_value: a } = t;
                                  return {
                                      Date: Zi(e),
                                      Close: i || 0,
                                      tick: {
                                          epoch: e,
                                          quote: i || 0,
                                          symbol: r,
                                          pip_size: a?.split('.')[1]?.length || 0,
                                      },
                                  };
                              })
                            : null;
                    }
                }
                function Sf(t, e, r) {
                    return (
                        (e = (function (t) {
                            var e = (function (t, e) {
                                if ('object' != typeof t || !t) return t;
                                var r = t[Symbol.toPrimitive];
                                if (void 0 !== r) {
                                    var i = r.call(t, 'string');
                                    if ('object' != typeof i) return i;
                                    throw new TypeError('@@toPrimitive must return a primitive value.');
                                }
                                return String(t);
                            })(t);
                            return 'symbol' == typeof e ? e : String(e);
                        })(e)),
                        e in t
                            ? Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = r),
                        t
                    );
                }
                class wf {
                    static get EVENT_CHART_DATA() {
                        return 'EVENT_CHART_DATA';
                    }
                    get contractInfo() {
                        return this._mainStore.state.contractInfo;
                    }
                    get shouldFetchTickHistory() {
                        return this._mainStore.state.shouldFetchTickHistory || !1;
                    }
                    constructor(t, e, r) {
                        Sf(this, '_binaryApi', void 0),
                            Sf(this, '_emitter', void 0),
                            Sf(this, '_request', void 0),
                            Sf(this, 'lastStreamEpoch', void 0),
                            Sf(this, '_mainStore', void 0),
                            (this._binaryApi = e),
                            (this._request = t),
                            (this._emitter = new (Vi())({ emitDelay: 0 })),
                            (this._mainStore = r);
                    }
                    async initialFetch() {
                        return await this._startSubscribe(this._request);
                    }
                    pause() {}
                    async resume() {
                        if (this.lastStreamEpoch) {
                            const t = { ...this._request, start: this.lastStreamEpoch };
                            return await this._startSubscribe(t);
                        }
                    }
                    forget() {
                        (this.lastStreamEpoch = void 0), this._emitter.off(wf.EVENT_CHART_DATA);
                    }
                    async _startSubscribe(t) {
                        throw new Error('Please override!');
                    }
                    _processHistoryResponse(t) {
                        if (t.error) throw t.error;
                        const e = yf.formatHistory(t);
                        if (!e) throw new Error(`Unexpected response: ${t}`);
                        return (this.lastStreamEpoch = wf.getLatestEpoch(t)), e;
                    }
                    onChartData(t) {
                        this._emitter.on(wf.EVENT_CHART_DATA, t);
                    }
                    static getLatestEpoch(t) {
                        let { candles: e, history: r } = t;
                        if (e) return e[e.length - 1].epoch;
                        if (r) {
                            const { times: t = [] } = r;
                            return t[t.length - 1];
                        }
                    }
                    static getEpochFromTick(t) {
                        return 'tick' in t && t.tick ? t.tick.epoch : t.ohlc.open_time;
                    }
                }
                const Cf = wf;
                function Ef(t, e, r) {
                    return (
                        (e = (function (t) {
                            var e = (function (t, e) {
                                if ('object' != typeof t || !t) return t;
                                var r = t[Symbol.toPrimitive];
                                if (void 0 !== r) {
                                    var i = r.call(t, 'string');
                                    if ('object' != typeof i) return i;
                                    throw new TypeError('@@toPrimitive must return a primitive value.');
                                }
                                return String(t);
                            })(t);
                            return 'symbol' == typeof e ? e : String(e);
                        })(e)),
                        e in t
                            ? Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = r),
                        t
                    );
                }
                const xf = class extends Cf {
                    constructor(t, e, r, i) {
                        super(t, e, i),
                            Ef(this, '_timerId', void 0),
                            Ef(this, 'UPDATE_INTERVAL', 3e3),
                            Ef(this, 'onUpdateDelayedFeed', async () => {
                                if (this.lastStreamEpoch) {
                                    const t = { ...this._request, start: this.lastStreamEpoch, adjust_start_time: 0 },
                                        e = await this._binaryApi.getTickHistory(t),
                                        r = this._processHistoryResponse(e);
                                    this._emitter?.emit(Cf.EVENT_CHART_DATA, r);
                                } else
                                    console.error('Unable to update delayed feed without epoch from last tick'),
                                        this._endTimer();
                            }),
                            (this._request = { ...this._request, start: this._request.start - 60 * r });
                    }
                    pause() {
                        this._endTimer();
                    }
                    async _startSubscribe(t) {
                        const e = await this._binaryApi.getTickHistory(t),
                            r = this._processHistoryResponse(e);
                        return this._startTimer(), { quotes: r, response: e };
                    }
                    forget() {
                        this._endTimer(), super.forget();
                    }
                    _startTimer() {
                        this._timerId || (this._timerId = setInterval(this.onUpdateDelayedFeed, this.UPDATE_INTERVAL));
                    }
                    _endTimer() {
                        this._timerId && (clearInterval(this._timerId), (this._timerId = void 0));
                    }
                };
                const Tf = class extends Cf {
                    constructor() {
                        var t, e, r;
                        super(...arguments),
                            (t = this),
                            (r = void 0),
                            (e = (function (t) {
                                var e = (function (t, e) {
                                    if ('object' != typeof t || !t) return t;
                                    var r = t[Symbol.toPrimitive];
                                    if (void 0 !== r) {
                                        var i = r.call(t, 'string');
                                        if ('object' != typeof i) return i;
                                        throw new TypeError('@@toPrimitive must return a primitive value.');
                                    }
                                    return String(t);
                                })(t);
                                return 'symbol' == typeof e ? e : String(e);
                            })((e = '_tickCallback'))),
                            e in t
                                ? Object.defineProperty(t, e, {
                                      value: r,
                                      enumerable: !0,
                                      configurable: !0,
                                      writable: !0,
                                  })
                                : (t[e] = r);
                    }
                    pause() {
                        this._tickCallback = void 0;
                    }
                    async resume() {
                        if (this._tickCallback) throw new Error('You cannot resume an active stream!');
                        return super.resume();
                    }
                    async _startSubscribe(t) {
                        const e = this.contractInfo,
                            [r, i] = this._getProcessTickHistoryClosure();
                        if (!this.shouldFetchTickHistory && e.tick_stream)
                            this._binaryApi.subscribeTickHistory(Object.assign(t, { count: e.tick_count }), i);
                        else {
                            const r = e.current_spot_time && e.date_start ? e.current_spot_time - e.date_start : 0,
                                a = 1e3;
                            this._binaryApi.subscribeTickHistory(Object.assign(t, { count: r > a ? r : a }), i);
                        }
                        const a = await r,
                            n = this._processHistoryResponse(a);
                        return (this._tickCallback = i), { quotes: n, response: a };
                    }
                    forget() {
                        if (this._tickCallback) {
                            const { symbol: t, granularity: e } = this._request;
                            this._binaryApi.forget({ symbol: t, granularity: e }), (this._tickCallback = void 0);
                        }
                        super.forget();
                    }
                    _getProcessTickHistoryClosure() {
                        const t = ji();
                        return [
                            t,
                            e => {
                                this._mainStore.chart.isDestroyed && e.subscription?.id
                                    ? this._binaryApi.forgetStream(e.subscription?.id)
                                    : ['tick', 'ohlc'].includes(e.msg_type)
                                      ? this._onTick(e)
                                      : t.resolve(e);
                            },
                        ];
                    }
                    _onTick(t) {
                        this.lastStreamEpoch = +Cf.getEpochFromTick(t);
                        const e = [yf.formatTick(t)];
                        this._emitter.emit(Cf.EVENT_CHART_DATA, e);
                    }
                };
                function kf(t, e, r) {
                    return (
                        (e = (function (t) {
                            var e = (function (t, e) {
                                if ('object' != typeof t || !t) return t;
                                var r = t[Symbol.toPrimitive];
                                if (void 0 !== r) {
                                    var i = r.call(t, 'string');
                                    if ('object' != typeof i) return i;
                                    throw new TypeError('@@toPrimitive must return a primitive value.');
                                }
                                return String(t);
                            })(t);
                            return 'symbol' == typeof e ? e : String(e);
                        })(e)),
                        e in t
                            ? Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = r),
                        t
                    );
                }
                class Af {
                    static get EVENT_MASTER_DATA_UPDATE() {
                        return 'EVENT_MASTER_DATA_UPDATE';
                    }
                    static get EVENT_MASTER_DATA_REINITIALIZE() {
                        return 'EVENT_MASTER_DATA_REASSIGN';
                    }
                    static get EVENT_START_PAGINATION() {
                        return 'EVENT_START_PAGINATION';
                    }
                    static get EVENT_ON_PAGINATION() {
                        return 'EVENT_ON_PAGINATION';
                    }
                    get startEpoch() {
                        return this._mainStore.state.startEpoch;
                    }
                    get endEpoch() {
                        return this._mainStore.state.endEpoch;
                    }
                    get granularity() {
                        return this._mainStore.chart.granularity;
                    }
                    get allTicks() {
                        return this._mainStore.state.allTicks;
                    }
                    get shouldFetchTickHistory() {
                        return this._mainStore.state.shouldFetchTickHistory || !1;
                    }
                    get contractInfo() {
                        return this._mainStore.state.contractInfo;
                    }
                    get loader() {
                        return this._mainStore.loader;
                    }
                    get margin() {
                        return this._mainStore.state.margin;
                    }
                    get hasAlternativeSource() {
                        return this._mainStore.state.shouldDrawTicksFromContractInfo;
                    }
                    get paginationLoader() {
                        return this._mainStore.paginationLoader;
                    }
                    constructor(t, e, r) {
                        kf(this, '_binaryApi', void 0),
                            kf(this, '_connectionClosedDate', void 0),
                            kf(this, '_emitter', void 0),
                            kf(this, '_mainStore', void 0),
                            kf(this, '_serverTime', void 0),
                            kf(this, 'tickQueue', []),
                            kf(this, '_tradingTimes', void 0),
                            kf(this, 'quotes', []),
                            kf(this, '_activeStreams', {}),
                            kf(this, '_isConnectionOpened', !0),
                            kf(this, 'onRangeChanged', () => {
                                this._mainStore.state.setChartIsReady(!1),
                                    this._mainStore.state.saveLayout(),
                                    this._mainStore.state.setChartIsReady(!0);
                            }),
                            (this._binaryApi = t),
                            (this._mainStore = e),
                            (this._serverTime = Up.getInstance()),
                            (this._tradingTimes = r),
                            Ue(() => e.state.isConnectionOpened, this.onConnectionChanged.bind(this)),
                            (this._emitter = new (Vi())({ emitDelay: 0 }));
                    }
                    subscribe() {}
                    unsubscribe(t) {
                        let { symbol: e, granularity: r } = t;
                        const i = this._getKey({ symbol: e, granularity: r });
                        this._forgetStream(i);
                    }
                    _forgetStream(t) {
                        this._activeStreams[t] && (this._activeStreams[t].forget(), delete this._activeStreams[t]);
                    }
                    processQuotes(t) {
                        t.forEach(t => {
                            t.DT = new Date(`${t.Date}Z`);
                        });
                    }
                    updateQuotes(t, e) {
                        this.processQuotes(t), e ? this.quotes.unshift(...t) : (this.quotes = t);
                    }
                    addQuote(t) {
                        this.processQuotes([t]), this.quotes.push(t);
                    }
                    getQuoteForEpoch(t) {
                        return this.quotes.find(e => e.DT?.getTime() == t);
                    }
                    getQuoteIndexForEpoch(t) {
                        return this.quotes.findIndex(e => e.DT?.getTime() == t);
                    }
                    getClosestValidEpoch(t, e) {
                        return Math.round(t / e) * e;
                    }
                    getClosestQuoteForEpoch(t) {
                        const e = this.findEpochIndex(t);
                        if (e < 0) return this.quotes[0];
                        if (e > this.quotes.length - 1) return this.quotes[this.quotes.length - 1];
                        {
                            const r = this.quotes[Math.floor(e)],
                                i = this.quotes[Math.ceil(e)];
                            return t - r.DT.getTime() <= i.DT.getTime() - t ? r : i;
                        }
                    }
                    getClosestQuoteIndexForEpoch(t) {
                        const e = this.findEpochIndex(t);
                        if (e < 0) return this.quotes[0];
                        if (e > this.quotes.length - 1) return this.quotes[this.quotes.length - 1];
                        {
                            const r = this.quotes[Math.floor(e)],
                                i = this.quotes[Math.ceil(e)];
                            return t - r.DT.getTime() <= i.DT.getTime() - t ? Math.floor(e) : Math.ceil(e);
                        }
                    }
                    findEpochIndex(t) {
                        let e = -1,
                            r = this.quotes.length;
                        for (; r - e > 1; ) {
                            const i = Math.trunc((e + r) / 2),
                                a = this.quotes[i].DT?.getTime();
                            if (!a) return i;
                            if (t < a) r = i;
                            else {
                                if (!(t > a)) return i;
                                e = i;
                            }
                        }
                        return e >= 0 && t == this.quotes[e].DT?.getTime()
                            ? e
                            : r < this.quotes.length && t == this.quotes[r].DT?.getTime()
                              ? r
                              : (e + r) / 2;
                    }
                    getQuotesInterval() {
                        if (this.quotes.length <= 1) return 1;
                        const t = this.quotes.reduce((t, e, r, i) => {
                            const a = e.DT?.getTime(),
                                n = i[r - 1]?.DT?.getTime();
                            return n && a ? t + (a - n) / 1e3 : t;
                        }, 0);
                        return Math.round(t / (this.quotes.length - 1));
                    }
                    async fetchInitialData(t, e, r) {
                        (this.tickQueue = []),
                            this.setHasReachedEndOfData(!1),
                            this.paginationLoader.updateOnPagination(!0);
                        const { granularity: i, symbolObject: a } = e,
                            n = this._getKey({ symbol: t, granularity: i });
                        let s = this.margin && this.startEpoch ? this.startEpoch - this.margin : this.startEpoch;
                        const o = this.margin && this.endEpoch ? this.endEpoch + this.margin : this.endEpoch,
                            l = a.name;
                        if ((this.loader.setState('chart-data'), this._tradingTimes.isFeedUnavailable(t))) {
                            this._mainStore.notifier.notifyFeedUnavailable(l);
                            let t = { quotes: [] };
                            return this._mainStore.chart.setChartAvailability(!1), void r(t);
                        }
                        const c = {
                                symbol: t,
                                granularity: i,
                                start: s,
                                count: this.endEpoch ? void 0 : this._mainStore.lastDigitStats.count,
                            },
                            h = this.contractInfo.validation_error_code;
                        let u,
                            d = !1;
                        if (o) (c.end = String(o)), (d = !0);
                        else if ('MarketIsClosed' !== h && 'MarketIsClosedTryVolatility' !== h) {
                            let e;
                            const i = this._tradingTimes.getDelayedMinutes(t);
                            i > 0
                                ? (this._mainStore.notifier.notifyDelayedMarket(l, i),
                                  (e = new xf(c, this._binaryApi, i, this._mainStore)))
                                : (e = new Tf(c, this._binaryApi, this._mainStore));
                            try {
                                const { quotes: t, response: r } = await e.initialFetch();
                                (u = t), this.endEpoch || this._mainStore.lastDigitStats.updateLastDigitStats(r);
                            } catch (t) {
                                const { message: e } = t;
                                return (
                                    this._mainStore.notifier.notify({
                                        text: e,
                                        type: 'error',
                                        category: 'activesymbol',
                                    }),
                                    r({ quotes: [] }),
                                    void this.paginationLoader.updateOnPagination(!1)
                                );
                            }
                            if (
                                (e.onChartData(e => {
                                    t !== this._mainStore.chart.currentActiveSymbol?.symbol ||
                                        this.hasAlternativeSource ||
                                        this._appendChartData(e, n);
                                }),
                                this._mainStore.chart.isDestroyed ||
                                    (this._mainStore.state.symbol && this._mainStore.state.symbol !== t))
                            )
                                return r({ quotes: [] }), void e.forget();
                            this._activeStreams[n] = e;
                        } else this._mainStore.notifier.notifyMarketClose(l), (d = !0);
                        if (d)
                            if (this.shouldFetchTickHistory || !this.contractInfo.tick_stream) {
                                const t = await this._binaryApi.getTickHistory(c);
                                u = yf.formatHistory(t);
                            } else {
                                const t = await new Promise(t => {
                                    setTimeout(() => t(this.allTicks), 50);
                                });
                                u = yf.formatAllTicks(t);
                            }
                        u
                            ? ((u = this._trimQuotes(u)),
                              r({ quotes: u }),
                              this._emitDataUpdate(u, !0),
                              this.paginationLoader.updateOnPagination(!1))
                            : r({ quotes: [] });
                    }
                    async fetchPaginationData(t, e, r, i, a) {
                        this.paginationLoader.updateOnPagination(!0),
                            this._emitter.emit(Af.EVENT_START_PAGINATION, { end: e }),
                            await this._getPaginationData(t, i, r, e, a),
                            this.paginationLoader.updateOnPagination(!1);
                    }
                    async _getPaginationData(t, e, r, i, a) {
                        if (this._mainStore.state.hasReachedEndOfData) return;
                        if (this.startEpoch || (this.endEpoch && i > this.endEpoch))
                            return (
                                a({ moreAvailable: !1, quotes: [] }),
                                this._emitter.emit(Af.EVENT_ON_PAGINATION, { end: i }),
                                void this.setHasReachedEndOfData(!0)
                            );
                        const n = this._serverTime.getEpoch() - Math.ceil(2.8 * 365 * 24 * 60 * 60);
                        let s,
                            o = { quotes: [] };
                        if (i > n)
                            try {
                                const l = await this._binaryApi.getTickHistory({
                                    symbol: t,
                                    granularity: e,
                                    count: `${r}`,
                                    end: String(i),
                                });
                                if (l.error) {
                                    const { message: t } = l.error;
                                    return (
                                        this.loader.hide(),
                                        this._mainStore.notifier.notify({
                                            text: t,
                                            type: 'error',
                                            category: 'activesymbol',
                                        }),
                                        void a({ error: l.error })
                                    );
                                }
                                if (((s = Af.getFirstEpoch(l)), void 0 === s || s === i))
                                    return a({ moreAvailable: !1, quotes: [] }), void this.setHasReachedEndOfData(!0);
                                if (
                                    ((o.quotes = yf.formatHistory(l)),
                                    s <= n && (a({ moreAvailable: !1, quotes: [] }), this.setHasReachedEndOfData(!0)),
                                    o.quotes?.length && o.quotes.length < r)
                                )
                                    return (
                                        a({ moreAvailable: !1, quotes: o.quotes }), void this.setHasReachedEndOfData(!0)
                                    );
                            } catch (t) {
                                console.error(t), (o = { error: t });
                            }
                        a(o);
                        {
                            const t = s && i > s ? s : i;
                            this._emitter.emit(Af.EVENT_ON_PAGINATION, { end: t });
                        }
                    }
                    setHasReachedEndOfData(t) {
                        this.paginationLoader.updateOnPagination(!1),
                            this._mainStore.state.hasReachedEndOfData !== t &&
                                (this._mainStore.state.hasReachedEndOfData = t);
                    }
                    unsubscribeAll() {
                        for (const t of Object.keys(this._activeStreams)) this._forgetStream(t);
                    }
                    _forgetIfEndEpoch(t) {
                        const e = this._activeStreams[t];
                        let r = !0;
                        if (!e) return;
                        const i = e.lastStreamEpoch;
                        return (
                            this.endEpoch &&
                            void 0 !== i &&
                            void 0 !== this.granularity &&
                            i + this.granularity > this.endEpoch
                                ? (this._activeStreams[t] &&
                                      0 === this.granularity &&
                                      !this._mainStore.state.isStaticChart &&
                                      Fp(Zi(this.endEpoch)).valueOf() >= this.quotes.slice(-1)[0]?.Date.valueOf() &&
                                      (r = !1),
                                  this._forgetStream(t))
                                : (r = !1),
                            r
                        );
                    }
                    _appendChartData(t, e) {
                        let r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
                        if (!this._forgetIfEndEpoch(e) || this._activeStreams[e]) {
                            if ((!this.hasAlternativeSource || r) && r) {
                                if (!this.tickQueue.length) return void (this.tickQueue = [t[t.length - 1]]);
                                if (this.tickQueue[0].tick?.epoch === t[t.length - 1].tick?.epoch) return;
                                (this.tickQueue = [t[t.length - 1]]), (t = [t[t.length - 1]]);
                            }
                            this._emitDataUpdate(t);
                        } else t = [];
                    }
                    appendChartDataFromPOCResponse(t) {
                        const e = yf.formatPOCTick(t);
                        e && this._appendChartData(e, e[0].tick.symbol, !0);
                    }
                    _emitDataUpdate(t) {
                        let e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                        const r = t[t.length - 2],
                            i = void 0 !== r ? r.Close : void 0,
                            a = { ...t[t.length - 1], prevClose: i };
                        e
                            ? (this._emitter.emit(Af.EVENT_MASTER_DATA_REINITIALIZE),
                              this._mainStore.chart.setChartAvailability(!0))
                            : this._emitter.emit(Af.EVENT_MASTER_DATA_UPDATE, a);
                    }
                    static getFirstEpoch(t) {
                        let { candles: e, history: r } = t;
                        if (e && e.length > 0) return e[0].epoch;
                        if (r && r.times && r.times.length > 0) {
                            const { times: t } = r;
                            return +t[0];
                        }
                    }
                    onMasterDataUpdate(t) {
                        this._emitter.on(Af.EVENT_MASTER_DATA_UPDATE, t);
                    }
                    offMasterDataUpdate(t) {
                        this._emitter.off(Af.EVENT_MASTER_DATA_UPDATE, t);
                    }
                    onMasterDataReinitialize(t) {
                        this._emitter.on(Af.EVENT_MASTER_DATA_REINITIALIZE, t);
                    }
                    offMasterDataReinitialize(t) {
                        this._emitter.off(Af.EVENT_MASTER_DATA_REINITIALIZE, t);
                    }
                    onPagination(t) {
                        this._emitter.on(Af.EVENT_ON_PAGINATION, t);
                    }
                    offPagination(t) {
                        this._emitter.off(Af.EVENT_ON_PAGINATION, t);
                    }
                    onStartPagination(t) {
                        this._emitter.on(Af.EVENT_START_PAGINATION, t);
                    }
                    offStartPagination(t) {
                        this._emitter.off(Af.EVENT_START_PAGINATION, t);
                    }
                    onConnectionChanged() {
                        const t = this._mainStore.state.isConnectionOpened;
                        void 0 !== t &&
                            t !== this._isConnectionOpened &&
                            ((this._isConnectionOpened = t),
                            t ? this._onConnectionReopened() : this._onConnectionClosed());
                    }
                    _onConnectionClosed() {
                        for (const t in this._activeStreams) this._activeStreams[t].pause();
                        this._connectionClosedDate = new Date();
                    }
                    _onConnectionReopened() {
                        0 !== Object.keys(this._activeStreams).length &&
                            (this._mainStore.chart.refreshChart(), (this._connectionClosedDate = void 0));
                    }
                    _resumeStream(t) {
                        this._activeStreams[t].pause(),
                            this._activeStreams[t].resume().then(e => {
                                const { quotes: r } = e;
                                this._appendChartData(r, t);
                            });
                    }
                    _getKey(t) {
                        let { symbol: e, granularity: r } = t;
                        return `${e}-${r}`;
                    }
                    _unpackKey(t) {
                        const [e, r] = t.split('-');
                        return { symbol: e, granularity: +r };
                    }
                    _trimQuotes() {
                        let t = null,
                            e = null,
                            r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];
                        if (!r.length) return [];
                        if (
                            (this.startEpoch &&
                                this.margin &&
                                ((t = r.findIndex(t => Fp(t.Date) >= Fp(Zi(this.startEpoch)))),
                                t > 0 && (r = r.slice(t - 1))),
                            this.endEpoch &&
                                this.margin &&
                                ((e = r.findIndex(t => Fp(t.Date) >= Fp(Zi(this.endEpoch)))), e > -1))
                        ) {
                            const t = Fp(r[e].Date) === Fp(Zi(this.endEpoch)) ? 2 : 1;
                            r = r.slice(0, e + t);
                        }
                        return r;
                    }
                }
                const Of = Af;
                function Nf(t, e, r) {
                    return (
                        (e = (function (t) {
                            var e = (function (t, e) {
                                if ('object' != typeof t || !t) return t;
                                var r = t[Symbol.toPrimitive];
                                if (void 0 !== r) {
                                    var i = r.call(t, 'string');
                                    if ('object' != typeof i) return i;
                                    throw new TypeError('@@toPrimitive must return a primitive value.');
                                }
                                return String(t);
                            })(t);
                            return 'symbol' == typeof e ? e : String(e);
                        })(e)),
                        e in t
                            ? Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = r),
                        t
                    );
                }
                class If {
                    constructor(t) {
                        Nf(this, 'chartContainerHeight', void 0),
                            Nf(this, 'chartHeight', void 0),
                            Nf(this, 'chartId', void 0),
                            Nf(this, 'containerWidth', null),
                            Nf(this, 'context', null),
                            Nf(this, 'currentActiveSymbol', void 0),
                            Nf(this, 'currentLanguage', void 0),
                            Nf(this, 'cursorInChart', !1),
                            Nf(this, 'startWithDataFitMode', !1),
                            Nf(this, 'feed', void 0),
                            Nf(this, 'isBarrierDragging', !1),
                            Nf(this, 'isChartAvailable', !0),
                            Nf(this, 'isLive', !1),
                            Nf(this, 'isMobile', !1),
                            Nf(this, 'isScaledOneOne', !1),
                            Nf(this, 'mainStore', void 0),
                            Nf(this, 'networkStatus', void 0),
                            Nf(this, 'resizeObserver', void 0),
                            Nf(this, 'serverTime', void 0),
                            Nf(this, 'shouldRenderDialogs', !1),
                            Nf(this, 'leftMargin', void 0),
                            Nf(this, 'lastQuote', void 0),
                            Nf(this, 'feedCall', {}),
                            Nf(this, 'RANGE_PADDING_PX', 125),
                            Nf(this, 'contextPromise', ji()),
                            Nf(this, 'rootNode', null),
                            Nf(this, 'api', null),
                            Nf(this, 'defaults', { granularity: 0, chartType: 'line' }),
                            Nf(this, 'granularity', void 0),
                            Nf(this, 'enableRouting', null),
                            Nf(this, 'chartNode', null),
                            Nf(this, 'chartControlsNode', null),
                            Nf(this, 'state', void 0),
                            Nf(this, 'onMessage', null),
                            Nf(this, '_barriers', []),
                            Nf(this, 'tradingTimes', void 0),
                            Nf(this, 'activeSymbols', void 0),
                            Nf(this, 'whitespace', void 0),
                            Nf(this, 'isDestroyed', !1),
                            Nf(this, 'currentCloseQuote', () => {
                                const t = this.mainStore.chart.feed?.quotes;
                                let e = t?.[t.length - 1];
                                if (e && !e.Close) {
                                    const r = t?.filter(t => t && t.Close);
                                    if (r && r.length) e = r[r.length - 1];
                                    else {
                                        const r = t?.filter(t => t && t.Close);
                                        r && r.length && (e = r[r.length - 1]);
                                    }
                                }
                                return e;
                            }),
                            Nf(this, 'indicatorHeightRatio', t => {
                                let e = {};
                                if (
                                    ('function' == typeof this.stateStore.getIndicatorHeightRatio &&
                                        this.chartNode &&
                                        (e = this.stateStore.getIndicatorHeightRatio(this.chartNode.offsetHeight, t)),
                                    this.chartNode && (!e || !e.height || !e.percent))
                                ) {
                                    const r = this.chartNode.offsetHeight,
                                        i = r < 780,
                                        a = t >= 5 ? t : t + 1,
                                        n = this.isMobile ? 160 : 320,
                                        s = Math.round((r - (n + (i ? 20 : 0))) / a);
                                    e = { height: s, percent: s / r };
                                }
                                return e;
                            }),
                            Nf(this, 'init', (t, e) => {
                                this.loader.show(),
                                    this.mainStore.state.setChartIsReady(!1),
                                    this.loader.setState('chart-engine'),
                                    (this.chartId = e.id || 'base-chart'),
                                    this._initChart(t, e);
                            }),
                            Nf(this, 'setResizeEvent', () => {
                                const t = t => {
                                    t.forEach(() => {
                                        this.rootNode && this.rootNode.clientWidth > 0 && this.resizeScreen();
                                    });
                                };
                                'ResizeObserver' in window
                                    ? ((this.resizeObserver = new ResizeObserver(t)),
                                      this.rootNode && this.resizeObserver.observe(this.rootNode))
                                    : h
                                          .e(590)
                                          .then(h.bind(h, 4208))
                                          .then(e => {
                                              let { default: r } = e;
                                              (window.ResizeObserver = r),
                                                  this.rootNode &&
                                                      ((this.resizeObserver = new r(t)),
                                                      this.resizeObserver.observe(this.rootNode));
                                          });
                            }),
                            Nf(this, 'onMarketOpenClosedChange', t => {
                                const e = this.activeSymbols?.processedSymbols || [];
                                let r = !1;
                                for (const { symbol: i, name: a } of e)
                                    i in t &&
                                        (t[i]
                                            ? ((r = !0),
                                              this.chartClosedOpenThemeChange(!1),
                                              this.mainStore.notifier.notifyMarketOpen(a))
                                            : (this.chartClosedOpenThemeChange(!0),
                                              this.mainStore.notifier.notifyMarketClose(a)));
                                r && this.refreshChart();
                            }),
                            Nf(this, 'remainLabelY', () => 0),
                            br(this, {
                                chartContainerHeight: Lt,
                                chartHeight: Lt,
                                containerWidth: Lt,
                                context: Lt,
                                currentActiveSymbol: Lt,
                                currentLanguage: Lt,
                                cursorInChart: Lt,
                                isBarrierDragging: Lt,
                                isChartAvailable: Lt,
                                isMobile: Lt,
                                isScaledOneOne: Lt,
                                networkStatus: Lt,
                                serverTime: Lt,
                                shouldRenderDialogs: Lt,
                                xAxisHeight: jt,
                                yAxisWidth: jt,
                                lastQuote: Lt,
                                _initChart: Be.bound,
                                categorizedSymbols: jt,
                                changeSymbol: Be.bound,
                                destroy: Be.bound,
                                granularity: Lt,
                                newChart: Be.bound,
                                onServerTimeChange: Be.bound,
                                openFullscreen: Be.bound,
                                pip: jt,
                                refreshChart: Be.bound,
                                resizeScreen: Be.bound,
                                setChartAvailability: Be.bound,
                                updateCurrentActiveSymbol: Be.bound,
                                updateScaledOneOne: Be.bound,
                            }),
                            (this.mainStore = t);
                    }
                    get loader() {
                        return this.mainStore.loader;
                    }
                    get routingStore() {
                        return this.mainStore.routing;
                    }
                    get stateStore() {
                        return this.mainStore.state;
                    }
                    get studiesStore() {
                        return this.mainStore.studies;
                    }
                    get pip() {
                        return this.currentActiveSymbol?.decimal_places;
                    }
                    get rootElement() {
                        return this.chartId ? document.getElementById(this.chartId) : null;
                    }
                    get currentClose() {
                        return this.currentCloseQuote()?.Close;
                    }
                    get xAxisHeight() {
                        return window.flutterChart?.app.getXAxisHeight() || 24;
                    }
                    get yAxisWidth() {
                        return window.flutterChart?.app.getYAxisWidth() || 60;
                    }
                    updateHeight(t) {
                        const e = this.mainStore.chartSetting.historical && this.isMobile,
                            r = t || this.mainStore.chartSetting.position;
                        let i = 0;
                        this.stateStore.enabledChartFooter
                            ? (i = 32)
                            : 'bottom' === r && this.stateStore.chartControlsWidgets && (i = 40),
                            (this.chartHeight = this.chartNode?.offsetHeight),
                            (this.chartContainerHeight = (this.chartHeight || 0) - i - (e ? 45 : 0));
                    }
                    resizeScreen() {
                        this.rootNode && this.rootNode.clientWidth >= 1280
                            ? (this.containerWidth = 1280)
                            : this.rootNode && this.rootNode.clientWidth >= 900
                              ? (this.containerWidth = 900)
                              : (this.containerWidth = 480),
                            this.updateHeight();
                    }
                    _initChart(t, e) {
                        (this.rootNode = t),
                            (this.chartNode = this.rootNode?.querySelector('.ciq-chart-area')),
                            (this.chartControlsNode = this.rootNode?.querySelector('.cq-chart-controls'));
                        const {
                            symbol: r,
                            granularity: i,
                            requestAPI: a,
                            requestSubscribe: n,
                            requestForget: s,
                            requestForgetStream: o,
                            isMobile: l,
                            enableRouting: c,
                            onMessage: h,
                            settings: u,
                            onSettingsChange: d,
                            getMarketsOrder: g,
                            initialData: m,
                            chartData: p,
                            feedCall: f,
                            isLive: _,
                            startWithDataFitMode: v,
                            leftMargin: b,
                        } = e;
                        (this.feedCall = f || {}),
                            (this.api = new _f(a, n, s, o)),
                            (this.currentLanguage =
                                localStorage.getItem('current_chart_lang') ?? u?.language?.toLowerCase()),
                            (this.tradingTimes =
                                If.tradingTimes ||
                                (If.tradingTimes = new pf(this.api, {
                                    enable: this.feedCall.tradingTimes,
                                    shouldFetchTradingTimes: this.mainStore.state.shouldFetchTradingTimes,
                                    tradingTimes: m?.tradingTimes,
                                }))),
                            (this.activeSymbols =
                                (this.currentLanguage === u?.language && If.activeSymbols) ||
                                (If.activeSymbols = new uf(this.api, this.tradingTimes, {
                                    enable: this.feedCall.activeSymbols,
                                    getMarketsOrder: g,
                                    activeSymbols: m?.activeSymbols,
                                    chartData: p,
                                })));
                        const { chartSetting: y } = this.mainStore;
                        y.setSettings(u),
                            (y.onSettingsChange = d),
                            (this.isMobile = l),
                            (this.whitespace = l ? 50 : 150),
                            (this.state = this.mainStore.state),
                            (this.mainStore.notifier.onMessage = h),
                            (this.granularity = void 0 !== i ? i : this.defaults.granularity),
                            (this.isLive = _ || !1),
                            (this.startWithDataFitMode = v || !1),
                            (this.leftMargin = b),
                            (If.chartCount += 1),
                            (this.feed = new Of(this.api, this.mainStore, this.tradingTimes)),
                            (this.enableRouting = c),
                            this.enableRouting && this.routingStore.handleRouting();
                        const S = new bf(this.rootNode);
                        this.stateStore.stateChange('INITIAL'),
                            this.loader.setState('market-symbol'),
                            this.activeSymbols?.retrieveActiveSymbols().then(() => {
                                this.loader.setState('trading-time'),
                                    this.tradingTimes?.initialize().then(
                                        Be(() => {
                                            if (this.isDestroyed) return;
                                            this.startWithDataFitMode
                                                ? this.state?.clearLayout()
                                                : this.state?.restoreLayout();
                                            let t = this.state?.symbol || r;
                                            this.changeSymbol(
                                                t ||
                                                    (this.activeSymbols &&
                                                        Object.keys(this.activeSymbols.symbolMap)[0]),
                                                this.granularity
                                            ),
                                                (this.context = S),
                                                this.chartClosedOpenThemeChange(
                                                    !this.currentActiveSymbol?.exchange_is_open
                                                ),
                                                this.mainStore.chart.tradingTimes?.onMarketOpenCloseChanged(
                                                    Be(t => {
                                                        for (const e in t)
                                                            this.currentActiveSymbol?.symbol === e &&
                                                                this.chartClosedOpenThemeChange(!t[e]);
                                                    })
                                                ),
                                                this.contextPromise?.resolve?.(this.context),
                                                this.resizeScreen(),
                                                Ue(
                                                    () => [this.state?.symbol, this.state?.granularity],
                                                    () => {
                                                        (void 0 === this.state?.symbol &&
                                                            void 0 === this.state?.granularity) ||
                                                            this.changeSymbol(
                                                                this.state.symbol,
                                                                this.state.granularity
                                                            );
                                                    }
                                                ),
                                                this.tradingTimes?.onTimeChanged(this.onServerTimeChange),
                                                setTimeout(
                                                    Be(() => {
                                                        this.shouldRenderDialogs = !0;
                                                    }),
                                                    500
                                                );
                                        })
                                    );
                            });
                    }
                    chartClosedOpenThemeChange(t) {
                        this.mainStore.state.setChartClosed(t),
                            this.mainStore.state.setChartTheme(this.mainStore.chartSetting.theme),
                            this.mainStore.chartAdapter.setSymbolClosed(t);
                    }
                    get categorizedSymbols() {
                        return this.activeSymbols && 0 !== this.activeSymbols.categorizedSymbols.length
                            ? ta(this.activeSymbols.activeSymbols, t => {
                                  const e = t.dataObject.symbol === this.currentActiveSymbol?.symbol;
                                  return { ...t, selected: e };
                              })
                            : [];
                    }
                    onServerTimeChange() {
                        this.tradingTimes?._serverTime &&
                            (this.serverTime = nf()(1e3 * this.tradingTimes._serverTime.getEpoch()).format(
                                'DD MMM YYYY HH:mm:ss [GMT]'
                            ));
                    }
                    updateCurrentActiveSymbol(t) {
                        this.currentActiveSymbol = t;
                    }
                    setChartAvailability(t) {
                        this.isChartAvailable = t;
                    }
                    changeSymbol(t, e) {
                        let r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
                        'string' == typeof t && (t = this.activeSymbols?.getSymbolObj(t)),
                            (t &&
                                this.currentActiveSymbol &&
                                t?.symbol === this.currentActiveSymbol?.symbol &&
                                void 0 !== e &&
                                e === this.granularity &&
                                !r) ||
                                (this.newChart(t),
                                void 0 !== e && (this.granularity = e),
                                t && this.updateCurrentActiveSymbol(t));
                    }
                    newChart() {
                        let t =
                            arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.currentActiveSymbol;
                        if (!t) return;
                        this.currentActiveSymbol &&
                            this.feed?.unsubscribe({
                                symbol: this.currentActiveSymbol.symbol,
                                granularity: this.granularity,
                            }),
                            this.loader.show(),
                            this.mainStore.state.setChartIsReady(!1);
                        const e = e => {
                            this.loader.hide(),
                                this.chartClosedOpenThemeChange(!t.exchange_is_open),
                                this.mainStore.paginationLoader.updateOnPagination(!1),
                                this.mainStore.state.setChartIsReady(!0);
                        };
                        this.mainStore.chartAdapter.newChart(),
                            this.feed?.fetchInitialData(
                                t.symbol,
                                { granularity: this.mainStore.state.granularity, symbolObject: t },
                                t => {
                                    let { quotes: r, error: i } = t;
                                    this.mainStore.chartAdapter.onTickHistory(r || []),
                                        this.mainStore.chart.feed?.offMasterDataUpdate(
                                            this.mainStore.chartAdapter.onTick
                                        ),
                                        this.mainStore.chart.feed?.onMasterDataUpdate(
                                            this.mainStore.chartAdapter.onTick
                                        ),
                                        e();
                                }
                            );
                    }
                    updateScaledOneOne(t) {
                        this.isScaledOneOne = t;
                    }
                    refreshChart() {
                        this.newChart();
                    }
                    destroy() {
                        (If.chartCount -= 1),
                            (this.isDestroyed = !0),
                            this.resizeObserver && this.resizeObserver.disconnect(),
                            this.tradingTimes &&
                                0 === If.chartCount &&
                                ((If.tradingTimes = null), this.tradingTimes.destructor()),
                            this.feed && (this.feed.unsubscribeAll(), (this.feed = null)),
                            this.mainStore.drawTools.destructor(),
                            (this.currentActiveSymbol = null),
                            (this.contextPromise = null),
                            (this.context = null);
                    }
                    openFullscreen() {
                        const t = {
                                element: [
                                    'fullscreenElement',
                                    'webkitFullscreenElement',
                                    'mozFullScreenElement',
                                    'msFullscreenElement',
                                ],
                                fnc_enter: [
                                    'requestFullscreen',
                                    'webkitRequestFullscreen',
                                    'mozRequestFullScreen',
                                    'msRequestFullscreen',
                                ],
                                fnc_exit: [
                                    'exitFullscreen',
                                    'webkitExitFullscreen',
                                    'mozCancelFullScreen',
                                    'msExitFullscreen',
                                ],
                            },
                            e = t.element.some(t => document[t] && null !== document[t]),
                            r = e ? document : document.documentElement,
                            i = t[e ? 'fnc_exit' : 'fnc_enter'].find(t => r[t]);
                        i && r[i]()?.catch(() => {});
                    }
                }
                Nf(If, 'chartCount', 0), Nf(If, 'tradingTimes', void 0), Nf(If, 'activeSymbols', void 0);
                const Df = If;
                function Pf(t, e, r) {
                    return (
                        (e = (function (t) {
                            var e = (function (t, e) {
                                if ('object' != typeof t || !t) return t;
                                var r = t[Symbol.toPrimitive];
                                if (void 0 !== r) {
                                    var i = r.call(t, 'string');
                                    if ('object' != typeof i) return i;
                                    throw new TypeError('@@toPrimitive must return a primitive value.');
                                }
                                return String(t);
                            })(t);
                            return 'symbol' == typeof e ? e : String(e);
                        })(e)),
                        e in t
                            ? Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = r),
                        t
                    );
                }
                class Lf {
                    constructor(t) {
                        let { getContext: e, getItems: r, onItemSelected: i } = t;
                        Pf(this, 'getContext', void 0),
                            Pf(this, 'getItems', void 0),
                            Pf(this, 'onItemSelected', void 0),
                            br(this, { onItemClick: Be.bound }),
                            (this.getContext = e),
                            (this.getItems = r),
                            (this.onItemSelected = i);
                    }
                    onItemClick(t, e) {
                        this.onItemSelected && this.onItemSelected(e);
                    }
                }
                function Mf(t, e, r) {
                    return (
                        (e = (function (t) {
                            var e = (function (t, e) {
                                if ('object' != typeof t || !t) return t;
                                var r = t[Symbol.toPrimitive];
                                if (void 0 !== r) {
                                    var i = r.call(t, 'string');
                                    if ('object' != typeof i) return i;
                                    throw new TypeError('@@toPrimitive must return a primitive value.');
                                }
                                return String(t);
                            })(t);
                            return 'symbol' == typeof e ? e : String(e);
                        })(e)),
                        e in t
                            ? Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = r),
                        t
                    );
                }
                class Bf {
                    get showTabs() {
                        return !!this.description;
                    }
                    constructor(t) {
                        let { mainStore: e, onChanged: r, onDeleted: i } = t;
                        Mf(this, 'mainStore', void 0),
                            Mf(this, 'menuStore', void 0),
                            Mf(this, 'onChanged', void 0),
                            Mf(this, 'onDeleted', void 0),
                            Mf(this, 'items', []),
                            Mf(this, 'title', ''),
                            Mf(this, 'formTitle', ''),
                            Mf(this, 'formClassname', ''),
                            Mf(this, 'description', ''),
                            Mf(this, 'activeTab', 'settings'),
                            Mf(this, 'scrollPanel', void 0),
                            Mf(this, 'dialogPortalNodeId', void 0),
                            Mf(this, 'freezeScroll', !1),
                            Mf(this, 'id', ''),
                            Mf(this, 'flutter_chart_id', ''),
                            Mf(this, 'checkDropdownOpen', () => {
                                let t = !1;
                                this.scrollPanel &&
                                    (this.scrollPanel.querySelectorAll('.sc-color-picker, .sc-dropdown').forEach(e => {
                                        -1 !== e.className.indexOf('active') && (t = !0);
                                    }),
                                    this.setFreezeScroll(t));
                            }),
                            br(this, {
                                items: Lt,
                                title: Lt,
                                formTitle: Lt,
                                formClassname: Lt,
                                description: Lt,
                                activeTab: Lt,
                                showTabs: jt,
                                scrollPanel: Lt,
                                dialogPortalNodeId: Lt,
                                freezeScroll: Lt,
                                open: jt,
                                setFreezeScroll: Be.bound,
                                setOpen: Be.bound,
                                onResetClick: Be.bound,
                                onItemDelete: Be.bound,
                                onItemChange: Be.bound,
                                itemGroups: jt,
                                setScrollPanel: Be.bound,
                            }),
                            (this.mainStore = e),
                            (this.onChanged = r),
                            (this.onDeleted = i),
                            (this.menuStore = new Yp(e, { route: 'indicator-setting' })),
                            Ue(
                                () => this.open,
                                () => {
                                    if (!this.scrollPanel || !this.open) return;
                                    const t = this.scrollPanel.querySelectorAll('.sc-color-picker, .sc-dropdown');
                                    this.scrollPanel.addEventListener('click', () => {
                                        this.setFreezeScroll(!1);
                                    }),
                                        t.forEach(t => {
                                            t.addEventListener('click', () =>
                                                setTimeout(() => this.checkDropdownOpen(), 50)
                                            );
                                        }),
                                        this.setFreezeScroll(!1);
                                },
                                { delay: 300 }
                            );
                    }
                    get context() {
                        return this.mainStore.chart.context;
                    }
                    get theme() {
                        return this.mainStore.chartSetting.theme;
                    }
                    get open() {
                        return this.menuStore.open;
                    }
                    setFreezeScroll(t) {
                        this.freezeScroll = t;
                    }
                    setOpen(t) {
                        return t && this.scrollPanel && (this.scrollPanel.scrollTop = 0), this.menuStore.setOpen(t);
                    }
                    onResetClick() {
                        const t = this.items.map(t => ({ ...t, value: ca(t.defaultValue) }));
                        (this.items = t), this.onChanged(t);
                    }
                    onItemDelete() {
                        this.menuStore.setOpen(!1), this.onDeleted && this.onDeleted(this.id);
                    }
                    onItemChange(t, e) {
                        t &&
                            t.value !== e &&
                            ((t.value = e), (this.items = this.items.slice(0)), this.onChanged(this.items));
                    }
                    get itemGroups() {
                        const t = [],
                            e = [];
                        e.push({ key: '%k', title: '%K', fields: [] }),
                            e.push({ key: '%d', title: '%D', fields: [] }),
                            e.push({ key: 'over_bought', title: 'Over Bought', fields: [] }),
                            e.push({ key: 'over_sold', title: 'OverSold', fields: [] }),
                            e.push({ key: 'show_zones', title: 'Show Zones', fields: [] });
                        for (const r in this.items) {
                            const i = this.items[r],
                                { group_key: a, title: n } = i,
                                s = e.find(t => a === t.key);
                            s ? ((i.subtitle = n.replace(s.key, '').trim()), s.fields.push(i)) : t.push(i);
                        }
                        return e.unshift({ key: 'others', title: this.formTitle || this.title, fields: t }), e;
                    }
                    setScrollPanel(t) {
                        this.scrollPanel = t;
                    }
                }
                function Rf(t, e, r) {
                    return (
                        (e = (function (t) {
                            var e = (function (t, e) {
                                if ('object' != typeof t || !t) return t;
                                var r = t[Symbol.toPrimitive];
                                if (void 0 !== r) {
                                    var i = r.call(t, 'string');
                                    if ('object' != typeof i) return i;
                                    throw new TypeError('@@toPrimitive must return a primitive value.');
                                }
                                return String(t);
                            })(t);
                            return 'symbol' == typeof e ? e : String(e);
                        })(e)),
                        e in t
                            ? Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = r),
                        t
                    );
                }
                const jf = [...kp].filter(t => !t.candleOnly).map(t => t.id);
                class Ff {
                    constructor(t) {
                        Rf(this, 'chartTypes', []),
                            Rf(this, 'listStore', void 0),
                            Rf(this, 'mainStore', void 0),
                            Rf(this, 'menuStore', void 0),
                            Rf(this, 'settingsDialog', void 0),
                            Rf(
                                this,
                                'type',
                                kp.find(t => 'line' === t.id)
                            ),
                            Rf(this, 'onChartTypeChanged', void 0),
                            Rf(this, 'onContextReady', () => {
                                this.chartTypes = [...kp];
                            }),
                            br(this, {
                                type: Lt,
                                updateProps: Be.bound,
                                setChartType: Be.bound,
                                setType: Be.bound,
                                isTypeCandle: Be.bound,
                            }),
                            (this.mainStore = t),
                            cr(() => !!this.context, this.onContextReady),
                            (this.menuStore = new Yp(t, { route: 'chart-type' })),
                            (this.listStore = new Lf({ getContext: () => this.context, getItems: () => this.types })),
                            (this.settingsDialog = new Bf({ mainStore: t, onChanged: () => null })),
                            Ue(
                                () => this.mainStore.state.chartType,
                                () => {
                                    void 0 !== this.mainStore.state.chartType &&
                                        this.setType(this.mainStore.state.chartType);
                                }
                            );
                    }
                    get context() {
                        return this.mainStore.chart.context;
                    }
                    get chartTypeProp() {
                        return this.mainStore.state.chartType;
                    }
                    get isCandle() {
                        return !!this.type && -1 === jf.indexOf(this.type.id);
                    }
                    get isSpline() {
                        return 'spline' === this.type.id;
                    }
                    setChartType(t) {
                        t && this.setType(t);
                    }
                    setType(t) {
                        let e;
                        Rp(Mp.ChartControl, Bp.ChartType, t),
                            (e = 'string' != typeof (t = t || 'line') ? t : this.types.find(e => e.id === t)),
                            e && e.id !== this.type.id && (this.type = e);
                    }
                    updateProps(t) {
                        this.onChartTypeChanged = t;
                    }
                    get types() {
                        const t = 0 === this.mainStore.chart.granularity;
                        return (
                            (void 0 !== this.chartTypes && 0 !== this.chartTypes.length) || (this.chartTypes = [...kp]),
                            this.chartTypes.map(e => ({
                                ...e,
                                active: e.id === this.type.id,
                                disabled: !!e.candleOnly && t,
                            }))
                        );
                    }
                    isTypeCandle(t) {
                        return (
                            'string' == typeof t && (t = this.types.find(e => e.id === t) || this.types[0]),
                            -1 === jf.indexOf(t.id)
                        );
                    }
                }
                function Vf(t, e, r) {
                    return (
                        (e = (function (t) {
                            var e = (function (t, e) {
                                if ('object' != typeof t || !t) return t;
                                var r = t[Symbol.toPrimitive];
                                if (void 0 !== r) {
                                    var i = r.call(t, 'string');
                                    if ('object' != typeof i) return i;
                                    throw new TypeError('@@toPrimitive must return a primitive value.');
                                }
                                return String(t);
                            })(t);
                            return 'symbol' == typeof e ? e : String(e);
                        })(e)),
                        e in t
                            ? Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = r),
                        t
                    );
                }
                class Hf {
                    constructor(t) {
                        Vf(this, 'mainStore', void 0),
                            Vf(this, 'menuStore', void 0),
                            (this.mainStore = t),
                            (this.menuStore = new Yp(t, { route: 'chart-mode' }));
                    }
                }
                var qf = h(6571),
                    Uf = h.n(qf);
                function $f() {
                    let t = () =>
                        Math.floor(65536 * (1 + Math.random()))
                            .toString(16)
                            .substring(1);
                    return '__' + t() + t() + '-' + t() + '-' + t() + '-' + t() + '-' + t() + t() + t() + '__';
                }
                function zf(t) {
                    const e = t.replace('#', '0xff');
                    return parseInt(e, 16);
                }
                function Gf(t) {
                    return t && 'string' == typeof t ? t.charAt(0).toUpperCase() + t.slice(1) : '';
                }
                var Wf = h(9160).t;
                function Kf(t, e, r) {
                    return (
                        (e = (function (t) {
                            var e = (function (t, e) {
                                if ('object' != typeof t || !t) return t;
                                var r = t[Symbol.toPrimitive];
                                if (void 0 !== r) {
                                    var i = r.call(t, 'string');
                                    if ('object' != typeof i) return i;
                                    throw new TypeError('@@toPrimitive must return a primitive value.');
                                }
                                return String(t);
                            })(t);
                            return 'symbol' == typeof e ? e : String(e);
                        })(e)),
                        e in t
                            ? Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = r),
                        t
                    );
                }
                class Xf {
                    constructor(t) {
                        Kf(this, 'mainStore', void 0),
                            Kf(this, 'menuStore', void 0),
                            Kf(this, 'searchInput', void 0),
                            Kf(this, 'settingsDialog', void 0),
                            Kf(this, 'selectedTab', 1),
                            Kf(this, 'filterText', ''),
                            Kf(this, 'activeItems', []),
                            Kf(this, 'infoItem', null),
                            Kf(this, 'portalNodeIdChanged', ''),
                            Kf(this, 'currentHoverIndex', null),
                            Kf(this, 'previousHoverIndex', null),
                            Kf(this, 'searchInputClassName', void 0),
                            Kf(this, 'onContextReady', () => {
                                this.renderLegend();
                            }),
                            Kf(this, 'transform', t => {
                                if ('string' == typeof t && (t.startsWith('#') || t.toLowerCase().startsWith('0x')))
                                    return zf(t);
                                if (ha(t)) {
                                    const e = t;
                                    Object.keys(t).forEach(t => {
                                        e[t] = this.transform(e[t]);
                                    });
                                } else if (Array.isArray(t))
                                    for (let e = 0; e < t.length; e++) t[e] = this.transform(t[e]);
                                return t;
                            }),
                            Kf(this, 'addOrUpdateIndicator', (t, e) => {
                                const r = t.parameters.reduce((t, e) => {
                                        const { path: r, paths: i, value: a } = e;
                                        if (ha(a) && i) {
                                            const e = a;
                                            Object.keys(e).forEach(r => {
                                                Uf()(t, i[r], e[r]);
                                            });
                                        } else r && Uf()(t, r, a);
                                        return t;
                                    }, t.config || {}),
                                    i = {
                                        id: t.id,
                                        name: t.flutter_chart_id,
                                        title: (t.short_name_and_index + (t.bars ? ` (${t.bars})` : '')).toUpperCase(),
                                        ...this.transform(r),
                                    };
                                this.mainStore.chartAdapter.flutterChart?.app.addOrUpdateIndicator(
                                    JSON.stringify(i),
                                    e
                                );
                            }),
                            Kf(this, 'renderLegend', () => {
                                this.context && this.updateStyle();
                            }),
                            Kf(this, 'getIndicatorProps', t => {
                                return ((e = _p()), (r = t => t.items), e.reduce((t, e) => [...t, ...r(e)], [])).find(
                                    e => e?.flutter_chart_id === t
                                );
                                var e, r;
                            }),
                            br(this, {
                                selectedTab: Lt,
                                filterText: Lt,
                                activeItems: Lt,
                                infoItem: Lt,
                                portalNodeIdChanged: Lt,
                                onSelectItem: Be.bound,
                                updateStyle: Be.bound,
                                updateProps: Be.bound,
                                editStudy: Be.bound,
                                editStudyByIndex: Be.bound,
                                deleteStudy: Be.bound,
                                deleteStudyById: Be.bound,
                                updateStudy: Be.bound,
                                deletePredictionStudies: Be.bound,
                                deleteAllStudies: Be.bound,
                                onSelectTab: Be.bound,
                                setFilterText: Be.bound,
                                onInfoItem: Be.bound,
                                updatePortalNode: Be.bound,
                                restoreStudies: Be.bound,
                                getItemById: Be.bound,
                                setIndicator: Be.bound,
                                highlightIndicator: Be.bound,
                                clearHoverItem: Be.bound,
                            }),
                            (this.mainStore = t),
                            cr(() => !!this.context, this.onContextReady),
                            (this.menuStore = new Yp(t, { route: 'indicators' })),
                            (this.settingsDialog = new Bf({
                                mainStore: t,
                                onDeleted: this.deleteStudyById,
                                favoritesId: 'indicators',
                                onChanged: t => this.updateStudy(t),
                            })),
                            (this.searchInput = yi().createRef()),
                            Ue(
                                () => this.menuStore.open,
                                () => {
                                    this.menuStore.open || this.setFilterText(''),
                                        setTimeout(() => {
                                            this.searchInput &&
                                                this.searchInput.current &&
                                                this.searchInput.current.focus();
                                        }, 400);
                                }
                            );
                    }
                    get context() {
                        return this.mainStore.chart.context;
                    }
                    get items() {
                        return [..._p()].map(
                            t => (
                                'trend' === t.name &&
                                    (t.icon = 'light' === this.mainStore.chartSetting.theme ? _m : vm),
                                t
                            )
                        );
                    }
                    get searchedItems() {
                        return [..._p()]
                            .map(
                                t => (
                                    (t.foundItems = t.items.filter(
                                        t => -1 !== t.name.toLowerCase().indexOf(this.filterText.toLowerCase().trim())
                                    )),
                                    t
                                )
                            )
                            .filter(t => t.foundItems?.length);
                    }
                    get hasPredictionIndicator() {
                        return (this.activeItems || []).filter(t => t.isPrediction).length > 0;
                    }
                    get maxAllowedItem() {
                        return this.mainStore.chart.isMobile ? 2 : 5;
                    }
                    onSelectItem(t) {
                        if ((this.onInfoItem(null), this.activeItems.length >= this.maxAllowedItem)) return;
                        this.changeStudyPanelTitle(), Rp(Mp.ChartControl, Bp.Indicator, `Add ${t}`);
                        const e = this.getIndicatorProps(t),
                            { parameters: r, config: i } = Tp(t);
                        if (e && r) {
                            r.map(t => (t.value = ca(t.defaultValue)));
                            const t = na(this.settingsDialog.flutter_chart_id, r),
                                a = this.findLastActiveItem(e.flutter_chart_id),
                                n = a ? a.group_length + 1 : 0,
                                s = {
                                    ...e,
                                    group_length: n,
                                    short_name_and_index: e.short_name + (n ? ` ${n}` : ''),
                                    id: $f(),
                                    config: i,
                                    parameters: r,
                                    bars: t.bars,
                                };
                            la(r, this.mainStore.chartSetting.theme),
                                this.addOrUpdateIndicator(s),
                                this.activeItems.push(s),
                                this.mainStore.bottomWidgetsContainer.updateChartHeight(),
                                this.mainStore.state.saveLayout();
                        }
                    }
                    async restoreStudies(t) {
                        this.deleteAllStudies(),
                            t.forEach((e, r) => {
                                const i = this.getIndicatorProps(e.flutter_chart_id);
                                i ? (this.addOrUpdateIndicator(e), Object.assign(e, i)) : t.splice(r, 1);
                            }),
                            (this.activeItems = t),
                            this.mainStore.bottomWidgetsContainer.updateChartHeight(),
                            this.cleanupPredictionIndicator();
                    }
                    updateTheme() {
                        this.activeItems.forEach((t, e) => {
                            la(t.parameters, this.mainStore.chartSetting.theme), this.addOrUpdateIndicator(t, e);
                        }),
                            this.mainStore.state.saveLayout();
                    }
                    updateStyle() {
                        const t = this.mainStore.studies.activeItems.length > 2;
                        this.mainStore.state.setShouldMinimiseLastDigit(t);
                    }
                    updateProps(t) {
                        let { searchInputClassName: e } = t;
                        this.searchInputClassName = e;
                    }
                    editStudyByIndex(t) {
                        const e = this.activeItems[t];
                        e && this.editStudy(e);
                    }
                    editStudy(t) {
                        Rp(Mp.ChartControl, Bp.Indicator, `Edit ${t.flutter_chart_id}`),
                            (this.settingsDialog.id = t.id),
                            (this.settingsDialog.flutter_chart_id = t.flutter_chart_id),
                            (this.settingsDialog.items = t.parameters),
                            (this.settingsDialog.title = t.name),
                            (this.settingsDialog.formTitle = Wf.translate('Result')),
                            (this.settingsDialog.formClassname = `form--${t.id.toLowerCase().replace(/ /g, '-')}`),
                            (this.settingsDialog.description = ''),
                            (this.settingsDialog.dialogPortalNodeId = this.portalNodeIdChanged),
                            this.settingsDialog.setOpen(!0);
                    }
                    deleteStudyById(t) {
                        const e = this.activeItems.findIndex(e => e.id === t);
                        this.mainStore.chartAdapter.flutterChart?.indicators.removeIndicator(e), this.deleteStudy(e);
                    }
                    deleteStudy(t) {
                        Rp(Mp.ChartControl, Bp.Indicator, `Remove ${t}`),
                            this.activeItems.splice(t, 1),
                            this.mainStore.bottomWidgetsContainer.updateChartHeight(),
                            this.mainStore.crosshair.removeIndicatorToolTip(),
                            this.renderLegend(),
                            this.mainStore.state.saveLayout();
                    }
                    updateStudy(t) {
                        this.changeStudyPanelTitle();
                        const e = this.getIndicatorProps(this.settingsDialog.flutter_chart_id),
                            { config: r } = Tp(this.settingsDialog.flutter_chart_id) || {};
                        if (e && t) {
                            const i = na(this.settingsDialog.flutter_chart_id, t),
                                a = this.activeItems.findIndex(t => t.id === this.settingsDialog.id),
                                n = this.activeItems[a],
                                s = {
                                    ...e,
                                    short_name_and_index: e.short_name + (n.group_length ? ` ${n.group_length}` : ''),
                                    group_length: n.group_length,
                                    id: this.settingsDialog.id,
                                    bars: i.bars,
                                    parameters: t,
                                    config: r,
                                };
                            (this.activeItems[a] = s),
                                this.addOrUpdateIndicator(s, a),
                                this.mainStore.state.saveLayout();
                        }
                    }
                    changeStudyPanelTitle() {
                        this.mainStore.chart.isMobile && this.mainStore.state.saveLayout();
                    }
                    deletePredictionStudies() {
                        const t = this.activeItems.filter(t => t.isPrediction);
                        t.length > 0 &&
                            (t.forEach(t => {
                                this.mainStore.state.stateChange(Ip), this.deleteStudyById(t.id);
                            }),
                            this.mainStore.state.saveLayout());
                    }
                    savePredictionStudies() {
                        const t = this.activeItems.filter(t => t.isPrediction);
                        t.length > 0 && Ui('predictionIndicators', t);
                    }
                    cleanupPredictionIndicator() {
                        localStorage.getItem('predictionIndicators') && localStorage.removeItem('predictionIndicators');
                    }
                    deleteAllStudies() {
                        (this.activeItems = []),
                            window.flutterChart?.indicators.clearIndicators(),
                            this.mainStore.state.saveLayout();
                    }
                    onSelectTab(t) {
                        this.setFilterText(''), (this.selectedTab = t), this.onInfoItem(null);
                    }
                    setFilterText(t) {
                        (this.selectedTab = '' !== t ? 0 : 1),
                            (this.filterText = t),
                            this.mainStore.state.debouncedStateChange('INDICATOR_SEARCH', { search_string: t });
                    }
                    onInfoItem(t) {
                        this.infoItem = t
                            ? { ...t, disabledAddBtn: t.isPrediction && this.mainStore.timeperiod.isTick }
                            : t;
                    }
                    setIndicator(t, e) {
                        this.addOrUpdateIndicator(t, e);
                    }
                    highlightIndicator(t, e, r) {
                        if (((this.currentHoverIndex = t), this.previousHoverIndex !== this.currentHoverIndex)) {
                            if (
                                ('number' == typeof this.previousHoverIndex &&
                                    this.clearHoverItem(this.previousHoverIndex),
                                null != t)
                            ) {
                                const i = ca(this.activeItems[t]);
                                if (i && i.config) {
                                    this.mainStore.crosshair.renderIndicatorToolTip(`${i.name} ${i.bars || ''}`, e, r);
                                    for (const t in i.config)
                                        t.includes('Style') &&
                                            ((i.config[t].thickness = 2),
                                            'scatterStyle' === t && (i.config[t].radius = 2.5)),
                                            t.includes('Styles') &&
                                                i.config[t].forEach(t => {
                                                    t.thickness = 2;
                                                });
                                    this.setIndicator(i, t);
                                }
                            }
                            this.previousHoverIndex = t;
                        }
                    }
                    clearHoverItem(t) {
                        const e = this.activeItems[t];
                        this.mainStore.crosshair.removeIndicatorToolTip(), e && this.setIndicator(e, t);
                    }
                    updatePortalNode(t) {
                        this.portalNodeIdChanged = t;
                    }
                    findLastActiveItem(t) {
                        for (let e = this.activeItems.length - 1; e >= 0; e--)
                            if (this.activeItems[e].flutter_chart_id === t) return this.activeItems[e];
                    }
                    getItemById(t) {
                        return this.activeItems.find(e => e.id === t);
                    }
                }
                var Yf = h(9160).t;
                function Zf(t, e, r) {
                    return (
                        (e = (function (t) {
                            var e = (function (t, e) {
                                if ('object' != typeof t || !t) return t;
                                var r = t[Symbol.toPrimitive];
                                if (void 0 !== r) {
                                    var i = r.call(t, 'string');
                                    if ('object' != typeof i) return i;
                                    throw new TypeError('@@toPrimitive must return a primitive value.');
                                }
                                return String(t);
                            })(t);
                            return 'symbol' == typeof e ? e : String(e);
                        })(e)),
                        e in t
                            ? Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = r),
                        t
                    );
                }
                class Qf {
                    constructor(t) {
                        Zf(this, '_pervDrawingObjectCount', 0),
                            Zf(this, 'mainStore', void 0),
                            Zf(this, 'menuStore', void 0),
                            Zf(this, 'settingsDialog', void 0),
                            Zf(this, 'activeToolsGroup', []),
                            Zf(this, 'portalNodeIdChanged', void 0),
                            Zf(this, 'seletedDrawToolConfig', null),
                            Zf(this, 'getDrawToolsItems', () => {
                                const t = fp();
                                return Object.keys(t).map(e => t[e]);
                            }),
                            Zf(this, 'drawingToolsRepoArray', () =>
                                this.mainStore.chartAdapter.flutterChart?.drawingTool
                                    .getDrawingToolsRepoItems()
                                    .map(t => qi(t))
                                    .filter(t => t)
                                    .filter(t => !(0 == t.drawingData.isDrawingFinished))
                            ),
                            Zf(this, 'onContextReady', () => {
                                document.addEventListener('keydown', this.closeOnEscape, !1),
                                    document.addEventListener('dblclick', this.doubleClick);
                            }),
                            Zf(this, 'closeOnEscape', t => {
                                27 === t.keyCode &&
                                    (this.mainStore.chartAdapter.flutterChart?.drawingTool.clearDrawingToolSelect(),
                                    (this.seletedDrawToolConfig = null),
                                    this.drawingFinished());
                            }),
                            Zf(this, 'doubleClick', () => this.drawingFinished()),
                            Zf(this, 'transform', t => {
                                if ('string' == typeof t && (t.startsWith('#') || t.toLowerCase().startsWith('0x')))
                                    return zf(t);
                                if (ha(t)) {
                                    const e = t;
                                    Object.keys(t).forEach(t => {
                                        e[t] = this.transform(e[t]);
                                    });
                                } else if (Array.isArray(t))
                                    for (let e = 0; e < t.length; e++) t[e] = this.transform(t[e]);
                                return t;
                            }),
                            br(this, {
                                activeToolsGroup: Lt,
                                portalNodeIdChanged: Lt,
                                activeToolsNo: jt,
                                destructor: Be.bound,
                                drawingFinished: Be.bound,
                                clearAll: Be.bound,
                                updateActiveToolsGroup: Be.bound,
                                showDrawToolDialog: Be.bound,
                                selectTool: Be.bound,
                                onChanged: Be.bound,
                                onDeleted: Be.bound,
                                onSetting: Be.bound,
                                updatePortalNode: Be.bound,
                                onCreation: Be.bound,
                                onLoad: Be.bound,
                            }),
                            (this.mainStore = t),
                            (this.menuStore = new Yp(t, { route: 'draw-tool' })),
                            (this.settingsDialog = new Bf({
                                mainStore: t,
                                onDeleted: t => {
                                    const e = this.drawingToolsRepoArray(),
                                        r = e?.findIndex(e => e.configId === t);
                                    void 0 !== r && r > -1 && this.onDeleted(r);
                                },
                                onChanged: t => this.onChanged(t),
                            })),
                            cr(() => !!this.context, this.onContextReady);
                    }
                    get context() {
                        return this.mainStore.chart.context;
                    }
                    get stateStore() {
                        return this.mainStore.state;
                    }
                    get crosshairStore() {
                        return this.mainStore.crosshair;
                    }
                    get activeToolsNo() {
                        return this.activeToolsGroup.reduce((t, e) => t + e.items.length, 0);
                    }
                    destructor() {
                        document.removeEventListener('keydown', this.closeOnEscape),
                            document.removeEventListener('dblclick', this.doubleClick);
                    }
                    updateTheme() {
                        this.activeToolsGroup.forEach(t =>
                            t.items.forEach(t => {
                                la(t.parameters, this.mainStore.chartSetting.theme),
                                    this.onChanged(t.parameters, t.index);
                            })
                        );
                    }
                    onLoad(t) {
                        (this.activeToolsGroup = []),
                            t.forEach(t => {
                                if (('string' == typeof t && (t = qi(t)), !t)) return;
                                const e = t.name.replace('dt_', '');
                                if (e) {
                                    const r = this.processDrawTool(e);
                                    (r.config = t),
                                        r.parameters.forEach(e => {
                                            e.path &&
                                                (['lineStyle', 'fillStyle'].includes(e.path)
                                                    ? (e.value = `#${('000000' + (16777215 & (t[e.path]?.color?.value ?? t[e.path]?.color)).toString(16).toUpperCase()).slice(-6)}`)
                                                    : 'enableLabel' == e.path && (e.value = t[e.path]));
                                        }),
                                        this.updateActiveToolsGroup(r);
                                }
                            });
                    }
                    showDrawToolDialog(t) {
                        if ((Rp(Mp.ChartControl, Bp.DrawTools, `Edit ${t.name}`), t)) {
                            let e = ra(t.name || '');
                            wp[t.id]().parameters.map(t => (t.value = ca(t.defaultValue))),
                                (e = `${t.title} ${t.num || ''}`),
                                (this.settingsDialog.title = e),
                                (this.settingsDialog.dialogPortalNodeId = this.portalNodeIdChanged),
                                (this.settingsDialog.items = t.parameters),
                                (this.settingsDialog.formTitle = Yf.translate('Result')),
                                (this.settingsDialog.id = t.config.configId),
                                (this.settingsDialog.formClassname = 'form--drawing-tool'),
                                this.settingsDialog.setOpen(!0);
                        }
                    }
                    drawingFinished() {
                        this.stateStore && this.crosshairStore.setCrosshairState(this.stateStore.crosshairState);
                    }
                    clearAll() {
                        (this.activeToolsGroup = []),
                            window.flutterChart?.drawingTool.clearDrawingTool(),
                            Rp(Mp.ChartControl, Bp.DrawTools, 'Clear All');
                    }
                    selectTool(t) {
                        this.menuStore.setOpen(!1), Rp(Mp.ChartControl, Bp.DrawTools, `Add ${t}`);
                        const e = this.processDrawTool(t);
                        (this.seletedDrawToolConfig = ca(e)),
                            (e.lineStyle = { color: e.lineStyle }),
                            e.fillStyle && (e.fillStyle = { color: e.fillStyle }),
                            delete e.parameters,
                            e &&
                                this.mainStore.chartAdapter.flutterChart?.drawingTool.addOrUpdateDrawing(
                                    JSON.stringify(e)
                                );
                    }
                    processDrawTool(t) {
                        const e = fp()[t],
                            { parameters: r, config: i } = wp[t]();
                        la(r, this.mainStore.chartSetting.theme), la(i, this.mainStore.chartSetting.theme);
                        let a = null;
                        if (e && r) {
                            r.map(t => (t.value = ca(t.defaultValue)));
                            const n = { config: i, parameters: r, bars: '0', ...e },
                                s = n.parameters.reduce((t, e) => {
                                    const { path: r, paths: i, value: a } = e;
                                    if (ha(a) && i) {
                                        const e = a;
                                        Object.keys(e).forEach(r => {
                                            Uf()(t, i[r], e[r]);
                                        });
                                    } else r && Uf()(t, r, a);
                                    return t;
                                }, n.config || {});
                            a = {
                                ...{ id: n.id, name: `dt_${t}`, title: Gf(n.id), ...this.transform(s) },
                                ...fp()[t],
                                parameters: r,
                                index: this.activeToolsNo,
                            };
                        }
                        return a;
                    }
                    onUpdate() {
                        const t = this.drawingToolsRepoArray();
                        t && this.onLoad(t);
                    }
                    updateActiveToolsGroup(t) {
                        const e = [...this.activeToolsGroup],
                            r = e.findIndex(e => e.id === t.id);
                        if (-1 === r) e.push({ id: t.id, items: [t] });
                        else {
                            const i = e[r];
                            i.items.push({ ...t, num: i.items.length }), (e[r] = i);
                        }
                        this.activeToolsGroup = e;
                    }
                    onCreation() {
                        if (null !== this.seletedDrawToolConfig) {
                            this.updateActiveToolsGroup(this.seletedDrawToolConfig);
                            const t = this.drawingToolsRepoArray();
                            if (!t) return;
                            if (
                                (this.activeToolsGroup.forEach(e => {
                                    e.items.forEach(e => {
                                        if (t[e.index]) {
                                            const r = t[e.index];
                                            if (r)
                                                if (
                                                    this.seletedDrawToolConfig?.id &&
                                                    'channel' === this.seletedDrawToolConfig.id &&
                                                    this.seletedDrawToolConfig.index === e.index
                                                ) {
                                                    const i = r.edgePoints;
                                                    if (i && 2 === i.length) {
                                                        const r = t[e.index + 1];
                                                        r && (e.config = r);
                                                    } else e.config = r;
                                                } else e.config = r;
                                        }
                                    });
                                }),
                                'continuous' === this.seletedDrawToolConfig.id)
                            ) {
                                const t = this.processDrawTool(this.seletedDrawToolConfig.id);
                                (this.seletedDrawToolConfig = ca(t)), this.selectTool(this.seletedDrawToolConfig.id);
                            } else this.seletedDrawToolConfig = null;
                        }
                    }
                    onChanged(t, e) {
                        let r;
                        this.mainStore.chartAdapter.flutterChart?.drawingTool.clearDrawingToolSelect();
                        const i = this.drawingToolsRepoArray();
                        if (!i) return;
                        if (
                            ((r = e || 0 === e ? e : i.findIndex(t => t.configId === this.settingsDialog.id)), -1 === r)
                        )
                            return;
                        const a = i[r];
                        t.forEach(t => {
                            t.path &&
                                ('colorpicker' == t.type
                                    ? (a[t.path].color = zf(t.value))
                                    : 'switch' == t.type && (a[t.path] = t.value));
                        }),
                            this.mainStore.chartAdapter.flutterChart?.drawingTool.editDrawing(JSON.stringify(a), r);
                    }
                    onDeleted(t) {
                        void 0 !== t &&
                            (this.mainStore.chartAdapter.flutterChart?.drawingTool.removeDrawingTool(t),
                            this.onUpdate(),
                            this.mainStore.crosshair.removeDrawingToolToolTip(),
                            t && Rp(Mp.ChartControl, Bp.DrawTools, `Remove ${t}`));
                    }
                    onSetting(t) {
                        if (void 0 !== t) {
                            let e;
                            for (const r of this.activeToolsGroup) {
                                const i = r.items.find(e => e.index === t);
                                i && (e = i);
                            }
                            e && this.showDrawToolDialog(e);
                        }
                    }
                    updatePortalNode(t) {
                        this.portalNodeIdChanged = t;
                    }
                }
                function Jf(t, e, r) {
                    return (
                        (e = (function (t) {
                            var e = (function (t, e) {
                                if ('object' != typeof t || !t) return t;
                                var r = t[Symbol.toPrimitive];
                                if (void 0 !== r) {
                                    var i = r.call(t, 'string');
                                    if ('object' != typeof i) return i;
                                    throw new TypeError('@@toPrimitive must return a primitive value.');
                                }
                                return String(t);
                            })(t);
                            return 'symbol' == typeof e ? e : String(e);
                        })(e)),
                        e in t
                            ? Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = r),
                        t
                    );
                }
                class t_ {
                    constructor() {
                        Jf(this, 'className', ''),
                            Jf(this, 'price', 0),
                            Jf(this, 'isIncrease', !1),
                            Jf(this, 'status', ''),
                            Jf(this, 'oldPrice', 0),
                            br(this, { price: Lt, isIncrease: Lt, status: Lt, setPrice: Be.bound });
                    }
                    setPrice(t, e) {
                        const r = e || +this.oldPrice,
                            i = +t;
                        let a = !1;
                        if (i > r) (a = !0), (this.status = 'up');
                        else {
                            if (!(i < r)) return void (this.status = '');
                            this.status = 'down';
                        }
                        (this.price = t), (this.oldPrice = this.price), (this.isIncrease = a);
                    }
                }
                var e_ = h(9160).t;
                function r_(t, e, r) {
                    return (
                        (e = (function (t) {
                            var e = (function (t, e) {
                                if ('object' != typeof t || !t) return t;
                                var r = t[Symbol.toPrimitive];
                                if (void 0 !== r) {
                                    var i = r.call(t, 'string');
                                    if ('object' != typeof i) return i;
                                    throw new TypeError('@@toPrimitive must return a primitive value.');
                                }
                                return String(t);
                            })(t);
                            return 'symbol' == typeof e ? e : String(e);
                        })(e)),
                        e in t
                            ? Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = r),
                        t
                    );
                }
                class i_ {
                    constructor(t) {
                        let {
                            getCategoricalItems: e,
                            onSelectItem: r,
                            getIsShown: i,
                            placeholderText: a,
                            favoritesId: n,
                            mainStore: s,
                            id: o,
                            getCurrentActiveCategory: l,
                            getCurrentActiveSubCategory: c,
                            getCurrentActiveMarket: h,
                            searchInputClassName: u,
                        } = t;
                        r_(this, 'activeMarket', void 0),
                            r_(this, 'activeSubCategory', ''),
                            r_(this, 'categoryElements', void 0),
                            r_(this, 'favoritesId', void 0),
                            r_(this, 'getCategoricalItems', void 0),
                            r_(this, 'getCurrentActiveCategory', void 0),
                            r_(this, 'getCurrentActiveMarket', void 0),
                            r_(this, 'getCurrentActiveSubCategory', void 0),
                            r_(this, 'id', void 0),
                            r_(this, 'isInit', void 0),
                            r_(this, 'mainStore', void 0),
                            r_(this, 'onSelectItem', void 0),
                            r_(this, 'pauseScrollSpy', !1),
                            r_(this, 'searchInput', void 0),
                            r_(this, 'searchInputClassName', void 0),
                            r_(this, 'placeholderText', void 0),
                            r_(this, 'isShown', !1),
                            r_(this, 'scrollPanel', void 0),
                            r_(this, 'filterText', ''),
                            r_(this, 'activeCategoryKey', ''),
                            r_(this, 'focusedCategoryKey', null),
                            r_(this, 'isScrollingDown', !1),
                            r_(this, 'activeHeadKey', ''),
                            r_(this, 'scrollTop', void 0),
                            r_(this, 'isUserScrolling', !0),
                            r_(this, 'lastFilteredItems', []),
                            r_(this, 'activeCategories', []),
                            br(this, {
                                isShown: Lt,
                                scrollPanel: Lt,
                                filterText: Lt,
                                activeCategoryKey: Lt,
                                focusedCategoryKey: Lt,
                                isScrollingDown: Lt,
                                activeHeadKey: Lt,
                                init: Be.bound,
                                favoritesCategoryData: jt,
                                getFavorites: Be.bound,
                                filteredItems: jt,
                                updateScrollSpy: Be.bound,
                                scrollUp: Be.bound,
                                scrollDown: Be.bound,
                                setCategoryElement: Be.bound,
                                setFilterText: Be.bound,
                                handleFilterClick: Be.bound,
                                setScrollPanel: Be.bound,
                                handleTitleClick: Be.bound,
                                scrollToActiveSymbol: Be.bound,
                            }),
                            Ue(
                                () => i && i() && this.scrollPanel,
                                () => {
                                    i() && this.scrollPanel && this.scrollToActiveSymbol();
                                },
                                { delay: 200 }
                            ),
                            (this.getCategoricalItems = e),
                            (this.onSelectItem = r),
                            (this.favoritesId = n),
                            (this.id = o),
                            (this.categoryElements = {}),
                            (this.mainStore = s),
                            (this.getCurrentActiveCategory = l),
                            (this.getCurrentActiveSubCategory = c),
                            (this.getCurrentActiveMarket = h),
                            (this.isInit = !1),
                            (this.searchInput = yi().createRef()),
                            (this.searchInputClassName = u),
                            (this.placeholderText = a);
                    }
                    get chart() {
                        return this.mainStore.chart;
                    }
                    get context() {
                        return this.chart.context;
                    }
                    get height() {
                        return this.chart.chartContainerHeight
                            ? this.chart.chartContainerHeight - (this.chart.isMobile ? 0 : 120)
                            : 0;
                    }
                    init() {
                        if (((this.isInit = !0), '' === this.activeCategoryKey && this.filteredItems.length > 0))
                            for (const t of this.filteredItems)
                                if (this.categoryElements[t.categoryId]) {
                                    this.activeCategoryKey = t.categoryId;
                                    break;
                                }
                    }
                    get favoritesCategoryData() {
                        return Object.keys(this.mainStore.favorites.favoritesMap[this.favoritesId]) || [];
                    }
                    getFavorites() {
                        this.pauseScrollSpy = !0;
                        const t = {
                            categoryName: e_.translate('Favorites'),
                            categoryId: 'favorite',
                            hasSubcategory: !1,
                            hasSubgroup: !1,
                            active: !0,
                            subgroups: [],
                            emptyDescription: e_.translate('There are no favorites yet.'),
                        };
                        return (
                            setTimeout(() => {
                                this.pauseScrollSpy = !1;
                            }, 20),
                            t
                        );
                    }
                    get filteredItems() {
                        let t = ta(this.getCategoricalItems());
                        const e = this.activeCategories.length
                            ? this.activeCategories
                            : [this.getCurrentActiveCategory ? this.getCurrentActiveCategory() : 'favorite'];
                        for (const r of t)
                            if (e.includes(r.categoryId)) r.active = !0;
                            else if (r.hasSubgroup)
                                for (const t of r.subgroups) e.includes(t.categoryId) && (t.active = !0);
                        if (this.favoritesId) {
                            const e = { ...this.getFavorites(), data: this.favoritesCategoryData },
                                r = t => {
                                    const i = [];
                                    return (
                                        t.hasSubgroup && 'categoryName' in t
                                            ? t.subgroups.forEach(t =>
                                                  t.data.forEach(t => {
                                                      const e = r(t);
                                                      i.push(...e);
                                                  })
                                              )
                                            : t.hasSubcategory
                                              ? t.data.forEach(t => {
                                                    const e = r(t);
                                                    i.push(...e);
                                                })
                                              : e.data.forEach(e => {
                                                    if ('string' == typeof e) {
                                                        const r = t.data.find(t => t.itemId === e);
                                                        r && i.push(r);
                                                    }
                                                }),
                                        i
                                    );
                                },
                                i = e.data.filter(t => 'string' != typeof t);
                            t.forEach(t => {
                                const e = r(t);
                                i.push(...e);
                            }),
                                (e.data = i.filter(t => t)),
                                t.unshift(e);
                        }
                        if ('' === this.filterText) return (this.lastFilteredItems = t), t;
                        let r = !1;
                        const i = this.filterText
                                .split(' ')
                                .filter(t => '' !== t)
                                .map(t => t.toLowerCase().trim()),
                            a = t => {
                                (t.data = t.data.filter(t => {
                                    return (
                                        (e = t.display || ('object' == typeof t.dataObject ? t.dataObject.symbol : '')),
                                        i.reduce((t, r) => e.toLowerCase().includes(r) && t, !0)
                                    );
                                    var e;
                                })),
                                    t.data.length && (r = !0);
                            };
                        for (const e of t)
                            if (((e.active = !0), e.hasSubgroup)) {
                                e.subgroups = or(e.subgroups);
                                for (const t of e.subgroups) {
                                    t.active = !0;
                                    for (const e of t.data) a(e);
                                }
                            } else if (e.hasSubcategory) for (const t of e.data) a(t);
                            else a(e);
                        return (
                            r || (t = this.lastFilteredItems), this.pauseScrollSpy || (this.lastFilteredItems = t), t
                        );
                    }
                    updateScrollSpy() {
                        if (this.pauseScrollSpy || !this.scrollPanel) return;
                        if (0 === this.filteredItems.length) return;
                        const t = this.scrollPanel.getBoundingClientRect().top;
                        let e = null;
                        for (const r of this.filteredItems) {
                            const i = this.categoryElements[r.categoryId],
                                a = 57;
                            if (!i) return;
                            const n = this.filteredItems.indexOf(r) * (r.hasSubgroup ? r.subgroups.length + 1 * a : a),
                                s = i.getBoundingClientRect();
                            s.top - t - n < 0 &&
                                (e = r.hasSubgroup
                                    ? r.subgroups[r.subgroups.length > 1 ? +(s.top < 0) : 0]?.categoryId
                                    : r?.categoryId);
                        }
                        const r = this.scrollPanel.getBoundingClientRect().top;
                        this.scrollTop && this.scrollTop > r ? this.scrollUp() : this.scrollDown(),
                            (this.scrollTop = r),
                            (this.focusedCategoryKey = e || this.filteredItems[0].categoryId),
                            (this.activeHeadKey = 0 === this.scrollTop ? null : this.focusedCategoryKey);
                    }
                    scrollUp() {
                        this.isScrollingDown = !1;
                    }
                    scrollDown() {
                        (this.isScrollingDown = this.isUserScrolling), (this.isUserScrolling = !0);
                    }
                    setCategoryElement(t, e) {
                        this.categoryElements[e] = t;
                    }
                    setFilterText(t) {
                        (this.filterText = t),
                            (this.isUserScrolling = !1),
                            this.updateScrollSpy(),
                            '' === t && setTimeout(() => this.scrollToActiveSymbol(), 1),
                            this.mainStore.state.debouncedStateChange('MARKET_SEARCH', { search_string: t });
                    }
                    handleFilterClick(t) {
                        this.focusedCategoryKey = '';
                        const e = this.categoryElements[t],
                            r = 40 * Object.keys(this.categoryElements).indexOf(t);
                        e &&
                            ((this.pauseScrollSpy = !0),
                            (this.isUserScrolling = !1),
                            this.scrollPanel &&
                                (this.chart.isMobile
                                    ? this.scrollPanel.scroll({ top: e.offsetTop - 95, left: 0, behavior: 'smooth' })
                                    : (this.scrollPanel.scrollTop = e.offsetTop - r)),
                            (this.focusedCategoryKey = t),
                            (this.activeHeadKey = null),
                            setTimeout(() => {
                                this.pauseScrollSpy = !1;
                            }, 20));
                    }
                    setScrollPanel(t) {
                        this.scrollPanel = t;
                    }
                    handleTitleClick(t) {
                        this.activeCategories = [];
                        for (const e of this.filteredItems) {
                            if (
                                e.hasSubgroup
                                    ? e.subgroups?.filter(e => e.categoryId === t).length > 0
                                    : e.categoryId === t
                            ) {
                                if (e.hasSubgroup)
                                    for (const r of e.subgroups) r.categoryId === t && (r.active = !r.active);
                                (e.active = !e.active), setTimeout(() => this.handleFilterClick(e.categoryId), 250);
                            }
                            if (e.active && e.hasSubgroup)
                                for (const t of e.subgroups) t.active && this.activeCategories.push(t.categoryId);
                            else e.active && 'favorite' !== e.categoryId && this.activeCategories.push(e.categoryId);
                        }
                        setTimeout(() => this.updateScrollSpy(), 0);
                    }
                    scrollToActiveSymbol() {
                        (this.focusedCategoryKey = null),
                            (this.activeCategoryKey = this.getCurrentActiveCategory
                                ? this.getCurrentActiveCategory()
                                : 'favorite'),
                            (this.activeSubCategory = this.getCurrentActiveSubCategory
                                ? this.getCurrentActiveSubCategory()
                                : ''),
                            (this.activeMarket = this.getCurrentActiveMarket ? this.getCurrentActiveMarket() : '');
                        const t = this.categoryElements[this.activeCategoryKey],
                            e = `.sc-mcd__category--${this.activeCategoryKey}  .sc-mcd__category__content--${this.activeSubCategory}`,
                            r = this.scrollPanel?.querySelector(e),
                            i = `${e} .sc-mcd__item--${this.activeMarket}`,
                            a = this.scrollPanel?.querySelector(i);
                        if (
                            ((this.activeHeadKey = this.activeCategoryKey || null),
                            (this.pauseScrollSpy = !0),
                            (this.isUserScrolling = !1),
                            this.scrollPanel && t && this.scrollPanel)
                        )
                            if (((this.scrollPanel.scrollTop = t.offsetTop), a)) {
                                const e = this.mainStore.chart.isMobile ? 100 : 40;
                                this.scrollPanel.scrollTop = t.offsetTop + a.offsetTop - e;
                            } else if (r) {
                                const e = this.mainStore.chart.isMobile ? 100 : 0;
                                this.scrollPanel.scrollTop = t.offsetTop + r.offsetTop - e;
                            }
                        if (
                            (setTimeout(() => {
                                this.pauseScrollSpy = !1;
                            }, 20),
                            this.isInit || this.init(),
                            this.mainStore.chart.isMobile ||
                                setTimeout(() => this.searchInput.current && this.searchInput.current.focus(), 0),
                            !this.mainStore.chart.isMobile)
                        ) {
                            const t = Object.keys(this.categoryElements),
                                e = t.filter(t => null !== this.categoryElements[t]),
                                r = t[t.length - 1],
                                i = this.height - (64 + 40 * (e.length - 1)),
                                a = this.categoryElements[r];
                            a && (a.style.minHeight = `${i}px`);
                        }
                    }
                }
                var a_ = h(9160).t;
                function n_(t, e, r) {
                    return (
                        (e = (function (t) {
                            var e = (function (t, e) {
                                if ('object' != typeof t || !t) return t;
                                var r = t[Symbol.toPrimitive];
                                if (void 0 !== r) {
                                    var i = r.call(t, 'string');
                                    if ('object' != typeof i) return i;
                                    throw new TypeError('@@toPrimitive must return a primitive value.');
                                }
                                return String(t);
                            })(t);
                            return 'symbol' == typeof e ? e : String(e);
                        })(e)),
                        e in t
                            ? Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = r),
                        t
                    );
                }
                class s_ {
                    constructor(t) {
                        n_(this, 'animatedPrice', void 0),
                            n_(this, 'categoricalDisplay', void 0),
                            n_(this, 'mainStore', void 0),
                            n_(this, 'menuStore', void 0),
                            n_(this, 'serverTime', void 0),
                            n_(this, 'todayChange', null),
                            n_(this, 'todayChangePercent', null),
                            n_(this, 'isVisible', !1),
                            n_(this, 'openMarket', {}),
                            n_(this, 'enableShowPrice', !1),
                            n_(this, 'searchInputClassName', void 0),
                            n_(this, 'onContextReady', () => {
                                this.chart.feed?.onMasterDataUpdate(this.update),
                                    this.update(),
                                    this.tradingTimes?.onMarketOpenCloseChanged(
                                        Be(t => {
                                            for (const e in t)
                                                this.currentSymbol?.symbol === e &&
                                                    (this.currentSymbol.exchange_is_open = t[e]);
                                        })
                                    );
                            }),
                            n_(this, 'onMouseEnter', () => this.crosshairStore.updateVisibility(!1)),
                            n_(this, 'onMouseLeave', () => this.crosshairStore.updateVisibility(!0)),
                            br(this, {
                                todayChange: Lt,
                                todayChangePercent: Lt,
                                isVisible: Lt,
                                openMarket: Lt,
                                currentSymbol: jt,
                                isSymbolOpen: jt,
                                decimalPlaces: jt,
                                isShowChartPrice: jt,
                                tradingTimes: jt,
                                symbolOpenTime: jt,
                                currentActiveCategory: jt,
                                currentActiveSubCategory: jt,
                                currentActiveMarket: jt,
                                setSymbol: Be.bound,
                                update: Be.bound,
                                hidePrice: Be.bound,
                                updateProps: Be.bound,
                            }),
                            (this.mainStore = t),
                            cr(() => !!this.context, this.onContextReady),
                            (this.menuStore = new Yp(t, { route: 'chart-title' })),
                            (this.animatedPrice = new t_()),
                            (this.categoricalDisplay = new i_({
                                getCategoricalItems: () => this.mainStore.chart.categorizedSymbols,
                                getIsShown: () => this.menuStore.open,
                                placeholderText: a_.translate('Search...'),
                                favoritesId: 'chartTitle&Comparison',
                                mainStore: t,
                                id: 'market_dropdown',
                                getCurrentActiveCategory: () => this.currentActiveCategory,
                                getCurrentActiveSubCategory: () => this.currentActiveSubCategory,
                                getCurrentActiveMarket: () => this.currentActiveMarket,
                                searchInputClassName: this.searchInputClassName,
                            })),
                            (this.serverTime = Up.getInstance());
                    }
                    get chart() {
                        return this.mainStore.chart;
                    }
                    get context() {
                        return this.mainStore.chart.context;
                    }
                    get crosshairStore() {
                        return this.mainStore.crosshair;
                    }
                    get currentSymbol() {
                        return this.mainStore.chart.currentActiveSymbol;
                    }
                    get isSymbolOpen() {
                        return this.currentSymbol?.exchange_is_open;
                    }
                    get decimalPlaces() {
                        return this.mainStore.chart.currentActiveSymbol?.decimal_places || 2;
                    }
                    get isShowChartPrice() {
                        return this.mainStore.chart.isChartAvailable;
                    }
                    get tradingTimes() {
                        return this.mainStore.chart.tradingTimes;
                    }
                    get symbolOpenTime() {
                        const t =
                                this.tradingTimes?._tradingTimesMap &&
                                this.tradingTimes._tradingTimesMap.length &&
                                this.currentSymbol
                                    ? this.tradingTimes._tradingTimesMap[this.currentSymbol.symbol].times
                                    : [],
                            e = this.serverTime.getLocalDate().getTime();
                        let r = t ? t.find(t => t.open.getTime() > e) : null;
                        return r instanceof Date || (r = null), { openTime: r };
                    }
                    get currentActiveCategory() {
                        const t = this.mainStore.chart.currentActiveSymbol;
                        return this.openMarket.category
                            ? this.openMarket.category
                            : 'none' !== t?.subgroup
                              ? t?.subgroup
                              : t
                                ? t.market
                                : 'favorite';
                    }
                    get currentActiveSubCategory() {
                        return this.openMarket.subcategory
                            ? this.openMarket.subcategory
                            : this.mainStore.chart.currentActiveSymbol
                              ? this.mainStore.chart.currentActiveSymbol.symbol
                              : '';
                    }
                    get currentActiveMarket() {
                        return this.openMarket.market ? this.openMarket.market : null;
                    }
                    setSymbol(t) {
                        void 0 === this.mainStore.state.symbol
                            ? this.chart.changeSymbol(t)
                            : console.error(
                                  'Changing symbol does nothing because symbol prop is being set. Consider overriding the onChange prop in <ChartTitle />'
                              );
                    }
                    update(t) {
                        if (!this.currentSymbol) return;
                        const e = t || !this.isShowChartPrice;
                        if (!e) return;
                        let r = t?.Close;
                        if (r) {
                            r = +r.toFixed(this.decimalPlaces);
                            const e = t?.prevClose || this.animatedPrice.price;
                            this.animatedPrice.setPrice(r, e),
                                e &&
                                    ((this.todayChange = Math.abs(r - e).toFixed(this.decimalPlaces)),
                                    (this.todayChangePercent = ((Number(this.todayChange) / e) * 100).toFixed(2)));
                        }
                        this.isVisible || !e || this.enableShowPrice
                            ? (this.isVisible = e)
                            : (this.enableShowPrice = !0);
                    }
                    hidePrice() {
                        (this.isVisible = !1), (this.enableShowPrice = !1);
                    }
                    updateProps(t) {
                        let { open_market: e, open: r } = t;
                        e && (this.openMarket = e), r && this.menuStore.setOpen(!0);
                    }
                }
                function o_(t, e, r) {
                    return (
                        (e = (function (t) {
                            var e = (function (t, e) {
                                if ('object' != typeof t || !t) return t;
                                var r = t[Symbol.toPrimitive];
                                if (void 0 !== r) {
                                    var i = r.call(t, 'string');
                                    if ('object' != typeof i) return i;
                                    throw new TypeError('@@toPrimitive must return a primitive value.');
                                }
                                return String(t);
                            })(t);
                            return 'symbol' == typeof e ? e : String(e);
                        })(e)),
                        e in t
                            ? Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = r),
                        t
                    );
                }
                class l_ {
                    constructor(t) {
                        o_(this, 'templateName', ''),
                            o_(this, 'currentRoute', 'main'),
                            o_(this, 'isInputActive', !1),
                            o_(this, 'views', Hi('chart-views') || []),
                            o_(this, 'routes', {
                                add: () => this.saveViews(),
                                main: () => this.updateRoute('add'),
                                cancel: () => this.onCancel(),
                                overwrite: () => this.overwrite(),
                            }),
                            o_(this, 'mainStore', void 0),
                            o_(this, 'menuStore', void 0),
                            br(this, {
                                templateName: Lt,
                                currentRoute: Lt,
                                isInputActive: Lt,
                                routes: Lt,
                                views: Lt,
                                sortedItems: jt,
                                onChange: Be.bound,
                                onSubmit: Be.bound,
                                onCancel: Be.bound,
                                updateRoute: Be.bound,
                                saveViews: Be.bound,
                                overwrite: Be.bound,
                                remove: Be.bound,
                                removeAll: Be.bound,
                                applyLayout: Be.bound,
                                onToggleNew: Be.bound,
                                inputRef: Be.bound,
                                onFocus: Be.bound,
                                onBlur: Be.bound,
                            }),
                            (this.mainStore = t),
                            (this.menuStore = new Yp(t, { route: 'templates' })),
                            Ue(
                                () => this.menuStore.dialogStore.open,
                                () => {
                                    0 === this.views.length ? this.updateRoute('new') : this.updateRoute('main'),
                                        this.menuStore.dialogStore.open && (this.templateName = '');
                                }
                            );
                    }
                    get context() {
                        return this.mainStore.chart.context;
                    }
                    get loader() {
                        return this.mainStore.loader;
                    }
                    get sortedItems() {
                        return [...this.views].sort((t, e) => (t.name.toLowerCase() < e.name.toLowerCase() ? -1 : 1));
                    }
                    updateLocalStorage() {
                        localStorage.setItem('chart-views', JSON.stringify(this.views));
                    }
                    onChange(t) {
                        'overwrite' !== this.currentRoute && (this.templateName = t.target.value);
                    }
                    onSubmit(t) {
                        13 === t.keyCode && (this.saveViews(), Rp(Mp.ChartControl, Bp.Template, 'Save Template'));
                    }
                    onCancel() {
                        (this.templateName = ''), this.updateRoute('main');
                    }
                    updateRoute(t) {
                        this.currentRoute = t;
                    }
                    getLayout() {
                        return {
                            chartType: this.mainStore.state.chartType,
                            granularity: this.mainStore.state.granularity,
                            timeUnit: this.mainStore.state.timeperiodStore.timeUnit,
                            studyItems: this.mainStore.studies.activeItems,
                            crosshair: this.mainStore.crosshair.state,
                            drawTools: this.mainStore.drawTools.activeToolsGroup,
                            msPerPx: this.mainStore.chartAdapter.msPerPx,
                        };
                    }
                    saveViews() {
                        this.views.some(t => t.name.toLowerCase().trim() === this.templateName.toLowerCase().trim())
                            ? this.updateRoute('overwrite')
                            : this.templateName.trim().length > 0 &&
                              (this.updateRoute('main'),
                              this.views.push({ name: this.templateName.trim(), layout: ca(this.getLayout()) }),
                              this.updateLocalStorage(),
                              (this.templateName = ''));
                    }
                    overwrite() {
                        const t = ca(this.getLayout()),
                            e = this.views.findIndex(t => t.name.toLowerCase() === this.templateName.toLowerCase());
                        (this.views[e].layout = t),
                            (this.views[e].name = this.templateName.trim()),
                            this.updateLocalStorage(),
                            this.updateRoute('main'),
                            (this.templateName = '');
                    }
                    remove(t, e) {
                        (this.views = this.sortedItems.filter((e, r) => t !== r)),
                            (e.nativeEvent.is_item_removed = !0),
                            this.updateLocalStorage(),
                            Rp(Mp.ChartControl, Bp.Template, 'Remove Template');
                    }
                    removeAll() {
                        (this.views = []),
                            this.updateLocalStorage(),
                            Rp(Mp.ChartControl, Bp.Template, 'Remove All Templates'),
                            this.updateRoute('new');
                    }
                    applyLayout(t, e, r, i) {
                        if (e.nativeEvent.is_item_removed) return;
                        this.mainStore.crosshair.updateVisibility(!1);
                        const { layout: a } = this.sortedItems[t];
                        r(a.granularity),
                            i(a.chartType),
                            this.mainStore.crosshair.setCrosshairState(0),
                            this.restoreLayout(ca(a)),
                            Rp(Mp.ChartControl, Bp.Template, 'Load Template');
                    }
                    async restoreLayout(t) {
                        this.loader && this.loader.show(),
                            (this.mainStore.chartAdapter.msPerPx = t.msPerPx),
                            this.mainStore.state.setChartIsReady(!1),
                            void 0 !== t.chartType && this.mainStore.chartType.setChartType(t.chartType),
                            this.menuStore.setOpen(!1),
                            await cr(() => this.mainStore.chartAdapter.isChartLoaded),
                            this.mainStore.studies.restoreStudies(t.studyItems || []),
                            'number' == typeof t.crosshair && this.mainStore.crosshair.setLayoutCrosshair(t.crosshair),
                            (() => {
                                this.loader &&
                                    (this.loader.hide(), this.mainStore.paginationLoader.updateOnPagination(!1)),
                                    this.mainStore.state.setChartIsReady(!0),
                                    void 0 !== t.granularity && this.mainStore.timeperiod.setGranularity(t.granularity);
                            })();
                    }
                    onToggleNew() {
                        this.updateRoute('main');
                    }
                    inputRef(t) {
                        t && (t.focus(), (this.isInputActive = !0));
                    }
                    onFocus() {
                        this.isInputActive = !0;
                    }
                    onBlur() {
                        this.isInputActive = !1;
                    }
                }
                function c_(t, e, r) {
                    return (
                        (e = (function (t) {
                            var e = (function (t, e) {
                                if ('object' != typeof t || !t) return t;
                                var r = t[Symbol.toPrimitive];
                                if (void 0 !== r) {
                                    var i = r.call(t, 'string');
                                    if ('object' != typeof i) return i;
                                    throw new TypeError('@@toPrimitive must return a primitive value.');
                                }
                                return String(t);
                            })(t);
                            return 'symbol' == typeof e ? e : String(e);
                        })(e)),
                        e in t
                            ? Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = r),
                        t
                    );
                }
                const h_ = class {
                    constructor(t) {
                        c_(this, 'mainStore', void 0),
                            c_(this, 'prev_arrow', void 0),
                            c_(this, 'state', 2),
                            c_(this, 'drawingTooltip', null),
                            c_(this, 'indicatorTooltip', null),
                            c_(this, 'node', null),
                            c_(this, 'showChange', !1),
                            c_(this, 'showSeries', !1),
                            c_(this, 'showStudies', !1),
                            c_(this, 'isDrawingRegistered', !1),
                            c_(this, 'selectedDrawing', ''),
                            c_(this, 'refs', void 0),
                            c_(this, 'hoverOnScreen', !1),
                            c_(this, 'isOverChartContainer', !1),
                            c_(this, 'onCrosshairChanged', () => null),
                            c_(this, 'cachedDx', null),
                            c_(this, 'cachedDy', null),
                            c_(this, 'layoutCrosshair', 0),
                            c_(this, 'onMount', async t => {
                                await cr(() => this.mainStore.chartAdapter.isChartLoaded);
                                const e = document.querySelector('.chartContainer');
                                e && e.addEventListener('mouseout', this.onMouseOut), (this.refs = t);
                            }),
                            c_(this, 'onUnmount', () => {
                                const t = document.querySelector('.chartContainer');
                                t && t.removeEventListener('mouseout', this.onMouseOut), (this.refs = void 0);
                            }),
                            c_(this, 'onMouseMove', (t, e, r, i) => {
                                (this.cachedDx === t && this.cachedDy === e) ||
                                    ((this.cachedDx = t),
                                    (this.cachedDy = e),
                                    !1 === this.hoverOnScreen &&
                                        ((this.isOverChartContainer = !0), (this.hoverOnScreen = !0)),
                                    this.isOverChartContainer &&
                                        (this.layoutCrosshair &&
                                            (this.setCrosshairState(this.layoutCrosshair), (this.layoutCrosshair = 0)),
                                        this.setPositions(t, e, r, i),
                                        this.renderCrosshairTooltip(t, e),
                                        this.updateVisibility(!0)));
                            }),
                            c_(this, 'onMouseOut', () => {
                                (this.isOverChartContainer = !1), this.updateVisibility(!1), (this.hoverOnScreen = !1);
                            }),
                            c_(this, 'setPositions', (t, e, r, i) => {
                                if (!this.refs) return;
                                const {
                                    crossHairXRef: a,
                                    crossHairYRef: n,
                                    floatDateRef: s,
                                    floatPriceRef: o,
                                } = this.refs;
                                if (
                                    (a.current && (a.current.style.transform = `translate(${t}px, 0px)`),
                                    n.current && (n.current.style.transform = `translate(0px, ${e}px)`),
                                    s.current)
                                ) {
                                    const e = s.current.clientWidth;
                                    (s.current.innerText = nf().utc(r).format(this.getDateTimeFormat())),
                                        (s.current.style.transform = `translate(${t - e / 2}px, 0px)`);
                                }
                                if (o.current) {
                                    const t = o.current.clientHeight;
                                    if (this.mainStore.chartAdapter.getQuoteFromY(e) >= 0) {
                                        const t = Number(i).toFixed(this.mainStore.chart.pip);
                                        o.current.innerText = `${t}`;
                                    }
                                    o.current.style.transform = `translate(0px, ${e - t / 2}px)`;
                                }
                            }),
                            c_(this, 'renderCrosshairTooltip', (t, e) => {
                                if (2 !== this.state) return;
                                if (!this.mainStore.chartAdapter.isChartLoaded) return;
                                const r = this.mainStore.chartAdapter.getEpochFromX(t),
                                    i = this.mainStore.chart.feed?.quotes || [],
                                    a = i[i.length - 1],
                                    n = a?.DT?.getTime(),
                                    s = this.mainStore.chartAdapter.getGranularityInMs(),
                                    o =
                                        r <= (n ? n + s / 2 : r)
                                            ? this.mainStore.chart.feed?.getClosestQuoteForEpoch(r)
                                            : void 0;
                                let l = [];
                                o && (l = this.calculateRows(o));
                                const c = this.mainStore.chart.feed?.getClosestValidEpoch(r, s),
                                    h = this.getIndicatorRows(o?.DT?.getTime() || c || r);
                                l.push(...h),
                                    0 !== l.length && this.isChartReady
                                        ? this.updateTooltipPosition({ left: t, top: e, rows: l })
                                        : this.updateTooltipPosition({ left: -5e3, top: 0, rows: null });
                            }),
                            c_(this, 'selectedDrawingHoverClick', async () => {
                                await cr(() => this.mainStore.chartAdapter.isChartLoaded),
                                    document.querySelector('.chartContainer') &&
                                        !this.isDrawingRegistered &&
                                        (this.isDrawingRegistered = !0);
                            }),
                            c_(this, 'renderDrawingToolToolTip', (t, e, r) => {
                                if (null !== this.drawingTooltip)
                                    (this.drawingTooltip.style.top = r - 100 + 'px'),
                                        (this.drawingTooltip.style.left = e - 150 + 'px');
                                else {
                                    if (null != document.querySelector('.draw-tool-tooltip')) return;
                                    const i = this.context?.topNode?.querySelector('.chartContainer'),
                                        a = document.createElement('div');
                                    a.classList.add('draw-tool-tooltip', 'mSticky'),
                                        (a.style.display = 'inline-block'),
                                        (a.style.position = 'absolute'),
                                        (a.style.top = r - 100 + 'px'),
                                        (a.style.left = e - 150 + 'px'),
                                        (a.innerHTML = `\n                        <span class='mStickyInterior' style='display:inline-block'>${t}</span>\n                        <span class='mouseDeleteInstructions'>Double click to manage</span>\n            `),
                                        (this.drawingTooltip = a),
                                        i?.appendChild(a);
                                }
                            }),
                            c_(this, 'renderIndicatorToolTip', (t, e, r) => {
                                if (null !== this.indicatorTooltip)
                                    (this.indicatorTooltip.style.top = r - 100 + 'px'),
                                        (this.indicatorTooltip.style.left = e - 150 + 'px');
                                else {
                                    if (null != document.querySelector('.indicator-tooltip')) return;
                                    const i = this.context?.topNode?.querySelector('.chartContainer'),
                                        a = document.createElement('div');
                                    a.classList.add('indicator-tooltip', 'mSticky'),
                                        (a.style.display = 'inline-block'),
                                        (a.style.position = 'absolute'),
                                        (a.style.top = r - 100 + 'px'),
                                        (a.style.left = e - 150 + 'px'),
                                        (a.innerHTML = `\n                    <span class='mStickyInterior' style='display:inline-block'>${t}</span>\n                    <span class='mouseDeleteInstructions'>Double click to manage</span>\n        `),
                                        (this.indicatorTooltip = a),
                                        i?.appendChild(a);
                                }
                            }),
                            c_(this, 'removeDrawingToolToolTip', () => {
                                document.getElementsByClassName('draw-tool-tooltip').length > 0 &&
                                    (document.getElementsByClassName('draw-tool-tooltip')[0].remove(),
                                    (this.drawingTooltip = null));
                            }),
                            c_(this, 'removeIndicatorToolTip', () => {
                                document.getElementsByClassName('indicator-tooltip').length > 0 &&
                                    (document.getElementsByClassName('indicator-tooltip')[0].remove(),
                                    (this.indicatorTooltip = null));
                            }),
                            c_(this, 'getIndicatorRows', t => {
                                const e = [],
                                    r = window.flutterChart.app.getTooltipContent(t, this.decimalPlaces || 2),
                                    i = this.mainStore.studies.activeItems || [];
                                return (
                                    r
                                        .filter(t => t)
                                        .forEach((t, r) => {
                                            if (r < i.length) {
                                                const a =
                                                    ((t, e) => {
                                                        const r = () => (e?.bars ? `(${e.bars})` : '').toUpperCase();
                                                        return {
                                                            AwesomeOscillator: { labels: ['AWESOME_HIST'] },
                                                            dpo: { labels: [`DETRENDED ${r()}`] },
                                                            gator: {
                                                                labels: [`GATOR ${r()}_HIST1`, `GATOR ${r()}_HIST2`],
                                                            },
                                                            macd: {
                                                                labels: [
                                                                    `MACD MACD ${r()}`,
                                                                    `SIGNAL MACD ${r()}`,
                                                                    `MACD ${r()}_HIST`,
                                                                ],
                                                            },
                                                            ROC: { labels: [`PRICE ROC ${r()}`] },
                                                            RSI: { labels: [`RSI ${r()}`] },
                                                            StochasticOscillator: {
                                                                labels: [
                                                                    `%K STOCHASTICS ${r()}`,
                                                                    `%D STOCHASTICS ${r()}`,
                                                                ],
                                                            },
                                                            SMI: {
                                                                labels: [`%K STCH MTM ${r()}`, `%D STCH MTM ${r()}`],
                                                            },
                                                            WilliamsR: { labels: [`Williams %R ${r()}`] },
                                                            Aroon: { labels: [`AROON UP ${r()}`, `AROON DOWN ${r()}`] },
                                                            adx: {
                                                                labels: [
                                                                    `+DI ADX ${r()}`,
                                                                    `-DI ADX ${r()}`,
                                                                    `ADX ${r()}`,
                                                                    `ADX ${r()}_HIST`,
                                                                ],
                                                            },
                                                            commodity_channel_index: { labels: [`CCI ${r()}`] },
                                                            ichimoku: {
                                                                labels: [
                                                                    `CONVERSION LINE ICHIMOKU CLOUDS ${r()}`,
                                                                    `BASE LINE ICHIMOKU CLOUDS ${r()}`,
                                                                    `LEADING SPAN A ICHIMOKU CLOUDS ${r()}`,
                                                                    `LEADING SPAN B ICHIMOKU CLOUDS ${r()}`,
                                                                    `LAGGING SPAN ICHIMOKU CLOUDS ${r()}`,
                                                                ],
                                                            },
                                                            ParabolicSAR: { labels: [`PSAR ${r()}`] },
                                                            bollinger_bands: {
                                                                labels: [
                                                                    `BOLLINGER BANDS TOP ${r()}`,
                                                                    `BOLLINGER BANDS MEDIAN ${r()}`,
                                                                    `BOLLINGER BANDS BOTTOM ${r()}`,
                                                                ],
                                                            },
                                                            donchian_channel: {
                                                                labels: [
                                                                    `DONCHIAN HIGH DONCHIAN CHANNEL ${r()}`,
                                                                    `DONCHIAN MEDIAN DONCHIAN CHANNEL ${r()}`,
                                                                    `DONCHIAN LOW DONCHIAN CHANNEL ${r()}`,
                                                                ],
                                                            },
                                                            moving_average: { labels: [`MA ${r()}`] },
                                                            moving_envelope_average: {
                                                                labels: [
                                                                    `MA ENV TOP ${r()}`,
                                                                    `MA ENV MEDIAN ${r()}`,
                                                                    `MA ENV BOTTOM ${r()}`,
                                                                ],
                                                            },
                                                            rainbow: {
                                                                labels: Array.from(Array(10), (t, e) => e + 1).map(
                                                                    t => `SMA${t} RAINBOW MA ${r()}`
                                                                ),
                                                            },
                                                            alligator: {
                                                                labels: [
                                                                    `JAW ALLIGATOR ${r()}`,
                                                                    `TEETH ALLIGATOR ${r()}`,
                                                                    `LIPS ALLIGATOR ${r()}`,
                                                                ],
                                                            },
                                                            fcb: {
                                                                labels: [
                                                                    `FRACTAL HIGH FRACTAL CHAOS BANDS ${r()}`,
                                                                    `FRACTAL LOW FRACTAL CHAOS BANDS ${r()}`,
                                                                ],
                                                            },
                                                        }[t];
                                                    })(t.name, i[r])?.labels || [];
                                                a.forEach((r, i) => {
                                                    const a = t.values[i];
                                                    a && e.push({ name: r, value: a });
                                                });
                                            }
                                        }),
                                    e
                                );
                            }),
                            c_(this, 'updateVisibility', t => {
                                const e = this.refs?.crosshairRef.current;
                                e && (t ? e.classList.add('active') : e.classList.remove('active'));
                            }),
                            c_(this, 'getDateTimeFormat', () => {
                                switch (this.mainStore.timeperiod.timeUnit) {
                                    case 'day':
                                        return 'DD/MM/YYYY';
                                    case 'hour':
                                    case 'minute':
                                    default:
                                        return 'DD/MM HH:mm';
                                    case 'tick':
                                        return 'DD/MM HH:mm:ss';
                                }
                            }),
                            br(this, {
                                activeSymbol: jt,
                                decimalPlaces: jt,
                                state: Lt,
                                toggleState: Be.bound,
                                updateProps: Be.bound,
                                setCrosshairState: Be.bound,
                            }),
                            (this.mainStore = t);
                    }
                    get activeSymbol() {
                        return this.mainStore.chart.currentActiveSymbol;
                    }
                    get decimalPlaces() {
                        return this.activeSymbol?.decimal_places || 2;
                    }
                    get showOhl() {
                        return 'tick' !== this.mainStore.timeperiod.timeUnit && this.mainStore.chartType.isCandle;
                    }
                    get context() {
                        return this.mainStore.chart.context;
                    }
                    get isChartReady() {
                        return this.mainStore.state.isChartReady;
                    }
                    toggleState() {
                        const t = (this.state + 1) % 3;
                        this.setCrosshairState(t);
                    }
                    setLayoutCrosshair(t) {
                        this.layoutCrosshair = t;
                    }
                    updateProps(t) {
                        this.onCrosshairChanged = t || (() => null);
                    }
                    setCrosshairState(t) {
                        if (!this.context) return;
                        (this.state = t),
                            (this.mainStore.state.crosshairState = t),
                            this.mainStore.state.saveLayout(),
                            this.onCrosshairChanged(this.state);
                        const e = 0 !== t;
                        this.mainStore.chartAdapter.flutterChart?.config.updateCrosshairVisibility(e);
                    }
                    calculateRows(t) {
                        const e = {},
                            r = [];
                        if (
                            (r.push({ member: 'DT', display: 'DT' }),
                            (e.DT = e.Close = 1),
                            this.showChange && r.push({ member: 'Change', display: 'Change' }),
                            this.showOhl)
                        ) {
                            for (const t of ['Open', 'Close', 'High', 'Low']) r.push({ member: t, display: t });
                            e.Open = e.High = e.Low = 1;
                        }
                        if (this.activeSymbol?.name) {
                            const t = this.activeSymbol?.name;
                            r.push({ member: 'Close', display: t });
                        }
                        const i = [];
                        for (const e of r) {
                            const { member: r, display: a } = e;
                            let n = t[r];
                            ['Open', 'Close', 'High', 'Low'].includes(r) &&
                                (n = Number(n).toFixed(this.mainStore.chart.pip));
                            const s = a?.replace(/^(Result )(.*)/, '$2');
                            if (n && ('DT' === r || 'object' != typeof n)) {
                                let e = '';
                                (e =
                                    n.constructor === Number
                                        ? n.toString()
                                        : n.constructor === Date
                                          ? nf()(t.Date).format(this.getDateTimeFormat())
                                          : n),
                                    i.push({ name: s.toUpperCase(), value: e });
                            }
                        }
                        return i;
                    }
                    updateTooltipPosition(t) {
                        let { top: e, left: r, rows: i } = t;
                        const a = this.context?.topNode?.querySelector('.cq-crosshair-tooltip');
                        if (a) {
                            a.style.transform = `translate(${r}px, ${e}px)`;
                            const t =
                                r <= (this.mainStore.state.crosshairTooltipLeftAllow || 315)
                                    ? 'arrow-left'
                                    : 'arrow-right';
                            if (
                                (t !== this.prev_arrow &&
                                    (this.prev_arrow && a.classList.remove(this.prev_arrow),
                                    a.classList.add(t),
                                    (this.prev_arrow = t)),
                                null !== i)
                            ) {
                                const t = a.querySelector('.cq-crosshair-content');
                                t &&
                                    (t.innerHTML = i
                                        .map(
                                            t =>
                                                `\n                <div class="row">\n                    <span>${'DT' !== t.name ? t.name : t.value}</span>\n                    <span>${'DT' !== t.name ? t.value : ''}</span>\n                </div>\n            `
                                        )
                                        .join(''));
                            }
                        }
                    }
                };
                function u_(t, e, r) {
                    return (
                        (e = (function (t) {
                            var e = (function (t, e) {
                                if ('object' != typeof t || !t) return t;
                                var r = t[Symbol.toPrimitive];
                                if (void 0 !== r) {
                                    var i = r.call(t, 'string');
                                    if ('object' != typeof i) return i;
                                    throw new TypeError('@@toPrimitive must return a primitive value.');
                                }
                                return String(t);
                            })(t);
                            return 'symbol' == typeof e ? e : String(e);
                        })(e)),
                        e in t
                            ? Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = r),
                        t
                    );
                }
                class d_ {
                    constructor(t) {
                        u_(this, 'mainStore', void 0),
                            u_(this, 'menuStore', void 0),
                            u_(this, 'screenshotArea', void 0),
                            u_(this, 'isLoadingPNG', !1),
                            u_(this, 'onContextReady', () => {
                                this.screenshotArea = (this.context?.topNode).querySelector('.ciq-chart');
                            }),
                            br(this, {
                                timeUnit: jt,
                                timeperiodDisplay: jt,
                                marketDisplayName: jt,
                                decimalPlaces: jt,
                                isLoadingPNG: Lt,
                                downloadPNG: Be.bound,
                                _onCanvasReady: Be.bound,
                                downloadCSV: Be.bound,
                            }),
                            (this.mainStore = t),
                            (this.menuStore = new Yp(t, { route: 'download' })),
                            cr(() => !!this.context, this.onContextReady);
                    }
                    get context() {
                        return this.mainStore.chart.context;
                    }
                    get timeUnit() {
                        return this.mainStore.timeperiod.timeUnit;
                    }
                    get timeperiodDisplay() {
                        return this.mainStore.timeperiod.display;
                    }
                    get marketDisplayName() {
                        return this.mainStore.chart.currentActiveSymbol?.name;
                    }
                    get decimalPlaces() {
                        return this.mainStore.chart.currentActiveSymbol?.decimal_places;
                    }
                    createNewTab() {
                        return navigator.userAgent.match(/iPhone|iPad|iPod/i) ? window.open() : null;
                    }
                    downloadPNG() {
                        this.isLoadingPNG = !0;
                        const t = this.createNewTab();
                        h
                            .e(526)
                            .then(h.t.bind(h, 2939, 23))
                            .then(e => {
                                this.screenshotArea?.classList.add('ciq-chart--screenshot');
                                const r = [],
                                    i = [];
                                (this.screenshotArea?.querySelectorAll('svg') || []).forEach(t => {
                                    const e = t.parentNode,
                                        a = document.createElement('canvas');
                                    (a.width = Number(getComputedStyle(t).width.match(/[0-9]+/))),
                                        (a.height = Number(getComputedStyle(t).height.match(/[0-9]+/)));
                                    const n = a.getContext('2d'),
                                        s = getComputedStyle(t).fill;
                                    if (s) {
                                        const e = s
                                            .split(',')
                                            .map(t => Number(t.replace(/\D+/g, '')).toString(16).padStart(2, '0'))
                                            .join('');
                                        n &&
                                            e > '333333' &&
                                            ((n.fillStyle = getComputedStyle(t).fill),
                                            n.fillRect(0, 0, a.width, a.height),
                                            (n.globalCompositeOperation = 'destination-in'));
                                    }
                                    const o = new Image();
                                    (o.src = t.querySelector('use')?.getAttribute?.('xlink:href') || ''),
                                        (o.onload = () => {
                                            n && n.drawImage(o, 0, 0),
                                                Wi() ||
                                                    Ki() ||
                                                    (r.push({ parent: e, child: t }),
                                                    e?.removeChild(t),
                                                    i.push({ parent: e, child: a }),
                                                    e?.appendChild(a));
                                        });
                                }),
                                    setTimeout(() => {
                                        e.default(this.screenshotArea).then(e => {
                                            this._onCanvasReady(e, t),
                                                Wi() ||
                                                    Ki() ||
                                                    (i.forEach(t => {
                                                        t?.parent?.contains(t.child) &&
                                                            t.child instanceof HTMLCanvasElement &&
                                                            t.parent?.removeChild?.(t.child);
                                                    }),
                                                    r.forEach(t => {
                                                        t.parent?.appendChild(t.child);
                                                    }));
                                        });
                                    }, 100);
                            }),
                            Rp(Mp.ChartControl, Bp.Download, 'Download PNG');
                    }
                    _onCanvasReady(t, e) {
                        const r = t.toDataURL('image/png');
                        Xi(`${new Date().toUTCString()}.png`, r, 'image/png;', e),
                            (this.isLoadingPNG = !1),
                            this.screenshotArea?.classList.remove('ciq-chart--screenshot');
                    }
                    downloadCSV() {
                        const t = 'tick' === this.timeUnit,
                            e = [`Date,Time,${t ? this.marketDisplayName : 'Open,High,Low,Close'}`],
                            r = this.mainStore.chart.feed?.quotes || [],
                            i = r.length;
                        (i <= 100 ? r : r.slice(i - 100, i)).forEach(r => {
                            let { DT: i, Open: a, High: n, Low: s, Close: o } = r;
                            if (!i) return;
                            const l = i.getFullYear(),
                                c = i.getMonth() + 1,
                                h = i.getDate(),
                                u = i.getHours(),
                                d = i.getMinutes(),
                                g = i.getSeconds(),
                                m = `${l}-${c > 9 ? c : `0${c}`}-${h > 9 ? h : `0${h}`}`,
                                p = `${u > 9 ? u : `0${u}`}:${d > 9 ? d : `0${d}`}${t ? (g > 9 ? `:${g}` : `:0${g}`) : ''}`;
                            t && o && e.push(`${m},${p},${o}`),
                                !t &&
                                    a &&
                                    n &&
                                    s &&
                                    o &&
                                    e.push(
                                        [
                                            m,
                                            p,
                                            a.toFixed(this.decimalPlaces),
                                            n.toFixed(this.decimalPlaces),
                                            s.toFixed(this.decimalPlaces),
                                            o.toFixed(this.decimalPlaces),
                                        ].join(',')
                                    );
                        }),
                            Xi(
                                `${this.marketDisplayName} (${this.timeperiodDisplay}).csv`,
                                e.join('\n'),
                                'text/csv;charset=utf-8;',
                                this.createNewTab()
                            ),
                            Rp(Mp.ChartControl, Bp.Download, 'Download CSV');
                    }
                }
                var g_ = h(9160).t;
                function m_(t, e, r) {
                    return (
                        (e = (function (t) {
                            var e = (function (t, e) {
                                if ('object' != typeof t || !t) return t;
                                var r = t[Symbol.toPrimitive];
                                if (void 0 !== r) {
                                    var i = r.call(t, 'string');
                                    if ('object' != typeof i) return i;
                                    throw new TypeError('@@toPrimitive must return a primitive value.');
                                }
                                return String(t);
                            })(t);
                            return 'symbol' == typeof e ? e : String(e);
                        })(e)),
                        e in t
                            ? Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = r),
                        t
                    );
                }
                class p_ {
                    constructor(t) {
                        m_(this, 'mainStore', void 0),
                            m_(this, 'menuStore', void 0),
                            m_(this, 'language', ''),
                            m_(this, 'position', 'bottom'),
                            m_(this, 'theme', 'light'),
                            m_(this, 'countdown', !1),
                            m_(this, 'historical', !1),
                            m_(this, 'isAutoScale', !0),
                            m_(this, 'isHighestLowestMarkerEnabled', !0),
                            m_(this, 'minimumLeftBars', void 0),
                            m_(this, 'whitespace', void 0),
                            m_(this, 'languages', []),
                            m_(this, 'defaultLanguage', {}),
                            m_(this, 'onSettingsChange', void 0),
                            br(this, {
                                language: Lt,
                                position: Lt,
                                theme: Lt,
                                countdown: Lt,
                                historical: Lt,
                                isAutoScale: Lt,
                                isHighestLowestMarkerEnabled: Lt,
                                minimumLeftBars: Lt,
                                updateActiveLanguage: Be.bound,
                                setLanguage: Be.bound,
                                setTheme: Be.bound,
                                setPosition: Be.bound,
                                showCountdown: Be.bound,
                                setHistorical: Be.bound,
                                setAutoScale: Be.bound,
                                setWhiteSpace: Be.bound,
                                toggleHighestLowestMarker: Be.bound,
                                whitespace: Lt,
                            }),
                            (this.defaultLanguage = this.languages[0]),
                            (this.mainStore = t),
                            (this.menuStore = new Yp(t, { route: 'setting' })),
                            Ue(
                                () => this?.language?.key,
                                () => {
                                    t?.chart?.activeSymbols?.retrieveActiveSymbols?.(!0).then(() => {
                                        t?.chart?.changeSymbol?.(t.state.symbol, t.state.granularity, !0);
                                    });
                                }
                            ),
                            cr(
                                () => !!this.context,
                                () => {
                                    this.setSettings(t.state.settings);
                                }
                            );
                    }
                    get context() {
                        return this.mainStore.chart.context;
                    }
                    setSettings(t) {
                        if (void 0 === t) return;
                        const {
                            countdown: e,
                            historical: r,
                            language: i,
                            minimumLeftBars: a,
                            position: n,
                            isAutoScale: s,
                            isHighestLowestMarkerEnabled: o,
                            theme: l,
                            activeLanguages: c,
                            whitespace: h,
                        } = t;
                        (!c && Op.every(t => this.languages.find(e => e.key === t.key))) ||
                            (c &&
                                this.languages.length === c.length &&
                                this.languages.every(t => -1 !== c.indexOf(t.key.toUpperCase()))) ||
                            this.updateActiveLanguage(c),
                            void 0 !== l && this.setTheme(l),
                            void 0 !== n && this.setPosition(n),
                            void 0 !== e && this.showCountdown(e),
                            void 0 !== i && this.setLanguage(i),
                            this.setMinimumLeftBars(a),
                            void 0 !== r && this.setHistorical(r),
                            void 0 !== s && this.setAutoScale(s),
                            void 0 !== o && this.toggleHighestLowestMarker(o),
                            this.setWhiteSpace(h);
                    }
                    saveSetting() {
                        this.onSettingsChange &&
                            this.language &&
                            this.onSettingsChange({
                                countdown: this.countdown,
                                historical: this.historical,
                                language: this.language?.key,
                                position: this.position,
                                isAutoScale: this.isAutoScale,
                                isHighestLowestMarkerEnabled: this.isHighestLowestMarkerEnabled,
                                minimumLeftBars: this.minimumLeftBars,
                                theme: this.theme,
                                whitespace: this.whitespace,
                            });
                    }
                    updateActiveLanguage(t) {
                        (this.languages = t
                            ? t.map(t => Op.find(e => e.key.toUpperCase() === t) || '').filter(t => t)
                            : Op),
                            (this.defaultLanguage = this.languages[0]),
                            ((this.language && !this.languages.find(t => t.key === this.language?.key)) ||
                                !this.language) &&
                                this.setLanguage(this.languages[0].key);
                    }
                    setLanguage(t) {
                        if (!this.languages.length) return;
                        const e = t.toLowerCase();
                        if (this.language && e === this.language.key) return;
                        this.language = this.languages.find(t => t.key === e) || this.defaultLanguage;
                        const r = this.language.key;
                        g_.setLanguage(r, () => {
                            this?.mainStore?.loader?.hide?.();
                        }),
                            Rp(Mp.ChartControl, Bp.ChartSetting, `Change language to ${r}`),
                            r !== localStorage.getItem('current_chart_lang') &&
                                localStorage.setItem('current_chart_lang', r),
                            r !== this.mainStore.chart.currentLanguage && (this.mainStore.chart.currentLanguage = r),
                            this.saveSetting();
                    }
                    setTheme(t) {
                        this.theme !== t &&
                            ((this.theme = t),
                            this.mainStore.drawTools.updateTheme(),
                            this.mainStore.chartAdapter.updateTheme(t),
                            this.context && this.mainStore.state.setChartTheme(t),
                            this.mainStore.studies.updateTheme(),
                            Rp(Mp.ChartControl, Bp.ChartSetting, `Change theme to ${t}`),
                            this.saveSetting());
                    }
                    setPosition(t) {
                        this.position !== t &&
                            ((this.position = t),
                            Rp(Mp.ChartControl, Bp.ChartSetting, 'Change Position'),
                            this.saveSetting(),
                            setTimeout(() => {
                                this.mainStore.chart.resizeScreen();
                            }, 10),
                            this.menuStore.setOpen(!1));
                    }
                    showCountdown(t) {
                        this.countdown !== t &&
                            (this.mainStore.chartAdapter.setShowInterval(t),
                            (this.countdown = t),
                            Rp(Mp.ChartControl, Bp.ChartSetting, (t ? 'Show' : 'Hide') + ' Countdown'),
                            this.saveSetting());
                    }
                    setHistorical(t) {
                        this.historical !== t &&
                            ((this.historical = t),
                            (this.isHighestLowestMarkerEnabled = !t),
                            this.saveSetting(),
                            setTimeout(() => {
                                this.mainStore.chart.resizeScreen();
                            }, 10));
                    }
                    setAutoScale(t) {
                        this.isAutoScale !== t &&
                            ((this.isAutoScale = t),
                            Rp(Mp.ChartControl, Bp.ChartSetting, ` Change AutoScale to ${t}`),
                            this.saveSetting());
                    }
                    setMinimumLeftBars(t) {
                        this.minimumLeftBars !== t &&
                            ((this.minimumLeftBars = t),
                            Rp(Mp.ChartControl, Bp.ChartSetting, ` Change MinimumLeftBars to ${t}`),
                            this.saveSetting());
                    }
                    setWhiteSpace(t) {
                        this.whitespace !== t &&
                            ((this.whitespace = t),
                            Rp(Mp.ChartControl, Bp.ChartSetting, ` Change Whitespace to ${t}`),
                            this.saveSetting());
                    }
                    toggleHighestLowestMarker(t) {
                        this.isHighestLowestMarkerEnabled !== t &&
                            ((this.isHighestLowestMarkerEnabled = t),
                            Rp(Mp.ChartControl, Bp.ChartSetting, ` ${t ? 'Show' : 'Hide'} HighestLowestMarker.`),
                            this.saveSetting());
                    }
                }
                var f_ = h(9160).t;
                function __(t, e, r) {
                    return (
                        (e = (function (t) {
                            var e = (function (t, e) {
                                if ('object' != typeof t || !t) return t;
                                var r = t[Symbol.toPrimitive];
                                if (void 0 !== r) {
                                    var i = r.call(t, 'string');
                                    if ('object' != typeof i) return i;
                                    throw new TypeError('@@toPrimitive must return a primitive value.');
                                }
                                return String(t);
                            })(t);
                            return 'symbol' == typeof e ? e : String(e);
                        })(e)),
                        e in t
                            ? Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = r),
                        t
                    );
                }
                class v_ {
                    constructor() {
                        __(this, 'isActive', !1),
                            __(this, 'currentState', !1),
                            __(this, 'states', {}),
                            br(this, {
                                isActive: Lt,
                                currentState: Lt,
                                setState: Be.bound,
                                show: Be.bound,
                                hide: Be.bound,
                            }),
                            (this.states = {
                                'chart-engine': f_.translate('Retrieving Chart Engine...'),
                                'market-symbol': f_.translate('Retrieving Market Symbols...'),
                                'trading-time': f_.translate('Retrieving Trading Times...'),
                                'chart-data': f_.translate('Retrieving Chart Data...'),
                            });
                    }
                    setState(t) {
                        this.states[t] ? (this.currentState = this.states[t]) : console.error('Wrong state requested!');
                    }
                    show() {
                        this.isActive = !0;
                    }
                    hide() {
                        this.isActive = !1;
                    }
                }
                function b_(t, e, r) {
                    return (
                        (e = (function (t) {
                            var e = (function (t, e) {
                                if ('object' != typeof t || !t) return t;
                                var r = t[Symbol.toPrimitive];
                                if (void 0 !== r) {
                                    var i = r.call(t, 'string');
                                    if ('object' != typeof i) return i;
                                    throw new TypeError('@@toPrimitive must return a primitive value.');
                                }
                                return String(t);
                            })(t);
                            return 'symbol' == typeof e ? e : String(e);
                        })(e)),
                        e in t
                            ? Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = r),
                        t
                    );
                }
                class y_ {
                    static get EVENT_FAVORITES_UPDATE() {
                        return 'EVENT_FAVORITES_UPDATE';
                    }
                    static getInstance() {
                        return y_.instance || (y_.instance = new y_()), y_.instance;
                    }
                    constructor() {
                        b_(
                            this,
                            'favoritesMap',
                            (function () {
                                const t = Hi('cq-favorites');
                                if (!t) return;
                                const e = {};
                                for (const r in t) {
                                    const i = {};
                                    for (const e of t[r]) i[e] = !0;
                                    e[r] = i;
                                }
                                return e;
                            })() || { indicators: {}, 'chartTitle&Comparison': {} }
                        ),
                            b_(this, '_emitter', void 0),
                            br(this, { favoritesMap: Lt, isFavorite: Be.bound, toggleFavorite: Be.bound }),
                            (this._emitter = new (Vi())({ emitDelay: 0 }));
                    }
                    onFavoriteUpdate(t) {
                        this._emitter.on(y_.EVENT_FAVORITES_UPDATE, t);
                    }
                    offFavoriteUpdate(t) {
                        this._emitter.off(y_.EVENT_FAVORITES_UPDATE, t);
                    }
                    isFavorite(t, e) {
                        return e in this.favoritesMap[t];
                    }
                    toggleFavorite(t, e) {
                        const r = this.favoritesMap[t];
                        r[e] ? delete r[e] : (r[e] = !0),
                            this._emitter.emit(y_.EVENT_FAVORITES_UPDATE, { category: t, id: e, value: r[e] || !1 }),
                            this.saveFavorites();
                    }
                    saveFavorites() {
                        const t = {};
                        for (const e in this.favoritesMap) {
                            const r = [];
                            for (const t in this.favoritesMap[e]) r.push(t);
                            t[e] = r;
                        }
                        Ui('cq-favorites', t);
                    }
                }
                b_(y_, 'instance', void 0);
                const S_ = y_;
                class w_ {
                    constructor(t) {
                        var e, r, i;
                        (e = this),
                            (i = void 0),
                            (r = (function (t) {
                                var e = (function (t, e) {
                                    if ('object' != typeof t || !t) return t;
                                    var r = t[Symbol.toPrimitive];
                                    if (void 0 !== r) {
                                        var i = r.call(t, 'string');
                                        if ('object' != typeof i) return i;
                                        throw new TypeError('@@toPrimitive must return a primitive value.');
                                    }
                                    return String(t);
                                })(t);
                                return 'symbol' == typeof e ? e : String(e);
                            })((r = 'mainStore'))),
                            r in e
                                ? Object.defineProperty(e, r, {
                                      value: i,
                                      enumerable: !0,
                                      configurable: !0,
                                      writable: !0,
                                  })
                                : (e[r] = i),
                            br(this, { updateChartState: Be.bound, zoomIn: Be.bound, zoomOut: Be.bound }),
                            (this.mainStore = t);
                    }
                    get state() {
                        return this.mainStore.state;
                    }
                    updateChartState() {
                        this.mainStore.chart.updateScaledOneOne(!1);
                    }
                    zoomIn() {
                        Rp(Mp.ChartControl, Bp.ChartSize, 'zoom In'), this.mainStore.chartAdapter.scale(1.25);
                    }
                    zoomOut() {
                        Rp(Mp.ChartControl, Bp.ChartSize, 'zoom Out'), this.mainStore.chartAdapter.scale(0.75);
                    }
                }
                const C_ = [];
                class E_ {
                    constructor(t) {
                        var e, r, i;
                        (e = this),
                            (i = void 0),
                            (r = (function (t) {
                                var e = (function (t, e) {
                                    if ('object' != typeof t || !t) return t;
                                    var r = t[Symbol.toPrimitive];
                                    if (void 0 !== r) {
                                        var i = r.call(t, 'string');
                                        if ('object' != typeof i) return i;
                                        throw new TypeError('@@toPrimitive must return a primitive value.');
                                    }
                                    return String(t);
                                })(t);
                                return 'symbol' == typeof e ? e : String(e);
                            })((r = 'mainStore'))),
                            r in e
                                ? Object.defineProperty(e, r, {
                                      value: i,
                                      enumerable: !0,
                                      configurable: !0,
                                      writable: !0,
                                  })
                                : (e[r] = i),
                            br(this, {
                                handleRouting: Be.bound,
                                updateRoute: Be.bound,
                                registerDialog: Be.bound,
                                closeAll: Be.bound,
                            }),
                            (this.mainStore = t);
                    }
                    handleRouting() {
                        window.addEventListener(
                            'hashchange',
                            () => {
                                '' === window.history.state.urlPath.replace('#', '') && this.closeAll();
                            },
                            !1
                        );
                    }
                    updateRoute(t, e) {
                        const r = this.mainStore.chart.enableRouting;
                        r && e && t
                            ? (window.history.replaceState({ urlPath: '#' }, '', '#'),
                              window.history.pushState({ urlPath: `#${t}` }, '', `#${t}`))
                            : r && !e && t && window.history.replaceState({ urlPath: '#' }, '', '#');
                    }
                    registerDialog(t) {
                        C_.push(t);
                    }
                    closeAll() {
                        C_.forEach(t => t.setOpen(!1));
                    }
                }
                var x_ = h(2592),
                    T_ = h.n(x_);
                function k_(t, e, r) {
                    return (
                        (e = (function (t) {
                            var e = (function (t, e) {
                                if ('object' != typeof t || !t) return t;
                                var r = t[Symbol.toPrimitive];
                                if (void 0 !== r) {
                                    var i = r.call(t, 'string');
                                    if ('object' != typeof i) return i;
                                    throw new TypeError('@@toPrimitive must return a primitive value.');
                                }
                                return String(t);
                            })(t);
                            return 'symbol' == typeof e ? e : String(e);
                        })(e)),
                        e in t
                            ? Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = r),
                        t
                    );
                }
                const A_ = class {
                    get context() {
                        return this.chartStore.context;
                    }
                    get chartTypeStore() {
                        return this.mainStore.chartType;
                    }
                    get timeperiodStore() {
                        return this.mainStore.timeperiod;
                    }
                    get loader() {
                        return this.mainStore.loader;
                    }
                    get rootElement() {
                        return this.chartStore.rootElement;
                    }
                    constructor(t) {
                        k_(this, 'chartStore', void 0),
                            k_(this, 'getIndicatorHeightRatio', void 0),
                            k_(this, 'shouldDrawTicksFromContractInfo', !1),
                            k_(this, 'has_updated_settings', !1),
                            k_(this, 'isAnimationEnabled', void 0),
                            k_(this, 'isVerticalScrollEnabled', !0),
                            k_(this, 'mainStore', void 0),
                            k_(this, 'margin', void 0),
                            k_(this, 'granularity', void 0),
                            k_(this, 'chartType', void 0),
                            k_(this, 'startEpoch', void 0),
                            k_(this, 'endEpoch', void 0),
                            k_(this, 'symbol', void 0),
                            k_(this, 'heightFactor', void 0),
                            k_(this, 'isConnectionOpened', !1),
                            k_(this, 'isChartReady', !1),
                            k_(this, 'chartStatusListener', void 0),
                            k_(this, 'stateChangeListener', void 0),
                            k_(this, 'settings', void 0),
                            k_(this, 'showLastDigitStats', !1),
                            k_(this, 'scrollToEpoch', void 0),
                            k_(this, 'clearChart', void 0),
                            k_(this, 'isChartClosed', !1),
                            k_(this, 'shouldMinimiseLastDigits', !1),
                            k_(this, 'allowTickChartTypeOnly', void 0),
                            k_(this, 'isStaticChart', !1),
                            k_(this, 'shouldFetchTradingTimes', !0),
                            k_(this, 'shouldFetchTickHistory', !0),
                            k_(this, 'allTicks', []),
                            k_(this, 'contractInfo', {}),
                            k_(this, 'refreshActiveSymbols', void 0),
                            k_(this, 'hasReachedEndOfData', !1),
                            k_(this, 'prevChartType', void 0),
                            k_(this, 'isChartScrollingToEpoch', !1),
                            k_(this, 'crosshairState', 1),
                            k_(this, 'crosshairTooltipLeftAllow', null),
                            k_(this, 'maxTick', void 0),
                            k_(this, 'enableScroll', !0),
                            k_(this, 'enableZoom', !0),
                            k_(this, 'yAxisMargin', { top: 106, bottom: 64 }),
                            k_(this, 'tradingTimes', null),
                            k_(this, 'activeSymbols', null),
                            k_(this, 'chartControlsWidgets', void 0),
                            k_(this, 'enabledChartFooter', void 0),
                            k_(this, 'onContextReady', () => {
                                this.granularity = this.chartStore.granularity;
                            }),
                            k_(
                                this,
                                'debouncedStateChange',
                                zp()((t, e) => {
                                    this.stateChange(t, e);
                                }, 500)
                            ),
                            br(this, {
                                granularity: Lt,
                                chartType: Lt,
                                startEpoch: Lt,
                                endEpoch: Lt,
                                symbol: Lt,
                                has_updated_settings: Lt,
                                heightFactor: Lt,
                                isConnectionOpened: Lt,
                                isChartReady: Lt,
                                isVerticalScrollEnabled: Lt,
                                chartStatusListener: Lt,
                                debouncedStateChange: Be.bound,
                                stateChangeListener: Lt,
                                settings: Lt,
                                showLastDigitStats: Lt,
                                allowTickChartTypeOnly: Lt,
                                scrollToEpoch: Lt,
                                clearChart: Lt,
                                isChartClosed: Lt,
                                shouldMinimiseLastDigits: Lt,
                                isStaticChart: Lt,
                                shouldFetchTradingTimes: Lt,
                                shouldFetchTickHistory: Lt,
                                allTicks: Lt,
                                contractInfo: Lt,
                                refreshActiveSymbols: Lt,
                                shouldDrawTicksFromContractInfo: Lt,
                                hasReachedEndOfData: Lt,
                                prevChartType: Lt,
                                isChartScrollingToEpoch: Lt,
                                crosshairState: Lt,
                                crosshairTooltipLeftAllow: Lt,
                                maxTick: Lt,
                                enableScroll: Lt,
                                enableZoom: Lt,
                                yAxisMargin: Lt,
                                updateProps: Be.bound,
                                setChartIsReady: Be.bound,
                                setChartClosed: Be.bound,
                            }),
                            (this.mainStore = t),
                            (this.chartStore = t.chart),
                            cr(() => !!this.context, this.onContextReady),
                            Ue(
                                () => this.allowTickChartTypeOnly,
                                t => {
                                    t &&
                                        (this.mainStore.studies.savePredictionStudies(),
                                        this.mainStore.studies.deletePredictionStudies());
                                }
                            );
                    }
                    updateProps(t) {
                        let {
                                networkStatus: e,
                                chartControlsWidgets: r,
                                enabledChartFooter: i,
                                chartStatusListener: a,
                                shouldDrawTicksFromContractInfo: n,
                                stateChangeListener: s,
                                getIndicatorHeightRatio: o,
                                chartType: l,
                                clearChart: c,
                                endEpoch: h,
                                isAnimationEnabled: u = !0,
                                isConnectionOpened: d,
                                isStaticChart: g,
                                isVerticalScrollEnabled: m = !0,
                                granularity: p,
                                margin: f = 0,
                                refreshActiveSymbols: _,
                                scrollToEpoch: v,
                                settings: b,
                                shouldFetchTradingTimes: y = !0,
                                shouldFetchTickHistory: S = !0,
                                should_zoom_out_on_yaxis: w,
                                allTicks: C = [],
                                contractInfo: E = {},
                                showLastDigitStats: x = !1,
                                allowTickChartTypeOnly: T = !1,
                                startEpoch: k,
                                symbol: A,
                                crosshairState: O,
                                zoom: N,
                                maxTick: I,
                                crosshairTooltipLeftAllow: D,
                                yAxisMargin: P,
                                enableScroll: L = null,
                                enableZoom: M = null,
                                anchorChartToLeft: B = !1,
                                chartData: R,
                                isLive: j,
                                startWithDataFitMode: F,
                                leftMargin: V,
                            } = t,
                            H = !1,
                            q = !1;
                        R?.tradingTimes &&
                            'object' == typeof R.tradingTimes &&
                            JSON.stringify(R.tradingTimes) !== this.tradingTimes &&
                            (this.mainStore.chart.tradingTimes?._calculatingTradingTime(R.tradingTimes),
                            (this.tradingTimes = JSON.stringify(R.tradingTimes))),
                            R?.activeSymbols &&
                                'object' == typeof R.activeSymbols &&
                                JSON.stringify(R.activeSymbols) !== this.activeSymbols &&
                                ((this.activeSymbols = JSON.stringify(R.activeSymbols)),
                                this.mainStore.chart.activeSymbols?.computeActiveSymbols(R.activeSymbols)),
                            (this.chartStatusListener = a),
                            (this.stateChangeListener = s),
                            (this.isAnimationEnabled = u),
                            (this.isConnectionOpened = d),
                            (this.isStaticChart = g),
                            (this.isVerticalScrollEnabled = m),
                            (this.margin = f),
                            (this.has_updated_settings = !sf(this.settings?.whitespace, b?.whitespace)),
                            (this.settings = b),
                            (this.shouldFetchTradingTimes = y),
                            (this.shouldFetchTickHistory = S),
                            (this.allowTickChartTypeOnly = T),
                            (this.allTicks = C),
                            (this.contractInfo = E),
                            (this.showLastDigitStats = x),
                            (this.getIndicatorHeightRatio = o);
                        const U = this.mainStore.chart.feed;
                        if (
                            (n &&
                                U &&
                                E.tick_stream &&
                                ((this.shouldDrawTicksFromContractInfo = n),
                                U.appendChartDataFromPOCResponse.call(U, E)),
                            !e ||
                                (this.mainStore.chart.networkStatus &&
                                    e.class === this.mainStore.chart.networkStatus.class) ||
                                (this.mainStore.chart.networkStatus = e),
                            r !== this.chartControlsWidgets && (this.chartControlsWidgets = r),
                            i !== this.enabledChartFooter && (this.enabledChartFooter = i),
                            A !== this.symbol && ((this.symbol = A), (H = !0), this.mainStore.chartTitle.hidePrice()),
                            l &&
                                l !== this.chartType &&
                                ('table' === l && (this.prevChartType = this.chartTypeStore.type.id),
                                this.setChartType(l)),
                            void 0 !== p && p !== this.granularity && (this.setChartGranularity(p), (q = !0)),
                            this.chartStore.activeSymbols &&
                                _ !== this.refreshActiveSymbols &&
                                ((this.refreshActiveSymbols = _),
                                this.refreshActiveSymbols &&
                                    this.chartStore.activeSymbols.retrieveActiveSymbols(this.refreshActiveSymbols)),
                            c !== this.clearChart && ((this.clearChart = c), this.cleanChart()),
                            (this.startEpoch === k && this.endEpoch === h) ||
                                ((this.startEpoch = k),
                                (this.endEpoch = h),
                                g && this.granularity === this.mainStore.chart.granularity
                                    ? this.mainStore.chart.newChart()
                                    : this.mainStore.chart.feed &&
                                      (this.scrollToEpoch || H || q || this.mainStore.chart.feed.onRangeChanged())),
                            g ||
                                v === this.scrollToEpoch ||
                                ((this.scrollToEpoch = v),
                                this.mainStore.chart &&
                                    this.mainStore.chart.feed &&
                                    !H &&
                                    !q &&
                                    (this.setIsChartScrollingToEpoch(!0),
                                    B ? setTimeout(() => this.stateChange(Pp), 900) : this.stateChange(Pp))),
                            null != O &&
                                O !== this.crosshairState &&
                                (this.mainStore.crosshair.setCrosshairState(O), (this.crosshairState = O)),
                            void 0 !== D &&
                                this.crosshairTooltipLeftAllow !== D &&
                                (this.crosshairTooltipLeftAllow = D),
                            N && (1 === N ? this.mainStore.chartSize.zoomIn() : this.mainStore.chartSize.zoomOut()),
                            this.mainStore.chartSetting.setSettings(this.settings),
                            I && this.maxTick !== I && (this.maxTick = I),
                            P && 'object' == typeof P && (this.yAxisMargin = { ...this.yAxisMargin, ...P }),
                            w)
                        ) {
                            const { height_factor: t, yaxis_margin: e } = (t => {
                                let e,
                                    r,
                                    { is_contract_chart: i, is_mobile: a, ticks_length: n, yaxis_height: s } = t;
                                const o = { height_factor: 0.8 };
                                return s
                                    ? (i
                                          ? n && (e = r = a ? s * (n < 5 ? 0.3 : 0.25) : 0.27 * s)
                                          : (e = r = a ? 0.33 * s : 0.27 * s),
                                      { ...o, ...(e && r ? { yaxis_margin: { top: e, bottom: r } } : {}) })
                                    : o;
                            })({
                                is_contract_chart: n,
                                is_mobile: this.mainStore.chart.isMobile,
                                ticks_length: this.mainStore.chart.feed?.quotes.length,
                                yaxis_height: this.mainStore.chart.chartContainerHeight,
                            });
                            (this.yAxisMargin = { ...this.yAxisMargin, ...e }), (this.heightFactor = t);
                        }
                        null !== L && this.enableScroll !== L && (this.enableScroll = L),
                            null !== M && this.enableZoom !== M && (this.enableZoom = M),
                            null != j &&
                                null != j &&
                                this.mainStore.chart.isLive != j &&
                                ((this.mainStore.chart.isLive = j), this.mainStore.chartAdapter.updateLiveStatus(j)),
                            null != F &&
                                null != F &&
                                this.mainStore.chart.startWithDataFitMode != F &&
                                (this.mainStore.chart.startWithDataFitMode = F),
                            this.mainStore.chart.leftMargin != V &&
                                ((this.mainStore.chart.leftMargin = V),
                                this.mainStore.chartAdapter.updateLeftMargin(V));
                    }
                    setIsChartScrollingToEpoch(t) {
                        this.isChartScrollingToEpoch = t;
                    }
                    setChartClosed(t) {
                        (this.isChartClosed = t),
                            this.stateChange('MARKET_STATE_CHANGE', { symbol: this.symbol, isClosed: t });
                    }
                    setChartTheme(t) {
                        this.rootElement &&
                            ((this.rootElement?.querySelector('.chartContainer')).style.backgroundColor =
                                T_()[`${t}_chart_bg`]);
                    }
                    stateChange(t, e) {
                        this.stateChangeListener &&
                            'function' == typeof this.stateChangeListener &&
                            this.stateChangeListener(t, e);
                    }
                    setChartIsReady(t) {
                        this.isChartReady !== t &&
                            ((this.isChartReady = t),
                            t && (this.chartStore.setResizeEvent(), this.stateChange('READY')),
                            this.chartStatusListener &&
                                'function' == typeof this.chartStatusListener &&
                                this.chartStatusListener(t));
                    }
                    setChartGranularity(t) {
                        const e =
                                'second' ===
                                (function (t) {
                                    let e = 1,
                                        r = 'second';
                                    return (
                                        86400 === t ? (r = 'day') : t && t > 59 && ((e = t / 60), (r = 'minute')),
                                        { interval: e, timeUnit: r }
                                    );
                                })(t).timeUnit,
                            r =
                                this.mainStore.chartType.isCandle ||
                                (this.chartType && this.mainStore.chartType.isTypeCandle(this.chartType));
                        this.mainStore.chartAdapter.setMsPerPx(void 0),
                            this.context && e && r && this.setChartType('line'),
                            (this.granularity = null === t ? void 0 : t);
                    }
                    setChartType(t) {
                        (this.chartType = t),
                            this.chartType && this.mainStore.chartAdapter.updateChartStyle(this.chartType),
                            this.chartTypeStore.onChartTypeChanged && this.chartTypeStore.onChartTypeChanged(t);
                    }
                    setShouldMinimiseLastDigit(t) {
                        this.shouldMinimiseLastDigits = t;
                    }
                    saveLayout() {
                        if (!this.chartStore.chartId) return;
                        const t = this.mainStore.view.getLayout();
                        Ui(`chart-layout-${this.mainStore.chart.chartId}`, {
                            studyItems: t.studyItems,
                            crosshair: t.crosshair,
                            msPerPx: t.msPerPx,
                        });
                    }
                    restoreLayout() {
                        const t = Hi(`chart-layout-${this.mainStore.chart.chartId}`);
                        return t ? (this.mainStore.view.restoreLayout(t), !0) : (this.clearLayout(), !1);
                    }
                    clearLayout() {
                        window.flutterChart?.indicators.clearIndicators(),
                            window.flutterChart?.drawingTool.clearDrawingTool();
                    }
                    saveDrawings() {
                        if (!this.chartStore.chartId) return;
                        const t = this.mainStore.view.getLayout();
                        Ui(`chart-layout-${this.mainStore.chart.chartId}`, {
                            crosshair: t.crosshair,
                            studyItems: t.studyItems,
                            msPerPx: t.msPerPx,
                        });
                    }
                    cleanChart() {
                        this.clearChart &&
                            this.isChartReady &&
                            (this.mainStore.studies.deleteAllStudies(), this.mainStore.crosshair.onCrosshairChanged(2));
                    }
                };
                var O_ = h(9160).t;
                class N_ {
                    constructor() {
                        var t, e, r;
                        (t = this),
                            (r = void 0),
                            (e = (function (t) {
                                var e = (function (t, e) {
                                    if ('object' != typeof t || !t) return t;
                                    var r = t[Symbol.toPrimitive];
                                    if (void 0 !== r) {
                                        var i = r.call(t, 'string');
                                        if ('object' != typeof i) return i;
                                        throw new TypeError('@@toPrimitive must return a primitive value.');
                                    }
                                    return String(t);
                                })(t);
                                return 'symbol' == typeof e ? e : String(e);
                            })((e = 'onMessage'))),
                            e in t
                                ? Object.defineProperty(t, e, {
                                      value: r,
                                      enumerable: !0,
                                      configurable: !0,
                                      writable: !0,
                                  })
                                : (t[e] = r);
                    }
                    static get CATEGORY_ACTIVE_SYMBOL() {
                        return 'activesymbol';
                    }
                    notify(t) {
                        this.onMessage && this.onMessage({ type: 'warning', ...t });
                    }
                    notifyMarketOpen(t) {
                        this.notify({
                            text: O_.translate('[symbol] market is now opened.', { symbol: t }),
                            type: 'info',
                            category: N_.CATEGORY_ACTIVE_SYMBOL,
                        });
                    }
                    notifyMarketClose(t) {
                        this.notify({
                            text: O_.translate('[symbol] market is presently closed.', { symbol: t }),
                            category: N_.CATEGORY_ACTIVE_SYMBOL,
                        });
                    }
                    notifyDelayedMarket(t, e) {
                        this.notify({
                            text: O_.translate('[symbol] feed is delayed by [delay] minutes', { symbol: t, delay: e }),
                            category: N_.CATEGORY_ACTIVE_SYMBOL,
                        });
                    }
                    notifyFeedUnavailable(t) {
                        this.notify({
                            text: O_.translate('Streaming for [symbol] is not available due to license restrictions', {
                                symbol: t,
                            }),
                            type: 'error',
                            category: N_.CATEGORY_ACTIVE_SYMBOL,
                        });
                    }
                }
                const I_ = N_;
                function D_(t, e, r) {
                    return (
                        (e = (function (t) {
                            var e = (function (t, e) {
                                if ('object' != typeof t || !t) return t;
                                var r = t[Symbol.toPrimitive];
                                if (void 0 !== r) {
                                    var i = r.call(t, 'string');
                                    if ('object' != typeof i) return i;
                                    throw new TypeError('@@toPrimitive must return a primitive value.');
                                }
                                return String(t);
                            })(t);
                            return 'symbol' == typeof e ? e : String(e);
                        })(e)),
                        e in t
                            ? Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = r),
                        t
                    );
                }
                class P_ {
                    constructor(t) {
                        D_(this, 'mainStore', void 0),
                            D_(this, 'bars', []),
                            D_(this, 'lastTick', null),
                            D_(this, 'count', 1e3),
                            D_(this, 'digits', []),
                            D_(this, 'latestData', []),
                            D_(this, 'lastSymbol', ''),
                            br(this, {
                                bars: Lt,
                                lastTick: Lt,
                                decimalPlaces: jt,
                                isVisible: jt,
                                marketDisplayName: jt,
                                shouldMinimiseLastDigits: jt,
                                updateLastDigitStats: Be.bound,
                                onMasterDataUpdate: Be.bound,
                                updateBars: Be.bound,
                            }),
                            (this.mainStore = t),
                            cr(
                                () => !!this.context,
                                () => {
                                    (this.lastSymbol = this.marketDisplayName),
                                        this.mainStore.chart.feed?.onMasterDataUpdate(this.onMasterDataUpdate),
                                        this.mainStore.chart.feed?.onMasterDataReinitialize(() => {
                                            this.context &&
                                                this.mainStore.chart.feed &&
                                                (this.mainStore.chart.feed.offMasterDataUpdate(this.onMasterDataUpdate),
                                                this.mainStore.chart.feed.onMasterDataUpdate(this.onMasterDataUpdate));
                                        });
                                }
                            );
                    }
                    get context() {
                        return this.mainStore.chart.context;
                    }
                    get api() {
                        return this.mainStore.chart.api;
                    }
                    get decimalPlaces() {
                        return this.mainStore.chart.currentActiveSymbol?.decimal_places || 2;
                    }
                    get isVisible() {
                        return this.mainStore.state.showLastDigitStats;
                    }
                    get marketDisplayName() {
                        return this.mainStore.chart.currentActiveSymbol
                            ? this.mainStore.chart.currentActiveSymbol.name
                            : '';
                    }
                    get shouldMinimiseLastDigits() {
                        return this.mainStore.state.shouldMinimiseLastDigits;
                    }
                    async updateLastDigitStats(t) {
                        if (!this.context || !this.mainStore.chart.currentActiveSymbol) return;
                        (this.digits = []), (this.bars = []), (this.latestData = []);
                        for (let t = 0; t < 10; t++) this.digits.push(0), this.bars.push({ height: 0, cName: '' });
                        const e =
                            t ||
                            (await this.api?.getTickHistory({
                                symbol: this.mainStore.chart.currentActiveSymbol.symbol,
                                count: this.count,
                            }));
                        (this.latestData = e?.history?.prices ? e.history.prices : []),
                            this.context &&
                                this.mainStore.chart.currentActiveSymbol &&
                                (this.latestData.forEach(t => {
                                    const e = (+t).toFixed(this.decimalPlaces).slice(-1);
                                    this.digits[+e]++;
                                }),
                                this.updateBars());
                    }
                    onMasterDataUpdate(t) {
                        let { Close: e, tick: r } = t;
                        if (
                            this.context &&
                            this.mainStore.chart.currentActiveSymbol &&
                            this.mainStore.lastDigitStats.isVisible
                        )
                            if (((this.lastTick = r), this.marketDisplayName !== this.lastSymbol))
                                (this.lastSymbol = this.marketDisplayName), this.updateLastDigitStats();
                            else if (this.latestData.length) {
                                const t = (+this.latestData.shift()).toFixed(this.decimalPlaces).slice(-1),
                                    r = (+e).toFixed(this.decimalPlaces),
                                    i = r.slice(-1);
                                this.latestData.push(+r), this.digits[+i]++, this.digits[+t]--, this.updateBars();
                            }
                    }
                    updateBars() {
                        const t = Math.min(...this.digits),
                            e = Math.max(...this.digits);
                        this.digits.forEach((r, i) => {
                            (this.bars[i].height = (100 * r) / this.count),
                                (this.bars[i].cName = r === t ? 'min' : r === e ? 'max' : '');
                        }),
                            (this.bars = this.bars.slice(0));
                    }
                }
                function L_(t, e, r) {
                    return (
                        (e = (function (t) {
                            var e = (function (t, e) {
                                if ('object' != typeof t || !t) return t;
                                var r = t[Symbol.toPrimitive];
                                if (void 0 !== r) {
                                    var i = r.call(t, 'string');
                                    if ('object' != typeof i) return i;
                                    throw new TypeError('@@toPrimitive must return a primitive value.');
                                }
                                return String(t);
                            })(t);
                            return 'symbol' == typeof e ? e : String(e);
                        })(e)),
                        e in t
                            ? Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = r),
                        t
                    );
                }
                class M_ {
                    get chart() {
                        return this.mainStore.chart;
                    }
                    get stateStore() {
                        return this.mainStore.state;
                    }
                    get crosshairStore() {
                        return this.mainStore.crosshair;
                    }
                    constructor(t) {
                        L_(this, 'mainStore', void 0),
                            L_(this, 'mouse_in', !1),
                            br(this, {
                                mouse_in: Lt,
                                enableScale: jt,
                                onMouseEnter: Be.bound,
                                onMouseLeave: Be.bound,
                                onCrosshairChange: Be.bound,
                            }),
                            (this.mainStore = t),
                            Ue(() => this.crosshairStore.state, this.onCrosshairChange);
                    }
                    get enableScale() {
                        return this.stateStore.startEpoch;
                    }
                    onMouseEnter() {
                        (this.mouse_in = !0), this.crosshairStore.updateVisibility(!1);
                    }
                    onMouseLeave() {
                        (this.mouse_in = !1), this.crosshairStore.updateVisibility(!0);
                    }
                    onCrosshairChange() {
                        2 === this.crosshairStore.state && this.mouse_in && this.crosshairStore.updateVisibility(!1);
                    }
                }
                function B_(t, e, r) {
                    return (
                        (e = (function (t) {
                            var e = (function (t, e) {
                                if ('object' != typeof t || !t) return t;
                                var r = t[Symbol.toPrimitive];
                                if (void 0 !== r) {
                                    var i = r.call(t, 'string');
                                    if ('object' != typeof i) return i;
                                    throw new TypeError('@@toPrimitive must return a primitive value.');
                                }
                                return String(t);
                            })(t);
                            return 'symbol' == typeof e ? e : String(e);
                        })(e)),
                        e in t
                            ? Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = r),
                        t
                    );
                }
                const R_ = class {
                    get feed() {
                        return this.mainStore.chart.feed;
                    }
                    get context() {
                        return this.mainStore.chart.context;
                    }
                    get isHighestLowestMarkerEnabled() {
                        return this.mainStore.chartSetting.isHighestLowestMarkerEnabled;
                    }
                    get decimalPlaces() {
                        return this.mainStore.chart.currentActiveSymbol?.decimal_places || 2;
                    }
                    constructor(t) {
                        B_(this, 'highestRef', null),
                            B_(this, 'lowestRef', null),
                            B_(this, 'mainStore', void 0),
                            B_(this, 'highest', null),
                            B_(this, 'lowest', null),
                            B_(this, 'setHighestRef', t => {
                                (this.highestRef = t),
                                    null !== this.highestRef &&
                                        null !== t &&
                                        (this.highestRef.value = t.div.querySelector('.spot__value'));
                            }),
                            B_(this, 'setLowestRef', t => {
                                (this.lowestRef = t),
                                    null != this.lowestRef &&
                                        null !== t &&
                                        (this.lowestRef.value = t.div.querySelector('.spot__value'));
                            }),
                            B_(this, 'calculateHighestLowestByNewData', () => {
                                if (!this.highestRef || !this.lowestRef) return;
                                const t = this.mainStore.chart.feed?.quotes;
                                if (
                                    (t &&
                                        t.length &&
                                        ((this.highest = null),
                                        (this.lowest = null),
                                        t.forEach(t => {
                                            t &&
                                                ((!this.highest || this.highest.Close <= t.Close) && (this.highest = t),
                                                (!this.lowest || this.lowest.Close >= t.Close) && (this.lowest = t));
                                        })),
                                    !this.highest || !this.lowest || this.highest.Close === this.lowest.Close)
                                )
                                    return (
                                        this.highestRef.setPosition({ epoch: null, price: null }),
                                        void this.lowestRef.setPosition({ epoch: null, price: null })
                                    );
                                if (this.highest) {
                                    const t = this.highest.Close.toFixed(this.decimalPlaces);
                                    this.highestRef.setPosition({ epoch: Yi(Fp(this.highest.Date)), price: +t }),
                                        (this.highestRef.value.textContent = t);
                                }
                                if (this.lowest) {
                                    const t = this.lowest.Close.toFixed(this.decimalPlaces);
                                    this.lowestRef.setPosition({ epoch: Yi(Fp(this.lowest.Date)), price: +t }),
                                        (this.lowestRef.value.textContent = t);
                                }
                            }),
                            (this.mainStore = t);
                    }
                };
                function j_(t, e, r) {
                    return (
                        (e = (function (t) {
                            var e = (function (t, e) {
                                if ('object' != typeof t || !t) return t;
                                var r = t[Symbol.toPrimitive];
                                if (void 0 !== r) {
                                    var i = r.call(t, 'string');
                                    if ('object' != typeof i) return i;
                                    throw new TypeError('@@toPrimitive must return a primitive value.');
                                }
                                return String(t);
                            })(t);
                            return 'symbol' == typeof e ? e : String(e);
                        })(e)),
                        e in t
                            ? Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = r),
                        t
                    );
                }
                const F_ = class {
                    get feed() {
                        return this.mainStore.chart.feed;
                    }
                    get context() {
                        return this.mainStore.chart.context;
                    }
                    constructor(t) {
                        j_(this, 'mainStore', void 0),
                            j_(this, 'ref', null),
                            j_(this, 'isOnPagination', !1),
                            j_(this, 'paginationEndEpoch', null),
                            j_(this, 'onContextReady', () => {
                                this.feed?.onStartPagination(this.setOnPagination),
                                    this.feed?.onPagination(this.setOnPagination);
                            }),
                            j_(this, 'setRef', t => {
                                (this.ref = t),
                                    null !== this.ref &&
                                        this.ref.setPosition({ epoch: this.paginationEndEpoch, price: 0 });
                            }),
                            j_(this, 'setOnPagination', t => {
                                let { end: e } = t;
                                (this.isOnPagination = !this.isOnPagination),
                                    (this.paginationEndEpoch = this.isOnPagination ? e : null),
                                    this.ref && this.ref.setPosition({ epoch: this.paginationEndEpoch, price: 0 });
                            }),
                            br(this, { isOnPagination: Lt, updateOnPagination: Be.bound, setOnPagination: Be.bound }),
                            (this.mainStore = t),
                            cr(() => !!this.context, this.onContextReady);
                    }
                    updateOnPagination(t) {
                        this.isOnPagination = t;
                    }
                };
                class V_ {
                    get crosshairStore() {
                        return this.mainStore.crosshair;
                    }
                    get chartStore() {
                        return this.mainStore.chart;
                    }
                    constructor(t) {
                        var e, r, i;
                        (e = this),
                            (i = void 0),
                            (r = (function (t) {
                                var e = (function (t, e) {
                                    if ('object' != typeof t || !t) return t;
                                    var r = t[Symbol.toPrimitive];
                                    if (void 0 !== r) {
                                        var i = r.call(t, 'string');
                                        if ('object' != typeof i) return i;
                                        throw new TypeError('@@toPrimitive must return a primitive value.');
                                    }
                                    return String(t);
                                })(t);
                                return 'symbol' == typeof e ? e : String(e);
                            })((r = 'mainStore'))),
                            r in e
                                ? Object.defineProperty(e, r, {
                                      value: i,
                                      enumerable: !0,
                                      configurable: !0,
                                      writable: !0,
                                  })
                                : (e[r] = i),
                            br(this, { onMouseEnter: Be.bound, onMouseLeave: Be.bound }),
                            (this.mainStore = t),
                            Ue(
                                () => [
                                    this.mainStore.chartMode.menuStore.open,
                                    this.mainStore.drawTools.menuStore.open,
                                    this.mainStore.studies.menuStore.open,
                                    this.mainStore.share.menuStore.open,
                                    this.mainStore.view.menuStore.open,
                                ],
                                () => {
                                    this.mainStore.chartMode.menuStore.open ||
                                        this.mainStore.drawTools.menuStore.open ||
                                        this.mainStore.studies.menuStore.open ||
                                        this.mainStore.share.menuStore.open ||
                                        this.mainStore.view.menuStore.open ||
                                        this.onMouseLeave();
                                }
                            );
                    }
                    onMouseEnter() {
                        this.crosshairStore.updateVisibility(!1);
                    }
                    onMouseLeave() {
                        this.crosshairStore.updateVisibility(!0);
                    }
                }
                function H_(t, e, r) {
                    return (
                        (e = (function (t) {
                            var e = (function (t, e) {
                                if ('object' != typeof t || !t) return t;
                                var r = t[Symbol.toPrimitive];
                                if (void 0 !== r) {
                                    var i = r.call(t, 'string');
                                    if ('object' != typeof i) return i;
                                    throw new TypeError('@@toPrimitive must return a primitive value.');
                                }
                                return String(t);
                            })(t);
                            return 'symbol' == typeof e ? e : String(e);
                        })(e)),
                        e in t
                            ? Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = r),
                        t
                    );
                }
                class q_ {
                    constructor() {
                        H_(this, 'isHover', !1),
                            H_(this, 'scrollPanel', void 0),
                            br(this, {
                                isHover: Lt,
                                scrollPanel: Lt,
                                handleMouseOver: Be.bound,
                                handleMouseOut: Be.bound,
                                setScrollPanel: Be.bound,
                            }),
                            Ue(
                                () => this.scrollPanel,
                                () => {
                                    this.scrollPanel &&
                                        (this.scrollPanel.addEventListener('mouseover', this.handleMouseOver),
                                        this.scrollPanel.addEventListener('mouseout', this.handleMouseOut));
                                }
                            );
                    }
                    handleMouseOver() {
                        this.isHover || (this.isHover = !0);
                    }
                    handleMouseOut() {
                        this.isHover && (this.isHover = !1);
                    }
                    setScrollPanel(t) {
                        this.scrollPanel || (this.scrollPanel = t);
                    }
                }
                const U_ = () => {
                    window._flutter.initState.isMounted &&
                        (window._flutter.appRunner?.runApp(), (window._flutter.initState.isInitialRunCompleted = !0));
                };
                function $_(t, e, r) {
                    return (
                        (e = (function (t) {
                            var e = (function (t, e) {
                                if ('object' != typeof t || !t) return t;
                                var r = t[Symbol.toPrimitive];
                                if (void 0 !== r) {
                                    var i = r.call(t, 'string');
                                    if ('object' != typeof i) return i;
                                    throw new TypeError('@@toPrimitive must return a primitive value.');
                                }
                                return String(t);
                            })(t);
                            return 'symbol' == typeof e ? e : String(e);
                        })(e)),
                        e in t
                            ? Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = r),
                        t
                    );
                }
                class z_ {
                    constructor() {
                        $_(this, 'callbacks', []),
                            $_(this, 'onPaint', t => {
                                this.callbacks.forEach(e => e(t));
                            }),
                            $_(this, 'registerCallback', t => {
                                this.callbacks.push(t);
                            }),
                            $_(this, 'unregisterCallback', t => {
                                const e = this.callbacks.findIndex(e => e === t);
                                this.callbacks.splice(e, 1);
                            });
                    }
                }
                function G_(t, e, r) {
                    return (
                        (e = (function (t) {
                            var e = (function (t, e) {
                                if ('object' != typeof t || !t) return t;
                                var r = t[Symbol.toPrimitive];
                                if (void 0 !== r) {
                                    var i = r.call(t, 'string');
                                    if ('object' != typeof i) return i;
                                    throw new TypeError('@@toPrimitive must return a primitive value.');
                                }
                                return String(t);
                            })(t);
                            return 'symbol' == typeof e ? e : String(e);
                        })(e)),
                        e in t
                            ? Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = r),
                        t
                    );
                }
                class W_ {
                    constructor(t) {
                        var e = this;
                        G_(this, 'mainStore', void 0),
                            G_(this, 'isChartLoaded', !1),
                            G_(this, 'flutterChart', void 0),
                            G_(this, 'epochBounds', { leftEpoch: 0, rightEpoch: 0 }),
                            G_(this, 'quoteBounds', { topQuote: 0, bottomQuote: 0 }),
                            G_(this, 'isFeedLoaded', !1),
                            G_(this, 'msPerPx', void 0),
                            G_(this, 'drawingHoverIndex', null),
                            G_(this, 'isDataFitModeEnabled', !1),
                            G_(this, 'isXScrollBlocked', !1),
                            G_(this, 'painter', new z_()),
                            G_(this, 'drawingColor', 0),
                            G_(this, 'isScaled', !1),
                            G_(this, 'crossHairValue', { x: 0, y: 0, xLocal: 0, yLocal: 0, bottomIndex: 0 }),
                            G_(this, 'touchValues', {
                                multiTouch: !1,
                                deltaXTotal: 0,
                                deltaYTotal: 0,
                                touchIds: [],
                                x: 0,
                                y: 0,
                            }),
                            G_(this, 'isOverFlutterCharts', !1),
                            G_(this, 'clearTouchDeltasTimer', void 0),
                            G_(this, 'enableXScrollTimer', void 0),
                            G_(this, 'enableYScrollTimer', void 0),
                            G_(this, 'checkIndicatorHover', (t, e, r, i, a) => {
                                const n = this.flutterChart?.crosshair.getEpochFromX(r) || 0,
                                    s = (this.flutterChart?.crosshair.getQuoteFromY(i) || 0).toFixed(
                                        this.mainStore.crosshair.decimalPlaces
                                    );
                                this.mainStore.crosshair.onMouseMove(t, e, n, s);
                                const o = this.mainStore.chart.feed?.getClosestValidEpoch,
                                    l = this.mainStore.chartAdapter.getGranularityInMs(),
                                    c = this.flutterChart?.app.getIndicatorHoverIndex(r, i, o, l, a);
                                this.isScaled
                                    ? (this.isScaled = !1)
                                    : this.mainStore.studies.highlightIndicator(c, t, e);
                            }),
                            G_(this, 'debouncedIndicatorHover', zp()(this.checkIndicatorHover, 5)),
                            G_(this, 'onWheel', t => {
                                t.preventDefault(), t.stopPropagation();
                                const e = this.mainStore.chart.chartNode;
                                if (e && !this.mainStore.state.isVerticalScrollEnabled) {
                                    const r = e.offsetWidth - this.mainStore.chart.yAxisWidth,
                                        { left: i } = e.getBoundingClientRect(),
                                        a = t.deltaY && 0 === t.deltaX;
                                    if (t.pageX - i < r && a) {
                                        if (this.enableYScrollTimer) return;
                                        return (
                                            (e.style.pointerEvents = 'none'),
                                            void (this.enableYScrollTimer = setTimeout(() => {
                                                (e.style.pointerEvents = 'auto'), (this.enableYScrollTimer = void 0);
                                            }, 300))
                                        );
                                    }
                                }
                                if (0 === t.deltaX && 0 === t.deltaZ) {
                                    const e = (100 - Math.min(10, Math.max(-10, t.deltaY))) / 100;
                                    this.scale(e);
                                } else window.flutterChart?.app.scroll(t.deltaX);
                                return !1;
                            }),
                            G_(this, 'onMouseMove', t => {
                                this.isOverFlutterCharts = 'flt-glass-pane' === t.target?.tagName?.toLowerCase();
                            }),
                            G_(this, 'onDoubleClick', () => {
                                null != this.drawingHoverIndex
                                    ? (this.mainStore.drawTools.onSetting(this.drawingHoverIndex),
                                      this.mainStore.crosshair.removeDrawingToolToolTip())
                                    : null != this.mainStore.studies.currentHoverIndex &&
                                      (this.mainStore.studies.editStudyByIndex(
                                          this.mainStore.studies.currentHoverIndex
                                      ),
                                      this.mainStore.studies.clearHoverItem(this.mainStore.studies.currentHoverIndex));
                            }),
                            G_(this, 'newChart', async () => {
                                (this.isFeedLoaded = !1),
                                    (this.isDataFitModeEnabled = this.mainStore.chart.startWithDataFitMode || !1),
                                    await cr(() => this.isChartLoaded),
                                    this.flutterChart?.app.newChart({
                                        symbol: this.mainStore.chart.currentActiveSymbol?.symbol,
                                        granularity: this.getGranularityInMs(),
                                        chartType: this.mainStore.state.chartType,
                                        isLive: this.mainStore.chart.isLive || !1,
                                        startWithDataFitMode: this.isDataFitModeEnabled,
                                        theme: this.mainStore.chartSetting.theme,
                                        msPerPx: this.msPerPx,
                                        pipSize: this.mainStore.chart.pip,
                                        isMobile: this.mainStore.chart.isMobile || !1,
                                        yAxisMargin: this.mainStore.state.yAxisMargin,
                                    });
                            }),
                            G_(this, 'toggleXScrollBlock', function () {
                                let t = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0],
                                    r = arguments.length > 1 ? arguments[1] : void 0;
                                (e.isXScrollBlocked = t),
                                    r &&
                                        (t
                                            ? ((r.style.overflowY = 'scroll'),
                                              (r.style.overflowX = 'hidden'),
                                              (r.style.overscrollBehavior = 'contain'),
                                              (r.style.touchAction = 'pan-y'))
                                            : e.allowScroll(r));
                            }),
                            G_(this, 'allowScroll', t => {
                                let e,
                                    r = t.scrollTop,
                                    i = !1;
                                const a = () => {
                                    t.scrollTop !== r
                                        ? ((i = !0),
                                          (r = t.scrollTop),
                                          clearTimeout(e),
                                          (e = setTimeout(() => {
                                              this.stopScroll(t);
                                          }, 200)))
                                        : (i = !1),
                                        i && requestAnimationFrame(a);
                                };
                                requestAnimationFrame(a);
                            }),
                            G_(this, 'stopScroll', t => {
                                t.style.removeProperty('overflow-y'),
                                    t.style.removeProperty('overflow-x'),
                                    t.style.removeProperty('touch-action');
                            }),
                            G_(this, 'toggleDataFitMode', () => {
                                (this.isDataFitModeEnabled = !this.isDataFitModeEnabled),
                                    window.flutterChart?.app.toggleDataFitMode(this.isDataFitModeEnabled);
                            }),
                            G_(this, 'getInterpolatedPositionAndPrice', t => {
                                if (!t) return;
                                const e = nf().utc(t).toDate(),
                                    r = this.mainStore.chart.feed?.getClosestQuoteIndexForEpoch(t);
                                let i = this.getXFromEpoch(t);
                                if ('number' == typeof r && r > -1) {
                                    const t = this.mainStore.chart.feed?.quotes[r];
                                    let a,
                                        n,
                                        s,
                                        o = t ? t.Close : null;
                                    if (t && t.DT < e) {
                                        const l = this.mainStore.chart.feed?.quotes[r + 1],
                                            c = r > 0 ? this.mainStore.chart.feed?.quotes[r - 1] : null;
                                        l && l.Close && l.DT > e
                                            ? ((a = this.getXFromEpoch(l.DT.getTime()) - i),
                                              (s = (e - t.DT.getTime()) / (l.DT.getTime() - t.DT.getTime())),
                                              o && (n = l.Close - o))
                                            : c &&
                                              c.Close &&
                                              ((a = i - this.getXFromEpoch(c.DT.getTime())),
                                              (s = (e - t.DT.getTime()) / (t.DT.getTime() - c.DT.getTime())),
                                              o && (n = o - c.Close));
                                    }
                                    return s && (a && (i += s * a), o && n && (o += s * n)), { x: i, price: o };
                                }
                            }),
                            br(this, {
                                clearTouchDeltasTimer: Lt,
                                onMount: Be.bound,
                                onTickHistory: Be.bound,
                                onTouch: Be.bound,
                                onChartLoad: Be.bound,
                                onTick: Be.bound,
                                loadHistory: Be.bound,
                                onVisibleAreaChanged: Be.bound,
                                onQuoteAreaChanged: Be.bound,
                                setMsPerPx: Be.bound,
                                newChart: Be.bound,
                                enableXScrollTimer: Lt,
                                enableYScrollTimer: Lt,
                                scale: Be.bound,
                                scrollableChartParent: jt,
                                toggleDataFitMode: Be.bound,
                                toggleXScrollBlock: Be.bound,
                                touchValues: Lt,
                                onCrosshairMove: Be.bound,
                                isDataFitModeEnabled: Lt,
                                isChartLoaded: Lt,
                                epochBounds: Lt.ref,
                                quoteBounds: Lt.ref,
                                msPerPx: Lt,
                                isFeedLoaded: Lt,
                                cleanChart: Be.bound,
                            }),
                            (this.mainStore = t),
                            this.cleanChart(),
                            this.initFlutterCharts();
                    }
                    initFlutterCharts() {
                        (window.jsInterop = {
                            onChartLoad: this.onChartLoad,
                            onMainSeriesPaint: this.painter.onPaint,
                            onVisibleAreaChanged: this.onVisibleAreaChanged,
                            onQuoteAreaChanged: this.onQuoteAreaChanged,
                            loadHistory: this.loadHistory,
                            onCrosshairDisappeared: () => {
                                this.mainStore.crosshair.updateVisibility(!1);
                            },
                            onCrosshairHover: (t, e, r, i, a) => {
                                if (this.isOverFlutterCharts) {
                                    if ((this.onCrosshairMove(t, e, r, i, a), null != this.drawingHoverIndex)) {
                                        const r = this.mainStore.chartAdapter.flutterChart?.drawingTool
                                            .getDrawingToolsRepoItems()
                                            .map(t => qi(t))
                                            .filter(t => t);
                                        if (!r) return;
                                        const i = r[this.drawingHoverIndex];
                                        i &&
                                            this.mainStore.crosshair.renderDrawingToolToolTip(
                                                Gf(i.name.replace('dt_', '')) || '',
                                                t,
                                                e
                                            );
                                    }
                                    this.debouncedIndicatorHover(t, e, r, i, a);
                                }
                            },
                            indicators: {
                                onRemove: t => {
                                    this.mainStore.studies.deleteStudy(t);
                                },
                                onEdit: t => {
                                    this.mainStore.studies.editStudyByIndex(t);
                                },
                                onSwap: (t, e) => {
                                    const { activeItems: r } = this.mainStore.studies;
                                    [r[t], r[e]] = [r[e], r[t]];
                                },
                            },
                            drawingTool: {
                                onAdd: () => {
                                    this.mainStore.drawTools.onCreation();
                                },
                                onUpdate: () => {
                                    this.mainStore.drawTools.onUpdate();
                                },
                                onLoad: t => {
                                    this.mainStore.drawTools.onLoad(t);
                                },
                                onMouseEnter: t => {
                                    this.drawingHoverIndex = t;
                                },
                                onMouseExit: () => {
                                    (this.drawingHoverIndex = null),
                                        this.mainStore.crosshair.removeDrawingToolToolTip();
                                },
                            },
                        }),
                            (t => {
                                let { onChartLoad: e } = t;
                                if (window.flutterChartElement) return void e();
                                (() => {
                                    const t = t => {
                                        (t.key && t.code) || t.stopImmediatePropagation();
                                    };
                                    window.addEventListener('keydown', t, !0), window.addEventListener('keyup', t, !0);
                                })();
                                const r = document.createElement('div');
                                r.classList.add('flutter-chart'),
                                    (window.flutterChartElement = r),
                                    (window._flutter = {
                                        loader: {
                                            didCreateEngineInitializer: async t => {
                                                (window._flutter.appRunner = await t.initializeEngine({
                                                    assetBase: '/',
                                                    hostElement: window.flutterChartElement,
                                                })),
                                                    (window._flutter.initState.isEngineIntialized = !0),
                                                    U_();
                                            },
                                        },
                                        initState: { isInitialRunCompleted: !1, isEngineIntialized: !1, isMounted: !1 },
                                    }),
                                    h.e(518).then(h.t.bind(h, 4521, 23));
                            })({ onChartLoad: this.onChartLoad });
                    }
                    onMount(t) {
                        t.appendChild(window.flutterChartElement);
                        const e = window._flutter.initState;
                        (e.isMounted = !0),
                            e.isEngineIntialized && !e.isInitialRunCompleted && U_(),
                            window.flutterChartElement?.addEventListener('wheel', this.onWheel, { capture: !0 }),
                            window.flutterChartElement?.addEventListener('touchstart', this.onTouch, { capture: !0 }),
                            window.flutterChartElement?.addEventListener('touchmove', this.onTouch, { capture: !0 }),
                            window.flutterChartElement?.addEventListener('touchend', this.onTouch, { capture: !0 }),
                            window.flutterChartElement?.addEventListener('dblclick', this.onDoubleClick, {
                                capture: !0,
                            }),
                            window.addEventListener('mousemove', this.onMouseMove, { capture: !0 });
                    }
                    onUnmount() {
                        (window._flutter.initState.isMounted = !1),
                            window.flutterChartElement?.removeEventListener('wheel', this.onWheel, { capture: !0 }),
                            window.flutterChartElement?.removeEventListener('touchstart', this.onTouch, {
                                capture: !0,
                            }),
                            window.flutterChartElement?.removeEventListener('touchmove', this.onTouch, { capture: !0 }),
                            window.flutterChartElement?.removeEventListener('touchend', this.onTouch, { capture: !0 }),
                            window.flutterChartElement?.removeEventListener('dblclick', this.onDoubleClick, {
                                capture: !0,
                            }),
                            window.removeEventListener('mousemove', this.onMouseMove, { capture: !0 }),
                            clearTimeout(this.clearTouchDeltasTimer),
                            clearTimeout(this.enableXScrollTimer),
                            clearTimeout(this.enableYScrollTimer);
                    }
                    onChartLoad() {
                        (this.flutterChart = window.flutterChart), (this.isChartLoaded = !0);
                    }
                    cleanChart() {
                        window.flutterChartElement &&
                            (this.updateLeftMargin(), this.setShowInterval(!1), this.setSymbolClosed(!1));
                    }
                    onTouch(t) {
                        const e = this.mainStore.chart.chartNode,
                            r = document.querySelector('.flutter-chart');
                        if (e && this.scrollableChartParent && !this.mainStore.state.isVerticalScrollEnabled) {
                            if (this.touchValues.multiTouch)
                                return void (
                                    'touchend' === t.type &&
                                    ((this.touchValues.touchIds = this.touchValues.touchIds?.filter(
                                        e => e === t.changedTouches[0].identifier
                                    )),
                                    (this.touchValues = { multiTouch: !!this.touchValues.touchIds?.length }))
                                );
                            if (t.touches.length > 1)
                                return (
                                    (this.touchValues = { multiTouch: !0 }),
                                    void (this.touchValues.touchIds = Array.from(t.touches).map(t => t.identifier))
                                );
                            const { pageX: i, pageY: a } = t.changedTouches[0];
                            if (['touchmove', 'touchend'].includes(t.type)) {
                                const n = e.offsetWidth - this.mainStore.chart.yAxisWidth,
                                    s = e.offsetHeight - this.mainStore.chart.xAxisHeight,
                                    { top: o, left: l } = e.getBoundingClientRect(),
                                    c = i - l,
                                    h = c < n && a - o < s,
                                    u = c >= n;
                                if (this.touchValues.x && this.touchValues.y) {
                                    const e = this.touchValues.x - i,
                                        n = this.touchValues.y - a,
                                        s = (this.touchValues.deltaXTotal ?? 0) + e,
                                        o = (this.touchValues.deltaYTotal ?? 0) + n,
                                        l = 'touchend' === t.type ? Math.abs(s) : Math.abs(e),
                                        c = ('touchend' === t.type ? Math.abs(o) : Math.abs(n)) > l;
                                    (this.touchValues = { ...this.touchValues, deltaXTotal: s, deltaYTotal: o }),
                                        h && c
                                            ? this.isXScrollBlocked || this.toggleXScrollBlock(!0, r)
                                            : !this.isXScrollBlocked && u && this.stopScroll(r);
                                }
                                (this.touchValues = { ...this.touchValues, x: i, y: a }),
                                    'touchend' === t.type &&
                                        this.isXScrollBlocked &&
                                        (this.enableXScrollTimer = setTimeout(() => {
                                            this.toggleXScrollBlock(!1, r);
                                        }, 100));
                            }
                            ['touchstart', 'touchend'].includes(t.type) &&
                                (this.touchValues =
                                    'touchstart' === t.type
                                        ? { x: i, y: a }
                                        : {
                                              deltaYTotal: this.touchValues.deltaYTotal,
                                              deltaXTotal: this.touchValues.deltaXTotal,
                                          });
                        }
                    }
                    onCrosshairMove(t, e, r, i, a) {
                        const n = this.flutterChart?.crosshair.getEpochFromX(r) || 0,
                            s = (this.flutterChart?.crosshair.getQuoteFromY(i) || 0).toFixed(
                                this.mainStore.crosshair.decimalPlaces
                            );
                        this.mainStore.crosshair.onMouseMove(t, e, n, s),
                            (this.crossHairValue = { x: t, y: e, xLocal: r, yLocal: i, bottomIndex: a });
                    }
                    onVisibleAreaChanged(t, e) {
                        if (
                            ((this.epochBounds.leftEpoch === t && this.epochBounds.rightEpoch === e) ||
                                (this.epochBounds = { leftEpoch: t, rightEpoch: e }),
                            this.crossHairValue)
                        ) {
                            const { x: t, y: e, yLocal: r, xLocal: i, bottomIndex: a } = this.crossHairValue;
                            0 !== t && 0 !== e && this.onCrosshairMove(t, e, i, r, a);
                        }
                    }
                    onQuoteAreaChanged(t, e) {
                        this.quoteBounds = { topQuote: t, bottomQuote: e };
                    }
                    getGranularityInMs() {
                        return 1e3 * (this.mainStore.state.granularity || 1);
                    }
                    async onTickHistory(t) {
                        (this.isFeedLoaded = !0),
                            await cr(() => this.isChartLoaded),
                            this.mainStore.chart.feed?.updateQuotes(t, !1),
                            this.flutterChart?.feed.onTickHistory(t, !1);
                    }
                    async onTick(t) {
                        await cr(() => this.isChartLoaded);
                        const e = this.mainStore.chart.feed?.quotes[this.mainStore.chart.feed?.quotes.length - 1];
                        (e && new Date(e.Date) > new Date(t.Date)) ||
                            (this.mainStore.chart.feed?.addQuote(t),
                            je(() => {
                                this.mainStore.chart.lastQuote = t;
                            }),
                            t.ohlc
                                ? this.flutterChart?.feed.onNewCandle(t)
                                : this.getGranularityInMs() < 6e4 && this.flutterChart?.feed.onNewTick(t));
                    }
                    loadHistory(t) {
                        const { count: e, end: r } = t,
                            { state: i, chart: a } = this.mainStore,
                            { granularity: n } = i;
                        a.feed?.fetchPaginationData(a.currentActiveSymbol?.symbol, r, e, n, t => {
                            let { quotes: e } = t;
                            this.mainStore.chart.feed?.updateQuotes(e || [], !0),
                                this.flutterChart?.feed.onTickHistory(e || [], !0);
                        });
                    }
                    updateChartStyle(t) {
                        this.flutterChart?.config.updateChartStyle(t);
                    }
                    async updateTheme(t) {
                        await cr(() => this.isChartLoaded), this.flutterChart?.config.updateTheme(t);
                    }
                    async updateLeftMargin(t) {
                        await cr(() => this.isChartLoaded), this.flutterChart?.config.updateLeftMargin(t);
                    }
                    async updateLiveStatus(t) {
                        await cr(() => this.isChartLoaded), this.flutterChart?.config.updateLiveStatus(t);
                    }
                    async setSymbolClosed(t) {
                        await cr(() => this.isChartLoaded), this.flutterChart?.config.setSymbolClosed(t);
                    }
                    async updateRightPadding(t) {
                        await cr(() => this.isChartLoaded), this.flutterChart?.config.updateRightPadding(t);
                    }
                    async setShowInterval(t) {
                        await cr(() => this.isChartLoaded), this.flutterChart?.config.toggleTimeIntervalVisibility(t);
                    }
                    scale(t) {
                        null !== this.mainStore.studies.currentHoverIndex && (this.isScaled = !0),
                            (this.isDataFitModeEnabled = !1);
                        const e = this.flutterChart?.app.scale(t);
                        null != e && this.setMsPerPx(e);
                    }
                    async updateContracts(t) {
                        const e = t
                            .filter(t => t.markers?.length > 0)
                            .map(
                                t => (
                                    t.markers.forEach(t => {
                                        if (!t.quote) {
                                            const { price: e } =
                                                this.getInterpolatedPositionAndPrice(1e3 * t.epoch) || {};
                                            t.quote = e;
                                        }
                                    }),
                                    t
                                )
                            );
                        await cr(() => this.isFeedLoaded), this.flutterChart?.config.updateContracts(e);
                    }
                    setMsPerPx(t) {
                        (this.msPerPx = t), this.mainStore.state.saveLayout();
                    }
                    getXFromEpoch(t) {
                        return this.flutterChart?.app.getXFromEpoch(t) ?? 0;
                    }
                    getYFromQuote(t) {
                        return this.flutterChart?.app.getYFromQuote(t) ?? 0;
                    }
                    getEpochFromX(t) {
                        return this.flutterChart?.app.getEpochFromX(t) ?? 0;
                    }
                    getQuoteFromY(t) {
                        return this.flutterChart?.app.getQuoteFromY(t) ?? 0;
                    }
                    get scrollableChartParent() {
                        const t = this.mainStore.chart.chartNode;
                        if (!t) return;
                        let e = t.parentElement;
                        for (; e; ) {
                            const { overflow: t } = window.getComputedStyle(e);
                            if (t.split(' ').every(t => 'auto' === t || 'scroll' === t)) return e;
                            e = e.parentElement;
                        }
                        return document.documentElement;
                    }
                }
                function K_(t, e, r) {
                    return (
                        (e = (function (t) {
                            var e = (function (t, e) {
                                if ('object' != typeof t || !t) return t;
                                var r = t[Symbol.toPrimitive];
                                if (void 0 !== r) {
                                    var i = r.call(t, 'string');
                                    if ('object' != typeof i) return i;
                                    throw new TypeError('@@toPrimitive must return a primitive value.');
                                }
                                return String(t);
                            })(t);
                            return 'symbol' == typeof e ? e : String(e);
                        })(e)),
                        e in t
                            ? Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 })
                            : (t[e] = r),
                        t
                    );
                }
                class X_ {
                    constructor() {
                        K_(this, 'notifier', new I_()),
                            K_(this, 'favorites', S_.getInstance()),
                            K_(this, 'chart', new Df(this)),
                            K_(this, 'state', new A_(this)),
                            K_(this, 'chartAdapter', new W_(this)),
                            K_(this, 'chartType', new Ff(this)),
                            K_(this, 'chartMode', new Hf(this)),
                            K_(this, 'studies', new Xf(this)),
                            K_(this, 'drawTools', new Qf(this)),
                            K_(this, 'chartTitle', new s_(this)),
                            K_(this, 'timeperiod', new rf(this)),
                            K_(this, 'view', new l_(this)),
                            K_(this, 'crosshair', new h_(this)),
                            K_(this, 'share', new d_(this)),
                            K_(this, 'chartSetting', new p_(this)),
                            K_(this, 'loader', new v_()),
                            K_(this, 'chartSize', new w_(this)),
                            K_(this, 'routing', new E_(this)),
                            K_(this, 'lastDigitStats', new P_(this)),
                            K_(this, 'bottomWidgetsContainer', new ba(this)),
                            K_(this, 'navigationWidget', new M_(this)),
                            K_(this, 'highestLowest', new R_(this)),
                            K_(this, 'paginationLoader', new F_(this)),
                            K_(this, 'toolbarWidget', new V_(this)),
                            K_(this, 'scroll', new q_());
                    }
                }
                let Y_;
                const Z_ = () => yi().useContext(Y_);
                function Q_() {
                    return (
                        (Q_ = Object.assign
                            ? Object.assign.bind()
                            : function (t) {
                                  for (var e = 1; e < arguments.length; e++) {
                                      var r = arguments[e];
                                      for (var i in r) Object.prototype.hasOwnProperty.call(r, i) && (t[i] = r[i]);
                                  }
                                  return t;
                              }),
                        Q_.apply(this, arguments)
                    );
                }
                const J_ = t => {
                        let { StoreClass: e, ...r } = t;
                        const i = Z_(),
                            a = yi().useRef();
                        return (
                            (t => {
                                const r = yi().useRef(!1);
                                r.current || ((a.current = new e(i)), (r.current = !0));
                            })(),
                            yi().useEffect(() => {
                                a.current?.updateProps?.(r);
                            }),
                            yi().useEffect(
                                () => () => {
                                    a.current?.destructor?.();
                                },
                                []
                            ),
                            yi().createElement(yi().Fragment, null, r.children(a.current))
                        );
                    },
                    tv = t => {
                        let { offScreenDirection: e } = t;
                        const r = e === ea.UP ? '23px' : '-41px',
                            i = e === ea.DOWN ? 'rotate(180deg)' : '';
                        return e === ea.UP
                            ? yi().createElement(Gm, { className: 'arrow-icon', style: { top: r, transform: i } })
                            : yi().createElement(Wm, { className: 'arrow-icon', style: { top: r, transform: i } });
                    },
                    ev = t => {
                        let { color: e, yAxiswidth: r, title: i, opacity: a } = t;
                        return yi().createElement(
                            'div',
                            { className: 'title-wrapper', style: { color: e, right: r, opacity: a } },
                            yi().createElement('span', { className: 'title' }, i)
                        );
                    },
                    rv = () =>
                        yi().createElement(
                            'div',
                            { className: 'drag-icon' },
                            yi().createElement('div', null),
                            yi().createElement('div', null),
                            yi().createElement('div', null)
                        ),
                    iv = Bi(t => {
                        let {
                            lineStyle: r,
                            color: i,
                            foregroundColor: a,
                            hideOffscreenBarrier: n,
                            opacityOnOverlap: s,
                            hideOffscreenLine: o,
                            hideBarrierLine: l,
                            store: c,
                            title: h,
                        } = t;
                        const {
                                className: u,
                                draggable: d,
                                init: g,
                                isDragging: m,
                                isMobile: p,
                                isOverlapping: f,
                                isOverlappingWithPriceLine: _,
                                offScreen: v,
                                offScreenDirection: b,
                                overlappedBarrierWidth: y,
                                priceDisplay: S,
                                priceLineWidth: w,
                                setDragLine: C,
                                visible: E,
                            } = c,
                            x = yi().useMemo(() => !(n && v), [n, v]),
                            T = yi().useMemo(() => !(l || (o && v) || f), [l, o, v, f]),
                            k = yi().useMemo(() => (f ? s : ''), [f, s]);
                        if (
                            (yi().useEffect(() => {
                                g();
                            }, [g]),
                            !x)
                        )
                            return null;
                        const A = w + 12,
                            O = (_ ? A + 6 - y : 0) + (p ? 20 : 3);
                        return yi().createElement(
                            'div',
                            { className: e()('barrier-area', { 'barrier-area--zero': _ }), ref: C, hidden: !E },
                            yi().createElement(
                                'div',
                                {
                                    className: e()('chart-line', 'horizontal', u || '', { draggable: d, dragging: m }),
                                    style: { color: a },
                                },
                                T &&
                                    yi().createElement('div', {
                                        className: e()('drag-line', { 'drag-line--zero': _ }),
                                        style: {
                                            borderTopColor: i,
                                            borderTopStyle: r,
                                            width: `calc(100% - ${A}px + ${p ? 0 : y}px)`,
                                        },
                                    }),
                                yi().createElement('div', { className: 'draggable-area' }),
                                yi().createElement(
                                    'div',
                                    { className: 'draggable-area-wrapper' },
                                    yi().createElement(
                                        'div',
                                        {
                                            className: 'drag-price',
                                            style: {
                                                backgroundColor: i,
                                                width: _ ? y : A,
                                                opacity: k,
                                                right: O,
                                                borderTopRightRadius: _ ? 0 : 4,
                                                borderBottomRightRadius: _ ? 0 : 4,
                                            },
                                        },
                                        yi().createElement(rv, null),
                                        yi().createElement(
                                            'div',
                                            {
                                                className: e()('price', { 'price--zero': _ }),
                                                style: {
                                                    color: _ ? i : '',
                                                    right: _ ? y + 8 * S.length - (d ? 0 : 16) : 0,
                                                },
                                            },
                                            S
                                        ),
                                        yi().createElement('div', null),
                                        v && b && yi().createElement(tv, { offScreenDirection: b, color: i })
                                    ),
                                    _ &&
                                        yi().createElement('div', {
                                            className: 'price-overlay',
                                            style: {
                                                backgroundColor: i,
                                                width: A - y + 6,
                                                right: p ? 20 : 3,
                                                borderTopRightRadius: _ ? 4 : 0,
                                                borderBottomRightRadius: _ ? 4 : 0,
                                            },
                                        })
                                ),
                                h && yi().createElement(ev, { color: i, title: h, yAxiswidth: A + O, opacity: k })
                            )
                        );
                    }),
                    av = Bi(t => {
                        let { store: r } = t;
                        const { visible: i, className: a, setShadeRef: n } = r;
                        return yi().createElement('div', {
                            className: e()('shade', a, { hidden: !i }),
                            ref: n,
                            style: { top: -120 },
                        });
                    });
                function nv() {
                    return (
                        (nv = Object.assign
                            ? Object.assign.bind()
                            : function (t) {
                                  for (var e = 1; e < arguments.length; e++) {
                                      var r = arguments[e];
                                      for (var i in r) Object.prototype.hasOwnProperty.call(r, i) && (t[i] = r[i]);
                                  }
                                  return t;
                              }),
                        nv.apply(this, arguments)
                    );
                }
                const sv =
                        ((lv = Bi(t => {
                            let { store: r, ...i } = t;
                            const {
                                    _high_barrier: a,
                                    _low_barrier: n,
                                    aboveShadeStore: s,
                                    belowShadeStore: o,
                                    betweenShadeStore: l,
                                    color: c = '#39b19d',
                                    foregroundColor: h = '#ffffff',
                                    hideBarrierLine: u,
                                    hideOffscreenBarrier: d,
                                    hideOffscreenLine: g,
                                    hidePriceLines: m,
                                    isInitialized: p,
                                    isSingleBarrier: f,
                                    lineStyle: _,
                                    opacityOnOverlap: v,
                                    shadeColor: b = '#39b19d',
                                } = r,
                                y = yi().useRef(null);
                            return (
                                yi().useEffect(() => {
                                    p &&
                                        y.current &&
                                        y.current.addEventListener('wheel', t => {
                                            t.preventDefault();
                                        });
                                }, [p]),
                                p
                                    ? yi().createElement(
                                          'div',
                                          {
                                              className: e()('barrier', { 'hide-pricelines': m }),
                                              style: { '--shade-color': b },
                                              ref: y,
                                          },
                                          yi().createElement(
                                              iv,
                                              nv(
                                                  {
                                                      store: a,
                                                      lineStyle: _,
                                                      color: c,
                                                      foregroundColor: h,
                                                      hideOffscreenBarrier: d,
                                                      hideOffscreenLine: g,
                                                      hideBarrierLine: u,
                                                      opacityOnOverlap: v,
                                                  },
                                                  i
                                              )
                                          ),
                                          !f &&
                                              yi().createElement(
                                                  yi().Fragment,
                                                  null,
                                                  yi().createElement(
                                                      iv,
                                                      nv(
                                                          {
                                                              store: n,
                                                              lineStyle: _,
                                                              color: c,
                                                              foregroundColor: h,
                                                              hideOffscreenBarrier: d,
                                                              hideOffscreenLine: g,
                                                              hideBarrierLine: u,
                                                              opacityOnOverlap: v,
                                                          },
                                                          i
                                                      )
                                                  ),
                                                  yi().createElement(av, { store: s }),
                                                  yi().createElement(av, { store: o }),
                                                  yi().createElement(av, { store: l })
                                              )
                                      )
                                    : null
                            );
                        })),
                        (cv = _a),
                        t => {
                            let { children: e, ...r } = t;
                            return yi().createElement(J_, Q_({ StoreClass: cv }, r), t =>
                                yi().createElement(lv, Q_({ store: t }, r), e)
                            );
                        }),
                    ov = sv;
                var lv, cv;
                function hv() {
                    return (
                        (hv = Object.assign
                            ? Object.assign.bind()
                            : function (t) {
                                  for (var e = 1; e < arguments.length; e++) {
                                      var r = arguments[e];
                                      for (var i in r) Object.prototype.hasOwnProperty.call(r, i) && (t[i] = r[i]);
                                  }
                                  return t;
                              }),
                        hv.apply(this, arguments)
                    );
                }
                const uv = t => {
                    let { children: r, className: i = '', enabled: a = !1, content: n, position: s = 'top', ...o } = t;
                    return yi().createElement(
                        'div',
                        hv(
                            { className: e()('sc-tooltip', i, { [`sc-tooltip--${s}`]: !!s, 'sc-tooltip--enable': a }) },
                            o
                        ),
                        r,
                        yi().createElement('div', { className: 'sc-tooltip__inner' }, n)
                    );
                };
                h(5877), h(4282);
                const dv = Bi(t => {
                    let {
                        children: r,
                        className: i,
                        height: a,
                        width: n,
                        autoHide: s,
                        freeze: o = !1,
                        onScroll: l = () => null,
                        setPanel: c,
                    } = t;
                    const { scroll: h } = Z_(),
                        { setScrollPanel: u, isHover: d } = h;
                    return yi().createElement(
                        'div',
                        {
                            ref: t => {
                                u(t), c && c(t);
                            },
                            className: e()('sc-scrollbar', i, {
                                'sc-scrollbar--freeze': o,
                                'sc-scrollbar--auto-hide': s,
                                'sc-scrollbar--hover': d,
                            }),
                            onScroll: l,
                            style: { maxHeight: a || '100%', maxWidth: n || 'none' },
                        },
                        r
                    );
                });
                h(1849);
                const gv = Bi(t => {
                    let { height: e, store: r, children: i } = t;
                    const { getItems: a, onItemClick: n } = r,
                        s = 'function' == typeof i ? i : t => t.text,
                        o = t => 'ciq-list-item ' + (t.disabled ? 'disabled' : '') + ' ' + (t.active ? 'active' : '');
                    return yi().createElement(
                        dv,
                        { className: 'ciq-list', autoHide: !0, height: e ? `${e}px` : '' },
                        a().map((t, e) =>
                            yi().createElement('div', { key: t.id, className: o(t), onClick: () => n(e, t) }, s(t))
                        )
                    );
                });
                var mv = h(255);
                h(1238);
                const pv = Bi(t => {
                    let { className: e, menu_element: r, portalNodeId: i, open: a, onClick: n } = t;
                    const { chartSetting: s } = Z_(),
                        { theme: o } = s;
                    if (((document.body.style.overflow = a ? 'hidden' : ''), !i)) return r;
                    const l = document.getElementById(i);
                    return l
                        ? wi().createPortal(
                              yi().createElement(
                                  'div',
                                  { className: 'smartcharts-portal ' + (a ? 'smartcharts-portal--open' : '') },
                                  yi().createElement(
                                      'div',
                                      { className: `smartcharts smartcharts-${o}` },
                                      yi().createElement(
                                          'div',
                                          { className: 'smartcharts-mobile' },
                                          yi().createElement(
                                              'div',
                                              { className: `cq-modal-dropdown ${e || ''} ${a ? 'stxMenuActive' : ''}` },
                                              yi().createElement(
                                                  'div',
                                                  { className: 'cq-modal__overlay', onClick: n },
                                                  r
                                              )
                                          )
                                      )
                                  )
                              ),
                              l
                          )
                        : null;
                });
                h(4007);
                const fv = Bi(t => {
                        let {
                            store: r,
                            children: i,
                            className: a = '',
                            title: n,
                            customHead: s,
                            enableTabular: o = !1,
                            handleOverlayClick: l,
                            handleCloseDialog: c,
                        } = t;
                        const { updateCloseCallback: h, onContainerClick: u, updateOutsideClickCallback: d } = r;
                        return (
                            (0, bi.useEffect)(() => {
                                h(c), d(l);
                            }),
                            yi().createElement(
                                'div',
                                { className: e()('sc-dialog', a, { 'sc-dialog--tabular': o }), onClick: u },
                                n &&
                                    yi().createElement(
                                        'div',
                                        { className: 'sc-dialog__head' },
                                        yi().createElement('div', { className: 'sc-dialog__head--title' }, n),
                                        s && yi().createElement('div', { className: 'sc-dialog__head--custom' }, s),
                                        yi().createElement(
                                            'div',
                                            { className: 'sc-dialog__head--action' },
                                            yi().createElement(Ig, { onClick: c })
                                        )
                                    ),
                                yi().createElement('div', { className: 'sc-dialog__body' }, i)
                            )
                        );
                    }),
                    _v = t => {
                        let {
                            store: r,
                            className: i,
                            children: a,
                            title: n,
                            tooltip: s,
                            portalNodeId: o,
                            enabled: l = !0,
                            onMouseEnter: c,
                            onMouseLeave: h,
                            enableTabular: u,
                            customHead: d,
                            emptyMenu: g,
                            handleOverlayClick: m,
                            modalMode: p,
                        } = t;
                        const { open: f, dialogStatus: _, onTitleClick: v, handleCloseDialog: b, dialogStore: y } = r,
                            { chartSetting: S, chart: w } = Z_(),
                            { theme: C } = S,
                            { shouldRenderDialogs: E, isMobile: x, context: T } = w,
                            k = t => {
                                'cq-modal__overlay' === t.target.className && b();
                            };
                        if (!T) return null;
                        const A = yi().Children.map(a, (t, e) => (0 === e ? t : null)),
                            O = yi().Children.map(a, (t, e) => (0 !== e ? t : null));
                        if (p) {
                            const t = document.getElementById(o || 'smartcharts_modal');
                            if (!t) return null;
                            const r = wi().createPortal(
                                yi().createElement(
                                    'div',
                                    { className: `smartcharts-${C}` },
                                    yi().createElement(
                                        'div',
                                        { className: e()({ 'smartcharts-mobile': x, 'smartcharts-desktop': !x }) },
                                        yi().createElement(
                                            'div',
                                            { className: e()('cq-modal-dropdown', i, { stxMenuActive: f }) },
                                            yi().createElement(
                                                'div',
                                                { className: 'cq-modal__overlay', onClick: k },
                                                yi().createElement(
                                                    mv.CSSTransition,
                                                    {
                                                        appear: !0,
                                                        in: _,
                                                        timeout: 300,
                                                        classNames: 'sc-dialog',
                                                        unmountOnExit: !0,
                                                    },
                                                    yi().createElement(
                                                        fv,
                                                        {
                                                            store: y,
                                                            title: n,
                                                            handleCloseDialog: b,
                                                            enableTabular: u,
                                                            customHead: d,
                                                            handleOverlayClick: m,
                                                        },
                                                        O
                                                    )
                                                )
                                            )
                                        )
                                    )
                                ),
                                t
                            );
                            return g
                                ? f
                                    ? r
                                    : null
                                : yi().createElement(
                                      uv,
                                      {
                                          className: e()('ciq-menu', i || '', {
                                              stxMenuActive: l && f,
                                              'ciq-enabled': l,
                                              'ciq-disabled': !l,
                                          }),
                                          content: s,
                                          enabled: !!s,
                                          position: 'right',
                                      },
                                      yi().createElement(
                                          'div',
                                          {
                                              className: 'cq-menu-btn',
                                              onMouseEnter: c,
                                              onMouseLeave: h,
                                              onClick: l ? v : () => null,
                                          },
                                          A
                                      ),
                                      l && f && r
                                  );
                        }
                        const N = E
                            ? yi().createElement(
                                  fv,
                                  {
                                      className: e()('cq-menu-dropdown', { 'cq-menu-dropdown-enter-done': _ }),
                                      store: y,
                                  },
                                  n &&
                                      yi().createElement(
                                          'div',
                                          { className: 'title' },
                                          yi().createElement('div', { className: 'title-text' }, n),
                                          yi().createElement(Ig, { className: 'icon-close-menu', onClick: v })
                                      ),
                                  O
                              )
                            : null;
                        return (
                            (l &&
                                yi().createElement(
                                    'div',
                                    { className: e()('ciq-menu ciq-enabled', i, { stxMenuActive: f }) },
                                    yi().createElement(
                                        'div',
                                        { className: 'cq-menu-btn', onMouseEnter: c, onMouseLeave: h, onClick: v },
                                        A
                                    ),
                                    (x &&
                                        o &&
                                        yi().createElement(pv, {
                                            className: i,
                                            open: f,
                                            menu_element: N,
                                            portalNodeId: o,
                                            onClick: k,
                                        })) ||
                                        N
                                )) ||
                            yi().createElement(
                                'div',
                                { className: e()('ciq-menu ciq-disabled', i) },
                                yi().createElement(
                                    'div',
                                    { className: 'cq-menu-btn', onMouseEnter: c, onMouseLeave: h },
                                    A
                                )
                            )
                        );
                    },
                    vv = t => {
                        let { children: e } = t;
                        return yi().createElement(yi().Fragment, null, e);
                    };
                (_v.Title = vv), (_v.Body = vv);
                const bv = Bi(_v);
                var yv = h(9160).t;
                const Sv = t => {
                        let { Icon: e, ...r } = t;
                        return yi().createElement(e, r);
                    },
                    wv = Bi(t => {
                        let { enabled: e, newDesign: r, onChange: i } = t;
                        const { chartType: a, chart: n, state: s, loader: o } = Z_(),
                            { listStore: l, setChartType: c, updateProps: h, types: u, type: d, menuStore: g } = a,
                            { open: m, setOpen: p } = a.menuStore,
                            { isActive: f } = o,
                            { isMobile: _ } = n,
                            v = i || c;
                        return void 0 === d
                            ? null
                            : (h(v),
                              r
                                  ? yi().createElement(
                                        'div',
                                        { className: 'sc-chart-type' },
                                        u.map(t => {
                                            const e = t.icon;
                                            let r = 'sc-chart-type__item';
                                            return (
                                                (r += t.active && !f ? ' sc-chart-type__item--active' : ''),
                                                (r += t.disabled || f ? ' sc-chart-type__item--disabled' : ''),
                                                yi().createElement(
                                                    uv,
                                                    {
                                                        key: t.id,
                                                        enabled: t.disabled && !f && !_,
                                                        className: r,
                                                        content: yv.translate(
                                                            'Available only for non-tick time intervals.'
                                                        ),
                                                        onClick: () =>
                                                            t.disabled || f
                                                                ? null
                                                                : (t => {
                                                                      d.id !== t.id &&
                                                                          (t.id &&
                                                                              s.stateChange('CHART_TYPE_CHANGE', {
                                                                                  chart_type_name:
                                                                                      'colored_bar' === t.id
                                                                                          ? t.text
                                                                                          : t.text.toLowerCase(),
                                                                                  time_interval_name: Gi(
                                                                                      s.granularity,
                                                                                      Ap
                                                                                  ),
                                                                              }),
                                                                          v(t.id)),
                                                                          p(!1);
                                                                  })(t),
                                                    },
                                                    yi().createElement(e, null),
                                                    yi().createElement(
                                                        'span',
                                                        { className: 'text' },
                                                        yv.translate(t.text)
                                                    )
                                                )
                                            );
                                        })
                                    )
                                  : yi().createElement(
                                        bv,
                                        {
                                            store: g,
                                            className: 'ciq-display ciq-chart-types',
                                            enabled: e,
                                            title: yv.translate('Chart types'),
                                        },
                                        yi().createElement(
                                            bv.Title,
                                            null,
                                            yi().createElement(Sv, {
                                                Icon: d.icon,
                                                className: 'ic-icon-with-sub ' + (m ? 'active' : ''),
                                                'tooltip-title': yv.translate(d.text),
                                            })
                                        ),
                                        yi().createElement(
                                            bv.Body,
                                            null,
                                            yi().createElement(
                                                'div',
                                                { className: 'body' },
                                                yi().createElement(gv, { height: 260, store: l }, t =>
                                                    yi().createElement(
                                                        yi().Fragment,
                                                        null,
                                                        yi().createElement(
                                                            'span',
                                                            { className: 'left' },
                                                            yi().createElement(Sv, {
                                                                Icon: d.icon,
                                                                className: 'margin ' + (t.active ? 'active' : ''),
                                                            }),
                                                            yi().createElement(
                                                                'span',
                                                                { className: 'ciq-icon-text' },
                                                                t.text
                                                            )
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                    ));
                    });
                function Cv() {
                    return (
                        (Cv = Object.assign
                            ? Object.assign.bind()
                            : function (t) {
                                  for (var e = 1; e < arguments.length; e++) {
                                      var r = arguments[e];
                                      for (var i in r) Object.prototype.hasOwnProperty.call(r, i) && (t[i] = r[i]);
                                  }
                                  return t;
                              }),
                        Cv.apply(this, arguments)
                    );
                }
                h(5511), h(931);
                const Ev = t => {
                        let { children: r, className: i, enabled: a = !0, ...n } = t;
                        return yi().createElement(
                            'div',
                            Cv({ className: e()('sc-inline-loader', i, { 'sc-inline-loader--enable': a }) }, n),
                            r,
                            a &&
                                yi().createElement(
                                    'div',
                                    { className: 'sc-inline-loader__inner' },
                                    yi().createElement('span', { className: 'sc-inline-loader__inner__bullet' }),
                                    yi().createElement('span', { className: 'sc-inline-loader__inner__bullet' }),
                                    yi().createElement('span', { className: 'sc-inline-loader__inner__bullet' }),
                                    yi().createElement('span', { className: 'sc-inline-loader__inner__bullet' })
                                )
                        );
                    },
                    xv = Bi(() => {
                        const { loader: t } = Z_(),
                            { isActive: r, currentState: i } = t;
                        return yi().createElement(
                            'div',
                            { className: e()('sc-loader', { show: r }) },
                            yi().createElement('div', { className: 'sc-loader-spin' }),
                            yi().createElement('div', { className: 'sc-loader-status' }, i)
                        );
                    });
                var Tv = h(9160).t;
                const kv = Bi(t => {
                        let { item: r, category: i, onClick: a, isLoading: n } = t;
                        const { timeperiod: s, chartType: o, chart: l, state: c } = Z_(),
                            h = o.type.id,
                            { allowTickChartTypeOnly: u } = c,
                            { mainStore: d } = s,
                            { granularity: g } = l,
                            m = d.chart.isMobile,
                            p = yi().useMemo(() => 'tick' === i.key, [i]),
                            f = yi().useMemo(() => ((t, e, r) => t && e === r)(n, r.interval, g), [n, r, g]),
                            _ = yi().useMemo(
                                () => ((t, e, r) => !t && 'line' !== r && 'tick' === e)(m, i.key, h),
                                [m, i.key, h]
                            ),
                            v = yi().useMemo(() => (p && 'line' !== h) || (!p && u), [p, h, u]),
                            b = r.interval === g,
                            y = yi().useCallback(() => a(h, i.key, r.interval), [h, i, r, a]);
                        return yi().createElement(
                            uv,
                            {
                                key: r.interval,
                                onClick: y,
                                className: e()('sc-interval__item', {
                                    'sc-interval__item--active': b,
                                    'sc-interval__item--disabled': v || n,
                                    'pre-loading': f,
                                }),
                                enabled: _,
                                content: Tv.translate('Available only for "Area" chart type.'),
                            },
                            yi().createElement(
                                Ev,
                                { enabled: f },
                                yi().createElement(
                                    'span',
                                    null,
                                    r.num,
                                    ' ',
                                    Tv.translate(1 === r.num ? i.single : i.plural)
                                )
                            )
                        );
                    }),
                    Av = Bi(t => {
                        let { portalNodeId: e, onChange: r } = t;
                        const { timeperiod: i, loader: a } = Z_(),
                            { changeGranularity: n, setGranularity: s, updateProps: o, updatePortalNode: l } = i,
                            { isActive: c } = a,
                            h = r || s,
                            u = (t, e, r) => {
                                c || ('tick' === e && 'line' !== t) || n(r);
                            };
                        return (
                            yi().useEffect(() => o(h)),
                            l(e),
                            yi().createElement(
                                'div',
                                { className: 'sc-interval' },
                                yi().createElement(
                                    'div',
                                    { className: 'sc-interval__head' },
                                    yi().createElement('strong', null, Tv.translate('Time interval'))
                                ),
                                yi().createElement(
                                    'div',
                                    { className: 'sc-interval__info' },
                                    Tv.translate('Tick interval only available for "Area" Chart type.')
                                ),
                                yi().createElement(
                                    'div',
                                    { className: 'sc-interval__content' },
                                    Ap.map(t =>
                                        t.items.map(e =>
                                            yi().createElement(kv, {
                                                key: e.interval,
                                                item: e,
                                                category: t,
                                                onClick: u,
                                                isLoading: c,
                                            })
                                        )
                                    )
                                )
                            )
                        );
                    }),
                    Ov = t => {
                        let { className: r, isMobile: i, text: a } = t;
                        return yi().createElement('div', { className: e()(r, { [`${r}--mobile`]: i }) }, a);
                    };
                Ov.defaultProps = { className: 'info-footnote', isMobile: !1 };
                const Nv = yi().memo(Ov);
                var Iv = h(9160).t;
                const Dv = { line: dm, candles: gm, ohlc: pm, hollow: mm },
                    Pv = t => {
                        let { onChartType: r, onGranularity: i, portalNodeId: a } = t;
                        const { chart: n, chartMode: s, chartType: o, timeperiod: l, state: c } = Z_(),
                            { menuStore: h } = s,
                            { allowTickChartTypeOnly: u } = c,
                            { isMobile: d } = n,
                            { type: g } = o,
                            { display: m } = l,
                            p = s.menuStore.open,
                            f = Dv[g.id];
                        return yi().createElement(
                            bv,
                            {
                                className: 'ciq-display sc-chart-mode',
                                title: Iv.translate('Chart types'),
                                tooltip: Iv.translate('Chart types'),
                                modalMode: !0,
                                isFullscreen: !0,
                                portalNodeId: a,
                                store: h,
                            },
                            yi().createElement(
                                bv.Title,
                                null,
                                yi().createElement(
                                    'div',
                                    { className: e()('sc-chart-mode__menu', { 'sc-chart-mode__menu--active': p }) },
                                    yi().createElement('span', { className: 'sc-chart-mode__menu__timeperiod' }, m),
                                    yi().createElement(f, { 'tooltip-title': Iv.translate(g.text) })
                                )
                            ),
                            yi().createElement(
                                bv.Body,
                                null,
                                yi().createElement(
                                    'div',
                                    { className: 'sc-chart-mode__section' },
                                    yi().createElement(
                                        'div',
                                        { className: 'sc-chart-mode__section__item' },
                                        yi().createElement(wv, { newDesign: !0, onChange: r })
                                    ),
                                    yi().createElement(
                                        'div',
                                        { className: 'sc-chart-mode__section__item' },
                                        yi().createElement(Av, { newDesign: !0, portalNodeId: a, onChange: i })
                                    )
                                ),
                                u &&
                                    yi().createElement(Nv, {
                                        isMobile: d,
                                        text: Iv.translate(
                                            'Only selected charts and time intervals are available for this trade type.'
                                        ),
                                    })
                            )
                        );
                    };
                Pv.defaultProps = { portalNodeId: '' };
                const Lv = Bi(Pv);
                function Mv(t) {
                    return function (e) {
                        return !!e.type && e.type.tabsRole === t;
                    };
                }
                var Bv = Mv('Tab'),
                    Rv = Mv('TabList'),
                    jv = Mv('TabPanel');
                function Fv() {
                    return (
                        (Fv =
                            Object.assign ||
                            function (t) {
                                for (var e = 1; e < arguments.length; e++) {
                                    var r = arguments[e];
                                    for (var i in r) Object.prototype.hasOwnProperty.call(r, i) && (t[i] = r[i]);
                                }
                                return t;
                            }),
                        Fv.apply(this, arguments)
                    );
                }
                function Vv(t, e) {
                    return bi.Children.map(t, function (t) {
                        return null === t
                            ? null
                            : (function (t) {
                                    return Bv(t) || Rv(t) || jv(t);
                                })(t)
                              ? e(t)
                              : t.props && t.props.children && 'object' == typeof t.props.children
                                ? (0, bi.cloneElement)(t, Fv({}, t.props, { children: Vv(t.props.children, e) }))
                                : t;
                    });
                }
                function Hv(t, e) {
                    return bi.Children.forEach(t, function (t) {
                        null !== t &&
                            (Bv(t) || jv(t)
                                ? e(t)
                                : t.props &&
                                  t.props.children &&
                                  'object' == typeof t.props.children &&
                                  (Rv(t) && e(t), Hv(t.props.children, e)));
                    });
                }
                function qv(t) {
                    var e,
                        r,
                        i = '';
                    if ('string' == typeof t || 'number' == typeof t) i += t;
                    else if ('object' == typeof t)
                        if (Array.isArray(t))
                            for (e = 0; e < t.length; e++) t[e] && (r = qv(t[e])) && (i && (i += ' '), (i += r));
                        else for (e in t) t[e] && (i && (i += ' '), (i += e));
                    return i;
                }
                const Uv = function () {
                    for (var t, e, r = 0, i = ''; r < arguments.length; )
                        (t = arguments[r++]) && (e = qv(t)) && (i && (i += ' '), (i += e));
                    return i;
                };
                var $v = 0;
                function zv() {
                    return 'react-tabs-' + $v++;
                }
                function Gv(t) {
                    var e = 0;
                    return (
                        Hv(t, function (t) {
                            Bv(t) && e++;
                        }),
                        e
                    );
                }
                var Wv,
                    Kv = [
                        'children',
                        'className',
                        'disabledTabClassName',
                        'domRef',
                        'focus',
                        'forceRenderTabPanel',
                        'onSelect',
                        'selectedIndex',
                        'selectedTabClassName',
                        'selectedTabPanelClassName',
                        'environment',
                        'disableUpDownKeys',
                    ];
                function Xv() {
                    return (
                        (Xv =
                            Object.assign ||
                            function (t) {
                                for (var e = 1; e < arguments.length; e++) {
                                    var r = arguments[e];
                                    for (var i in r) Object.prototype.hasOwnProperty.call(r, i) && (t[i] = r[i]);
                                }
                                return t;
                            }),
                        Xv.apply(this, arguments)
                    );
                }
                function Yv(t) {
                    return t && 'getAttribute' in t;
                }
                function Zv(t) {
                    return Yv(t) && t.getAttribute('data-rttab');
                }
                function Qv(t) {
                    return Yv(t) && 'true' === t.getAttribute('aria-disabled');
                }
                var Jv = function (t) {
                    var e = (0, bi.useRef)([]),
                        r = (0, bi.useRef)([]),
                        i = (0, bi.useRef)([]),
                        a = (0, bi.useRef)();
                    function n(e, r) {
                        e < 0 || e >= l() || (0, t.onSelect)(e, t.selectedIndex, r);
                    }
                    function s(t) {
                        for (var e = l(), r = t + 1; r < e; r++) if (!Qv(c(r))) return r;
                        for (var i = 0; i < t; i++) if (!Qv(c(i))) return i;
                        return t;
                    }
                    function o(t) {
                        for (var e = t; e--; ) if (!Qv(c(e))) return e;
                        for (e = l(); e-- > t; ) if (!Qv(c(e))) return e;
                        return t;
                    }
                    function l() {
                        return Gv(t.children);
                    }
                    function c(t) {
                        return e.current['tabs-' + t];
                    }
                    function h(t) {
                        var e = t.target;
                        do {
                            if (u(e)) {
                                if (Qv(e)) return;
                                return void n([].slice.call(e.parentNode.children).filter(Zv).indexOf(e), t);
                            }
                        } while (null != (e = e.parentNode));
                    }
                    function u(t) {
                        if (!Zv(t)) return !1;
                        var e = t.parentElement;
                        do {
                            if (e === a.current) return !0;
                            if (e.getAttribute('data-rttabs')) break;
                            e = e.parentElement;
                        } while (e);
                        return !1;
                    }
                    t.children;
                    var d = t.className,
                        g = (t.disabledTabClassName, t.domRef),
                        m =
                            (t.focus,
                            t.forceRenderTabPanel,
                            t.onSelect,
                            t.selectedIndex,
                            t.selectedTabClassName,
                            t.selectedTabPanelClassName,
                            t.environment,
                            t.disableUpDownKeys,
                            (function (t, e) {
                                if (null == t) return {};
                                var r,
                                    i,
                                    a = {},
                                    n = Object.keys(t);
                                for (i = 0; i < n.length; i++) (r = n[i]), e.indexOf(r) >= 0 || (a[r] = t[r]);
                                return a;
                            })(t, Kv));
                    return yi().createElement(
                        'div',
                        Xv({}, m, {
                            className: Uv(d),
                            onClick: h,
                            onKeyDown: function (e) {
                                var r = t.direction,
                                    i = t.disableUpDownKeys;
                                if (u(e.target)) {
                                    var a = t.selectedIndex,
                                        d = !1,
                                        g = !1;
                                    ('Space' !== e.code &&
                                        32 !== e.keyCode &&
                                        'Enter' !== e.code &&
                                        13 !== e.keyCode) ||
                                        ((d = !0), (g = !1), h(e)),
                                        'ArrowLeft' !== e.code &&
                                        37 !== e.keyCode &&
                                        (i || (38 !== e.keyCode && 'ArrowUp' !== e.code))
                                            ? 'ArrowRight' !== e.code &&
                                              39 !== e.keyCode &&
                                              (i || (40 !== e.keyCode && 'ArrowDown' !== e.code))
                                                ? 35 === e.keyCode || 'End' === e.code
                                                    ? ((a = (function () {
                                                          for (var t = l(); t--; ) if (!Qv(c(t))) return t;
                                                          return null;
                                                      })()),
                                                      (d = !0),
                                                      (g = !0))
                                                    : (36 !== e.keyCode && 'Home' !== e.code) ||
                                                      ((a = (function () {
                                                          for (var t = l(), e = 0; e < t; e++) if (!Qv(c(e))) return e;
                                                          return null;
                                                      })()),
                                                      (d = !0),
                                                      (g = !0))
                                                : ((a = 'rtl' === r ? o(a) : s(a)), (d = !0), (g = !0))
                                            : ((a = 'rtl' === r ? s(a) : o(a)), (d = !0), (g = !0)),
                                        d && e.preventDefault(),
                                        g && n(a, e);
                                }
                            },
                            ref: function (t) {
                                (a.current = t), g && g(t);
                            },
                            'data-rttabs': !0,
                        }),
                        (function () {
                            var a = 0,
                                n = t.children,
                                s = t.disabledTabClassName,
                                o = t.focus,
                                h = t.forceRenderTabPanel,
                                u = t.selectedIndex,
                                d = t.selectedTabClassName,
                                g = t.selectedTabPanelClassName,
                                m = t.environment;
                            (r.current = r.current || []), (i.current = i.current || []);
                            for (var p = r.current.length - l(); p++ < 0; ) r.current.push(zv()), i.current.push(zv());
                            return Vv(n, function (t) {
                                var n = t;
                                if (Rv(t)) {
                                    var l = 0,
                                        p = !1;
                                    null == Wv &&
                                        (function (t) {
                                            var e = t || ('undefined' != typeof window ? window : void 0);
                                            try {
                                                Wv = !(void 0 === e || !e.document || !e.document.activeElement);
                                            } catch (t) {
                                                Wv = !1;
                                            }
                                        })(m);
                                    var f = m || ('undefined' != typeof window ? window : void 0);
                                    Wv &&
                                        f &&
                                        (p = yi()
                                            .Children.toArray(t.props.children)
                                            .filter(Bv)
                                            .some(function (t, e) {
                                                return f.document.activeElement === c(e);
                                            })),
                                        (n = (0, bi.cloneElement)(t, {
                                            children: Vv(t.props.children, function (t) {
                                                var a = 'tabs-' + l,
                                                    n = u === l,
                                                    c = {
                                                        tabRef: function (t) {
                                                            e.current[a] = t;
                                                        },
                                                        id: r.current[l],
                                                        panelId: i.current[l],
                                                        selected: n,
                                                        focus: n && (o || p),
                                                    };
                                                return (
                                                    d && (c.selectedClassName = d),
                                                    s && (c.disabledClassName = s),
                                                    l++,
                                                    (0, bi.cloneElement)(t, c)
                                                );
                                            }),
                                        }));
                                } else if (jv(t)) {
                                    var _ = { id: i.current[a], tabId: r.current[a], selected: u === a };
                                    h && (_.forceRender = h),
                                        g && (_.selectedClassName = g),
                                        a++,
                                        (n = (0, bi.cloneElement)(t, _));
                                }
                                return n;
                            });
                        })()
                    );
                };
                (Jv.defaultProps = { className: 'react-tabs', focus: !1 }), (Jv.propTypes = {});
                const tb = Jv;
                function eb() {
                    return (
                        (eb =
                            Object.assign ||
                            function (t) {
                                for (var e = 1; e < arguments.length; e++) {
                                    var r = arguments[e];
                                    for (var i in r) Object.prototype.hasOwnProperty.call(r, i) && (t[i] = r[i]);
                                }
                                return t;
                            }),
                        eb.apply(this, arguments)
                    );
                }
                var rb = function (t) {
                    var e = t.children,
                        r = t.defaultFocus,
                        i = t.defaultIndex,
                        a = t.focusTabOnClick,
                        n = t.onSelect,
                        s = (0, bi.useState)(r),
                        o = s[0],
                        l = s[1],
                        c = (0, bi.useState)(
                            (function (t) {
                                return null === t.selectedIndex ? 1 : 0;
                            })(t)
                        ),
                        h = c[0],
                        u = (0, bi.useState)(1 === h ? i || 0 : null),
                        d = u[0],
                        g = u[1];
                    if (
                        ((0, bi.useEffect)(function () {
                            l(!1);
                        }, []),
                        1 === h)
                    ) {
                        var m = Gv(e);
                        (0, bi.useEffect)(
                            function () {
                                if (null != d) {
                                    var t = Math.max(0, m - 1);
                                    g(Math.min(d, t));
                                }
                            },
                            [m]
                        );
                    }
                    var p = eb({}, t);
                    return (
                        (p.focus = o),
                        (p.onSelect = function (t, e, r) {
                            ('function' == typeof n && !1 === n(t, e, r)) || (a && l(!0), 1 === h && g(t));
                        }),
                        null != d && (p.selectedIndex = d),
                        delete p.defaultFocus,
                        delete p.defaultIndex,
                        delete p.focusTabOnClick,
                        yi().createElement(tb, p, e)
                    );
                };
                (rb.propTypes = {}),
                    (rb.defaultProps = {
                        defaultFocus: !1,
                        focusTabOnClick: !0,
                        forceRenderTabPanel: !1,
                        selectedIndex: null,
                        defaultIndex: null,
                        environment: null,
                        disableUpDownKeys: !1,
                    }),
                    (rb.tabsRole = 'Tabs');
                const ib = rb;
                var ab = ['children', 'className'];
                function nb() {
                    return (
                        (nb =
                            Object.assign ||
                            function (t) {
                                for (var e = 1; e < arguments.length; e++) {
                                    var r = arguments[e];
                                    for (var i in r) Object.prototype.hasOwnProperty.call(r, i) && (t[i] = r[i]);
                                }
                                return t;
                            }),
                        nb.apply(this, arguments)
                    );
                }
                var sb = function (t) {
                    var e = t.children,
                        r = t.className,
                        i = (function (t, e) {
                            if (null == t) return {};
                            var r,
                                i,
                                a = {},
                                n = Object.keys(t);
                            for (i = 0; i < n.length; i++) (r = n[i]), e.indexOf(r) >= 0 || (a[r] = t[r]);
                            return a;
                        })(t, ab);
                    return yi().createElement('ul', nb({}, i, { className: Uv(r), role: 'tablist' }), e);
                };
                (sb.tabsRole = 'TabList'),
                    (sb.propTypes = {}),
                    (sb.defaultProps = { className: 'react-tabs__tab-list' });
                const ob = sb;
                var lb = [
                    'children',
                    'className',
                    'disabled',
                    'disabledClassName',
                    'focus',
                    'id',
                    'panelId',
                    'selected',
                    'selectedClassName',
                    'tabIndex',
                    'tabRef',
                ];
                function cb() {
                    return (
                        (cb =
                            Object.assign ||
                            function (t) {
                                for (var e = 1; e < arguments.length; e++) {
                                    var r = arguments[e];
                                    for (var i in r) Object.prototype.hasOwnProperty.call(r, i) && (t[i] = r[i]);
                                }
                                return t;
                            }),
                        cb.apply(this, arguments)
                    );
                }
                var hb = 'react-tabs__tab',
                    ub = {
                        className: hb,
                        disabledClassName: hb + '--disabled',
                        focus: !1,
                        id: null,
                        panelId: null,
                        selected: !1,
                        selectedClassName: hb + '--selected',
                    },
                    db = function (t) {
                        var e,
                            r = (0, bi.useRef)(),
                            i = t.children,
                            a = t.className,
                            n = t.disabled,
                            s = t.disabledClassName,
                            o = t.focus,
                            l = t.id,
                            c = t.panelId,
                            h = t.selected,
                            u = t.selectedClassName,
                            d = t.tabIndex,
                            g = t.tabRef,
                            m = (function (t, e) {
                                if (null == t) return {};
                                var r,
                                    i,
                                    a = {},
                                    n = Object.keys(t);
                                for (i = 0; i < n.length; i++) (r = n[i]), e.indexOf(r) >= 0 || (a[r] = t[r]);
                                return a;
                            })(t, lb);
                        return (
                            (0, bi.useEffect)(
                                function () {
                                    h && o && r.current.focus();
                                },
                                [h, o]
                            ),
                            yi().createElement(
                                'li',
                                cb({}, m, {
                                    className: Uv(a, ((e = {}), (e[u] = h), (e[s] = n), e)),
                                    ref: function (t) {
                                        (r.current = t), g && g(t);
                                    },
                                    role: 'tab',
                                    id: l,
                                    'aria-selected': h ? 'true' : 'false',
                                    'aria-disabled': n ? 'true' : 'false',
                                    'aria-controls': c,
                                    tabIndex: d || (h ? '0' : null),
                                    'data-rttab': !0,
                                }),
                                i
                            )
                        );
                    };
                (db.propTypes = {}), (db.tabsRole = 'Tab'), (db.defaultProps = ub);
                const gb = db;
                var mb = ['children', 'className', 'forceRender', 'id', 'selected', 'selectedClassName', 'tabId'];
                function pb() {
                    return (
                        (pb =
                            Object.assign ||
                            function (t) {
                                for (var e = 1; e < arguments.length; e++) {
                                    var r = arguments[e];
                                    for (var i in r) Object.prototype.hasOwnProperty.call(r, i) && (t[i] = r[i]);
                                }
                                return t;
                            }),
                        pb.apply(this, arguments)
                    );
                }
                var fb = 'react-tabs__tab-panel',
                    _b = { className: fb, forceRender: !1, selectedClassName: fb + '--selected' },
                    vb = function (t) {
                        var e,
                            r = t.children,
                            i = t.className,
                            a = t.forceRender,
                            n = t.id,
                            s = t.selected,
                            o = t.selectedClassName,
                            l = t.tabId,
                            c = (function (t, e) {
                                if (null == t) return {};
                                var r,
                                    i,
                                    a = {},
                                    n = Object.keys(t);
                                for (i = 0; i < n.length; i++) (r = n[i]), e.indexOf(r) >= 0 || (a[r] = t[r]);
                                return a;
                            })(t, mb);
                        return yi().createElement(
                            'div',
                            pb({}, c, {
                                className: Uv(i, ((e = {}), (e[o] = s), e)),
                                role: 'tabpanel',
                                id: n,
                                'aria-labelledby': l,
                            }),
                            a || s ? r : null
                        );
                    };
                (vb.tabsRole = 'TabPanel'), (vb.propTypes = {}), (vb.defaultProps = _b);
                const bb = vb,
                    yb = t => {
                        let { notificationCount: r } = t;
                        return r
                            ? yi().createElement('span', { className: e()('sc-notification-badge', { x2: r > 9 }) }, r)
                            : null;
                    };
                h(7209), h(6351);
                const Sb = Bi(t => {
                    let { placeholder: r, value: i, searchInput: a, searchInputClassName: n, onChange: s } = t;
                    return yi().createElement(
                        'div',
                        { className: e()('sc-search-input', { active: '' !== i.trim() }) },
                        yi().createElement('input', {
                            className: n,
                            value: i,
                            ref: a,
                            onChange: t => s(t.target.value),
                            type: 'text',
                            spellCheck: 'false',
                            autoComplete: 'off',
                            autoCorrect: 'off',
                            autoCapitalize: 'off',
                            placeholder: r,
                        }),
                        yi().createElement(zg, null),
                        yi().createElement(Lg, { className: 'icon-reset', onClick: () => s('') })
                    );
                });
                var wb = h(9160).t;
                const Cb = t => {
                        let { Icon: e } = t;
                        return yi().createElement(e, null);
                    },
                    Eb = () =>
                        yi().createElement(
                            'div',
                            { className: 'sc-studies--empty' },
                            yi().createElement($m, null),
                            yi().createElement('p', null, wb.translate('You have no active indicators yet.'))
                        ),
                    xb = t => {
                        let { text: e } = t;
                        return yi().createElement(
                            'div',
                            { className: 'sc-studies--empty' },
                            yi().createElement('strong', null, wb.translate('No results for'), ' “', e, '”'),
                            yi().createElement(
                                'p',
                                null,
                                wb.translate('Try checking your spelling or use a different term')
                            )
                        );
                    },
                    Tb = t => {
                        let {
                            items: r,
                            onSelectItem: i,
                            onDeleteItem: a,
                            onEditItem: n,
                            onInfoItem: s,
                            disableAll: o,
                            isTick: l,
                        } = t;
                        return yi().createElement(
                            'div',
                            { className: 'sc-studies__list' },
                            r.map(t =>
                                yi().createElement(
                                    'div',
                                    {
                                        key: `item--${t.id || t.flutter_chart_id}`,
                                        className: e()('sc-studies__list__item ', {
                                            'sc-studies__list__item--disabled': o,
                                            'sc-studies__list__item--disabled-prediction': t.isPrediction && l,
                                        }),
                                    },
                                    yi().createElement(
                                        uv,
                                        {
                                            className: 'sc-studies__list__item__box',
                                            enabled:
                                                !!((n || a) && t.bars && t.bars.length > 30) || (t.isPrediction && l),
                                            content:
                                                t.isPrediction && l
                                                    ? wb.translate(
                                                          'This indicator does not support 1-tick intervals. To use this indicator, change your chart time interval to 1 minute or more.'
                                                      )
                                                    : `${t.name} ${t.bars ? `(${t.bars})` : ''}`,
                                        },
                                        yi().createElement(
                                            'div',
                                            {
                                                className: 'info',
                                                onClick: () => i?.(t.flutter_chart_id),
                                                onTouchEnd: () => i?.(t.flutter_chart_id),
                                            },
                                            yi().createElement(Cb, { Icon: t.icon }),
                                            yi().createElement(
                                                'div',
                                                { className: 'text' },
                                                yi().createElement('span', null, a ? t.short_name_and_index : t.name),
                                                t.bars && yi().createElement('small', null, '(', t.bars, ')')
                                            )
                                        ),
                                        yi().createElement(
                                            'div',
                                            { className: 'detail' },
                                            s && yi().createElement(Zg, { className: 'ic-info', onClick: () => s(t) }),
                                            n && yi().createElement(Gg, { onClick: () => n(t) }),
                                            a && yi().createElement(jg, { onClick: () => a(t.id) })
                                        )
                                    )
                                )
                            )
                        );
                    },
                    kb = t => {
                        let { categories: e, onSelectItem: r, onInfoItem: i, disableAll: a, isTick: n } = t;
                        return yi().createElement(
                            dv,
                            { autoHide: !0 },
                            e.map(t =>
                                yi().createElement(
                                    'div',
                                    { key: t.name, className: 'sc-studies__category' },
                                    yi().createElement('div', { className: 'sc-studies__category__head' }, t.name),
                                    yi().createElement(
                                        'div',
                                        { className: 'sc-studies__category__body' },
                                        yi().createElement(Tb, {
                                            items: t.foundItems || [],
                                            onSelectItem: r,
                                            onInfoItem: i,
                                            disableAll: a,
                                            isTick: n,
                                        })
                                    )
                                )
                            )
                        );
                    },
                    Ab = t => {
                        let { items: e, onDeleteItem: r, onEditItem: i, clearAll: a, isMobile: n } = t;
                        return yi().createElement(
                            yi().Fragment,
                            null,
                            yi().createElement(
                                'div',
                                { className: 'sc-studies__panel__head' },
                                yi().createElement(
                                    'p',
                                    null,
                                    n
                                        ? wb.translate('Up to 2 active indicators allowed.')
                                        : wb.translate('Up to 5 active indicators allowed.')
                                ),
                                yi().createElement(
                                    'button',
                                    {
                                        type: 'button',
                                        className: 'sc-btn sc-btn--sm sc-btn--outline-secondary',
                                        onClick: () => a(),
                                    },
                                    wb.translate('Clear all')
                                )
                            ),
                            yi().createElement(
                                'div',
                                { className: 'sc-studies__panel__content sc-studies__panel__content--active' },
                                yi().createElement(Tb, { items: e, onDeleteItem: r, onEditItem: i })
                            )
                        );
                    },
                    Ob = t => {
                        let {
                            onSelectTab: e,
                            selectedTab: r,
                            categories: i,
                            searchedCategories: a,
                            onSelectItem: n,
                            onDeleteItem: s,
                            onEditItem: o,
                            onInfoItem: l,
                            activeItems: c,
                            clearAll: h,
                            searchQuery: u,
                            isMobile: d,
                            maxAllowedItem: g,
                            isTick: m,
                        } = t;
                        return yi().createElement(
                            ib,
                            { className: 'tabs--vertical', selectedIndex: r, onSelect: e },
                            yi().createElement(
                                ob,
                                null,
                                yi().createElement(gb, { key: 'hidden', className: 'hidden' }),
                                yi().createElement(
                                    gb,
                                    { key: 'active' },
                                    yi().createElement(kg, null),
                                    yi().createElement('span', null, wb.translate('Active')),
                                    yi().createElement(yb, { notificationCount: c.length })
                                ),
                                i.map(t =>
                                    yi().createElement(
                                        gb,
                                        { key: `tab--${t.name}` },
                                        yi().createElement(Cb, { Icon: t.icon }),
                                        yi().createElement('span', null, t.name)
                                    )
                                )
                            ),
                            yi().createElement(
                                bb,
                                { key: 'panel--search' },
                                yi().createElement(
                                    'div',
                                    { className: 'sc-studies__panel sc-studies__panel--search' },
                                    a.length
                                        ? yi().createElement(kb, {
                                              categories: a,
                                              onSelectItem: n,
                                              onInfoItem: l,
                                              disableAll: c.length === (d ? 2 : 5),
                                              isTick: m,
                                          })
                                        : yi().createElement(xb, { text: u })
                                )
                            ),
                            yi().createElement(
                                bb,
                                { key: 'panel--active' },
                                yi().createElement(
                                    'div',
                                    { className: 'sc-studies__panel sc-studies__panel--active' },
                                    c.length
                                        ? yi().createElement(Ab, {
                                              clearAll: h,
                                              items: c,
                                              onDeleteItem: s,
                                              onEditItem: o,
                                              isMobile: d,
                                          })
                                        : yi().createElement(Eb, null)
                                )
                            ),
                            i.map(t =>
                                yi().createElement(
                                    bb,
                                    { key: `panel--${t.name}` },
                                    yi().createElement(
                                        'div',
                                        { className: 'sc-studies__panel' },
                                        yi().createElement('h3', null, t.name),
                                        yi().createElement(Tb, {
                                            onSelectItem: n,
                                            onInfoItem: l,
                                            items: t.items,
                                            disableAll: c.length === g,
                                            isTick: m,
                                        })
                                    )
                                )
                            )
                        );
                    },
                    Nb = Bi(t => {
                        let { portalNodeId: e } = t;
                        const { studies: r, chart: i, state: a, timeperiod: n } = Z_(),
                            {
                                menuStore: s,
                                deleteAllStudies: o,
                                items: l,
                                searchedItems: c,
                                filterText: h,
                                selectedTab: u,
                                onSelectTab: d,
                                onSelectItem: g,
                                activeItems: m,
                                getItemById: p,
                                deleteStudyById: f,
                                editStudy: _,
                                onInfoItem: v,
                                infoItem: b,
                                updatePortalNode: y,
                                maxAllowedItem: S,
                                setFilterText: w,
                                searchInput: C,
                            } = r,
                            { isTick: E } = n,
                            { isMobile: x } = i,
                            T = s.open,
                            k = m.length;
                        y(e);
                        const A = t =>
                                _p()
                                    .find(e => e.items.some(e => e.flutter_chart_id === t))
                                    ?.category.replace('-', ' ') ?? '',
                            O = (t, e, r) => {
                                a.stateChange(e, {
                                    indicator_type_name: t,
                                    indicators_category_name: A(t),
                                    ...(r ?? {}),
                                });
                            };
                        return yi().createElement(
                            bv,
                            {
                                store: s,
                                className: 'sc-studies',
                                title: wb.translate('Indicators'),
                                tooltip: wb.translate('Indicators'),
                                modalMode: !0,
                                enableTabular: !0,
                                portalNodeId: e,
                                customHead: b
                                    ? yi().createElement(
                                          'div',
                                          { className: 'sc-dialog__head--info' },
                                          yi().createElement(Qg, {
                                              onClick: () => {
                                                  v(null), O(b.flutter_chart_id, Dp);
                                              },
                                          }),
                                          b.flutter_chart_id
                                      )
                                    : yi().createElement(
                                          'div',
                                          { className: 'sc-dialog__head--search' },
                                          yi().createElement(Sb, {
                                              placeholder: wb.translate('Search'),
                                              searchInputClassName: 'searchInputClassName',
                                              value: h,
                                              onChange: w,
                                              searchInput: C,
                                          })
                                      ),
                            },
                            yi().createElement(
                                bv.Title,
                                null,
                                yi().createElement(
                                    'div',
                                    { className: 'sc-studies__menu ' + (T ? 'sc-studies__menu--active' : '') },
                                    yi().createElement(Fg, null),
                                    yi().createElement(yb, { notificationCount: k })
                                )
                            ),
                            yi().createElement(
                                bv.Body,
                                null,
                                b &&
                                    yi().createElement(
                                        'div',
                                        { className: 'sc-studies__info' },
                                        yi().createElement(
                                            dv,
                                            { autoHide: !0, height: '360px', className: 'sc-studies__info__content' },
                                            yi().createElement('p', null, b?.description)
                                        ),
                                        yi().createElement(
                                            'div',
                                            { className: 'sc-studies__info__footer' },
                                            yi().createElement(
                                                uv,
                                                { enabled: b?.disabledAddBtn, content: Lp.predictionIndicator },
                                                yi().createElement(
                                                    'button',
                                                    {
                                                        type: 'button',
                                                        className: 'sc-btn sc-btn--primary sc-btn--w100',
                                                        onClick: () => {
                                                            g(b?.flutter_chart_id),
                                                                O(b?.flutter_chart_id, Np, { is_info_open: !0 });
                                                        },
                                                        disabled: b?.disabledAddBtn,
                                                    },
                                                    wb.translate('Add')
                                                )
                                            )
                                        )
                                    ),
                                yi().createElement(Ob, {
                                    onSelectTab: d,
                                    selectedTab: u,
                                    categories: l,
                                    searchedCategories: c,
                                    onSelectItem: t => {
                                        g(t), O(t, Np);
                                    },
                                    onDeleteItem: t => {
                                        const e = p(t);
                                        e && O(e.flutter_chart_id, Ip), f(t);
                                    },
                                    onEditItem: t => {
                                        _(t), O(t.flutter_chart_id, 'INDICATOR_SETTINGS_OPEN');
                                    },
                                    onInfoItem: t => {
                                        v(t), O(t.flutter_chart_id, Dp, { is_info_open: !0 });
                                    },
                                    activeItems: m,
                                    clearAll: () => {
                                        o(), a.stateChange('INDICATORS_CLEAR_ALL');
                                    },
                                    searchQuery: h,
                                    isMobile: x,
                                    maxAllowedItem: S,
                                    isTick: E,
                                })
                            )
                        );
                    });
                h(6238);
                var Ib = h(9160).t;
                const Db = t => {
                    let { disabled: r, view: i, remove: a, onClick: n } = t;
                    return yi().createElement(
                        uv,
                        {
                            className: 'sc-views__views__list__item',
                            onClick: r ? void 0 : n,
                            enabled: i.name.length > 27,
                            content: sa(i.name, 26),
                        },
                        yi().createElement('div', { className: e()('text', { 'text--disabled': r }) }, i.name),
                        yi().createElement(jg, { onClick: a })
                    );
                };
                Db.defaultProps = { disabled: !1 };
                const Pb = t => {
                        let { onClick: e } = t;
                        return yi().createElement(
                            'div',
                            { className: 'sc-views--empty' },
                            yi().createElement($m, null),
                            yi().createElement('p', null, Ib.translate('You have no saved templates yet.')),
                            yi().createElement(
                                'button',
                                { type: 'button', className: 'sc-btn', onClick: e },
                                yi().createElement(Og, null),
                                Ib.translate('Add new template')
                            )
                        );
                    },
                    Lb = t => {
                        let { templateName: e, onCancel: r, onOverwrite: i } = t;
                        return yi().createElement(
                            'div',
                            { className: 'sc-views--overwrite' },
                            yi().createElement(
                                'div',
                                { className: 'sc-views--overwrite__content' },
                                yi().createElement(zm, null),
                                yi().createElement(
                                    'p',
                                    null,
                                    `${e} ${Ib.translate('already exists.')}`,
                                    yi().createElement('br', null),
                                    Ib.translate('Would you like to overwrite it?')
                                )
                            ),
                            yi().createElement(
                                'div',
                                { className: 'sc-views--overwrite__footer' },
                                yi().createElement(
                                    'button',
                                    { type: 'button', className: 'sc-btn sc-btn--outline-secondary', onClick: r },
                                    Ib.translate('Cancel')
                                ),
                                yi().createElement(
                                    'button',
                                    { type: 'button', className: 'sc-btn sc-btn--primary', onClick: i },
                                    Ib.translate('Overwrite')
                                )
                            )
                        );
                    },
                    Mb = t => {
                        let {
                            allowTickChartTypeOnly: e,
                            views: r,
                            removeAll: i,
                            applyLayout: a,
                            remove: n,
                            onGranularity: s,
                            onChartType: o,
                        } = t;
                        if (!r.length) return null;
                        const l = t => {
                            const { chartType: r, timeUnit: i } = t ?? {};
                            return e && !('line' === r && 'tick' === i);
                        };
                        return yi().createElement(
                            'div',
                            { className: 'sc-views__views' },
                            yi().createElement(
                                'div',
                                { className: 'sc-views__views__head' },
                                yi().createElement('h5', null, Ib.translate('Saved templates')),
                                yi().createElement(
                                    'button',
                                    {
                                        type: 'button',
                                        onClick: i,
                                        className: 'sc-btn sc-btn--sm sc-btn--outline-secondary',
                                    },
                                    Ib.translate('Clear all')
                                )
                            ),
                            yi().createElement(
                                'div',
                                { className: 'sc-views__views__content' },
                                yi().createElement(
                                    'div',
                                    { className: 'sc-views__views__list' },
                                    r.map((t, e) =>
                                        yi().createElement(Db, {
                                            disabled: l(t.layout),
                                            view: t,
                                            key: t.name,
                                            onClick: t => a(e, t, s, o),
                                            remove: t => n(e, t),
                                        })
                                    )
                                )
                            )
                        );
                    },
                    Bb = Bi(t => {
                        let { portalNodeId: r, onChartType: i, onGranularity: a } = t;
                        const { view: n, state: s, chart: o } = Z_(),
                            { allowTickChartTypeOnly: l } = s,
                            { isMobile: c } = o,
                            {
                                sortedItems: h,
                                routes: { main: u, overwrite: d },
                                onChange: g,
                                remove: m,
                                onSubmit: p,
                                applyLayout: f,
                                inputRef: _,
                                currentRoute: v,
                                templateName: b,
                                onToggleNew: y,
                                saveViews: S,
                                removeAll: w,
                                isInputActive: C,
                                onFocus: E,
                                onBlur: x,
                                menuStore: T,
                            } = n,
                            k = T.dialogStore.open,
                            A = C || '' !== b;
                        return yi().createElement(
                            bv,
                            {
                                store: T,
                                className: 'sc-views-menu',
                                title: Ib.translate('Templates'),
                                tooltip: Ib.translate('Templates'),
                                modalMode: !0,
                                portalNodeId: r,
                            },
                            yi().createElement(
                                bv.Title,
                                null,
                                yi().createElement(
                                    'div',
                                    { className: e()('sc-views__menu', { 'sc-views__menu--active': k }) },
                                    yi().createElement(Ug, null)
                                )
                            ),
                            yi().createElement(
                                bv.Body,
                                null,
                                yi().createElement(
                                    'div',
                                    { className: 'sc-views' },
                                    'new' === v
                                        ? yi().createElement(Pb, { onClick: y })
                                        : yi().createElement(
                                              yi().Fragment,
                                              null,
                                              'overwrite' !== v
                                                  ? ''
                                                  : yi().createElement(Lb, {
                                                        templateName: b,
                                                        onCancel: u,
                                                        onOverwrite: d,
                                                    }),
                                              yi().createElement(
                                                  dv,
                                                  { autoHide: !0 },
                                                  yi().createElement(
                                                      'div',
                                                      { className: 'form form--sc-views' },
                                                      yi().createElement(
                                                          'div',
                                                          { className: 'form__input-group' },
                                                          yi().createElement(
                                                              'div',
                                                              { className: 'form__group' },
                                                              yi().createElement(
                                                                  'div',
                                                                  { className: 'form__control' },
                                                                  yi().createElement(
                                                                      'div',
                                                                      {
                                                                          className: e()('form--sc-views__input', {
                                                                              'form--sc-views__input--active': A,
                                                                          }),
                                                                      },
                                                                      yi().createElement(
                                                                          'div',
                                                                          { className: 'subtitle' },
                                                                          yi().createElement(
                                                                              'span',
                                                                              null,
                                                                              Ib.translate('Add new templates')
                                                                          )
                                                                      ),
                                                                      yi().createElement('input', {
                                                                          type: 'text',
                                                                          className: e()('sc-input', {
                                                                              'sc-input--active': A,
                                                                          }),
                                                                          placeholder: A
                                                                              ? ''
                                                                              : Ib.translate('Add new templates'),
                                                                          ref: _,
                                                                          value: b,
                                                                          onKeyUp: p,
                                                                          onChange: g,
                                                                          onFocus: E,
                                                                          onClick: E,
                                                                          onBlur: x,
                                                                      }),
                                                                      yi().createElement(
                                                                          'button',
                                                                          {
                                                                              type: 'button',
                                                                              onClick: S,
                                                                              className: e()(
                                                                                  'sc-btn',
                                                                                  'sc-btn--primary',
                                                                                  { 'sc-btn--primary--disabled': !A }
                                                                              ),
                                                                          },
                                                                          yi().createElement(Og, null)
                                                                      )
                                                                  )
                                                              )
                                                          )
                                                      )
                                                  ),
                                                  yi().createElement(Mb, {
                                                      allowTickChartTypeOnly: l,
                                                      views: h,
                                                      removeAll: w,
                                                      applyLayout: f,
                                                      remove: m,
                                                      onChartType: i,
                                                      onGranularity: a,
                                                  })
                                              )
                                          )
                                ),
                                l &&
                                    yi().createElement(Nv, {
                                        isMobile: c,
                                        text: Ib.translate('Some of your templates may not work with this trade type.'),
                                    })
                            )
                        );
                    });
                h(4321);
                var Rb = h(9160).t;
                const jb = t => {
                        let { title: e, type: r, children: i } = t;
                        return yi().createElement(
                            'div',
                            { className: 'form__group ' + (r ? `form__group--${r}` : '') },
                            e &&
                                yi().createElement(
                                    'div',
                                    { className: 'form__label' },
                                    yi().createElement('span', null, ' ', e, ' ')
                                ),
                            yi().createElement('div', { className: 'form__control' }, i)
                        );
                    },
                    Fb = t => {
                        let { id: e, label: r, checked: i, disabled: a, onChange: n } = t;
                        return yi().createElement(
                            'span',
                            { onClick: () => n(!i) },
                            yi().createElement(
                                'label',
                                {
                                    htmlFor: e,
                                    className: `sc-checkbox ${i ? 'sc-checkbox--checked' : ''} ${a ? 'sc-checkbox--disabled' : ''}`,
                                },
                                i
                                    ? yi().createElement(om, { className: 'sc-checkbox__box' })
                                    : yi().createElement(sm, { className: 'sc-checkbox__box' }),
                                yi().createElement('span', { className: 'sc-checkbox__label' }, r)
                            )
                        );
                    },
                    Vb = t => {
                        let { min: e = 1, max: r = 10, step: i = 1, value: a, onChange: n } = t;
                        const s = yi().useMemo(() => {
                                const t = Math.round((238 * (a - e)) / (r - e));
                                return t < 0 ? 0 : t;
                            }, [a, e, r]),
                            o = yi().useCallback(
                                t => {
                                    let e = t.currentTarget.value;
                                    e.length > 0 && n(Number(e));
                                },
                                [n]
                            );
                        return yi().createElement(
                            'div',
                            { className: 'sc-slider' },
                            yi().createElement(
                                'div',
                                { className: 'sc-slider-range' },
                                yi().createElement('div', { className: 'sc-slider-bar' }),
                                yi().createElement('div', { className: 'sc-slider-active-bar', style: { width: s } }),
                                yi().createElement('input', {
                                    type: 'range',
                                    min: e,
                                    max: r,
                                    step: i,
                                    onChange: o,
                                    value: a,
                                })
                            ),
                            yi().createElement('div', { className: 'value' }, a)
                        );
                    },
                    Hb = t => {
                        const { subtitle: r, rows: i, children: a, value: n, onRowClick: s, className: o } = t,
                            [l, c] = yi().useState(!1),
                            [h, u] = yi().useState(0),
                            [d, g] = yi().useState(0),
                            [m, p] = yi().useState(),
                            f = yi().useRef(null),
                            _ = yi().useRef(null),
                            v = yi().useCallback(() => {
                                const t = f.current?.getBoundingClientRect();
                                u(l ? void 0 : t?.top), g(l ? void 0 : t?.left), p(t?.width), c(t => !t);
                            }, [l, f]),
                            b = yi().useCallback(
                                t => {
                                    t.target !== _.current && (c(!1), u(0), g(0));
                                },
                                [_]
                            );
                        return (
                            yi().useEffect(
                                () => (
                                    document.addEventListener('click', b, !1),
                                    () => {
                                        document.removeEventListener('click', b);
                                    }
                                ),
                                [b]
                            ),
                            yi().createElement(
                                'div',
                                {
                                    className: e()(o, 'sc-dropdown', { active: l }),
                                    ref: f,
                                    style: { left: d, top: h, width: m },
                                },
                                !!r &&
                                    yi().createElement(
                                        'div',
                                        { className: 'subtitle' },
                                        yi().createElement('span', null, r)
                                    ),
                                yi().createElement(
                                    'div',
                                    { className: e()('value', { active: l }), onClick: v, ref: _ },
                                    yi().createElement('span', { className: 'text' }, n),
                                    yi().createElement(Wg, null)
                                ),
                                yi().createElement(
                                    dv,
                                    {
                                        autoHide: !0,
                                        height: l ? '200px' : '1px',
                                        className: e()('dropdown', { active: l }),
                                    },
                                    i.map((t, r) =>
                                        yi().createElement(
                                            'div',
                                            {
                                                key: r,
                                                className: e()('row', { 'row--selected': t === n }),
                                                onClick: () => s && s(t),
                                            },
                                            a(t)
                                        )
                                    )
                                )
                            )
                        );
                    },
                    qb = t => {
                        let { pattern: e, subtitle: r, lineWidth: i, onChange: a } = t;
                        return yi().createElement(
                            Hb,
                            {
                                rows: [
                                    { width: 1, pattern: 'solid' },
                                    { width: 3, pattern: 'solid' },
                                    { width: 5, pattern: 'solid' },
                                    { width: 1, pattern: 'dotted' },
                                    { width: 3, pattern: 'dotted' },
                                    { width: 5, pattern: 'dotted' },
                                    { width: 1, pattern: 'dashed' },
                                    { width: 3, pattern: 'dashed' },
                                    { width: 5, pattern: 'dashed' },
                                    { width: 0, pattern: 'none' },
                                ],
                                value:
                                    'none' !== e
                                        ? yi().createElement('span', { className: `option ${e}-${i}` })
                                        : yi().createElement('span', { className: 'none' }, 'None'),
                                onRowClick: a,
                                subtitle: r,
                            },
                            t =>
                                'none' !== t.pattern
                                    ? yi().createElement('span', { className: `option ${t.pattern}-${t.width}` })
                                    : yi().createElement('span', { className: 'none' }, 'None')
                        );
                    },
                    Ub = t => {
                        let { subtitle: r, color: i, theme: a, setColor: n } = t;
                        const [s, o] = yi().useState(!1),
                            [l, c] = yi().useState(0),
                            [h, u] = yi().useState(0),
                            [d, g] = yi().useState(),
                            m = yi().useRef(null),
                            p = yi().useRef(null),
                            f = yi().useMemo(() => ('auto' !== i ? i : 'light' === a ? '#000000' : '#ffffff'), [i, a]),
                            _ = yi().useCallback(() => {
                                const t = m.current?.getBoundingClientRect();
                                c(s ? void 0 : t?.top), u(s ? void 0 : t?.left), g(t?.width), o(t => !t);
                            }, [s, m]),
                            v = yi().useCallback(
                                t => {
                                    t.target !== p.current && (o(!1), c(0), u(0));
                                },
                                [p]
                            );
                        return (
                            yi().useEffect(
                                () => (
                                    document.addEventListener('click', v, !1),
                                    () => {
                                        document.removeEventListener('click', v);
                                    }
                                ),
                                [v]
                            ),
                            yi().createElement(
                                'div',
                                {
                                    ref: m,
                                    className: e()('sc-color-picker', { active: s }),
                                    style: { top: l, left: h, width: d },
                                },
                                !!r &&
                                    yi().createElement(
                                        'div',
                                        { className: 'subtitle' },
                                        yi().createElement('span', null, r)
                                    ),
                                yi().createElement(
                                    'div',
                                    { className: 'value', onClick: _, ref: p },
                                    yi().createElement('div', {
                                        className: 'sc-input-color',
                                        style: { backgroundColor: f },
                                    }),
                                    yi().createElement(Wg, null)
                                ),
                                yi().createElement(
                                    'div',
                                    { className: e()('dropdown', { open: s }) },
                                    [
                                        [
                                            '#ffffff',
                                            '#e1e1e1',
                                            '#cccccc',
                                            '#b7b7b7',
                                            '#a0a0a5',
                                            '#898989',
                                            '#707070',
                                            '#626262',
                                            '#555555',
                                            '#464646',
                                            '#363636',
                                            '#262626',
                                            '#1d1d1d',
                                            '#000000',
                                        ],
                                        [
                                            '#f4977c',
                                            '#f7ac84',
                                            '#fbc58d',
                                            '#fff69e',
                                            '#c4de9e',
                                            '#85c99e',
                                            '#7fcdc7',
                                            '#75d0f4',
                                            '#81a8d7',
                                            '#8594c8',
                                            '#8983bc',
                                            '#a187bd',
                                            '#bb8dbe',
                                            '#f29bc1',
                                        ],
                                        [
                                            '#ef6c53',
                                            '#f38d5b',
                                            '#f8ae63',
                                            '#fff371',
                                            '#acd277',
                                            '#43b77a',
                                            '#2ebbb3',
                                            '#00bff0',
                                            '#4a8dc8',
                                            '#5875b7',
                                            '#625da6',
                                            '#8561a7',
                                            '#a665a7',
                                            '#ee6fa9',
                                        ],
                                        [
                                            '#ea1d2c',
                                            '#ee652e',
                                            '#f4932f',
                                            '#fff126',
                                            '#8ec648',
                                            '#00a553',
                                            '#00a99c',
                                            '#00afed',
                                            '#0073ba',
                                            '#0056a4',
                                            '#323390',
                                            '#66308f',
                                            '#912a8e',
                                            '#e9088c',
                                        ],
                                        [
                                            '#9b0b16',
                                            '#9e4117',
                                            '#a16118',
                                            '#c6b920',
                                            '#5a852d',
                                            '#007238',
                                            '#00746a',
                                            '#0077a1',
                                            '#004c7f',
                                            '#003570',
                                            '#1d1762',
                                            '#441261',
                                            '#62095f',
                                            '#9c005d',
                                        ],
                                        [
                                            '#770001',
                                            '#792e03',
                                            '#7b4906',
                                            '#817a0b',
                                            '#41661e',
                                            '#005827',
                                            '#005951',
                                            '#003b5c',
                                            '#001d40',
                                            '#000e35',
                                            '#04002c',
                                            '#19002b',
                                            '#2c002a',
                                            '#580028',
                                        ],
                                    ].map((t, e) =>
                                        yi().createElement(
                                            'div',
                                            { key: e, className: 'row' },
                                            t.map(t =>
                                                yi().createElement('div', {
                                                    key: t,
                                                    className: 'tile-color',
                                                    style: { backgroundColor: t },
                                                    onClick: () => n(t),
                                                })
                                            )
                                        )
                                    )
                                )
                            )
                        );
                    },
                    $b = t => {
                        let { value: e, onChange: r } = t;
                        return yi().createElement(
                            'div',
                            { className: 'sc-switch ' + (e ? 'on' : 'off'), onClick: () => r(!e) },
                            yi().createElement('div', { className: 'handle' })
                        );
                    },
                    zb = t => {
                        let { id: e, label: r, value: i, onChange: a, noramIcon: n, activeIcon: s } = t;
                        const o = i ? s : n;
                        return yi().createElement(
                            'div',
                            { className: 'sc-switch-icon' },
                            yi().createElement(o, { className: 'sc-switch-icon__icon' }),
                            yi().createElement(
                                'div',
                                { className: 'sc-switch-icon__description' },
                                yi().createElement(Fb, { id: e, label: r, checked: i, onChange: a })
                            )
                        );
                    },
                    Gb = t => {
                        let { subtitle: e, onChange: r, min: i, max: a, step: n, value: s } = t;
                        const [o, l] = yi().useState(''),
                            c = zp()(
                                () => {
                                    const t = t => {
                                        l(t), r(t);
                                    };
                                    void 0 !== a && +o > a ? t(a) : void 0 !== i && +o < i ? t(i) : r(o);
                                },
                                300,
                                { leading: !0, trailing: !1 }
                            );
                        return (
                            yi().useEffect(() => {
                                l(s);
                            }, [s]),
                            yi().createElement(
                                'div',
                                { className: 'sc-numeric-input' },
                                yi().createElement('input', {
                                    type: 'number',
                                    value: o,
                                    onBlur: c,
                                    onChange: t => {
                                        t.persist(), l(t.target.valueAsNumber || '');
                                    },
                                    onKeyPress: t => {
                                        ['e', '+', 'E'].includes(t.key) && t.preventDefault(), 'Enter' === t.key && c();
                                    },
                                    min: i,
                                    max: a,
                                    step: n,
                                }),
                                !!e &&
                                    yi().createElement(
                                        'div',
                                        { className: 'subtitle' },
                                        yi().createElement('span', null, e)
                                    ),
                                yi().createElement(
                                    'div',
                                    { className: 'sc-numeric-input-buttons' },
                                    yi().createElement(Pg, {
                                        onClick: () => {
                                            l(t => +t + 1), c();
                                        },
                                    }),
                                    yi().createElement(Dg, {
                                        onClick: () => {
                                            l(t => +t - 1), c();
                                        },
                                    })
                                )
                            )
                        );
                    },
                    Wb = t => {
                        let { props: e, theme: r, onChange: i } = t;
                        const { value: a, color: n } = e;
                        return yi().createElement(
                            'span',
                            { className: 'sc-numbercolorpicker' },
                            yi().createElement(Gb, {
                                value: a,
                                subtitle: Rb.translate('Size'),
                                onChange: t => i({ color: n, value: t }),
                            }),
                            yi().createElement(Ub, {
                                color: n,
                                theme: r,
                                subtitle: Rb.translate('Color'),
                                setColor: t => i({ color: t, value: a }),
                            })
                        );
                    },
                    Kb = t => {
                        let { className: e, children: r, active: i, onChange: a } = t;
                        return yi().createElement(
                            'div',
                            { onClick: () => a(!i), className: `${e || ''} ${i ? 'active' : ''} sc-toggle` },
                            r
                        );
                    },
                    Xb = t => {
                        let { onChange: e, value: r } = t;
                        const i = t => e({ ...r, ...t }),
                            { style: a, weight: n } = r;
                        return yi().createElement(
                            'span',
                            { className: 'sc-fontsetting' },
                            yi().createElement(
                                Kb,
                                { onChange: t => i({ weight: t ? 'bold' : void 0 }), active: !!n },
                                yi().createElement(
                                    'div',
                                    { className: 'sc-text-icon' },
                                    yi().createElement('b', null, 'B')
                                )
                            ),
                            yi().createElement(
                                Kb,
                                { active: !!a, onChange: t => i({ style: t ? 'italic' : void 0 }) },
                                yi().createElement(
                                    'div',
                                    { className: 'sc-text-icon' },
                                    yi().createElement('i', null, 'i')
                                )
                            ),
                            yi().createElement(
                                Hb,
                                {
                                    className: 'sc-changefontsize',
                                    rows: [8, 10, 12, 13, 14, 16, 20, 28, 36, 48, 64],
                                    onRowClick: t => i({ size: `${t}px` }),
                                },
                                t => yi().createElement('span', { className: 'option' }, t)
                            ),
                            yi().createElement(
                                Hb,
                                {
                                    className: 'sc-changefontfamily',
                                    rows: [
                                        'Default',
                                        'Helvetica',
                                        'Courier',
                                        'Garamond',
                                        'Palatino',
                                        'Times New Roman',
                                    ],
                                    onRowClick: t => i({ family: t }),
                                },
                                t => yi().createElement('span', { className: 'option' }, t)
                            )
                        );
                    };
                var Yb = h(9160).t;
                const Zb = Bi(t => {
                    let { onChange: e, isVisible: r = !0 } = t;
                    const { crosshair: i, chart: a } = Z_(),
                        { setCrosshairState: n, updateProps: s } = i,
                        { isMobile: o } = a,
                        l = 'number' != typeof i.state ? 0 : i.state,
                        c = [Mg, Bg, Rg][l],
                        h = [
                            Yb.translate("Don't show price info on chart"),
                            Yb.translate('Show price info on x & y axes'),
                            Yb.translate('Show price info on chart'),
                        ];
                    return (
                        s(e),
                        r
                            ? yi().createElement(
                                  uv,
                                  { content: h[l], enabled: !o, position: 'right' },
                                  yi().createElement(
                                      Kb,
                                      {
                                          active: 0 !== l,
                                          onChange: () => {
                                              n((l + 1) % 3);
                                          },
                                      },
                                      yi().createElement(c, null)
                                  )
                              )
                            : null
                    );
                });
                h(6765);
                var Qb = h(9160).t;
                const Jb = Bi(() => {
                    const { chartSize: t } = Z_(),
                        { zoomIn: e, zoomOut: r } = t;
                    return yi().createElement(
                        'div',
                        { className: 'ciq-menu sc-chart-size' },
                        yi().createElement(
                            'div',
                            { className: 'cq-menu-btn' },
                            yi().createElement(Vg, {
                                className: 'ic-icon-with-sub cq-zoom-out',
                                'tooltip-title': Qb.translate('Zoom out'),
                                onClick: r,
                            })
                        ),
                        yi().createElement(
                            'div',
                            { className: 'cq-menu-btn' },
                            yi().createElement(Ng, {
                                className: 'ic-icon-with-sub cq-zoom-in',
                                'tooltip-title': Qb.translate('Zoom in'),
                                onClick: e,
                            })
                        )
                    );
                });
                h(4001);
                var ty = h(9160).t;
                const ey = t => {
                        let { enabled: e, children: r } = t;
                        return e
                            ? yi().createElement(
                                  'div',
                                  { className: 'sc-dtools--empty' },
                                  yi().createElement($m, null),
                                  yi().createElement('p', null, ty.translate('You have no active drawings yet.'))
                              )
                            : yi().createElement(yi().Fragment, null, r);
                    },
                    ry = t => {
                        let { Icon: e, text: r, num: i, bars: a } = t;
                        return yi().createElement(
                            'div',
                            { className: 'info' },
                            e ? yi().createElement(e, { className: 'icon' }) : '',
                            yi().createElement(
                                'div',
                                { className: 'text' },
                                yi().createElement('span', null, ty.translate(r, { num: i || ' ' })),
                                a ? yi().createElement('small', null, '(', a, ' bars)') : ''
                            )
                        );
                    },
                    iy = t => {
                        let { items: r, onClick: i } = t;
                        return yi().createElement(
                            'div',
                            { className: 'sc-dtools__list' },
                            r.map(t =>
                                yi().createElement(
                                    'div',
                                    {
                                        key: t.id,
                                        className: e()('sc-dtools__list__item', `sc-dtools__${t.id}`),
                                        onClick: () => i(t.id),
                                    },
                                    yi().createElement(ry, { Icon: t.icon, text: t.text })
                                )
                            )
                        );
                    },
                    ay = t => {
                        let { item: e, onSetting: r, onDelete: i } = t;
                        return yi().createElement(
                            'div',
                            { className: 'sc-dtools__list__item' },
                            yi().createElement(ry, { Icon: e.icon, text: e.text, bars: e.bars, num: e.num }),
                            yi().createElement(
                                'div',
                                { className: 'actions' },
                                yi().createElement(Gg, { onClick: () => r(e.index) }),
                                yi().createElement(jg, { onClick: () => i(e.index) })
                            )
                        );
                    },
                    ny = t => {
                        let { group: e, onSetting: r, onDelete: i } = t;
                        return yi().createElement(
                            'div',
                            { className: 'sc-dtools__category' },
                            yi().createElement(
                                'div',
                                { className: 'sc-dtools__category__head' },
                                ty.translate(Gf(e.id))
                            ),
                            yi().createElement(
                                'div',
                                { className: 'sc-dtools__category__body' },
                                yi().createElement(
                                    'div',
                                    { className: 'sc-dtools__list' },
                                    e.items.map(t =>
                                        yi().createElement(ay, {
                                            key: t.index,
                                            item: { ...t },
                                            onSetting: r,
                                            onDelete: i,
                                        })
                                    )
                                )
                            )
                        );
                    },
                    sy = t => {
                        let { activeDrawToolsGroup: e, onSetting: r, onDelete: i } = t;
                        const a = e.sort((t, e) =>
                            t.items.length <= 1 && e.items.length <= 1
                                ? 0
                                : t.items.length <= 1
                                  ? -1
                                  : e.items.length <= 1
                                    ? 1
                                    : 0
                        );
                        return yi().createElement(
                            dv,
                            { autoHide: !0, height: 320 },
                            a.map(t =>
                                t.items.length > 1
                                    ? yi().createElement(ny, { group: t, key: t.id, onSetting: r, onDelete: i })
                                    : t.items.map(t =>
                                          yi().createElement(ay, { key: t.index, item: t, onSetting: r, onDelete: i })
                                      )
                            )
                        );
                    },
                    oy = Bi(t => {
                        let { portalNodeId: r } = t;
                        const { drawTools: i } = Z_(),
                            {
                                clearAll: a,
                                selectTool: n,
                                getDrawToolsItems: s,
                                activeToolsNo: o,
                                activeToolsGroup: l,
                                onDeleted: c,
                                onSetting: h,
                                updatePortalNode: u,
                                menuStore: d,
                            } = i,
                            g = s(),
                            m = d.open;
                        return (
                            u(r),
                            yi().createElement(
                                bv,
                                {
                                    store: d,
                                    className: 'sc-dtools',
                                    title: ty.translate('Drawing tools'),
                                    tooltip: ty.translate('Drawing tools'),
                                    modalMode: !0,
                                    enableTabular: !0,
                                    portalNodeId: r,
                                },
                                yi().createElement(
                                    bv.Title,
                                    null,
                                    yi().createElement(
                                        'div',
                                        { className: e()('sc-dtools__menu', { 'sc-dtools__menu--active': m }) },
                                        yi().createElement(Tg, null),
                                        yi().createElement(yb, { notificationCount: o })
                                    )
                                ),
                                yi().createElement(
                                    bv.Body,
                                    null,
                                    yi().createElement(
                                        ib,
                                        { className: 'tabs--vertical' },
                                        yi().createElement(
                                            ob,
                                            null,
                                            yi().createElement(
                                                gb,
                                                null,
                                                yi().createElement(kg, null),
                                                ty.translate('Active'),
                                                yi().createElement(yb, { notificationCount: o })
                                            ),
                                            yi().createElement(
                                                gb,
                                                null,
                                                yi().createElement(Tg, null),
                                                ty.translate('All drawings')
                                            )
                                        ),
                                        yi().createElement(
                                            bb,
                                            null,
                                            yi().createElement(
                                                'div',
                                                { className: 'sc-dtools__panel' },
                                                yi().createElement(
                                                    ey,
                                                    { enabled: !o },
                                                    yi().createElement(
                                                        'div',
                                                        { className: 'sc-dtools__panel__head' },
                                                        yi().createElement(
                                                            'button',
                                                            {
                                                                type: 'button',
                                                                className:
                                                                    'sc-btn sc-btn--sm sc-btn--outline-secondary',
                                                                onClick: a,
                                                            },
                                                            yi().createElement('span', null, ty.translate('Clear all'))
                                                        )
                                                    ),
                                                    yi().createElement(
                                                        'div',
                                                        {
                                                            className:
                                                                'sc-dtools__panel__content sc-dtools__panel__content--active',
                                                        },
                                                        yi().createElement(sy, {
                                                            activeDrawToolsGroup: l,
                                                            onSetting: h,
                                                            onDelete: c,
                                                        })
                                                    )
                                                )
                                            )
                                        ),
                                        yi().createElement(
                                            bb,
                                            null,
                                            yi().createElement(
                                                'div',
                                                { className: 'sc-dtools__panel' },
                                                yi().createElement(
                                                    'div',
                                                    { className: 'sc-dtools__panel__content' },
                                                    yi().createElement(iy, { items: g, onClick: n })
                                                )
                                            )
                                        )
                                    )
                                )
                            )
                        );
                    });
                h(7808);
                var ly = h(9160).t;
                const cy = t => {
                        let { title: e, id: r, label: i, value: a, onChange: n, noramIcon: s, activeIcon: o } = t;
                        return yi().createElement(
                            jb,
                            { title: e, type: r },
                            yi().createElement(zb, {
                                id: r,
                                label: i,
                                value: a,
                                onChange: n,
                                noramIcon: s,
                                activeIcon: o,
                            })
                        );
                    },
                    hy = Bi(() => {
                        const { chartSetting: t } = Z_(),
                            {
                                menuStore: r,
                                countdown: i,
                                historical: a,
                                isHighestLowestMarkerEnabled: n,
                                languages: s,
                                language: o,
                                setHistorical: l,
                                setLanguage: c,
                                setTheme: h,
                                showCountdown: u,
                                theme: d,
                                toggleHighestLowestMarker: g,
                            } = t,
                            m = r.dialogStore.open;
                        return yi().createElement(
                            bv,
                            {
                                store: r,
                                className: 'sc-chart-setting',
                                title: ly.translate('Platform settings'),
                                enableTabular: !0,
                                modalMode: !0,
                            },
                            yi().createElement(
                                bv.Title,
                                null,
                                yi().createElement(Gg, {
                                    className: e()('ic-icon-with-sub', { active: m }),
                                    'tooltip-title': ly.translate('Settings'),
                                })
                            ),
                            yi().createElement(
                                bv.Body,
                                null,
                                yi().createElement(
                                    ib,
                                    { className: 'tabs--vertical' },
                                    yi().createElement(
                                        ob,
                                        null,
                                        yi().createElement(
                                            gb,
                                            { key: 'theme' },
                                            yi().createElement(am, null),
                                            ly.translate('Themes')
                                        ),
                                        yi().createElement(
                                            gb,
                                            { key: 'language' },
                                            yi().createElement(im, null),
                                            ly.translate('Language')
                                        ),
                                        yi().createElement(
                                            gb,
                                            { key: 'platform' },
                                            yi().createElement(nm, null),
                                            ly.translate('Charts')
                                        )
                                    ),
                                    yi().createElement(
                                        bb,
                                        null,
                                        yi().createElement(
                                            'div',
                                            { className: 'sc-chart-setting__panel' },
                                            yi().createElement(
                                                jb,
                                                { title: ly.translate('Select theme'), type: 'theme' },
                                                yi().createElement(
                                                    'div',
                                                    {
                                                        className: e()('form__group__item', {
                                                            'form__group__item--active': 'dark' === d,
                                                        }),
                                                        onClick: () => h('dark'),
                                                    },
                                                    yi().createElement(xg, null),
                                                    yi().createElement(
                                                        'div',
                                                        { className: 'text' },
                                                        ly.translate('Dark')
                                                    )
                                                ),
                                                yi().createElement(
                                                    'div',
                                                    {
                                                        className: e()('form__group__item', {
                                                            'form__group__item--active': 'light' === d,
                                                        }),
                                                        onClick: () => h('light'),
                                                    },
                                                    yi().createElement(Eg, null),
                                                    yi().createElement(
                                                        'div',
                                                        { className: 'text' },
                                                        ly.translate('Light')
                                                    )
                                                )
                                            )
                                        )
                                    ),
                                    yi().createElement(
                                        bb,
                                        null,
                                        yi().createElement(
                                            'div',
                                            { className: 'sc-chart-setting__panel' },
                                            yi().createElement(
                                                jb,
                                                { title: ly.translate('Select language'), type: 'language' },
                                                s.map(t =>
                                                    yi().createElement(
                                                        'div',
                                                        {
                                                            key: t.key,
                                                            onClick: () => c(t.key),
                                                            className: e()('form__group__item', {
                                                                'form__group__item--active': o?.key === t.key,
                                                            }),
                                                        },
                                                        t.icon,
                                                        yi().createElement('span', { className: 'text' }, t.name)
                                                    )
                                                )
                                            )
                                        )
                                    ),
                                    yi().createElement(
                                        bb,
                                        null,
                                        yi().createElement(
                                            'div',
                                            { className: 'sc-chart-setting__panel' },
                                            yi().createElement(cy, {
                                                title: ly.translate('Interval duration'),
                                                id: 'countdown',
                                                label: ly.translate('Display remaining time for each interval'),
                                                value: i,
                                                onChange: u,
                                                noramIcon: np[d].normal,
                                                activeIcon: np[d].active,
                                            }),
                                            yi().createElement(cy, {
                                                title: ly.translate('Historical data mode'),
                                                id: 'historical',
                                                label: ly.translate('Display data for a specific date and time'),
                                                value: a,
                                                onChange: l,
                                                noramIcon: sp[d].normal,
                                                activeIcon: sp[d].active,
                                            }),
                                            yi().createElement(
                                                jb,
                                                { title: ly.translate('Highest and lowest spot') },
                                                yi().createElement(zb, {
                                                    id: 'highestlowest',
                                                    label: ly.translate('Display the highest and lowest spot price'),
                                                    value: n,
                                                    onChange: g,
                                                    noramIcon: op[d].normal,
                                                    activeIcon: op[d].active,
                                                })
                                            )
                                        )
                                    )
                                )
                            )
                        );
                    });
                h(79);
                var uy = h(9160).t;
                const dy = Bi(t => {
                    let { portalNodeId: r } = t;
                    const { share: i } = Z_(),
                        { menuStore: a, downloadCSV: n, downloadPNG: s, isLoadingPNG: o } = i,
                        { open: l } = a.dialogStore;
                    return yi().createElement(
                        bv,
                        {
                            store: a,
                            className: 'sc-download-menu',
                            title: uy.translate('Download'),
                            tooltip: uy.translate('Download'),
                            modalMode: !0,
                            isFullscreen: !0,
                            portalNodeId: r,
                        },
                        yi().createElement(
                            bv.Title,
                            null,
                            yi().createElement(
                                'div',
                                { className: e()('sc-download__menu', { 'sc-download__menu--active': l }) },
                                yi().createElement(Yg, null)
                            )
                        ),
                        yi().createElement(
                            bv.Body,
                            null,
                            yi().createElement(
                                'div',
                                { className: 'sc-download' },
                                yi().createElement(
                                    Ev,
                                    { className: 'sc-download__item', onClick: s, enabled: o },
                                    yi().createElement(Hg, null),
                                    yi().createElement(
                                        'span',
                                        { className: 'sc-download__item__label' },
                                        ' ',
                                        uy.translate('PNG'),
                                        ' '
                                    )
                                ),
                                yi().createElement(
                                    'div',
                                    { className: 'sc-download__item', onClick: n },
                                    yi().createElement(qg, null),
                                    yi().createElement(
                                        'span',
                                        { className: 'sc-download__item__label' },
                                        ' ',
                                        uy.translate('CSV')
                                    )
                                )
                            )
                        )
                    );
                });
                h(6853), h(7092), h(8272);
                var gy = h(9160).t;
                const my = t => {
                        let { x: e, bar: r } = t;
                        return yi().createElement(
                            'div',
                            { className: `cq-bar ${r.cName}`, style: { height: 5 * r.height + '%', left: 35 * e } },
                            yi().createElement(
                                'div',
                                { className: `cq-bar-value ${r.height && 'show'}` },
                                `${r.height.toFixed(1)}%`
                            ),
                            yi().createElement('span', { className: 'cq-bar-title' }, e)
                        );
                    },
                    py = Bi(() => {
                        const { lastDigitStats: t } = Z_(),
                            { isVisible: r, bars: i, marketDisplayName: a, shouldMinimiseLastDigits: n } = t;
                        return yi().createElement(
                            'div',
                            { className: e()('cq-last-digits', { show: r, minimised: n }) },
                            yi().createElement(
                                'div',
                                { className: 'cq-bars' },
                                i.map((t, e) => yi().createElement(my, { key: `bar-${e}`, x: e, bar: t }))
                            ),
                            yi().createElement(
                                'div',
                                { className: 'cq-bar-footer' },
                                gy.translate('Last digits stats for latest 1000 ticks on ') + a
                            )
                        );
                    }),
                    fy = Bi(t => {
                        let { bottomWidgets: e } = t;
                        const { state: r, lastDigitStats: i } = Z_(),
                            { showLastDigitStats: a } = r,
                            { digits: n, lastTick: s } = i,
                            o = !e && a ? py : e;
                        return o ? yi().createElement(o, { digits: n, tick: or(s) }) : null;
                    });
                h(8449);
                const _y = t => {
                    let { children: e } = t;
                    const { bottomWidgetsContainer: r } = Z_(),
                        { bottom: i, isReadyToShow: a } = r;
                    if (!a) return null;
                    const n = { bottom: i };
                    return yi().createElement('div', { className: 'cq-bottom-ui-widgets', style: n }, e);
                };
                _y.defaultProps = { bottom: 0, isReadyToShow: !1, top: 0 };
                const vy = Bi(_y);
                h(1882);
                const by = t => {
                        let { isMobile: e } = t;
                        return yi().createElement(
                            yi().Fragment,
                            null,
                            e ? '' : yi().createElement(Zb, null),
                            yi().createElement(wv, null),
                            yi().createElement(Av, null),
                            yi().createElement(Nb, null),
                            yi().createElement(oy, null),
                            yi().createElement(dy, null),
                            e ? '' : yi().createElement(Jb, null)
                        );
                    },
                    yy = Bi(t => {
                        let { widgets: r } = t;
                        const {
                                chart: i,
                                chartType: a,
                                studies: n,
                                drawTools: s,
                                view: o,
                                share: l,
                                chartSetting: c,
                            } = Z_(),
                            { context: h, isMobile: u } = i,
                            d =
                                a.menuStore.open ||
                                n.menuStore.open ||
                                s.menuStore.open ||
                                o.menuStore.open ||
                                l.menuStore.open ||
                                c.menuStore.open,
                            g = r || by;
                        return yi().createElement(
                            'div',
                            { className: e()('cq-chart-controls', { active: d }) },
                            h ? yi().createElement(g, { isMobile: u }) : null
                        );
                    });
                h(3955);
                var Sy = h(9160).t;
                const wy = yi().memo(t => {
                        let { networkStatus: e } = t;
                        return yi().createElement(
                            uv,
                            {
                                className: 'sc-chart-footer__item sc-chart-footer__item--status',
                                content: `${Sy.translate('Network status')}: ${e ? Sy.translate(e.tooltip) : ''}`,
                                enabled: !0,
                            },
                            yi().createElement('div', {
                                className: `sc-chart__status sc-chart__status--${e ? e.class : 'offline'}`,
                            })
                        );
                    }),
                    Cy = Bi(() => {
                        const { chart: t } = Z_(),
                            { context: e, serverTime: r, networkStatus: i, openFullscreen: a } = t;
                        return e
                            ? yi().createElement(
                                  'div',
                                  { className: 'sc-chart-footer' },
                                  yi().createElement(wy, { networkStatus: i }),
                                  yi().createElement(
                                      'div',
                                      { className: 'sc-chart-footer__item sc-chart-footer__item--time' },
                                      yi().createElement('span', null, r)
                                  ),
                                  yi().createElement(
                                      'div',
                                      { className: 'ciq-menu ciq-enabled' },
                                      yi().createElement(
                                          'a',
                                          {
                                              href: 'https://deriv.com/help-centre/',
                                              target: '_blank',
                                              rel: 'noopener noreferrer',
                                          },
                                          yi().createElement(
                                              'div',
                                              { className: 'cq-menu-btn' },
                                              yi().createElement(Xg, null)
                                          )
                                      )
                                  ),
                                  yi().createElement(hy, null),
                                  yi().createElement(
                                      'div',
                                      { className: 'ciq-menu ciq-enabled', onClick: () => a() },
                                      yi().createElement(
                                          'div',
                                          { className: 'cq-menu-btn' },
                                          yi().createElement(Ag, null)
                                      )
                                  )
                              )
                            : null;
                    });
                h(898), h(8798);
                var Ey = h(9160).t;
                function xy(t) {
                    let e = 0;
                    if ('categoryName' in t && t.hasSubgroup)
                        t.subgroups.forEach(t => {
                            for (const r of t.data) e += r.data.length;
                        });
                    else if ('categoryName' in t && t.hasSubcategory) for (const r of t.data) e += r.data.length;
                    else e += t.data.length;
                    return e;
                }
                const Ty = yi().memo(t => {
                        let { category: e } = t;
                        return yi().createElement(
                            'div',
                            { className: 'sc-mcd__category__content' },
                            yi().createElement('div', { className: 'empty-category' }, Ey.translate(e.emptyDescription))
                        );
                    }),
                    ky = yi().memo(t => {
                        let { isNestedList: r, category: i } = t;
                        const a = ap[i.categoryId];
                        return yi().createElement(
                            'span',
                            { className: e()('category-title-left', { 'category-title-left__subgroup': !a }) },
                            r && a
                                ? yi().createElement(a, { className: `ic-${i.categoryId}` })
                                : yi().createElement('div', { className: 'category-title-left__placeholder' }),
                            Ey.translate(i.categoryName)
                        );
                    }),
                    Ay = t => {
                        let { category: r, activeHeadKey: i, isNestedList: a, handleTitleClick: n } = t;
                        return yi().createElement(
                            'div',
                            {
                                className: e()('sc-mcd__category__head', {
                                    'has-subtitle': r.categorySubtitle,
                                    active: r.active,
                                }),
                                onClick: () => n(r.categoryId),
                            },
                            yi().createElement(ky, { isNestedList: a, category: r }),
                            ((r.categoryNamePostfixShowIfActive && i === r.categoryId) ||
                                !r.categoryNamePostfixShowIfActive) &&
                                r.categoryNamePostfix &&
                                yi().createElement(
                                    'span',
                                    { className: 'category-name-postfix' },
                                    r.categoryNamePostfix
                                ),
                            r.categorySubtitle &&
                                yi().createElement(
                                    'div',
                                    { className: 'category-subtitle' },
                                    Ey.translate(r.categorySubtitle)
                                ),
                            !r.hasSubgroup && a ? yi().createElement(Wg, { className: 'arrow' }) : ''
                        );
                    },
                    Oy = t => {
                        let {
                            category: r,
                            categoryItemCount: i,
                            ItemType: a,
                            setCategoryElement: n,
                            onSelectItem: s,
                            activeHeadKey: o,
                            disableAll: l,
                            isNestedList: c,
                            handleTitleClick: h,
                            hasSubgroup: u,
                            favoritesId: d,
                        } = t;
                        const g = t => {
                            s?.(t, r.categoryId);
                        };
                        return yi().createElement(
                            'div',
                            {
                                className: e()('sc-mcd__category', `sc-mcd__category--${r.categoryId}`, {
                                    'sc-mcd__category--has-subtitle': r.categorySubtitle,
                                    'sc-mcd__category--active': r.active,
                                }),
                                ref: t => n(t, r.categoryId),
                            },
                            (c || !r.hasSubcategory) &&
                                yi().createElement(Ay, {
                                    category: r,
                                    activeHeadKey: o,
                                    isNestedList: !!c,
                                    handleTitleClick: h,
                                    hasSubgroup: u,
                                }),
                            !r.hasSubgroup && r.hasSubcategory
                                ? r.data
                                      .filter(t => xy(t) > 0)
                                      .map(t => {
                                          return yi().createElement(
                                              'div',
                                              {
                                                  className: e()(
                                                      'sc-mcd__category__content',
                                                      `sc-mcd__category__content--${
                                                          ((r = t.subcategoryName),
                                                          r
                                                              .toLowerCase()
                                                              .replace(/[^\w ]+/g, '')
                                                              .replace(/ +/g, '-'))
                                                      }`,
                                                      'sc-mcd__category--has-subgroup',
                                                      'sc-mcd__category__content--has-subcategory'
                                                  ),
                                                  key: t.subcategoryName,
                                              },
                                              yi().createElement(
                                                  'div',
                                                  { className: 'subcategory' },
                                                  Ey.translate(t.subcategoryName)
                                              ),
                                              t.data.map(t =>
                                                  yi().createElement(a, {
                                                      key: t.display,
                                                      item: t,
                                                      onSelectItem: g,
                                                      disableAll: l,
                                                      favoritesId: d,
                                                  })
                                              )
                                          );
                                          var r;
                                      })
                                : !r.hasSubgroup &&
                                      r.data.length > 0 &&
                                      yi().createElement(
                                          'div',
                                          { className: 'sc-mcd__category__content' },
                                          r.data.map(t =>
                                              yi().createElement(a, {
                                                  key: t.itemId,
                                                  item: t,
                                                  onSelectItem: g,
                                                  disableAll: l,
                                                  favoritesId: d,
                                              })
                                          )
                                      ),
                            0 === i && r.emptyDescription && yi().createElement(Ty, { category: r })
                        );
                    },
                    Ny = t => {
                        let {
                            filteredItems: e,
                            onSelectItem: r,
                            ItemType: i,
                            setCategoryElement: a,
                            activeHeadKey: n,
                            disableAll: s,
                            isNestedList: o,
                            handleTitleClick: l,
                            favoritesId: c,
                        } = t;
                        return yi().createElement(
                            yi().Fragment,
                            null,
                            e.map(t => {
                                const e = xy(t);
                                return t.hasSubgroup
                                    ? (e > 0 || t.emptyDescription) &&
                                          yi().createElement(
                                              yi().Fragment,
                                              { key: t.categoryId },
                                              yi().createElement(Oy, {
                                                  key: t.categoryId,
                                                  ItemType: i,
                                                  category: t,
                                                  categoryItemCount: e,
                                                  setCategoryElement: a,
                                                  onSelectItem: r,
                                                  activeHeadKey: n,
                                                  disableAll: s,
                                                  isNestedList: o,
                                                  handleTitleClick: l,
                                                  favoritesId: c,
                                              }),
                                              t.subgroups?.map(t => {
                                                  if (xy(t) > 0)
                                                      return yi().createElement(Oy, {
                                                          key: t.categoryId,
                                                          ItemType: i,
                                                          category: t,
                                                          categoryItemCount: e,
                                                          setCategoryElement: a,
                                                          onSelectItem: r,
                                                          activeHeadKey: n,
                                                          disableAll: s,
                                                          isNestedList: o,
                                                          handleTitleClick: l,
                                                          hasSubgroup: !0,
                                                          favoritesId: c,
                                                      });
                                              })
                                          )
                                    : (e > 0 || t.emptyDescription) &&
                                          yi().createElement(Oy, {
                                              key: t.categoryId,
                                              ItemType: i,
                                              category: t,
                                              categoryItemCount: e,
                                              setCategoryElement: a,
                                              onSelectItem: r,
                                              activeHeadKey: n,
                                              disableAll: s,
                                              isNestedList: o,
                                              handleTitleClick: l,
                                              favoritesId: c,
                                          });
                            })
                        );
                    },
                    Iy = t => {
                        let { category: r, id: i } = t;
                        const { chart: a, state: n } = Z_(),
                            [s] = yi().useState(S_.getInstance()),
                            [o, l] = yi().useState(!1),
                            c = yi().useCallback(
                                t => {
                                    t.stopPropagation(),
                                        (t.nativeEvent.isHandledByDialog = !0),
                                        s.toggleFavorite(r, i),
                                        n.stateChange('FAVORITE_MARKETS_TOGGLE', {
                                            is_favorite: s.isFavorite(r, i),
                                            symbol: a.activeSymbols?.symbolMap[i]?.symbol,
                                        });
                                },
                                [a, n, s, r, i]
                            ),
                            h = yi().useCallback(() => {
                                const t = s.isFavorite(r, i);
                                t !== o &&
                                    (l(t), Rp(Mp.CategoricalDisplay, Bp.Favorite, `${t ? 'Add ' : 'Remove '} ${i}`));
                            }, [s, r, i, o]);
                        return (
                            yi().useEffect(
                                () => (
                                    s && s.onFavoriteUpdate && (s.onFavoriteUpdate(h), l(s.isFavorite(r, i))),
                                    () => {
                                        s && s.offFavoriteUpdate(h);
                                    }
                                ),
                                [s, r, i, h]
                            ),
                            r && i
                                ? yi().createElement(Kg, {
                                      onClick: c,
                                      className: e()('ciq-favorite', { 'ciq-active-favorite': o }),
                                  })
                                : null
                        );
                    };
                var Dy = h(9160).t;
                const Py = yi().memo(t => {
                        let { id: e } = t;
                        if (!e || !hp[e]) return null;
                        const r = hp[e];
                        return yi().createElement(r, { className: `ic-${e}` });
                    }),
                    Ly = yi().memo(t => {
                        let {
                            item: { itemId: e, display: r },
                        } = t;
                        return yi().createElement(
                            'div',
                            { className: 'sc-mcd__item__name' },
                            yi().createElement(Py, { id: e }),
                            r
                        );
                    }),
                    My = yi().memo(t => {
                        let {
                            favoritesId: e,
                            item: { dataObject: r, itemId: i },
                        } = t;
                        return yi().createElement(
                            'div',
                            { className: 'sc-mcd__item__detail' },
                            r && (void 0 === r.exchange_is_open || r.exchange_is_open)
                                ? ''
                                : yi().createElement('span', { className: 'closed-market' }, Dy.translate('CLOSED')),
                            yi().createElement(Iy, { category: e, id: i })
                        );
                    }),
                    By = t => {
                        let { onSelectItem: e, item: r, favoritesId: i } = t;
                        return yi().createElement(
                            'div',
                            {
                                className: `sc-mcd__item sc-mcd__item--${r.itemId} ${r.selected ? 'sc-mcd__item--selected ' : ''}`,
                                onClick: () => r.enabled && e?.(r.dataObject),
                            },
                            yi().createElement(Ly, { item: r }),
                            yi().createElement(My, { item: r, favoritesId: i })
                        );
                    },
                    Ry = yi().memo(By);
                var jy = h(9160).t;
                const Fy = yi().memo(t => {
                        let { categoryId: e } = t;
                        const r = ap[e];
                        return r && yi().createElement(r, { className: `ic-${e}` });
                    }),
                    Vy = yi().memo(t => {
                        let {
                            focusedCategoryKey: e,
                            activeCategoryKey: r,
                            handleFilterClick: i,
                            category: a,
                            isSearching: n,
                        } = t;
                        const s = e && e.length ? e === a.categoryId : r === a.categoryId;
                        return yi().createElement(
                            'div',
                            {
                                className: 'sc-mcd__filter__item ' + (s && !n ? 'sc-mcd__filter__item--selected' : ''),
                                onClick: () => i(a.categoryId),
                            },
                            yi().createElement(Fy, { categoryId: a.categoryId }),
                            jy.translate(a.categoryName)
                        );
                    }),
                    Hy = yi().memo(t => {
                        let {
                            focusedCategoryKey: e,
                            activeCategoryKey: r,
                            handleFilterClick: i,
                            category: a,
                            isSearching: n,
                        } = t;
                        const [s, o] = yi().useState(!1),
                            [l, c] = yi().useState(!1);
                        return yi().createElement(
                            yi().Fragment,
                            null,
                            yi().createElement(
                                'div',
                                {
                                    className:
                                        'sc-mcd__filter__item ' + (s && !n ? 'sc-mcd__filter__item--selected' : ''),
                                    onClick: () => c(!l),
                                },
                                yi().createElement(Fy, { categoryId: a.categoryId }),
                                a.categoryName,
                                yi().createElement(Wg, {
                                    className: `sc-mcd__filter__group-icon ${l && 'sc-mcd__filter__group-icon--open'}`,
                                })
                            ),
                            yi().createElement(
                                'div',
                                { className: `sc-mcd__filter__subgroups ${l && 'sc-mcd__filter__subgroups--open'}` },
                                a.subgroups.map(t => {
                                    const l = e && e.length ? e === t.categoryId : r === t.categoryId,
                                        h =
                                            a.subgroups.filter(t => t.categoryId === e || (!e && t.categoryId === r))
                                                .length > 0;
                                    return (
                                        l && h && !s ? (o(!0), c(!0)) : !h && s && o(!1),
                                        yi().createElement(
                                            'div',
                                            {
                                                key: t?.categoryId,
                                                className: `sc-mcd__filter__subgroups-item ${s ? 'sc-mcd__filter__item--active' : ''} ${l && !n ? 'sc-mcd__filter__item--selected' : ''}`,
                                                onClick: () => i(t.categoryId),
                                            },
                                            jy.translate(t.categoryName)
                                        )
                                    );
                                })
                            )
                        );
                    }),
                    qy = Bi(t => {
                        let {
                            filteredItems: e,
                            handleFilterClick: r,
                            focusedCategoryKey: i,
                            activeCategoryKey: a,
                            isSearching: n,
                        } = t;
                        return yi().createElement(
                            'div',
                            { className: 'sc-mcd__filter' },
                            e.map(t =>
                                t.hasSubgroup
                                    ? yi().createElement(Hy, {
                                          key: t.categoryId,
                                          category: t,
                                          handleFilterClick: r,
                                          activeCategoryKey: a,
                                          focusedCategoryKey: i,
                                          isSearching: n,
                                      })
                                    : yi().createElement(Vy, {
                                          key: t.categoryId,
                                          category: t,
                                          handleFilterClick: r,
                                          activeCategoryKey: a,
                                          focusedCategoryKey: i,
                                          isSearching: n,
                                      })
                            )
                        );
                    });
                var Uy = h(9160).t;
                const $y = Bi(t => {
                        let {
                            store: e,
                            id: r,
                            searchInputClassName: i,
                            disableAll: a,
                            isNestedList: n,
                            onSelectItem: s,
                        } = t;
                        const {
                                updateScrollSpy: o,
                                setScrollPanel: l,
                                setFilterText: c,
                                searchInput: h,
                                height: u,
                                filterText: d,
                                placeholderText: g,
                                handleTitleClick: m,
                                filteredItems: p,
                                setCategoryElement: f,
                                activeHeadKey: _,
                                favoritesId: v,
                                handleFilterClick: b,
                                focusedCategoryKey: y,
                                activeCategoryKey: S,
                            } = e,
                            w = s || e.onSelectItem,
                            { isMobile: C } = e.chart,
                            E = yi().createElement(Ny, {
                                onSelectItem: (t, e) => {
                                    w?.(t, e), c('');
                                },
                                disableAll: a,
                                isNestedList: n,
                                handleTitleClick: m,
                                filteredItems: p,
                                setCategoryElement: f,
                                activeHeadKey: _,
                                ItemType: Ry,
                                favoritesId: v,
                            });
                        return yi().createElement(
                            'div',
                            { className: 'sc-mcd ' + (n ? 'sc-mcd--nested' : ''), style: { height: u }, id: r },
                            !C &&
                                yi().createElement(
                                    'div',
                                    { className: 'sc-mcd__tabs' },
                                    yi().createElement(
                                        'div',
                                        { className: 'sc-mcd__tabs__head' },
                                        Uy.translate('Markets')
                                    ),
                                    yi().createElement(
                                        'div',
                                        { className: 'sc-mcd__tabs__body' },
                                        !n &&
                                            yi().createElement(qy, {
                                                filteredItems: p,
                                                handleFilterClick: b,
                                                activeCategoryKey: S,
                                                focusedCategoryKey: y,
                                                isSearching: '' !== d,
                                            })
                                    )
                                ),
                            yi().createElement(
                                'div',
                                { className: 'sc-mcd__content' },
                                yi().createElement(
                                    'div',
                                    { className: 'sc-mcd__content__head' },
                                    yi().createElement(Sb, {
                                        placeholder: g,
                                        searchInputClassName: i,
                                        value: d,
                                        onChange: c,
                                        searchInput: h,
                                    })
                                ),
                                yi().createElement(
                                    'div',
                                    { className: 'sc-mcd__content__body' },
                                    C
                                        ? yi().createElement(
                                              'div',
                                              { className: 'sc-mcd__content__body__scroll', onScroll: o, ref: l },
                                              E
                                          )
                                        : yi().createElement(dv, { autoHide: !0, onScroll: o, setPanel: l }, E)
                                )
                            )
                        );
                    }),
                    zy = t => {
                        let { symbolOpenTime: e } = t;
                        const [r, i] = yi().useState(0),
                            a = yi().useMemo(() => {
                                let t = null;
                                const { openTime: i } = e || {};
                                return i && (t = Qi(i.getTime() - r)), t;
                            }, [e, r]);
                        return (
                            yi().useEffect(() => {
                                const t = Up.getInstance(),
                                    e = setInterval(() => i(t.getLocalDate().getTime()), 1e3);
                                return () => clearInterval(e);
                            }, []),
                            yi().createElement('span', null, a)
                        );
                    },
                    Gy = t => {
                        let { isIncrease: r, price: i, className: a, decimalPlaces: n } = t;
                        return yi().createElement(
                            yi().Fragment,
                            null,
                            !i && yi().createElement('span', { className: 'cq-comparison-loader stx-show' }),
                            yi().createElement(
                                'div',
                                { className: e()('cq-animated-price', a, { 'cq-up': r, 'cq-down': !r }) },
                                i.toFixed(n)
                            )
                        );
                    };
                var Wy = h(9160).t;
                const Ky = Bi(() => {
                        const { chartTitle: t } = Z_(),
                            {
                                isShowChartPrice: r,
                                isVisible: i,
                                todayChange: a,
                                todayChangePercent: n,
                                animatedPrice: s,
                                currentSymbol: o,
                                isSymbolOpen: l,
                                symbolOpenTime: c,
                            } = t,
                            { status: h } = s;
                        if (!o) return null;
                        const u = hp[o.symbol] || ip,
                            d = !l && c.openTime,
                            g = !l && !c.openTime;
                        return yi().createElement(
                            yi().Fragment,
                            null,
                            u && yi().createElement(u, { className: `ic-${o.symbol}` }),
                            yi().createElement(
                                'div',
                                { className: 'cq-symbol-info' },
                                yi().createElement(
                                    'div',
                                    { className: e()('cq-symbol', { 'closed-no-opentime': g }) },
                                    o.name
                                ),
                                l &&
                                    yi().createElement(Yy, {
                                        status: h,
                                        isVisible: i && r,
                                        todayChange: a,
                                        todayChangePercent: n,
                                    }),
                                d && yi().createElement(Zy, { symbolOpenTime: c })
                            )
                        );
                    }),
                    Xy = Bi(() => {
                        const { chartTitle: t } = Z_(),
                            { isSymbolOpen: e } = t;
                        return yi().createElement(
                            'div',
                            { className: 'cq-symbol-select-btn' },
                            yi().createElement(
                                'div',
                                { className: 'cq-symbol-select-btn__container' },
                                yi().createElement(Ky, null),
                                !e &&
                                    yi().createElement(
                                        'div',
                                        { className: 'cq-symbol-closed-text' },
                                        Wy.translate('CLOSED')
                                    )
                            ),
                            yi().createElement(Wg, { className: 'cq-symbol-dropdown' })
                        );
                    }),
                    Yy = Bi(t => {
                        let { isVisible: r, status: i, todayChange: a, todayChangePercent: n } = t;
                        const { chartTitle: s } = Z_(),
                            { animatedPrice: o, decimalPlaces: l } = s,
                            { price: c, isIncrease: h } = o;
                        return r
                            ? yi().createElement(
                                  'div',
                                  { className: 'cq-chart-price' },
                                  yi().createElement(Gy, {
                                      className: 'cq-current-price',
                                      price: c,
                                      isIncrease: h,
                                      status: o.status,
                                      decimalPlaces: l,
                                  }),
                                  yi().createElement('div', { className: 'divider' }, '-'),
                                  yi().createElement(
                                      'div',
                                      { className: e()('cq-change', i) },
                                      yi().createElement('span', { className: 'cq-todays-change' }, a || 0),
                                      yi().createElement(
                                          'span',
                                          { className: 'cq-todays-change-percent' },
                                          '(',
                                          n,
                                          '%)'
                                      ),
                                      ' '
                                  )
                              )
                            : null;
                    }),
                    Zy = t => {
                        let { symbolOpenTime: e } = t;
                        return yi().createElement(
                            'div',
                            { className: 'cq-chart-closed' },
                            yi().createElement($g, { className: 'cq-closed-icon' }),
                            yi().createElement(
                                'div',
                                { className: 'cq-closed-opening' },
                                Wy.translate('Opens in:'),
                                '  ',
                                yi().createElement(
                                    'span',
                                    { className: 'cq-closed-opening-time' },
                                    yi().createElement(zy, { symbolOpenTime: e })
                                )
                            )
                        );
                    };
                var Qy = h(9160).t;
                const Jy = Bi(t => {
                    const { chartTitle: e, chart: r, chartSetting: i, state: a } = Z_(),
                        { isMobile: n } = r,
                        { theme: s } = i,
                        {
                            menuStore: o,
                            currentSymbol: l,
                            categoricalDisplay: c,
                            setSymbol: h,
                            onMouseEnter: u,
                            onMouseLeave: d,
                            updateProps: g,
                        } = e,
                        m = t.onChange || h,
                        p = o.setOpen,
                        {
                            containerId: f,
                            enabled: _,
                            portalNodeId: v,
                            searchInputClassName: b,
                            open: y,
                            open_market: S,
                            isNestedList: w,
                        } = t;
                    if (
                        (yi().useEffect(() => {
                            const { ...e } = t;
                            g(e);
                        }, [y, S]),
                        !l)
                    )
                        return null;
                    const C = yi().createElement(
                        bv,
                        {
                            store: o,
                            enabled: _,
                            className: 'cq-chart-title stx-show cq-symbols-display',
                            isFullscreen: !0,
                            portalNodeId: v,
                            title: n ? Qy.translate('Markets') : '',
                            onMouseEnter: u,
                            onMouseLeave: d,
                        },
                        yi().createElement(bv.Title, null, yi().createElement(Xy, null)),
                        yi().createElement(
                            bv.Body,
                            null,
                            yi().createElement($y, {
                                store: c,
                                isNestedList: w,
                                searchInputClassName: b,
                                onSelectItem: (t, e) => {
                                    t.symbol !== l.symbol &&
                                        (m(t.symbol),
                                        a.stateChange('SYMBOL_CHANGE', {
                                            symbol: t.symbol,
                                            symbol_category: 'favorite' === e ? 'favorites' : zi(t),
                                        })),
                                        p(!1);
                                },
                            })
                        )
                    );
                    return f
                        ? wi().createPortal(
                              yi().createElement('div', { className: `smartcharts-${s}` }, C),
                              document.getElementById(f)
                          )
                        : C;
                });
                h(6781);
                const tS = Bi(() => {
                        const { crosshair: t, chartAdapter: e } = Z_(),
                            { state: r } = t,
                            i = yi().useRef(null),
                            a = yi().useRef(null),
                            n = yi().useRef(null),
                            s = yi().useRef(null),
                            o = yi().useRef(null),
                            l = yi().useRef(null);
                        return (
                            yi().useEffect(
                                () => (
                                    t.onMount({
                                        crosshairRef: a,
                                        crossHairXRef: n,
                                        crossHairYRef: s,
                                        floatDateRef: o,
                                        floatPriceRef: l,
                                    }),
                                    () => t.onUnmount()
                                ),
                                []
                            ),
                            e.isChartLoaded
                                ? yi().createElement(
                                      'div',
                                      { ref: i, className: 'cq-crosshair-wrapper' },
                                      yi().createElement(
                                          'div',
                                          { ref: a, className: 'cq-crosshair' },
                                          yi().createElement(
                                              'div',
                                              { className: 'cq-crosshair-tooltip' },
                                              2 === r &&
                                                  yi().createElement('div', { className: 'cq-crosshair-content' })
                                          ),
                                          (1 == r || 2 == r) &&
                                              yi().createElement(
                                                  yi().Fragment,
                                                  null,
                                                  yi().createElement('div', {
                                                      ref: n,
                                                      className: 'cq-crosshair-line cq-crosshair-x',
                                                  }),
                                                  yi().createElement('div', {
                                                      ref: s,
                                                      className: 'cq-crosshair-line cq-crosshair-y',
                                                  })
                                              ),
                                          1 == r &&
                                              yi().createElement(
                                                  yi().Fragment,
                                                  null,
                                                  yi().createElement('div', { ref: o, className: 'cq-float-date' }),
                                                  yi().createElement('div', { ref: l, className: 'cq-float-price' })
                                              )
                                      )
                                  )
                                : null
                        );
                    }),
                    eS = Bi(t => {
                        const { chart: e, chartAdapter: r } = Z_(),
                            i = yi().useRef(null),
                            a = yi().useRef(null),
                            n = yi().useRef(null),
                            s = yi().useRef(null),
                            o = yi().useRef(t);
                        (o.current = t),
                            yi().useEffect(
                                () => (
                                    r.painter.registerCallback(c),
                                    () => {
                                        r.painter.unregisterCallback(c);
                                    }
                                ),
                                []
                            ),
                            yi().useEffect(() => {
                                c();
                            }, [r.epochBounds, r.quoteBounds, r.isFeedLoaded, r.isChartLoaded, e.lastQuote]),
                            yi().useEffect(() => {
                                const t = s.current?.querySelector('.chart-spot-label-profit');
                                return (
                                    t && r.updateRightPadding(110),
                                    () => {
                                        t && r.updateRightPadding(0);
                                    }
                                );
                            }, [r]);
                        const l = t => {
                                let { epoch: e, price: r } = t;
                                (i.current = Number(r) || null),
                                    (a.current = Fp(Zi(e))),
                                    (n.current = e ? 1e3 * e : null),
                                    c();
                            },
                            c = () => {
                                if (!r.isFeedLoaded || !r.isChartLoaded) return;
                                if (!s.current) return;
                                if (!a.current) return void (s.current.style.visibility = 'hidden');
                                const t = o.current.offsetTop || 0,
                                    e = o.current.offsetLeft || 0,
                                    l = s.current;
                                let c = 0,
                                    h = 0,
                                    u = !0;
                                if (n.current) {
                                    const t = r.getXFromEpoch(n.current),
                                        e = i.current ? r.getYFromQuote(i.current) : 0;
                                    t > 0 && (null == i.current || e > 0) ? ((c = +e), (h = +t)) : (u = !1);
                                }
                                (l.style.transform = `translate(${h + e}px, ${c + t}px)`),
                                    (l.style.visibility = u ? 'visible' : 'hidden');
                            },
                            { children: h, className: u } = t;
                        if (!r.isChartLoaded) return null;
                        const { chartNode: d, yAxisWidth: g } = e,
                            { overlap_y_axis: m = !0 } = t,
                            p = d && !m ? d.offsetWidth - g - 50 : 'calc(100% - 50px)';
                        return yi().createElement(
                            'div',
                            { className: 'fast-marker', style: { maxWidth: p } },
                            yi().createElement(
                                'div',
                                {
                                    className: u,
                                    ref: t => {
                                        s.current = t;
                                        const { markerRef: e } = o.current;
                                        e && e(t ? { div: t, setPosition: l } : null), null !== t && c();
                                    },
                                    style: { position: 'absolute' },
                                },
                                h
                            )
                        );
                    });
                h(6271);
                var rS = h(9160).t;
                const iS = Bi(() => {
                    const { highestLowest: t } = Z_(),
                        { setHighestRef: e, setLowestRef: r } = t;
                    return yi().createElement(
                        yi().Fragment,
                        null,
                        yi().createElement(
                            eS,
                            {
                                markerRef: e,
                                className: 'sc-highlow sc-highlow--highest',
                                offsetTop: -80,
                                offsetLeft: -80,
                            },
                            yi().createElement('span', { className: 'spot__shape-circule spot__fill-blue' }),
                            yi().createElement(
                                'span',
                                { className: 'spot__label', 'data-label-pos': 'top' },
                                yi().createElement('span', null, `${rS.translate('H')}: `),
                                yi().createElement('span', { className: 'spot__value' })
                            )
                        ),
                        yi().createElement(
                            eS,
                            {
                                markerRef: r,
                                className: 'sc-highlow sc-highlow--lowest',
                                offsetTop: -80,
                                offsetLeft: -80,
                            },
                            yi().createElement('span', { className: 'spot__shape-circule spot__fill-red' }),
                            yi().createElement(
                                'span',
                                { className: 'spot__label', 'data-label-pos': 'bottom' },
                                yi().createElement('span', null, `${rS.translate('L')} : `),
                                yi().createElement('span', { className: 'spot__value' })
                            )
                        )
                    );
                });
                h(1061);
                var aS = h(9160).t;
                const nS = Bi(() => {
                    const { timeperiod: t } = Z_(),
                        {
                            menuStore: e,
                            dialogPortalNodeId: r,
                            handleCancel: i,
                            handleContinue: a,
                        } = t.predictionIndicator;
                    return yi().createElement(
                        bv,
                        {
                            store: e,
                            className: 'cq-dialog--indicator-prediction',
                            modalMode: !0,
                            emptyMenu: !0,
                            portalNodeId: r,
                            handleOverlayClick: i,
                        },
                        yi().createElement(bv.Title, null),
                        yi().createElement(
                            bv.Body,
                            null,
                            yi().createElement(
                                'div',
                                { className: 'cq-indicator-prediction' },
                                yi().createElement('strong', null, aS.translate('Are you sure?')),
                                yi().createElement(
                                    'p',
                                    null,
                                    aS.translate(
                                        'Some of your active indicators don’t support 1-tick intervals. If you change to a 1-tick interval, these indicators will be removed from your chart.'
                                    )
                                ),
                                yi().createElement(
                                    'div',
                                    { className: 'cq-indicator-prediction__footer' },
                                    yi().createElement(
                                        'button',
                                        { type: 'button', className: 'sc-btn sc-btn--outline-secondary', onClick: i },
                                        aS.translate('Cancel')
                                    ),
                                    yi().createElement(
                                        'button',
                                        { type: 'button', className: 'sc-btn sc-btn--primary', onClick: a },
                                        aS.translate('Continue')
                                    )
                                )
                            )
                        )
                    );
                });
                h(1104);
                const sS = Bi(t => {
                    let { onCrosshairChange: r } = t;
                    const { chart: i, chartSize: a, navigationWidget: n, chartSetting: s, chartAdapter: o } = Z_(),
                        { context: l, startWithDataFitMode: c } = i,
                        { zoomIn: h, zoomOut: u } = a,
                        { historical: d } = s,
                        { onMouseEnter: g, onMouseLeave: m } = n,
                        { isDataFitModeEnabled: p, toggleDataFitMode: f } = o;
                    return l
                        ? yi().createElement(
                              'div',
                              {
                                  className: e()('sc-navigation-widget', { 'sc-navigation-widget__item--indent': d }),
                                  onMouseEnter: g,
                                  onMouseLeave: m,
                              },
                              yi().createElement(
                                  'div',
                                  {
                                      className: e()(
                                          'sc-navigation-widget__item',
                                          'sc-navigation-widget__item--scale',
                                          {
                                              'sc-navigation-widget__item--hidden': !c,
                                              'sc-navigation-widget__item--disabled': p,
                                          }
                                      ),
                                      onClick: f,
                                  },
                                  yi().createElement(tm, null)
                              ),
                              yi().createElement(
                                  'div',
                                  { className: 'sc-navigation-widget__item sc-navigation-widget__item--zoom' },
                                  yi().createElement(em, { onClick: h }),
                                  yi().createElement(Zb, { onChange: r }),
                                  yi().createElement(rm, { onClick: u })
                              )
                          )
                        : null;
                });
                h(273);
                const oS = Bi(() => {
                        const { paginationLoader: t } = Z_(),
                            { isOnPagination: e, setRef: r } = t;
                        return e
                            ? yi().createElement(
                                  eS,
                                  { markerRef: r, className: 'pagination' },
                                  yi().createElement(
                                      'div',
                                      { className: 'pagination__loader' },
                                      yi().createElement('div', { className: 'pagination__loader-background' })
                                  )
                              )
                            : yi().createElement(yi().Fragment, null);
                    }),
                    lS = Bi(t => {
                        let { at: e = 'holder', children: r } = t;
                        const { chart: i, state: a } = Z_(),
                            { contextPromise: n } = i,
                            { isChartReady: s } = a,
                            [o, l] = yi().useState();
                        return (
                            yi().useEffect(() => {
                                n?.then(t => {
                                    const r = `cq-inchart-${e}`;
                                    let i = t.topNode?.querySelector(`.${r}`);
                                    i ||
                                        (i = (function (t) {
                                            const e = document.createElement('div');
                                            return (e.innerHTML = t), e.firstChild;
                                        })(`<div class="${r}"></div>`)),
                                        l(i);
                                });
                            }, [e, n]),
                            s && o ? wi().createPortal(r, o) : null
                        );
                    });
                h(2445);
                var cS = h(9160).t;
                const hS = t => {
                        let { group: e, title: r, type: i, Field: a } = t;
                        return yi().createElement(
                            jb,
                            {
                                title:
                                    'select' === i ||
                                    'pattern' === i ||
                                    'colorpicker' === i ||
                                    'numbercolorpicker' === i ||
                                    'OverBought' === e ||
                                    'OverSold' === e
                                        ? null
                                        : r,
                                type: i,
                            },
                            a
                        );
                    },
                    uS = t => {
                        let { title: e, items: r, theme: i, onItemChange: a } = t;
                        const n = {
                                switch: t => {
                                    const e = t;
                                    return yi().createElement($b, { value: e.value, onChange: t => a(e, t) });
                                },
                                colorpicker: t =>
                                    yi().createElement(Ub, {
                                        theme: i,
                                        color: t.value,
                                        subtitle: t.subtitle || t.title,
                                        setColor: e => a(t, e),
                                    }),
                                pattern: t =>
                                    yi().createElement(qb, {
                                        pattern: t.value,
                                        lineWidth: '1',
                                        subtitle: t.title,
                                        onChange: e => {
                                            a(t, e);
                                        },
                                    }),
                                select: t => {
                                    const e = t;
                                    return yi().createElement(
                                        Hb,
                                        {
                                            rows: Object.values(e.options || {}),
                                            value: e.options[e.value],
                                            subtitle: e.subtitle || e.title,
                                            onRowClick: t => {
                                                const [r] = Object.entries(e.options).find(e => {
                                                    let [r, i] = e;
                                                    return i === t;
                                                });
                                                a(e, r);
                                            },
                                        },
                                        t => t
                                    );
                                },
                                number: t => {
                                    const e = t;
                                    return yi().createElement(Vb, {
                                        min: e.min ?? 1,
                                        step: e.step ?? 1,
                                        max: e.max ?? 100,
                                        value: e.value,
                                        onChange: t => a(e, t),
                                    });
                                },
                                numericinput: t => {
                                    const e = t;
                                    return yi().createElement(
                                        'span',
                                        { className: 'ciq-num-input' },
                                        yi().createElement(Gb, {
                                            value: e.value,
                                            onChange: t => a(e, t),
                                            min: e.min,
                                            step: e.step,
                                            max: e.max,
                                        })
                                    );
                                },
                                numbercolorpicker: t => {
                                    const e = t;
                                    return yi().createElement(Wb, { props: e.value, theme: i, onChange: t => a(e, t) });
                                },
                                font: t => {
                                    const e = t;
                                    return yi().createElement(Xb, { value: e.value, onChange: t => a(e, t) });
                                },
                            },
                            s = `form__input-group--${(e || '').toLowerCase().replace(' ', '-')}`;
                        return yi().createElement(
                            'div',
                            { className: `form__input-group ${s}` },
                            'Show Zones' === e ? '' : yi().createElement('h4', null, e),
                            r.map(
                                t =>
                                    n[t.type] &&
                                    yi().createElement(hS, {
                                        key: t.title,
                                        type: t.type,
                                        title: 'Show Zones' === e ? t.title : t.title.replace(e, ''),
                                        Field: n[t.type](t),
                                    })
                            ),
                            yi().createElement(jb, { type: 'end' })
                        );
                    },
                    dS = t => {
                        let { onDelete: e, onReset: r, onDone: i } = t;
                        return yi().createElement(
                            'div',
                            { className: 'buttons' },
                            e && yi().createElement(jg, { className: 'sc-btn--delete', onClick: e }),
                            yi().createElement(
                                'div',
                                null,
                                yi().createElement(mS, { onClick: r }),
                                yi().createElement(pS, { onClick: i })
                            )
                        );
                    },
                    gS = t => {
                        let {
                            itemGroups: e,
                            theme: r,
                            onItemChange: i,
                            setScrollPanel: a,
                            freezeScroll: n,
                            formClassname: s,
                        } = t;
                        return yi().createElement(
                            'div',
                            { className: `form form--indicator-setting ${s}` },
                            yi().createElement(
                                dv,
                                { setPanel: a, freeze: n, autoHide: !0, height: '282px' },
                                e.map(
                                    t =>
                                        t.fields.length > 0 &&
                                        yi().createElement(uS, {
                                            key: t.key,
                                            title: t.title,
                                            items: t.fields,
                                            theme: r,
                                            onItemChange: i,
                                        })
                                )
                            )
                        );
                    },
                    mS = t => {
                        let { onClick: e } = t;
                        return yi().createElement(
                            'button',
                            { type: 'button', className: 'sc-btn sc-btn--outline-secondary sc-btn--reset', onClick: e },
                            cS.translate('Reset')
                        );
                    },
                    pS = t => {
                        let { onClick: e } = t;
                        return yi().createElement(
                            'button',
                            { type: 'button', className: 'sc-btn sc-btn--primary sc-btn--save', onClick: e },
                            cS.translate('Done')
                        );
                    },
                    fS = Bi(t => {
                        let { store: e } = t;
                        const {
                                itemGroups: r,
                                title: i,
                                formClassname: a,
                                description: n,
                                showTabs: s,
                                onResetClick: o,
                                onItemChange: l,
                                onItemDelete: c,
                                menuStore: h,
                                theme: u,
                                setScrollPanel: d,
                                dialogPortalNodeId: g,
                                freezeScroll: m,
                            } = e,
                            p = h.handleCloseDialog;
                        return yi().createElement(
                            bv,
                            {
                                store: h,
                                className: 'cq-modal--settings',
                                title: i,
                                modalMode: !0,
                                enableTabular: s,
                                emptyMenu: !0,
                                portalNodeId: g,
                            },
                            yi().createElement(bv.Title, null),
                            yi().createElement(
                                bv.Body,
                                null,
                                yi().createElement(
                                    'div',
                                    { className: 'cq-chart-settings' },
                                    s
                                        ? yi().createElement(
                                              ib,
                                              { className: 'tabs--vertical' },
                                              yi().createElement(
                                                  ob,
                                                  null,
                                                  yi().createElement(gb, null, 'Settings'),
                                                  yi().createElement(gb, null, 'Description')
                                              ),
                                              yi().createElement(
                                                  bb,
                                                  null,
                                                  yi().createElement(gS, {
                                                      itemGroups: r,
                                                      theme: u,
                                                      onItemChange: l,
                                                      setScrollPanel: d,
                                                      freezeScroll: m,
                                                  }),
                                                  yi().createElement(dS, { onReset: o, onDone: p })
                                              ),
                                              yi().createElement(bb, null, n)
                                          )
                                        : yi().createElement(
                                              yi().Fragment,
                                              null,
                                              yi().createElement(gS, {
                                                  itemGroups: r,
                                                  theme: u,
                                                  onItemChange: l,
                                                  setScrollPanel: d,
                                                  freezeScroll: m,
                                                  formClassname: a,
                                              }),
                                              yi().createElement(dS, { onDelete: c, onReset: o, onDone: p })
                                          )
                                )
                            )
                        );
                    }),
                    _S = Bi(() => {
                        const { chart: t, chartAdapter: e } = Z_(),
                            { epochBounds: r, isFeedLoaded: i } = e,
                            { feed: a } = t,
                            n = a?.quotes;
                        if (void 0 === n || !1 === i || 0 === n.length) return null;
                        const s = n[n.length - 1].DT?.getTime();
                        return s
                            ? r.rightEpoch > s
                                ? null
                                : yi().createElement(
                                      'div',
                                      {
                                          className: 'scroll_to_recent',
                                          onClick: () => {
                                              e.flutterChart?.app.scrollToLastTick();
                                          },
                                      },
                                      yi().createElement(Jg, null)
                                  )
                            : null;
                    });
                var vS = h(9160).t;
                function bS() {
                    return (
                        (bS = Object.assign
                            ? Object.assign.bind()
                            : function (t) {
                                  for (var e = 1; e < arguments.length; e++) {
                                      var r = arguments[e];
                                      for (var i in r) Object.prototype.hasOwnProperty.call(r, i) && (t[i] = r[i]);
                                  }
                                  return t;
                              }),
                        bS.apply(this, arguments)
                    );
                }
                const yS = yi().forwardRef((t, r) => {
                        const {
                                chart: i,
                                drawTools: a,
                                studies: n,
                                chartSetting: s,
                                chartType: o,
                                state: l,
                                loader: c,
                                chartAdapter: h,
                                crosshair: u,
                                timeperiod: d,
                            } = Z_(),
                            {
                                chartId: g,
                                init: m,
                                destroy: p,
                                isChartAvailable: f,
                                chartContainerHeight: _,
                                containerWidth: v,
                            } = i,
                            { setCrosshairState: b } = u,
                            { settingsDialog: y, restoreStudies: S, activeItems: w } = n,
                            { settingsDialog: C } = a,
                            { settingsDialog: E, isCandle: x, isSpline: T } = o,
                            { updateProps: k, isChartClosed: A } = l,
                            { theme: O, position: N, isHighestLowestMarkerEnabled: I } = s,
                            { isActive: D, show: P } = c,
                            L = yi().useRef(null),
                            M = yi().useRef(null);
                        (0, bi.useImperativeHandle)(r, () => ({
                            hasPredictionIndicators: () => null !== localStorage.getItem('predictionIndicators'),
                            triggerPopup(t) {
                                (d.predictionIndicator.dialogPortalNodeId = 'modal_root'),
                                    d.predictionIndicator.setOpen(!0),
                                    d.predictionIndicator.setCancel(() => {
                                        localStorage.getItem('predictionIndicators') &&
                                            (t(), S([...w, ...qi(localStorage.getItem('predictionIndicators') || '')]));
                                    });
                            },
                        })),
                            yi().useEffect(
                                () => (
                                    window.isProductionWebsite &&
                                        ((function (t, e, r, i, a, n, s) {
                                            (t.GoogleAnalyticsObject = a),
                                                (t[a] =
                                                    t[a] ||
                                                    function () {
                                                        (t[a].q = t[a].q || []).push(arguments);
                                                    }),
                                                (t[a].l = 1 * new Date()),
                                                (n = e.createElement(r)),
                                                (s = e.getElementsByTagName(r)[0]),
                                                (n.async = 1),
                                                (n.src = '//www.google-analytics.com/analytics.js'),
                                                s.parentNode.insertBefore(n, s);
                                        })(window, document, 'script', 0, 'ga'),
                                        ga('create', 'UA-40877026-15', 'auto')),
                                    window.isProductionWebsite &&
                                        window.ga &&
                                        ga('send', 'pageview', window.location.pathname),
                                    k(t),
                                    m(L.current, t),
                                    () => {
                                        p();
                                    }
                                ),
                                []
                            ),
                            yi().useEffect(() => {
                                k(t);
                            });
                        const B = (t => {
                            const e = yi().useRef();
                            return (
                                yi().useEffect(() => {
                                    e.current = t;
                                }, [t]),
                                e.current
                            );
                        })(vS.lang);
                        yi().useEffect(() => {
                            B && B !== vS.lang && !D && P?.();
                        }, [vS.lang]);
                        const {
                                id: R,
                                isMobile: j = !1,
                                barriers: F = [],
                                children: V,
                                chartControlsWidgets: H,
                                topWidgets: q,
                                bottomWidgets: U,
                                enabledChartFooter: $ = !0,
                                enabledNavigationWidget: z = !0,
                                toolbarWidget: G = () => null,
                                onCrosshairChange: W = () => null,
                                historical: K,
                                contracts_array: X = [],
                            } = t,
                            Y = H && N && !j,
                            Z = q || (() => yi().createElement(Jy, null)),
                            Q = yi().useCallback(G, [vS.lang]),
                            J = yi().useCallback(W, [vS.lang]);
                        return (
                            yi().useEffect(
                                () => (
                                    h.onMount(M.current),
                                    () => {
                                        h.onUnmount();
                                    }
                                ),
                                []
                            ),
                            yi().useEffect(() => {
                                h.updateContracts(X);
                            }, [X]),
                            j && 2 !== u.state && b(2),
                            yi().createElement(
                                'div',
                                {
                                    id: R || g,
                                    className: e()('smartcharts', `smartcharts-${O}`, {
                                        'smartcharts--navigation-widget': z,
                                        'smartcharts--loading': D,
                                        'smartcharts--has-markers': V && V.length,
                                        [`smartcharts-${v}`]: !j,
                                    }),
                                },
                                yi().createElement(
                                    'div',
                                    { className: e()({ 'smartcharts-mobile': j, 'smartcharts-desktop': !j }) },
                                    yi().createElement(
                                        'div',
                                        { className: 'cq-context', ref: L },
                                        yi().createElement(
                                            'div',
                                            {
                                                className: e()({
                                                    [`cq-chart-control-${N}`]: Y,
                                                    'cq-chart-control-bottom': !Y,
                                                }),
                                            },
                                            yi().createElement(
                                                'div',
                                                { className: 'ciq-chart-area' },
                                                yi().createElement(
                                                    'div',
                                                    { className: e()('ciq-chart', { 'closed-chart': A }) },
                                                    yi().createElement(
                                                        lS,
                                                        { at: 'subholder' },
                                                        F.map((t, e) => {
                                                            let { key: r, ...i } = t;
                                                            return yi().createElement(
                                                                ov,
                                                                bS({ key: `barrier-${e}` }, i)
                                                            );
                                                        })
                                                    ),
                                                    yi().createElement(
                                                        lS,
                                                        { at: 'subholder' },
                                                        !x && !T && I && yi().createElement(iS, null)
                                                    ),
                                                    yi().createElement(lS, { at: 'subholder' }, V),
                                                    yi().createElement(
                                                        lS,
                                                        { at: 'subholder' },
                                                        yi().createElement(oS, null)
                                                    ),
                                                    !c.isActive &&
                                                        yi().createElement(
                                                            'div',
                                                            { className: 'cq-top-ui-widgets' },
                                                            yi().createElement(Z, null)
                                                        ),
                                                    yi().createElement(
                                                        'div',
                                                        {
                                                            className: 'chartContainer',
                                                            ref: M,
                                                            style: { height: K && _ && j ? _ - 30 : _ },
                                                        },
                                                        yi().createElement(tS, null)
                                                    ),
                                                    z && yi().createElement(sS, { onCrosshairChange: J }),
                                                    Q && yi().createElement(Q, null),
                                                    !f &&
                                                        yi().createElement(
                                                            'div',
                                                            { className: 'cq-chart-unavailable' },
                                                            vS.translate('Chart data is not available for this symbol.')
                                                        ),
                                                    yi().createElement('div', { className: 'cq-inchart-subholder' }),
                                                    yi().createElement(
                                                        vy,
                                                        null,
                                                        yi().createElement(fy, { bottomWidgets: U })
                                                    )
                                                ),
                                                null !== H && !$ && yi().createElement(yy, { widgets: H }),
                                                yi().createElement(_S, null),
                                                $ && yi().createElement(Cy, null),
                                                yi().createElement(xv, null)
                                            )
                                        )
                                    ),
                                    yi().createElement(fS, { store: C }),
                                    yi().createElement(fS, { store: E }),
                                    yi().createElement(fS, { store: y }),
                                    yi().createElement(nS, null),
                                    yi().createElement('div', { id: 'smartcharts_modal', className: 'ciq-modal' })
                                )
                            )
                        );
                    }),
                    SS = Bi(yS);
                function wS() {
                    return (
                        (wS = Object.assign
                            ? Object.assign.bind()
                            : function (t) {
                                  for (var e = 1; e < arguments.length; e++) {
                                      var r = arguments[e];
                                      for (var i in r) Object.prototype.hasOwnProperty.call(r, i) && (t[i] = r[i]);
                                  }
                                  return t;
                              }),
                        wS.apply(this, arguments)
                    );
                }
                const CS = yi().forwardRef((t, e) => {
                    let { children: r, ...i } = t;
                    const a = yi().useRef(!1);
                    a.current ||
                        ((() => {
                            const t = new X_();
                            Y_ = yi().createContext(t);
                        })(),
                        (a.current = !0));
                    const n = Z_(),
                        s = Y_.Provider;
                    return yi().createElement(s, { value: n }, yi().createElement(SS, wS({}, i, { ref: e }), r));
                });
                h(2313);
                const ES = Bi(t => {
                    let { position: r = 'top', children: i } = t;
                    const { chart: a, toolbarWidget: n } = Z_(),
                        { context: s } = a,
                        { onMouseEnter: o, onMouseLeave: l } = n;
                    return s
                        ? yi().createElement(
                              'div',
                              {
                                  className: e()('sc-toolbar-widget', { [`sc-toolbar-widget--${r}`]: !!r }),
                                  onMouseEnter: o,
                                  onMouseLeave: l,
                              },
                              i
                          )
                        : null;
                });
                h(9758);
                const xS = {
                    Barrier: ov,
                    ChartSetting: hy,
                    ChartSize: Jb,
                    ChartTitle: Jy,
                    ChartTypes: wv,
                    ChartMode: Lv,
                    createObjectFromLocalStorage: Hi,
                    CrosshairToggle: Zb,
                    DrawTools: oy,
                    FastMarker: eS,
                    Marker: eS,
                    PendingPromise: ji,
                    setSmartChartsPublicPath: function (t) {
                        h.p = t;
                    },
                    Share: dy,
                    SmartChart: CS,
                    StudyLegend: Nb,
                    Timeperiod: Av,
                    Views: Bb,
                    ToolbarWidget: ES,
                    logEvent: Rp,
                    LogCategories: Mp,
                    LogActions: Bp,
                };
            })(),
            u.default
        );
    })()
);
//# sourceMappingURL=smartcharts.js.map
