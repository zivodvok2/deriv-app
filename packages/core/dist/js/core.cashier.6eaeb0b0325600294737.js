/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self['webpackChunk'] = self['webpackChunk'] || []).push([
    ['cashier'],
    {
        /***/ '../../cashier/dist/cashier/js/cashier.js':
            /*!************************************************!*\
  !*** ../../cashier/dist/cashier/js/cashier.js ***!
  \************************************************/
            /***/ (module, __unused_webpack_exports, __webpack_require__) => {
                eval(
                    '/*\n * ATTENTION: An "eval-source-map" devtool has been used.\n * This devtool is neither made for production nor for readable output files.\n * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.\n * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)\n * or disable the default devtool with "devtool: false".\n * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory(__webpack_require__(/*! @deriv-com/analytics */ "../../../node_modules/@deriv-com/analytics/lib/index.js"), __webpack_require__(/*! @deriv/components */ "../../components/src/index.ts"), __webpack_require__(/*! @deriv/p2p */ "../../p2p/dist/p2p/js/index.js"), __webpack_require__(/*! @deriv/shared */ "../../shared/src/index.ts"), __webpack_require__(/*! @deriv/translations */ "../../translations/src/index.js"), __webpack_require__(/*! mobx */ "../../../node_modules/mobx/dist/mobx.esm.js"), __webpack_require__(/*! react */ "../../../node_modules/react/index.js"), __webpack_require__(/*! react-dom */ "../../../node_modules/react-dom/index.js"), __webpack_require__(/*! react-router */ "../../../node_modules/react-router/esm/react-router.js"), __webpack_require__(/*! react-router-dom */ "../../../node_modules/react-router-dom/esm/react-router-dom.js"));\n\telse {}\n})(self, (__WEBPACK_EXTERNAL_MODULE__deriv_com_analytics__, __WEBPACK_EXTERNAL_MODULE__deriv_components__, __WEBPACK_EXTERNAL_MODULE__deriv_p2p__, __WEBPACK_EXTERNAL_MODULE__deriv_shared__, __WEBPACK_EXTERNAL_MODULE__deriv_translations__, __WEBPACK_EXTERNAL_MODULE_mobx__, __WEBPACK_EXTERNAL_MODULE_react__, __WEBPACK_EXTERNAL_MODULE_react_dom__, __WEBPACK_EXTERNAL_MODULE_react_router__, __WEBPACK_EXTERNAL_MODULE_react_router_dom__) => {\nreturn /******/ (() => { // webpackBootstrap\n/******/ \t"use strict";\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ "./index.tsx":\n/*!*******************!*\\\n  !*** ./index.tsx ***!\n  \\*******************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\neval("__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\"default\\": () => (__WEBPACK_DEFAULT_EXPORT__)\\n/* harmony export */ });\\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \\"react\\");\\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\\n/* harmony import */ var _deriv_shared__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @deriv/shared */ \\"@deriv/shared\\");\\n/* harmony import */ var _deriv_shared__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_deriv_shared__WEBPACK_IMPORTED_MODULE_1__);\\n/* harmony import */ var _deriv_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @deriv/components */ \\"@deriv/components\\");\\n/* harmony import */ var _deriv_components__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_deriv_components__WEBPACK_IMPORTED_MODULE_2__);\\n\\n\\n\\nvar App = (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_1__.makeLazyLoader)(function () {\\n  return (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_1__.moduleLoader)(function () {\\n    return Promise.all(/*! import() | cashier-app */[__webpack_require__.e(\\"vendors-node_modules_deriv-com_ui_dist_components_Text_index_js\\"), __webpack_require__.e(\\"vendors-node_modules_deriv_deriv-api_dist_DerivAPIBasic_js-node_modules_bowser_es5_js-node_mo-a703c0\\"), __webpack_require__.e(\\"cashier-app\\")]).then(__webpack_require__.bind(__webpack_require__, /*! ./app */ \\"./app.tsx\\"));\\n  });\\n}, function () {\\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.Loading, null);\\n})();\\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (App);//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9pbmRleC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBR0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvY2FzaGllci8uL2luZGV4LnRzeD9mZTFiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBtYWtlTGF6eUxvYWRlciwgbW9kdWxlTG9hZGVyIH0gZnJvbSAnQGRlcml2L3NoYXJlZCc7XG5pbXBvcnQgeyBMb2FkaW5nIH0gZnJvbSAnQGRlcml2L2NvbXBvbmVudHMnO1xuXG5jb25zdCBBcHAgPSBtYWtlTGF6eUxvYWRlcihcbiAgICAoKSA9PiBtb2R1bGVMb2FkZXIoKCkgPT4gaW1wb3J0KC8qIHdlYnBhY2tDaHVua05hbWU6IFwiY2FzaGllci1hcHBcIiwgd2VicGFja1ByZWxvYWQ6IHRydWUgKi8gJy4vYXBwJykpLFxuICAgICgpID0+IDxMb2FkaW5nIC8+XG4pKCk7XG5cbmV4cG9ydCBkZWZhdWx0IEFwcDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///./index.tsx\\n");\n\n/***/ }),\n\n/***/ "@deriv-com/analytics":\n/*!***************************************!*\\\n  !*** external "@deriv-com/analytics" ***!\n  \\***************************************/\n/***/ ((module) => {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__deriv_com_analytics__;\n\n/***/ }),\n\n/***/ "@deriv/components":\n/*!************************************!*\\\n  !*** external "@deriv/components" ***!\n  \\************************************/\n/***/ ((module) => {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__deriv_components__;\n\n/***/ }),\n\n/***/ "@deriv/p2p":\n/*!*****************************!*\\\n  !*** external "@deriv/p2p" ***!\n  \\*****************************/\n/***/ ((module) => {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__deriv_p2p__;\n\n/***/ }),\n\n/***/ "@deriv/shared":\n/*!********************************!*\\\n  !*** external "@deriv/shared" ***!\n  \\********************************/\n/***/ ((module) => {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__deriv_shared__;\n\n/***/ }),\n\n/***/ "@deriv/translations":\n/*!**************************************!*\\\n  !*** external "@deriv/translations" ***!\n  \\**************************************/\n/***/ ((module) => {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__deriv_translations__;\n\n/***/ }),\n\n/***/ "mobx":\n/*!***********************!*\\\n  !*** external "mobx" ***!\n  \\***********************/\n/***/ ((module) => {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_mobx__;\n\n/***/ }),\n\n/***/ "react":\n/*!************************!*\\\n  !*** external "react" ***!\n  \\************************/\n/***/ ((module) => {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_react__;\n\n/***/ }),\n\n/***/ "react-dom":\n/*!****************************!*\\\n  !*** external "react-dom" ***!\n  \\****************************/\n/***/ ((module) => {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_react_dom__;\n\n/***/ }),\n\n/***/ "react-router":\n/*!*******************************!*\\\n  !*** external "react-router" ***!\n  \\*******************************/\n/***/ ((module) => {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_react_router__;\n\n/***/ }),\n\n/***/ "react-router-dom":\n/*!***********************************!*\\\n  !*** external "react-router-dom" ***!\n  \\***********************************/\n/***/ ((module) => {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_react_router_dom__;\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __nested_webpack_require_7793__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __nested_webpack_require_7793__);\n/******/ \t\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__nested_webpack_require_7793__.m = __webpack_modules__;\n/******/ \t\n/************************************************************************/\n/******/ \t/* webpack/runtime/compat get default export */\n/******/ \t(() => {\n/******/ \t\t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t\t__nested_webpack_require_7793__.n = (module) => {\n/******/ \t\t\tvar getter = module && module.__esModule ?\n/******/ \t\t\t\t() => (module[\'default\']) :\n/******/ \t\t\t\t() => (module);\n/******/ \t\t\t__nested_webpack_require_7793__.d(getter, { a: getter });\n/******/ \t\t\treturn getter;\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/define property getters */\n/******/ \t(() => {\n/******/ \t\t// define getter functions for harmony exports\n/******/ \t\t__nested_webpack_require_7793__.d = (exports, definition) => {\n/******/ \t\t\tfor(var key in definition) {\n/******/ \t\t\t\tif(__nested_webpack_require_7793__.o(definition, key) && !__nested_webpack_require_7793__.o(exports, key)) {\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/ensure chunk */\n/******/ \t(() => {\n/******/ \t\t__nested_webpack_require_7793__.f = {};\n/******/ \t\t// This file contains only the entry chunk.\n/******/ \t\t// The chunk loading function for additional chunks\n/******/ \t\t__nested_webpack_require_7793__.e = (chunkId) => {\n/******/ \t\t\treturn Promise.all(Object.keys(__nested_webpack_require_7793__.f).reduce((promises, key) => {\n/******/ \t\t\t\t__nested_webpack_require_7793__.f[key](chunkId, promises);\n/******/ \t\t\t\treturn promises;\n/******/ \t\t\t}, []));\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/get javascript chunk filename */\n/******/ \t(() => {\n/******/ \t\t// This function allow to reference async chunks\n/******/ \t\t__nested_webpack_require_7793__.u = (chunkId) => {\n/******/ \t\t\t// return url for filenames based on template\n/******/ \t\t\treturn "cashier/js/cashier." + chunkId + "." + {"vendors-node_modules_deriv-com_ui_dist_components_Text_index_js":"54aebc55ba6af9c97ff3","vendors-node_modules_deriv_deriv-api_dist_DerivAPIBasic_js-node_modules_bowser_es5_js-node_mo-a703c0":"f470d642256bffa1c84f","cashier-app":"012ca136948f723b5654","cashier-breadcrumb":"0ff513b3ab1ada6354ca"}[chunkId] + ".js";\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/get mini-css chunk filename */\n/******/ \t(() => {\n/******/ \t\t// This function allow to reference all chunks\n/******/ \t\t__nested_webpack_require_7793__.miniCssF = (chunkId) => {\n/******/ \t\t\t// return url for filenames based on template\n/******/ \t\t\treturn "cashier/css/" + chunkId + "." + {"vendors-node_modules_deriv-com_ui_dist_components_Text_index_js":"0300173a6650fee81399","vendors-node_modules_deriv_deriv-api_dist_DerivAPIBasic_js-node_modules_bowser_es5_js-node_mo-a703c0":"e4117cb69d8a9414da39","cashier-app":"2f273bd40251315a5c8b","vendors-node_modules_deriv-com_ui_dist_assets_Breadcrumbs_css-node_modules_deriv-com_ui_dist_-5970c9":"682f333ebf0af7da9072"}[chunkId] + ".css";\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/global */\n/******/ \t(() => {\n/******/ \t\t__nested_webpack_require_7793__.g = (function() {\n/******/ \t\t\tif (typeof globalThis === \'object\') return globalThis;\n/******/ \t\t\ttry {\n/******/ \t\t\t\treturn this || new Function(\'return this\')();\n/******/ \t\t\t} catch (e) {\n/******/ \t\t\t\tif (typeof window === \'object\') return window;\n/******/ \t\t\t}\n/******/ \t\t})();\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\n/******/ \t(() => {\n/******/ \t\t__nested_webpack_require_7793__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/load script */\n/******/ \t(() => {\n/******/ \t\tvar inProgress = {};\n/******/ \t\tvar dataWebpackPrefix = "@deriv/cashier:";\n/******/ \t\t// loadScript function to load a script via script tag\n/******/ \t\t__nested_webpack_require_7793__.l = (url, done, key, chunkId) => {\n/******/ \t\t\tif(inProgress[url]) { inProgress[url].push(done); return; }\n/******/ \t\t\tvar script, needAttach;\n/******/ \t\t\tif(key !== undefined) {\n/******/ \t\t\t\tvar scripts = document.getElementsByTagName("script");\n/******/ \t\t\t\tfor(var i = 0; i < scripts.length; i++) {\n/******/ \t\t\t\t\tvar s = scripts[i];\n/******/ \t\t\t\t\tif(s.getAttribute("src") == url || s.getAttribute("data-webpack") == dataWebpackPrefix + key) { script = s; break; }\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t\tif(!script) {\n/******/ \t\t\t\tneedAttach = true;\n/******/ \t\t\t\tscript = document.createElement(\'script\');\n/******/ \t\t\n/******/ \t\t\t\tscript.charset = \'utf-8\';\n/******/ \t\t\t\tscript.timeout = 120;\n/******/ \t\t\t\tif (__nested_webpack_require_7793__.nc) {\n/******/ \t\t\t\t\tscript.setAttribute("nonce", __nested_webpack_require_7793__.nc);\n/******/ \t\t\t\t}\n/******/ \t\t\t\tscript.setAttribute("data-webpack", dataWebpackPrefix + key);\n/******/ \t\t\n/******/ \t\t\t\tscript.src = url;\n/******/ \t\t\t}\n/******/ \t\t\tinProgress[url] = [done];\n/******/ \t\t\tvar onScriptComplete = (prev, event) => {\n/******/ \t\t\t\t// avoid mem leaks in IE.\n/******/ \t\t\t\tscript.onerror = script.onload = null;\n/******/ \t\t\t\tclearTimeout(timeout);\n/******/ \t\t\t\tvar doneFns = inProgress[url];\n/******/ \t\t\t\tdelete inProgress[url];\n/******/ \t\t\t\tscript.parentNode && script.parentNode.removeChild(script);\n/******/ \t\t\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n/******/ \t\t\t\tif(prev) return prev(event);\n/******/ \t\t\t}\n/******/ \t\t\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: \'timeout\', target: script }), 120000);\n/******/ \t\t\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n/******/ \t\t\tscript.onload = onScriptComplete.bind(null, script.onload);\n/******/ \t\t\tneedAttach && document.head.appendChild(script);\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/make namespace object */\n/******/ \t(() => {\n/******/ \t\t// define __esModule on exports\n/******/ \t\t__nested_webpack_require_7793__.r = (exports) => {\n/******/ \t\t\tif(typeof Symbol !== \'undefined\' && Symbol.toStringTag) {\n/******/ \t\t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: \'Module\' });\n/******/ \t\t\t}\n/******/ \t\t\tObject.defineProperty(exports, \'__esModule\', { value: true });\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/node module decorator */\n/******/ \t(() => {\n/******/ \t\t__nested_webpack_require_7793__.nmd = (module) => {\n/******/ \t\t\tmodule.paths = [];\n/******/ \t\t\tif (!module.children) module.children = [];\n/******/ \t\t\treturn module;\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/publicPath */\n/******/ \t(() => {\n/******/ \t\t__nested_webpack_require_7793__.p = "/";\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/css loading */\n/******/ \t(() => {\n/******/ \t\tvar createStylesheet = (chunkId, fullhref, resolve, reject) => {\n/******/ \t\t\tvar linkTag = document.createElement("link");\n/******/ \t\t\n/******/ \t\t\tlinkTag.rel = "stylesheet";\n/******/ \t\t\tlinkTag.type = "text/css";\n/******/ \t\t\tvar onLinkComplete = (event) => {\n/******/ \t\t\t\t// avoid mem leaks.\n/******/ \t\t\t\tlinkTag.onerror = linkTag.onload = null;\n/******/ \t\t\t\tif (event.type === \'load\') {\n/******/ \t\t\t\t\tresolve();\n/******/ \t\t\t\t} else {\n/******/ \t\t\t\t\tvar errorType = event && (event.type === \'load\' ? \'missing\' : event.type);\n/******/ \t\t\t\t\tvar realHref = event && event.target && event.target.href || fullhref;\n/******/ \t\t\t\t\tvar err = new Error("Loading CSS chunk " + chunkId + " failed.\\n(" + realHref + ")");\n/******/ \t\t\t\t\terr.code = "CSS_CHUNK_LOAD_FAILED";\n/******/ \t\t\t\t\terr.type = errorType;\n/******/ \t\t\t\t\terr.request = realHref;\n/******/ \t\t\t\t\tlinkTag.parentNode.removeChild(linkTag)\n/******/ \t\t\t\t\treject(err);\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t\tlinkTag.onerror = linkTag.onload = onLinkComplete;\n/******/ \t\t\tlinkTag.href = fullhref;\n/******/ \t\t\n/******/ \t\t\tdocument.head.appendChild(linkTag);\n/******/ \t\t\treturn linkTag;\n/******/ \t\t};\n/******/ \t\tvar findStylesheet = (href, fullhref) => {\n/******/ \t\t\tvar existingLinkTags = document.getElementsByTagName("link");\n/******/ \t\t\tfor(var i = 0; i < existingLinkTags.length; i++) {\n/******/ \t\t\t\tvar tag = existingLinkTags[i];\n/******/ \t\t\t\tvar dataHref = tag.getAttribute("data-href") || tag.getAttribute("href");\n/******/ \t\t\t\tif(tag.rel === "stylesheet" && (dataHref === href || dataHref === fullhref)) return tag;\n/******/ \t\t\t}\n/******/ \t\t\tvar existingStyleTags = document.getElementsByTagName("style");\n/******/ \t\t\tfor(var i = 0; i < existingStyleTags.length; i++) {\n/******/ \t\t\t\tvar tag = existingStyleTags[i];\n/******/ \t\t\t\tvar dataHref = tag.getAttribute("data-href");\n/******/ \t\t\t\tif(dataHref === href || dataHref === fullhref) return tag;\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t\tvar loadStylesheet = (chunkId) => {\n/******/ \t\t\treturn new Promise((resolve, reject) => {\n/******/ \t\t\t\tvar href = __nested_webpack_require_7793__.miniCssF(chunkId);\n/******/ \t\t\t\tvar fullhref = __nested_webpack_require_7793__.p + href;\n/******/ \t\t\t\tif(findStylesheet(href, fullhref)) return resolve();\n/******/ \t\t\t\tcreateStylesheet(chunkId, fullhref, resolve, reject);\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t\t// object to store loaded CSS chunks\n/******/ \t\tvar installedCssChunks = {\n/******/ \t\t\t"cashier": 0\n/******/ \t\t};\n/******/ \t\t\n/******/ \t\t__nested_webpack_require_7793__.f.miniCss = (chunkId, promises) => {\n/******/ \t\t\tvar cssChunks = {"vendors-node_modules_deriv-com_ui_dist_components_Text_index_js":1,"vendors-node_modules_deriv_deriv-api_dist_DerivAPIBasic_js-node_modules_bowser_es5_js-node_mo-a703c0":1,"cashier-app":1,"vendors-node_modules_deriv-com_ui_dist_assets_Breadcrumbs_css-node_modules_deriv-com_ui_dist_-5970c9":1};\n/******/ \t\t\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n/******/ \t\t\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n/******/ \t\t\t\tpromises.push(installedCssChunks[chunkId] = loadStylesheet(chunkId).then(() => {\n/******/ \t\t\t\t\tinstalledCssChunks[chunkId] = 0;\n/******/ \t\t\t\t}, (e) => {\n/******/ \t\t\t\t\tdelete installedCssChunks[chunkId];\n/******/ \t\t\t\t\tthrow e;\n/******/ \t\t\t\t}));\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t\t\n/******/ \t\t// no hmr\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/jsonp chunk loading */\n/******/ \t(() => {\n/******/ \t\t// no baseURI\n/******/ \t\t\n/******/ \t\t// object to store loaded and loading chunks\n/******/ \t\t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n/******/ \t\t// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\n/******/ \t\tvar installedChunks = {\n/******/ \t\t\t"cashier": 0\n/******/ \t\t};\n/******/ \t\t\n/******/ \t\t__nested_webpack_require_7793__.f.j = (chunkId, promises) => {\n/******/ \t\t\t\t// JSONP chunk loading for javascript\n/******/ \t\t\t\tvar installedChunkData = __nested_webpack_require_7793__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n/******/ \t\t\t\tif(installedChunkData !== 0) { // 0 means "already installed".\n/******/ \t\t\n/******/ \t\t\t\t\t// a Promise means "currently loading".\n/******/ \t\t\t\t\tif(installedChunkData) {\n/******/ \t\t\t\t\t\tpromises.push(installedChunkData[2]);\n/******/ \t\t\t\t\t} else {\n/******/ \t\t\t\t\t\tif("vendors-node_modules_deriv-com_ui_dist_assets_Breadcrumbs_css-node_modules_deriv-com_ui_dist_-5970c9" != chunkId) {\n/******/ \t\t\t\t\t\t\t// setup Promise in chunk cache\n/******/ \t\t\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n/******/ \t\t\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n/******/ \t\t\n/******/ \t\t\t\t\t\t\t// start chunk loading\n/******/ \t\t\t\t\t\t\tvar url = __nested_webpack_require_7793__.p + __nested_webpack_require_7793__.u(chunkId);\n/******/ \t\t\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n/******/ \t\t\t\t\t\t\tvar error = new Error();\n/******/ \t\t\t\t\t\t\tvar loadingEnded = (event) => {\n/******/ \t\t\t\t\t\t\t\tif(__nested_webpack_require_7793__.o(installedChunks, chunkId)) {\n/******/ \t\t\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n/******/ \t\t\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n/******/ \t\t\t\t\t\t\t\t\tif(installedChunkData) {\n/******/ \t\t\t\t\t\t\t\t\t\tvar errorType = event && (event.type === \'load\' ? \'missing\' : event.type);\n/******/ \t\t\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n/******/ \t\t\t\t\t\t\t\t\t\terror.message = \'Loading chunk \' + chunkId + \' failed.\\n(\' + errorType + \': \' + realSrc + \')\';\n/******/ \t\t\t\t\t\t\t\t\t\terror.name = \'ChunkLoadError\';\n/******/ \t\t\t\t\t\t\t\t\t\terror.type = errorType;\n/******/ \t\t\t\t\t\t\t\t\t\terror.request = realSrc;\n/******/ \t\t\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n/******/ \t\t\t\t\t\t\t\t\t}\n/******/ \t\t\t\t\t\t\t\t}\n/******/ \t\t\t\t\t\t\t};\n/******/ \t\t\t\t\t\t\t__nested_webpack_require_7793__.l(url, loadingEnded, "chunk-" + chunkId, chunkId);\n/******/ \t\t\t\t\t\t} else installedChunks[chunkId] = 0;\n/******/ \t\t\t\t\t}\n/******/ \t\t\t\t}\n/******/ \t\t};\n/******/ \t\t\n/******/ \t\t// no prefetching\n/******/ \t\t\n/******/ \t\t// no preloaded\n/******/ \t\t\n/******/ \t\t// no HMR\n/******/ \t\t\n/******/ \t\t// no HMR manifest\n/******/ \t\t\n/******/ \t\t// no on chunks loaded\n/******/ \t\t\n/******/ \t\t// install a JSONP callback for chunk loading\n/******/ \t\tvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n/******/ \t\t\tvar [chunkIds, moreModules, runtime] = data;\n/******/ \t\t\t// add "moreModules" to the modules object,\n/******/ \t\t\t// then flag all "chunkIds" as loaded and fire callback\n/******/ \t\t\tvar moduleId, chunkId, i = 0;\n/******/ \t\t\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n/******/ \t\t\t\tfor(moduleId in moreModules) {\n/******/ \t\t\t\t\tif(__nested_webpack_require_7793__.o(moreModules, moduleId)) {\n/******/ \t\t\t\t\t\t__nested_webpack_require_7793__.m[moduleId] = moreModules[moduleId];\n/******/ \t\t\t\t\t}\n/******/ \t\t\t\t}\n/******/ \t\t\t\tif(runtime) var result = runtime(__nested_webpack_require_7793__);\n/******/ \t\t\t}\n/******/ \t\t\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n/******/ \t\t\tfor(;i < chunkIds.length; i++) {\n/******/ \t\t\t\tchunkId = chunkIds[i];\n/******/ \t\t\t\tif(__nested_webpack_require_7793__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n/******/ \t\t\t\t\tinstalledChunks[chunkId][0]();\n/******/ \t\t\t\t}\n/******/ \t\t\t\tinstalledChunks[chunkId] = 0;\n/******/ \t\t\t}\n/******/ \t\t\n/******/ \t\t}\n/******/ \t\t\n/******/ \t\tvar chunkLoadingGlobal = self["webpackChunk_deriv_cashier"] = self["webpackChunk_deriv_cashier"] || [];\n/******/ \t\tchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\n/******/ \t\tchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));\n/******/ \t})();\n/******/ \t\n/************************************************************************/\n/******/ \t\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \t// This entry module can\'t be inlined because the eval-source-map devtool is used.\n/******/ \tvar __nested_webpack_exports__ = __nested_webpack_require_7793__("./index.tsx");\n/******/ \t__nested_webpack_exports__ = __nested_webpack_exports__["default"];\n/******/ \t\n/******/ \treturn __nested_webpack_exports__;\n/******/ })()\n;\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../cashier/dist/cashier/js/cashier.js\n'
                );

                /***/
            },

        /***/ '../../p2p/dist/p2p/js/index.js':
            /*!**************************************!*\
  !*** ../../p2p/dist/p2p/js/index.js ***!
  \**************************************/
            /***/ (module, __unused_webpack_exports, __webpack_require__) => {
                eval(
                    '/*\n * ATTENTION: An "eval-source-map" devtool has been used.\n * This devtool is neither made for production nor for readable output files.\n * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.\n * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)\n * or disable the default devtool with "devtool: false".\n * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory(__webpack_require__(/*! react */ "../../../node_modules/react/index.js"), __webpack_require__(/*! @deriv/shared */ "../../shared/src/index.ts"), __webpack_require__(/*! @deriv/components */ "../../components/src/index.ts"), __webpack_require__(/*! react-router-dom */ "../../../node_modules/react-router-dom/esm/react-router-dom.js"), __webpack_require__(/*! @deriv-com/analytics */ "../../../node_modules/@deriv-com/analytics/lib/index.js"), __webpack_require__(/*! @deriv/hooks */ "../../hooks/src/index.ts"), __webpack_require__(/*! @deriv/stores */ "../../stores/src/index.ts"), __webpack_require__(/*! @deriv/translations */ "../../translations/src/index.js"), __webpack_require__(/*! react-dom */ "../../../node_modules/react-dom/index.js"), __webpack_require__(/*! prop-types */ "../../../node_modules/prop-types/index.js"), __webpack_require__(/*! react-router */ "../../../node_modules/react-router/esm/react-router.js"), __webpack_require__(/*! formik */ "../../../node_modules/formik/dist/formik.esm.js"), __webpack_require__(/*! @deriv/api */ "../../api/src/index.ts"), __webpack_require__(/*! lodash.debounce */ "../../../node_modules/lodash.debounce/index.js"));\n\telse {}\n})(self, (__WEBPACK_EXTERNAL_MODULE_react__, __WEBPACK_EXTERNAL_MODULE__deriv_shared__, __WEBPACK_EXTERNAL_MODULE__deriv_components__, __WEBPACK_EXTERNAL_MODULE_react_router_dom__, __WEBPACK_EXTERNAL_MODULE__deriv_com_analytics__, __WEBPACK_EXTERNAL_MODULE__deriv_hooks__, __WEBPACK_EXTERNAL_MODULE__deriv_stores__, __WEBPACK_EXTERNAL_MODULE__deriv_translations__, __WEBPACK_EXTERNAL_MODULE_react_dom__, __WEBPACK_EXTERNAL_MODULE_prop_types__, __WEBPACK_EXTERNAL_MODULE_react_router__, __WEBPACK_EXTERNAL_MODULE_formik__, __WEBPACK_EXTERNAL_MODULE__deriv_api__, __WEBPACK_EXTERNAL_MODULE_lodash_debounce__) => {\nreturn /******/ (() => { // webpackBootstrap\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ "../../node_modules/css-loader/dist/cjs.js!../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../node_modules/sass-loader/dist/cjs.js!../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./src/pages/index.scss":\n/*!********************************************************************************************************************************************************************************************************************************************************************************!*\\\n  !*** ../../node_modules/css-loader/dist/cjs.js!../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../node_modules/sass-loader/dist/cjs.js!../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./src/pages/index.scss ***!\n  \\********************************************************************************************************************************************************************************************************************************************************************************/\n/***/ ((module, __webpack_exports__, __webpack_require__) => {\n\n"use strict";\neval("__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\"default\\": () => (__WEBPACK_DEFAULT_EXPORT__)\\n/* harmony export */ });\\n/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js */ \\"../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\\");\\n/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__);\\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/api.js */ \\"../../node_modules/css-loader/dist/runtime/api.js\\");\\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\\n// Imports\\n\\n\\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default()));\\n// Module\\n___CSS_LOADER_EXPORT___.push([module.id, \\"/*------------------------------------*\\\\n *  # Constants\\\\n *------------------------------------*/\\\\n/*RTL Language Mixin*/\\\\n/* stylelint-disable color-no-hex */\\\\n/* COLOR PALETTE */\\\\n/* colors */\\\\n/* status colors */\\\\n/* alpha colors */\\\\n/* gradient colors */\\\\n/* Preserve legacy variables */\\\\n/* Primary */\\\\n/* stylelint-enable color-no-hex */\\\\n/* Wallet gradient background */\\\\n/* App Cards gradient background */\\\\n/* Wallets */\\\\n/*------------------------------------*\\\\n *  # SASS Mixins and Functions\\\\n *------------------------------------*/\\\\n/*\\\\n * SASS interpolation\\\\n */\\\\n/*\\\\n * PX to EM\\\\n * @param $px - px value to be converted\\\\n * @param $base - base font size (in `em`)\\\\n * Note: \'em\' values are calculate based on the element font-size\\\\n *       to properly converts \'px\' to \'em\', please pass in the element font-size with it\\\\n * Usage example:\\\\n    padding: em(16px, 1.6em); // font-size in \'em\'\\\\n */\\\\n/*\\\\n * Set property by passing a property name, and values.\\\\n * @param $property name - padding, margin etc.\\\\n * @param $values        - values in `px` (space separated for multiple values)\\\\n * @param $font-size     - base font-size in `em`\\\\n * Usage example:\\\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\\\n */\\\\n/*\\\\n * Generate typefaces key-value pair of variable name and config\\\\n * Example:\\\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\\\n */\\\\n/*\\\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\\\n * Usage example:\\\\n   @include setTypeface(16px, bold, black, uppercase);\\\\n */\\\\n/*\\\\n * Set typefaces by passing a typeface variable name\\\\n * @param $var   - typeface variable\\\\n * @param $tt    - text-transform property\\\\n * @param $align - text-align property\\\\n * Usage example:\\\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\\\n */\\\\n/*\\\\n * Range Slider Thumb styling is set here\\\\n */\\\\n/*\\\\n * SVG icons colors\\\\n */\\\\n/*\\\\n * Bar Spinner Animation\\\\n * @param $count    - number of bars\\\\n * @param $duration - duration of animation\\\\n * @param $phase    - each bar phase change delay\\\\n * Usage example:\\\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\\\n */\\\\n/*\\\\n * Tooltip colors\\\\n * @param $color - color property\\\\n * Usage example:\\\\n   @include tooltipColor($COLOR_RED);\\\\n */\\\\n/*\\\\n * Convert Tooltip colors\\\\n * @param $color - css color property\\\\n * Usage example:\\\\n   @include convertTooltipColor(var(--status-default));\\\\n */\\\\n/*\\\\n    Constants\\\\n*/\\\\n/*\\\\n    Variables\\\\n*/\\\\n/*\\\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\\\n    Variables name example: --title-center-semibold-red\\\\n */\\\\n/*\\\\n    to use styles without modifier class on .inline-icon\\\\n    use @extend\\\\n\\\\n    e.g. style icon on parent hover:\\\\n        a:hover .inline-icon {\\\\n            @extend %inline-icon-active;\\\\n        }\\\\n*/\\\\n/**\\\\n * Define Breakpoints here.\\\\n */\\\\n/** Need to add new breakpoints for mixins */\\\\n.p2p-app-loader {\\\\n  height: 80vh;\\\\n  width: 100%;\\\\n}\\", \\"\\",{\\"version\\":3,\\"sources\\":[\\"webpack://./src/pages/index.scss\\"],\\"names\\":[],\\"mappings\\":\\"AAAA;;uCAAA;AAIA,qBAAA;AAQA,mCAAA;AAEA,kBAAA;AAEA,WAAA;AAwEA,kBAAA;AAQA,iBAAA;AAuBA,oBAAA;AA+BA,8BAAA;AACA,YAAA;AAsDA,kCAAA;AAsBA,+BAAA;AAmBA,kCAAA;AAIA,YAAA;AASA;;uCAAA;AAIA;;EAAA;AAkCA;;;;;;;;EAAA;AAsBA;;;;;;;EAAA;AAYA;;;;EAAA;AAyBA;;;;EAAA;AAkCA;;;;;;;EAAA;AAqBA;;EAAA;AAkBA;;EAAA;AAgBA;;;;;;;EAAA;AAkBA;;;;;EAAA;AA4BA;;;;;EAAA;AA4BA;;CAAA;AAMA;;CAAA;AAoCA;;;;EAAA;AAOA;;;;;;;;CAAA;AAmCA;;EAAA;AA+DA,4CAAA;AA8CA;EACI,YAAA;EACA,WAAA;AA5lBJ\\",\\"sourcesContent\\":[\\"/*------------------------------------*\\\\n *  # Constants\\\\n *------------------------------------*/\\\\n\\\\n/*RTL Language Mixin*/\\\\n\\\\n@mixin rtl {\\\\n    [dir=\'rtl\'] & {\\\\n        @content;\\\\n    }\\\\n}\\\\n\\\\n/* stylelint-disable color-no-hex */\\\\n\\\\n/* COLOR PALETTE */\\\\n\\\\n/* colors */\\\\n$color-black: #0e0e0e;\\\\n$color-black-1: #333333;\\\\n$color-black-3: #151717;\\\\n$color-black-4: #1d1f20;\\\\n$color-black-5: #242828;\\\\n$color-black-6: #3e3e3e;\\\\n$color-black-7: #000000;\\\\n$color-black-8: #323738;\\\\n$color-black-9: #5c5c5c;\\\\n$color-blue: #377cfc;\\\\n$color-blue-1: #0dc2e7;\\\\n$color-blue-2: #2a3052;\\\\n$color-blue-3: #0796e0;\\\\n$color-blue-4: #0677af;\\\\n$color-blue-5: #dfeaff;\\\\n$color-blue-6: #92b8ff;\\\\n$color-blue-7: #182130;\\\\n$color-blue-8: #e6f5ff;\\\\n$color-blue-9: #00426a;\\\\n$color-brown: #664407;\\\\n$color-green: #85acb0;\\\\n$color-green-1: #4bb4b3;\\\\n$color-green-2: #3d9494;\\\\n$color-green-3: #00a79e;\\\\n$color-green-4: #008079;\\\\n$color-green-5: #4bb4b329;\\\\n$color-green-6: #17eabd;\\\\n$color-green-7: #e8fdf8;\\\\n$color-green-8: #cedddf;\\\\n$color-grey: #c2c2c2;\\\\n$color-grey-1: #999999;\\\\n$color-grey-2: #f2f3f4;\\\\n$color-grey-3: #eaeced;\\\\n$color-grey-4: #e6e9e9;\\\\n$color-grey-5: #d6dadb;\\\\n$color-grey-6: #d6d6d6;\\\\n$color-grey-7: #6e6e6e;\\\\n$color-grey-8: #d7d7d7;\\\\n$color_grey-9: #868686;\\\\n$color-grey-10: #919191;\\\\n$color-grey-11: #fafafa;\\\\n$color-grey-12: #f5f7fa;\\\\n$color-grey-13: #2e2e2e;\\\\n$color-grey-14: #e2e5e7;\\\\n$color-grey-15: #f3f4f5;\\\\n$color-orange: #ff6444;\\\\n$color-orange-2: #ff9c13;\\\\n$color-purple: #722fe4;\\\\n$color-red: #ff444f;\\\\n$color-red-1: #ec3f3f;\\\\n$color-red-2: #cc2e3d;\\\\n$color-red-3: #a32430;\\\\n$color-red-4: #d33636;\\\\n$color-red-5: #eb3e48;\\\\n$color-red-6: #ec3f3f29;\\\\n$color-red-7: #ffe1e3;\\\\n$color-red-8: #661b20;\\\\n$color-red-9: #b33037;\\\\n$color-red-10: #ff444f;\\\\n$color-red-11: #fce3e3;\\\\n$color-red-12: #c40000;\\\\n$color-violet: #4a3871;\\\\n$color-white: #ffffff;\\\\n$color-yellow: #ffad3a;\\\\n$color-yellow-1: #b3760d;\\\\n$color-yellow-2: #ffa912;\\\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\\\n$color-yellow-4: #fff7e6;\\\\n$color-yellow-5: #6a4800;\\\\n$color-yellow-6: #ffeabf;\\\\n\\\\n/* status colors */\\\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\\\n$color-status-information: rgba(55, 124, 252, 0.16);\\\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\\\n$color-status-error: rgba(236, 63, 63, 0.16);\\\\n$color-status-verified: rgba(0, 122, 34);\\\\n$color-status-danger: rgba(196, 0, 0);\\\\n\\\\n/* alpha colors */\\\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\\\n\\\\n/* gradient colors */\\\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\\\n\\\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\\\n\\\\n/* Preserve legacy variables */\\\\n/* Primary */\\\\n\\\\n$COLOR_BLACK: #000000;\\\\n$COLOR_BLACK_2: #1d1f20;\\\\n$COLOR_BLACK_3: #0e0e0e;\\\\n$COLOR_GREEN_1: #39b19d;\\\\n$COLOR_GREEN_2: #2d9f93;\\\\n$COLOR_GREEN_3: #21ce99;\\\\n$COLOR_GREEN_4: #00a79e;\\\\n$COLOR_GREEN_5: #4bb4b3;\\\\n$COLOR_ORANGE: #ff9933;\\\\n$COLOR_DARK_ORANGE: #ff8802;\\\\n$COLOR_PURPLE: #4f60ae;\\\\n$COLOR_RED: #e31c4b;\\\\n$COLOR_RED_2: #cc2e3d;\\\\n$COLOR_RED_3: #ec3f3f;\\\\n$COLOR_CORAL_RED: #ff444f;\\\\n$COLOR_SKY_BLUE: #2196f3;\\\\n$COLOR_WHITE: #ffffff;\\\\n$COLOR_BLUE: #1c5ae3;\\\\n\\\\n// Light theme\\\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\\\n$COLOR_LIGHT_GRAY_1: #999cac;\\\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\\\n// Dark theme\\\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\\\n$COLOR_DARK_BLUE_1: #0b0e18;\\\\n$COLOR_DARK_BLUE_2: #101320;\\\\n$COLOR_DARK_BLUE_3: #191c31;\\\\n$COLOR_DARK_BLUE_4: #202641;\\\\n$COLOR_DARK_BLUE_5: #2a3052;\\\\n$COLOR_DARK_BLUE_6: #555975;\\\\n$COLOR_DARK_BLUE_7: #7f8397;\\\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\\\n$COLOR_DARK_GRAY_1: #282a37;\\\\n$COLOR_DARK_GRAY_2: #303342;\\\\n$COLOR_DARK_GRAY_3: #555975;\\\\n$COLOR_DARK_GRAY_4: #999999;\\\\n/* stylelint-enable color-no-hex */\\\\n\\\\n$BORDER_RADIUS: 4px;\\\\n$BORDER_RADIUS_2: 8px;\\\\n\\\\n$MAX_CONTAINER_WIDTH: 1440px;\\\\n\\\\n$POSITIONS_DRAWER_WIDTH: 240px;\\\\n$POSITIONS_DRAWER_MARGIN: 8px;\\\\n\\\\n$HEADER_HEIGHT: 48px;\\\\n$FOOTER_HEIGHT: 36px;\\\\n\\\\n$MOBILE_HEADER_HEIGHT: 40px;\\\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\\\n\\\\n$SIDEBAR_WIDTH: 240px;\\\\n\\\\n/* Wallet gradient background */\\\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\\\n\\\\n/* App Cards gradient background */\\\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\\\n\\\\n/* Wallets */\\\\n$ready-banner-bg-color: #e2f3f3;\\\\n$ready-banner-tick-bg-color: #4ab4b3;\\\\n$wallet-demo-bg-color: #fff8f9;\\\\n$wallet-dark-demo-bg-color: #140506;\\\\n$wallet-demo-divider-color: #fff0f1;\\\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\\\n\\\\n/*------------------------------------*\\\\n *  # SASS Mixins and Functions\\\\n *------------------------------------*/\\\\n\\\\n/*\\\\n * SASS interpolation\\\\n */\\\\n// Requires the calc-interpolation function which can also be used independently\\\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\\\n    $b: $min-value - $a * $min-screen;\\\\n\\\\n    $sign: \'+\';\\\\n    @if ($b < 0) {\\\\n        $sign: \'-\';\\\\n        $b: abs($b);\\\\n    }\\\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\\\n}\\\\n\\\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\\\n    & {\\\\n        @each $property in $properties {\\\\n            #{$property}: $min-value;\\\\n        }\\\\n        @media screen and (min-width: $min-screen) {\\\\n            @each $property in $properties {\\\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\\\n            }\\\\n        }\\\\n        @media screen and (min-width: $max-screen) {\\\\n            @each $property in $properties {\\\\n                #{$property}: $max-value;\\\\n            }\\\\n        }\\\\n    }\\\\n}\\\\n\\\\n/*\\\\n * PX to EM\\\\n * @param $px - px value to be converted\\\\n * @param $base - base font size (in `em`)\\\\n * Note: \'em\' values are calculate based on the element font-size\\\\n *       to properly converts \'px\' to \'em\', please pass in the element font-size with it\\\\n * Usage example:\\\\n    padding: em(16px, 1.6em); // font-size in \'em\'\\\\n */\\\\n@function em($px, $base: $BASE_FONT_SIZE) {\\\\n    $list: ();\\\\n    @if length($px) != 1 {\\\\n        @for $i from 1 through length($px) {\\\\n            $val_em: (nth($px, $i) / $base) * 1em;\\\\n            $list: append($list, $val_em, space);\\\\n        }\\\\n        @return $list;\\\\n    } @else {\\\\n        @return ($px / $base) * 1em;\\\\n    }\\\\n}\\\\n\\\\n/*\\\\n * Set property by passing a property name, and values.\\\\n * @param $property name - padding, margin etc.\\\\n * @param $values        - values in `px` (space separated for multiple values)\\\\n * @param $font-size     - base font-size in `em`\\\\n * Usage example:\\\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\\\n */\\\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\\\n    #{$property}: em($values, $font-size);\\\\n}\\\\n\\\\n/*\\\\n * Generate typefaces key-value pair of variable name and config\\\\n * Example:\\\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\\\n */\\\\n@function generate-typefaces() {\\\\n    $typeface_list: ();\\\\n    @each $fontsize_name, $size in $FONT_SIZES {\\\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\\\n            @each $color_name, $color in $FONT_COLORS {\\\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\\\n                    $val: ($size, $text_align, $weight, $color);\\\\n                    $typeface: (\\\\n                        $key: $val,\\\\n                    );\\\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\\\n                }\\\\n            }\\\\n        }\\\\n    }\\\\n    // @debug $typeface_list; /* uncomment to debug */\\\\n    @return $typeface_list;\\\\n}\\\\n\\\\n/*\\\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\\\n * Usage example:\\\\n   @include setTypeface(16px, bold, black, uppercase);\\\\n */\\\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\\\n    @if $size {\\\\n        font-size: $size;\\\\n    }\\\\n    @if $colour {\\\\n        color: $colour;\\\\n    }\\\\n    @if $weight {\\\\n        font-weight: $weight;\\\\n    }\\\\n    @if $tt {\\\\n        text-transform: $tt;\\\\n    }\\\\n    @if $align {\\\\n        text-align: $align;\\\\n    }\\\\n    @if $size == 1.6rem {\\\\n        line-height: map-get($map: $LINEHEIGHTS, $key: \'large\');\\\\n    } @else if $size == 1.4rem {\\\\n        line-height: map-get($map: $LINEHEIGHTS, $key: \'medium\');\\\\n    } @else if $size == 1.2rem {\\\\n        line-height: map-get($map: $LINEHEIGHTS, $key: \'small\');\\\\n    } @else if $size == 1rem {\\\\n        line-height: map-get($map: $LINEHEIGHTS, $key: \'xsmall\');\\\\n    } @else {\\\\n        line-height: unset;\\\\n    }\\\\n}\\\\n\\\\n/*\\\\n * Set typefaces by passing a typeface variable name\\\\n * @param $var   - typeface variable\\\\n * @param $tt    - text-transform property\\\\n * @param $align - text-align property\\\\n * Usage example:\\\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\\\n */\\\\n@mixin typeface($var, $tt: none) {\\\\n    $typeface_config: map-get(\\\\n        $map: $TYPEFACES_LIST,\\\\n        $key: $var,\\\\n    );\\\\n\\\\n    $size: nth($typeface_config, 1); // font-size\\\\n    $align: nth($typeface_config, 2); // text-align\\\\n    $weight: nth($typeface_config, 3); // font-weight\\\\n    $color: nth($typeface_config, 4); // color\\\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\\\n}\\\\n\\\\n/*\\\\n * Range Slider Thumb styling is set here\\\\n */\\\\n@mixin thumbStyle() {\\\\n    appearance: none;\\\\n    width: 1em;\\\\n    height: 1em;\\\\n    border-radius: 100%;\\\\n    border: 0;\\\\n    cursor: pointer;\\\\n    transition: box-shadow 0.2s;\\\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\\\n\\\\n    &:hover {\\\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\\\n    }\\\\n}\\\\n\\\\n/*\\\\n * SVG icons colors\\\\n */\\\\n@mixin colorIcon($colors...) {\\\\n    @for $i from 1 through length($colors) {\\\\n        /* postcss-bem-linter: ignore */\\\\n        .color#{$i}-fill {\\\\n            fill: nth($colors, $i);\\\\n        }\\\\n        /* postcss-bem-linter: ignore */\\\\n        .color#{$i}-stroke {\\\\n            stroke: nth($colors, $i);\\\\n        }\\\\n    }\\\\n}\\\\n\\\\n/*\\\\n * Bar Spinner Animation\\\\n * @param $count    - number of bars\\\\n * @param $duration - duration of animation\\\\n * @param $phase    - each bar phase change delay\\\\n * Usage example:\\\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\\\n */\\\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\\\n\\\\n    @for $i from 1 through $count {\\\\n        &--#{$i} {\\\\n            animation-delay: -$duration + (($i - 1) * $phase);\\\\n        }\\\\n    }\\\\n}\\\\n\\\\n/*\\\\n * Tooltip colors\\\\n * @param $color - color property\\\\n * Usage example:\\\\n   @include tooltipColor($COLOR_RED);\\\\n */\\\\n@mixin tooltipColor($color) {\\\\n    &:before {\\\\n        background: $color;\\\\n    }\\\\n    &:after,\\\\n    &[data-tooltip-pos=\'top\']:after {\\\\n        border-top-color: $color;\\\\n    }\\\\n    &[data-tooltip-pos=\'right\']:after {\\\\n        border-top-color: transparent;\\\\n        border-right-color: $color;\\\\n    }\\\\n    &[data-tooltip-pos=\'left\']:after {\\\\n        border-top-color: transparent;\\\\n        border-left-color: $color;\\\\n    }\\\\n    &[data-tooltip-pos=\'bottom\']:after {\\\\n        border-top-color: transparent;\\\\n        border-bottom-color: $color;\\\\n    }\\\\n}\\\\n\\\\n/*\\\\n * Convert Tooltip colors\\\\n * @param $color - css color property\\\\n * Usage example:\\\\n   @include convertTooltipColor(var(--status-default));\\\\n */\\\\n@mixin convertTooltipColor($color) {\\\\n    &:before {\\\\n        background: $color;\\\\n    }\\\\n    &:after,\\\\n    &[data-tooltip-pos=\'top\']:after {\\\\n        border-top-color: $color;\\\\n    }\\\\n    &[data-tooltip-pos=\'right\']:after {\\\\n        border-top-color: transparent;\\\\n        border-right-color: $color;\\\\n    }\\\\n    &[data-tooltip-pos=\'left\']:after {\\\\n        border-top-color: transparent;\\\\n        border-left-color: $color;\\\\n    }\\\\n    &[data-tooltip-pos=\'bottom\']:after {\\\\n        border-top-color: transparent;\\\\n        border-bottom-color: $color;\\\\n    }\\\\n}\\\\n\\\\n/*\\\\n    Constants\\\\n*/\\\\n$FONT_STACK: \'IBM Plex Sans\', sans-serif;\\\\n$BASE_FONT_SIZE: 10px;\\\\n\\\\n/*\\\\n    Variables\\\\n*/\\\\n$FONT_SIZES: (\\\\n    \'xheading\' 3.2rem,\\\\n    \'heading\' 3rem,\\\\n    \'large\' 2.8rem,\\\\n    \'title\' 1.6rem,\\\\n    \'paragraph\' 1.4rem,\\\\n    \'small\' 1.2rem,\\\\n    \'xsmall\' 1rem,\\\\n    \'xxsmall\' 0.8rem,\\\\n    \'xxxsmall\' 0.6rem\\\\n);\\\\n\\\\n$FONT_COLORS: (\\\\n    \'active\' var(--text-colored-background),\\\\n    \'prominent\' var(--text-prominent),\\\\n    \'black\' var(--text-general),\\\\n    \'grey\' var(--text-less-prominent),\\\\n    \'disabled\' var(--text-disabled),\\\\n    \'green\' var(--text-profit-success),\\\\n    \'red\' var(--text-loss-danger)\\\\n);\\\\n\\\\n$FONT_WEIGHTS: (\'bold\' 700, \'semibold\' 500, \'normal\' 400, \'light\' 300);\\\\n\\\\n$TEXT_ALIGN: (\'center\' center, \'left\' start, \'right\' end);\\\\n\\\\n$LINEHEIGHTS: (\\\\n    \'large\': 1.75,\\\\n    \'medium\': 1.5,\\\\n    \'small\': 1.25,\\\\n    \'xsmall\': 1.4,\\\\n);\\\\n\\\\n/*\\\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\\\n    Variables name example: --title-center-semibold-red\\\\n */\\\\n$TYPEFACES_LIST: generate-typefaces();\\\\n\\\\n/*\\\\n    to use styles without modifier class on .inline-icon\\\\n    use @extend\\\\n\\\\n    e.g. style icon on parent hover:\\\\n        a:hover .inline-icon {\\\\n            @extend %inline-icon-active;\\\\n        }\\\\n*/\\\\n\\\\n%inline-icon {\\\\n    @include colorIcon(var(--text-general), none);\\\\n\\\\n    &.active,\\\\n    &-active {\\\\n        @include colorIcon(var(--text-prominent), none);\\\\n    }\\\\n    &.disabled,\\\\n    &-disabled {\\\\n        @include colorIcon(var(--text-disabled), none);\\\\n    }\\\\n    &.white,\\\\n    &-white {\\\\n        @include colorIcon(var(--text-prominent));\\\\n    }\\\\n    &.border_hover_color,\\\\n    &-border_hover_color {\\\\n        @include colorIcon(var(--text-prominent));\\\\n    }\\\\n    &.secondary,\\\\n    &-secondary {\\\\n        @include colorIcon(var(--text-less-prominent));\\\\n    }\\\\n}\\\\n\\\\n/**\\\\n * Define Breakpoints here.\\\\n */\\\\n$mobile-width: 320px;\\\\n$tablet-width: 768px;\\\\n$desktop-width: 1024px;\\\\n\\\\n@mixin tablet {\\\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\\\n        @content;\\\\n    }\\\\n}\\\\n\\\\n@mixin desktop {\\\\n    @media (min-width: #{$desktop-width}) {\\\\n        @content;\\\\n    }\\\\n}\\\\n\\\\n@mixin tablet-down {\\\\n    @media (max-width: #{$tablet-width}) {\\\\n        @content;\\\\n    }\\\\n}\\\\n\\\\n@mixin tablet-up {\\\\n    @media (min-width: #{$tablet-width}) {\\\\n        @content;\\\\n    }\\\\n}\\\\n\\\\n@mixin mobile-up {\\\\n    @media (min-width: #{$mobile-width}) {\\\\n        @content;\\\\n    }\\\\n}\\\\n\\\\n@mixin mobile {\\\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\\\n        @content;\\\\n    }\\\\n}\\\\n\\\\n@mixin mobile-landscape {\\\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\\\n        @content;\\\\n    }\\\\n}\\\\n\\\\n@mixin touch-device {\\\\n    // add css interaction media query to detect touch devices\\\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\\\n    @media (pointer: coarse) {\\\\n        @content;\\\\n    }\\\\n}\\\\n\\\\n@mixin mobile-tablet-mix {\\\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\\\n        @content;\\\\n    }\\\\n}\\\\n\\\\n/** Need to add new breakpoints for mixins */\\\\n$max-mobile-width: 600px;\\\\n$min-desktop-width: 1280px;\\\\n\\\\n@mixin mobile-screen {\\\\n    @media (max-width: #{$max-mobile-width}) {\\\\n        @content;\\\\n    }\\\\n}\\\\n\\\\n@mixin tablet-screen {\\\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\\\n        @content;\\\\n    }\\\\n}\\\\n\\\\n@mixin desktop-screen {\\\\n    @media (min-width: #{$min-desktop-width}) {\\\\n        @content;\\\\n    }\\\\n}\\\\n\\\\n@mixin mobile-or-tablet-screen {\\\\n    @media (max-width: #{$min-desktop-width - 1}) {\\\\n        @content;\\\\n    }\\\\n}\\\\n\\\\n@mixin tablet-or-desktop-screen {\\\\n    @media (min-width: #{$max-mobile-width + 1}) {\\\\n        @content;\\\\n    }\\\\n}\\\\n\\\\n@mixin tablet-portrait-screen {\\\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\\\n        @content;\\\\n    }\\\\n}\\\\n\\\\n@mixin mobile-or-tablet-landscape {\\\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\\\n        @content;\\\\n    }\\\\n}\\\\n\\\\n.p2p-app-loader {\\\\n    height: 80vh;\\\\n    width: 100%;\\\\n}\\\\n\\"],\\"sourceRoot\\":\\"\\"}]);\\n// Exports\\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///../../node_modules/css-loader/dist/cjs.js!../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../node_modules/sass-loader/dist/cjs.js!../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./src/pages/index.scss\\n");\n\n/***/ }),\n\n/***/ "../../node_modules/css-loader/dist/runtime/api.js":\n/*!*********************************************************!*\\\n  !*** ../../node_modules/css-loader/dist/runtime/api.js ***!\n  \\*********************************************************/\n/***/ ((module) => {\n\n"use strict";\neval("\\n\\n/*\\n  MIT License http://www.opensource.org/licenses/mit-license.php\\n  Author Tobias Koppers @sokra\\n*/\\n// css base code, injected by the css-loader\\n// eslint-disable-next-line func-names\\nmodule.exports = function (cssWithMappingToString) {\\n  var list = []; // return the list of modules as css string\\n\\n  list.toString = function toString() {\\n    return this.map(function (item) {\\n      var content = cssWithMappingToString(item);\\n\\n      if (item[2]) {\\n        return \\"@media \\".concat(item[2], \\" {\\").concat(content, \\"}\\");\\n      }\\n\\n      return content;\\n    }).join(\\"\\");\\n  }; // import a list of modules into the list\\n  // eslint-disable-next-line func-names\\n\\n\\n  list.i = function (modules, mediaQuery, dedupe) {\\n    if (typeof modules === \\"string\\") {\\n      // eslint-disable-next-line no-param-reassign\\n      modules = [[null, modules, \\"\\"]];\\n    }\\n\\n    var alreadyImportedModules = {};\\n\\n    if (dedupe) {\\n      for (var i = 0; i < this.length; i++) {\\n        // eslint-disable-next-line prefer-destructuring\\n        var id = this[i][0];\\n\\n        if (id != null) {\\n          alreadyImportedModules[id] = true;\\n        }\\n      }\\n    }\\n\\n    for (var _i = 0; _i < modules.length; _i++) {\\n      var item = [].concat(modules[_i]);\\n\\n      if (dedupe && alreadyImportedModules[item[0]]) {\\n        // eslint-disable-next-line no-continue\\n        continue;\\n      }\\n\\n      if (mediaQuery) {\\n        if (!item[2]) {\\n          item[2] = mediaQuery;\\n        } else {\\n          item[2] = \\"\\".concat(mediaQuery, \\" and \\").concat(item[2]);\\n        }\\n      }\\n\\n      list.push(item);\\n    }\\n  };\\n\\n  return list;\\n};//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvcDJwLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanM/M2MxMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbi8vIGNzcyBiYXNlIGNvZGUsIGluamVjdGVkIGJ5IHRoZSBjc3MtbG9hZGVyXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdOyAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG5cbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuXG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICByZXR1cm4gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGNvbnRlbnQsIFwifVwiKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTsgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcblxuXG4gIGxpc3QuaSA9IGZ1bmN0aW9uIChtb2R1bGVzLCBtZWRpYVF1ZXJ5LCBkZWR1cGUpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgXCJcIl1dO1xuICAgIH1cblxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG5cbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1kZXN0cnVjdHVyaW5nXG4gICAgICAgIHZhciBpZCA9IHRoaXNbaV1bMF07XG5cbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbW9kdWxlcy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2ldKTtcblxuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb250aW51ZVxuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cblxuICAgICAgaWYgKG1lZGlhUXVlcnkpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhUXVlcnk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsyXSA9IFwiXCIuY29uY2F0KG1lZGlhUXVlcnksIFwiIGFuZCBcIikuY29uY2F0KGl0ZW1bMl0pO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIGxpc3Q7XG59OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///../../node_modules/css-loader/dist/runtime/api.js\\n");\n\n/***/ }),\n\n/***/ "../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js":\n/*!****************************************************************************!*\\\n  !*** ../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js ***!\n  \\****************************************************************************/\n/***/ ((module) => {\n\n"use strict";\neval("\\n\\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\\n\\nfunction _nonIterableRest() { throw new TypeError(\\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\\"); }\\n\\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \\"string\\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \\"Object\\" && o.constructor) n = o.constructor.name; if (n === \\"Map\\" || n === \\"Set\\") return Array.from(o); if (n === \\"Arguments\\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\\n\\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\\n\\nfunction _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== \\"undefined\\" && arr[Symbol.iterator] || arr[\\"@@iterator\\"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\\"return\\"] != null) _i[\\"return\\"](); } finally { if (_d) throw _e; } } return _arr; }\\n\\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\\n\\nmodule.exports = function cssWithMappingToString(item) {\\n  var _item = _slicedToArray(item, 4),\\n      content = _item[1],\\n      cssMapping = _item[3];\\n\\n  if (!cssMapping) {\\n    return content;\\n  }\\n\\n  if (typeof btoa === \\"function\\") {\\n    // eslint-disable-next-line no-undef\\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\\n    var data = \\"sourceMappingURL=data:application/json;charset=utf-8;base64,\\".concat(base64);\\n    var sourceMapping = \\"/*# \\".concat(data, \\" */\\");\\n    var sourceURLs = cssMapping.sources.map(function (source) {\\n      return \\"/*# sourceURL=\\".concat(cssMapping.sourceRoot || \\"\\").concat(source, \\" */\\");\\n    });\\n    return [content].concat(sourceURLs).concat([sourceMapping]).join(\\"\\\\n\\");\\n  }\\n\\n  return [content].join(\\"\\\\n\\");\\n};//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2Nzc1dpdGhNYXBwaW5nVG9TdHJpbmcuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlcml2L3AycC8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvY3NzV2l0aE1hcHBpbmdUb1N0cmluZy5qcz83NDc3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5mdW5jdGlvbiBfc2xpY2VkVG9BcnJheShhcnIsIGkpIHsgcmV0dXJuIF9hcnJheVdpdGhIb2xlcyhhcnIpIHx8IF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHx8IF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShhcnIsIGkpIHx8IF9ub25JdGVyYWJsZVJlc3QoKTsgfVxuXG5mdW5jdGlvbiBfbm9uSXRlcmFibGVSZXN0KCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuXCIpOyB9XG5cbmZ1bmN0aW9uIF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShvLCBtaW5MZW4pIHsgaWYgKCFvKSByZXR1cm47IGlmICh0eXBlb2YgbyA9PT0gXCJzdHJpbmdcIikgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7IHZhciBuID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG8pLnNsaWNlKDgsIC0xKTsgaWYgKG4gPT09IFwiT2JqZWN0XCIgJiYgby5jb25zdHJ1Y3RvcikgbiA9IG8uY29uc3RydWN0b3IubmFtZTsgaWYgKG4gPT09IFwiTWFwXCIgfHwgbiA9PT0gXCJTZXRcIikgcmV0dXJuIEFycmF5LmZyb20obyk7IGlmIChuID09PSBcIkFyZ3VtZW50c1wiIHx8IC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KG4pKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTsgfVxuXG5mdW5jdGlvbiBfYXJyYXlMaWtlVG9BcnJheShhcnIsIGxlbikgeyBpZiAobGVuID09IG51bGwgfHwgbGVuID4gYXJyLmxlbmd0aCkgbGVuID0gYXJyLmxlbmd0aDsgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkobGVuKTsgaSA8IGxlbjsgaSsrKSB7IGFycjJbaV0gPSBhcnJbaV07IH0gcmV0dXJuIGFycjI7IH1cblxuZnVuY3Rpb24gX2l0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkgeyB2YXIgX2kgPSBhcnIgJiYgKHR5cGVvZiBTeW1ib2wgIT09IFwidW5kZWZpbmVkXCIgJiYgYXJyW1N5bWJvbC5pdGVyYXRvcl0gfHwgYXJyW1wiQEBpdGVyYXRvclwiXSk7IGlmIChfaSA9PSBudWxsKSByZXR1cm47IHZhciBfYXJyID0gW107IHZhciBfbiA9IHRydWU7IHZhciBfZCA9IGZhbHNlOyB2YXIgX3MsIF9lOyB0cnkgeyBmb3IgKF9pID0gX2kuY2FsbChhcnIpOyAhKF9uID0gKF9zID0gX2kubmV4dCgpKS5kb25lKTsgX24gPSB0cnVlKSB7IF9hcnIucHVzaChfcy52YWx1ZSk7IGlmIChpICYmIF9hcnIubGVuZ3RoID09PSBpKSBicmVhazsgfSB9IGNhdGNoIChlcnIpIHsgX2QgPSB0cnVlOyBfZSA9IGVycjsgfSBmaW5hbGx5IHsgdHJ5IHsgaWYgKCFfbiAmJiBfaVtcInJldHVyblwiXSAhPSBudWxsKSBfaVtcInJldHVyblwiXSgpOyB9IGZpbmFsbHkgeyBpZiAoX2QpIHRocm93IF9lOyB9IH0gcmV0dXJuIF9hcnI7IH1cblxuZnVuY3Rpb24gX2FycmF5V2l0aEhvbGVzKGFycikgeyBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gYXJyOyB9XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKSB7XG4gIHZhciBfaXRlbSA9IF9zbGljZWRUb0FycmF5KGl0ZW0sIDQpLFxuICAgICAgY29udGVudCA9IF9pdGVtWzFdLFxuICAgICAgY3NzTWFwcGluZyA9IF9pdGVtWzNdO1xuXG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG5cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWZcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbiAoc291cmNlKSB7XG4gICAgICByZXR1cm4gXCIvKiMgc291cmNlVVJMPVwiLmNvbmNhdChjc3NNYXBwaW5nLnNvdXJjZVJvb3QgfHwgXCJcIikuY29uY2F0KHNvdXJjZSwgXCIgKi9cIik7XG4gICAgfSk7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoc291cmNlVVJMcykuY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuXG4gIHJldHVybiBbY29udGVudF0uam9pbihcIlxcblwiKTtcbn07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\\n");\n\n/***/ }),\n\n/***/ "./src/pages/index.scss":\n/*!******************************!*\\\n  !*** ./src/pages/index.scss ***!\n  \\******************************/\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\neval("var api = __webpack_require__(/*! !../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \\"../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\\");\\n            var content = __webpack_require__(/*! !!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/sass-loader/dist/cjs.js!../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./index.scss */ \\"../../node_modules/css-loader/dist/cjs.js!../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../node_modules/sass-loader/dist/cjs.js!../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./src/pages/index.scss\\");\\n\\n            content = content.__esModule ? content.default : content;\\n\\n            if (typeof content === \'string\') {\\n              content = [[module.id, content, \'\']];\\n            }\\n\\nvar options = {};\\n\\noptions.insert = \\"head\\";\\noptions.singleton = false;\\n\\nvar update = api(content, options);\\n\\n\\n\\nmodule.exports = content.locals || {};//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGFnZXMvaW5kZXguc2NzcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi9wMnAvLi9zcmMvcGFnZXMvaW5kZXguc2Nzcz80ZDg4Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBhcGkgPSByZXF1aXJlKFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiKTtcbiAgICAgICAgICAgIHZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzJdLnVzZVsyXSEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzJdLnVzZVs0XSEuL2luZGV4LnNjc3NcIik7XG5cbiAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgIH1cblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5pbnNlcnQgPSBcImhlYWRcIjtcbm9wdGlvbnMuc2luZ2xldG9uID0gZmFsc2U7XG5cbnZhciB1cGRhdGUgPSBhcGkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5tb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzIHx8IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///./src/pages/index.scss\\n");\n\n/***/ }),\n\n/***/ "../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":\n/*!********************************************************************************!*\\\n  !*** ../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!\n  \\********************************************************************************/\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n"use strict";\neval("\\n\\nvar isOldIE = function isOldIE() {\\n  var memo;\\n  return function memorize() {\\n    if (typeof memo === \'undefined\') {\\n      // Test for IE <= 9 as proposed by Browserhacks\\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\\n      // Tests for existence of standard globals is to allow style-loader\\n      // to operate correctly into non-standard environments\\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\\n      memo = Boolean(window && document && document.all && !window.atob);\\n    }\\n\\n    return memo;\\n  };\\n}();\\n\\nvar getTarget = function getTarget() {\\n  var memo = {};\\n  return function memorize(target) {\\n    if (typeof memo[target] === \'undefined\') {\\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\\n\\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\\n        try {\\n          // This will throw an exception if access to iframe is blocked\\n          // due to cross-origin restrictions\\n          styleTarget = styleTarget.contentDocument.head;\\n        } catch (e) {\\n          // istanbul ignore next\\n          styleTarget = null;\\n        }\\n      }\\n\\n      memo[target] = styleTarget;\\n    }\\n\\n    return memo[target];\\n  };\\n}();\\n\\nvar stylesInDom = [];\\n\\nfunction getIndexByIdentifier(identifier) {\\n  var result = -1;\\n\\n  for (var i = 0; i < stylesInDom.length; i++) {\\n    if (stylesInDom[i].identifier === identifier) {\\n      result = i;\\n      break;\\n    }\\n  }\\n\\n  return result;\\n}\\n\\nfunction modulesToDom(list, options) {\\n  var idCountMap = {};\\n  var identifiers = [];\\n\\n  for (var i = 0; i < list.length; i++) {\\n    var item = list[i];\\n    var id = options.base ? item[0] + options.base : item[0];\\n    var count = idCountMap[id] || 0;\\n    var identifier = \\"\\".concat(id, \\" \\").concat(count);\\n    idCountMap[id] = count + 1;\\n    var index = getIndexByIdentifier(identifier);\\n    var obj = {\\n      css: item[1],\\n      media: item[2],\\n      sourceMap: item[3]\\n    };\\n\\n    if (index !== -1) {\\n      stylesInDom[index].references++;\\n      stylesInDom[index].updater(obj);\\n    } else {\\n      stylesInDom.push({\\n        identifier: identifier,\\n        updater: addStyle(obj, options),\\n        references: 1\\n      });\\n    }\\n\\n    identifiers.push(identifier);\\n  }\\n\\n  return identifiers;\\n}\\n\\nfunction insertStyleElement(options) {\\n  var style = document.createElement(\'style\');\\n  var attributes = options.attributes || {};\\n\\n  if (typeof attributes.nonce === \'undefined\') {\\n    var nonce =  true ? __webpack_require__.nc : 0;\\n\\n    if (nonce) {\\n      attributes.nonce = nonce;\\n    }\\n  }\\n\\n  Object.keys(attributes).forEach(function (key) {\\n    style.setAttribute(key, attributes[key]);\\n  });\\n\\n  if (typeof options.insert === \'function\') {\\n    options.insert(style);\\n  } else {\\n    var target = getTarget(options.insert || \'head\');\\n\\n    if (!target) {\\n      throw new Error(\\"Couldn\'t find a style target. This probably means that the value for the \'insert\' parameter is invalid.\\");\\n    }\\n\\n    target.appendChild(style);\\n  }\\n\\n  return style;\\n}\\n\\nfunction removeStyleElement(style) {\\n  // istanbul ignore if\\n  if (style.parentNode === null) {\\n    return false;\\n  }\\n\\n  style.parentNode.removeChild(style);\\n}\\n/* istanbul ignore next  */\\n\\n\\nvar replaceText = function replaceText() {\\n  var textStore = [];\\n  return function replace(index, replacement) {\\n    textStore[index] = replacement;\\n    return textStore.filter(Boolean).join(\'\\\\n\');\\n  };\\n}();\\n\\nfunction applyToSingletonTag(style, index, remove, obj) {\\n  var css = remove ? \'\' : obj.media ? \\"@media \\".concat(obj.media, \\" {\\").concat(obj.css, \\"}\\") : obj.css; // For old IE\\n\\n  /* istanbul ignore if  */\\n\\n  if (style.styleSheet) {\\n    style.styleSheet.cssText = replaceText(index, css);\\n  } else {\\n    var cssNode = document.createTextNode(css);\\n    var childNodes = style.childNodes;\\n\\n    if (childNodes[index]) {\\n      style.removeChild(childNodes[index]);\\n    }\\n\\n    if (childNodes.length) {\\n      style.insertBefore(cssNode, childNodes[index]);\\n    } else {\\n      style.appendChild(cssNode);\\n    }\\n  }\\n}\\n\\nfunction applyToTag(style, options, obj) {\\n  var css = obj.css;\\n  var media = obj.media;\\n  var sourceMap = obj.sourceMap;\\n\\n  if (media) {\\n    style.setAttribute(\'media\', media);\\n  } else {\\n    style.removeAttribute(\'media\');\\n  }\\n\\n  if (sourceMap && typeof btoa !== \'undefined\') {\\n    css += \\"\\\\n/*# sourceMappingURL=data:application/json;base64,\\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \\" */\\");\\n  } // For old IE\\n\\n  /* istanbul ignore if  */\\n\\n\\n  if (style.styleSheet) {\\n    style.styleSheet.cssText = css;\\n  } else {\\n    while (style.firstChild) {\\n      style.removeChild(style.firstChild);\\n    }\\n\\n    style.appendChild(document.createTextNode(css));\\n  }\\n}\\n\\nvar singleton = null;\\nvar singletonCounter = 0;\\n\\nfunction addStyle(obj, options) {\\n  var style;\\n  var update;\\n  var remove;\\n\\n  if (options.singleton) {\\n    var styleIndex = singletonCounter++;\\n    style = singleton || (singleton = insertStyleElement(options));\\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\\n  } else {\\n    style = insertStyleElement(options);\\n    update = applyToTag.bind(null, style, options);\\n\\n    remove = function remove() {\\n      removeStyleElement(style);\\n    };\\n  }\\n\\n  update(obj);\\n  return function updateStyle(newObj) {\\n    if (newObj) {\\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\\n        return;\\n      }\\n\\n      update(obj = newObj);\\n    } else {\\n      remove();\\n    }\\n  };\\n}\\n\\nmodule.exports = function (list, options) {\\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\\n  // tags it will allow on a page\\n\\n  if (!options.singleton && typeof options.singleton !== \'boolean\') {\\n    options.singleton = isOldIE();\\n  }\\n\\n  list = list || [];\\n  var lastIdentifiers = modulesToDom(list, options);\\n  return function update(newList) {\\n    newList = newList || [];\\n\\n    if (Object.prototype.toString.call(newList) !== \'[object Array]\') {\\n      return;\\n    }\\n\\n    for (var i = 0; i < lastIdentifiers.length; i++) {\\n      var identifier = lastIdentifiers[i];\\n      var index = getIndexByIdentifier(identifier);\\n      stylesInDom[index].references--;\\n    }\\n\\n    var newLastIdentifiers = modulesToDom(newList, options);\\n\\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\\n      var _identifier = lastIdentifiers[_i];\\n\\n      var _index = getIndexByIdentifier(_identifier);\\n\\n      if (stylesInDom[_index].references === 0) {\\n        stylesInDom[_index].updater();\\n\\n        stylesInDom.splice(_index, 1);\\n      }\\n    }\\n\\n    lastIdentifiers = newLastIdentifiers;\\n  };\\n};//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\\n");\n\n/***/ }),\n\n/***/ "./src/pages/index.tsx":\n/*!*****************************!*\\\n  !*** ./src/pages/index.tsx ***!\n  \\*****************************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\n"use strict";\neval("__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\"default\\": () => (__WEBPACK_DEFAULT_EXPORT__)\\n/* harmony export */ });\\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \\"react\\");\\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\\n/* harmony import */ var _deriv_shared__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @deriv/shared */ \\"@deriv/shared\\");\\n/* harmony import */ var _deriv_shared__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_deriv_shared__WEBPACK_IMPORTED_MODULE_1__);\\n/* harmony import */ var _deriv_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @deriv/components */ \\"@deriv/components\\");\\n/* harmony import */ var _deriv_components__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_deriv_components__WEBPACK_IMPORTED_MODULE_2__);\\n/* harmony import */ var _index_scss__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./index.scss */ \\"./src/pages/index.scss\\");\\n/* harmony import */ var _index_scss__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_index_scss__WEBPACK_IMPORTED_MODULE_3__);\\n\\n\\n\\n\\nvar App = (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_1__.makeLazyLoader)(function () {\\n  return (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_1__.moduleLoader)(function () {\\n    return Promise.all(/*! import() | p2p-app */[__webpack_require__.e(\\"defaultVendors-node_modules_deriv_components_utils_helper_js-node_modules_crc-32_crc32_js-nod-eab848\\"), __webpack_require__.e(\\"p2p-app-components_src_hooks_i\\"), __webpack_require__.e(\\"p2p-app-n\\"), __webpack_require__.e(\\"p2p-app-src_h\\"), __webpack_require__.e(\\"p2p-app-src_s\\"), __webpack_require__.e(\\"p2p-app-src_utils_a\\")]).then(__webpack_require__.bind(__webpack_require__, /*! ./app */ \\"./src/pages/app.jsx\\"));\\n  });\\n}, function () {\\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.Loading, {\\n    className: \\"p2p-app-loader\\"\\n  });\\n})();\\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (App);//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGFnZXMvaW5kZXgudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBR0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvcDJwLy4vc3JjL3BhZ2VzL2luZGV4LnRzeD80MWUwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBtYWtlTGF6eUxvYWRlciwgbW9kdWxlTG9hZGVyIH0gZnJvbSAnQGRlcml2L3NoYXJlZCc7XG5pbXBvcnQgeyBMb2FkaW5nIH0gZnJvbSAnQGRlcml2L2NvbXBvbmVudHMnO1xuaW1wb3J0ICcuL2luZGV4LnNjc3MnO1xuXG5jb25zdCBBcHAgPSBtYWtlTGF6eUxvYWRlcihcbiAgICAoKSA9PiBtb2R1bGVMb2FkZXIoKCkgPT4gaW1wb3J0KC8qIHdlYnBhY2tDaHVua05hbWU6IFwicDJwLWFwcFwiLCB3ZWJwYWNrUHJlbG9hZDogdHJ1ZSAqLyAnLi9hcHAnKSksXG4gICAgKCkgPT4gPExvYWRpbmcgY2xhc3NOYW1lPSdwMnAtYXBwLWxvYWRlcicgLz5cbikoKTtcblxuZXhwb3J0IGRlZmF1bHQgQXBwO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///./src/pages/index.tsx\\n");\n\n/***/ }),\n\n/***/ "@deriv-com/analytics":\n/*!***************************************!*\\\n  !*** external "@deriv-com/analytics" ***!\n  \\***************************************/\n/***/ ((module) => {\n\n"use strict";\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__deriv_com_analytics__;\n\n/***/ }),\n\n/***/ "@deriv/api":\n/*!*****************************!*\\\n  !*** external "@deriv/api" ***!\n  \\*****************************/\n/***/ ((module) => {\n\n"use strict";\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__deriv_api__;\n\n/***/ }),\n\n/***/ "@deriv/components":\n/*!************************************!*\\\n  !*** external "@deriv/components" ***!\n  \\************************************/\n/***/ ((module) => {\n\n"use strict";\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__deriv_components__;\n\n/***/ }),\n\n/***/ "@deriv/hooks":\n/*!*******************************!*\\\n  !*** external "@deriv/hooks" ***!\n  \\*******************************/\n/***/ ((module) => {\n\n"use strict";\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__deriv_hooks__;\n\n/***/ }),\n\n/***/ "@deriv/shared":\n/*!********************************!*\\\n  !*** external "@deriv/shared" ***!\n  \\********************************/\n/***/ ((module) => {\n\n"use strict";\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__deriv_shared__;\n\n/***/ }),\n\n/***/ "@deriv/stores":\n/*!********************************!*\\\n  !*** external "@deriv/stores" ***!\n  \\********************************/\n/***/ ((module) => {\n\n"use strict";\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__deriv_stores__;\n\n/***/ }),\n\n/***/ "@deriv/translations":\n/*!**************************************!*\\\n  !*** external "@deriv/translations" ***!\n  \\**************************************/\n/***/ ((module) => {\n\n"use strict";\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__deriv_translations__;\n\n/***/ }),\n\n/***/ "formik":\n/*!*************************!*\\\n  !*** external "formik" ***!\n  \\*************************/\n/***/ ((module) => {\n\n"use strict";\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_formik__;\n\n/***/ }),\n\n/***/ "lodash.debounce":\n/*!**********************************!*\\\n  !*** external "lodash.debounce" ***!\n  \\**********************************/\n/***/ ((module) => {\n\n"use strict";\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_lodash_debounce__;\n\n/***/ }),\n\n/***/ "prop-types":\n/*!*****************************!*\\\n  !*** external "prop-types" ***!\n  \\*****************************/\n/***/ ((module) => {\n\n"use strict";\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_prop_types__;\n\n/***/ }),\n\n/***/ "react":\n/*!************************!*\\\n  !*** external "react" ***!\n  \\************************/\n/***/ ((module) => {\n\n"use strict";\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_react__;\n\n/***/ }),\n\n/***/ "react-dom":\n/*!****************************!*\\\n  !*** external "react-dom" ***!\n  \\****************************/\n/***/ ((module) => {\n\n"use strict";\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_react_dom__;\n\n/***/ }),\n\n/***/ "react-router":\n/*!*******************************!*\\\n  !*** external "react-router" ***!\n  \\*******************************/\n/***/ ((module) => {\n\n"use strict";\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_react_router__;\n\n/***/ }),\n\n/***/ "react-router-dom":\n/*!***********************************!*\\\n  !*** external "react-router-dom" ***!\n  \\***********************************/\n/***/ ((module) => {\n\n"use strict";\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_react_router_dom__;\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __nested_webpack_require_111114__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __nested_webpack_require_111114__);\n/******/ \t\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__nested_webpack_require_111114__.m = __webpack_modules__;\n/******/ \t\n/************************************************************************/\n/******/ \t/* webpack/runtime/compat get default export */\n/******/ \t(() => {\n/******/ \t\t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t\t__nested_webpack_require_111114__.n = (module) => {\n/******/ \t\t\tvar getter = module && module.__esModule ?\n/******/ \t\t\t\t() => (module[\'default\']) :\n/******/ \t\t\t\t() => (module);\n/******/ \t\t\t__nested_webpack_require_111114__.d(getter, { a: getter });\n/******/ \t\t\treturn getter;\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/define property getters */\n/******/ \t(() => {\n/******/ \t\t// define getter functions for harmony exports\n/******/ \t\t__nested_webpack_require_111114__.d = (exports, definition) => {\n/******/ \t\t\tfor(var key in definition) {\n/******/ \t\t\t\tif(__nested_webpack_require_111114__.o(definition, key) && !__nested_webpack_require_111114__.o(exports, key)) {\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/ensure chunk */\n/******/ \t(() => {\n/******/ \t\t__nested_webpack_require_111114__.f = {};\n/******/ \t\t// This file contains only the entry chunk.\n/******/ \t\t// The chunk loading function for additional chunks\n/******/ \t\t__nested_webpack_require_111114__.e = (chunkId) => {\n/******/ \t\t\treturn Promise.all(Object.keys(__nested_webpack_require_111114__.f).reduce((promises, key) => {\n/******/ \t\t\t\t__nested_webpack_require_111114__.f[key](chunkId, promises);\n/******/ \t\t\t\treturn promises;\n/******/ \t\t\t}, []));\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/get javascript chunk filename */\n/******/ \t(() => {\n/******/ \t\t// This function allow to reference async chunks\n/******/ \t\t__nested_webpack_require_111114__.u = (chunkId) => {\n/******/ \t\t\t// return url for filenames based on template\n/******/ \t\t\treturn "p2p/js/p2p." + chunkId + "." + {"404":"4ac5e7538aff30e65ca8","defaultVendors-node_modules_deriv_components_utils_helper_js-node_modules_crc-32_crc32_js-nod-eab848":"a89c1bca24beb51bac88","p2p-app-components_src_hooks_i":"83405f262fafda47e16b","p2p-app-n":"13dc7944e76f05564cc2","p2p-app-src_h":"542b96ecc52acd379f82","p2p-app-src_s":"6cbe5788b057c5b37a8b","p2p-app-src_utils_a":"b102293c12b6829c2c56","node_modules_sendbird_chat_lib___bundle-6af20da9_js":"38822167572c09c16693","node_modules_sendbird_chat_lib___bundle-7c3d40f4_js":"005f24b4cc291cb538c9","node_modules_sendbird_chat_lib___bundle-46d64517_js":"2bc082f0381a7bf73a87","ad-cancel-modal":"140c30add0d8743deea3","ad-created-modal":"16560a1a3999578ab561","ad-create-edit-error-modal":"96f338de47160636c10a","add-payment-method-error-modal":"ea883de44661517821bb","ad-error-tooltip-modal":"913ac4c426d590d40d7a","ad-visibility-error-modal":"09a8c672ae375528d8e6","buy-sell-modal":"7665e8cdd96a16777d7f","block-user-filter-modal":"144170d3ce10d0a5c31f","block-user-modal":"f40937955d594660802b","business-hour-modal":"18314a0865ad17c0233e","cancel-add-payment-method-modal":"cc8bf13b17c5416e46ff","cancel-edit-payment-method-modal":"08d1bf0211b199270dbf","confirm-delete-payment-method-modal":"5c57792fbe0b1a57e15f","copy-advert-modal":"274516b3324ad66b8def","create-ad-add-payment-method-modal":"b772b0e5426496ba2f72","currency-selector-modal":"dc8948ce693d0c2214cc","daily-limit-modal":"5b1d40b30acb84f233b2","delete-payment-method-confirmation-modal":"aa2b184aa470370429e7","delete-payment-method-error-modal":"30ff8a23e9f2c48816a9","edit-ad-cancel-modal":"f74d7b4617b68a6d04fc","email-link-expired-modal":"7c87a3cbedede9466e8e","email-link-verified-modal":"6ba0d44f9a4977004dce","email-verification-modal":"38cd999847bfe340bcfe","error-modal":"1e1cfe08de82f5aae7bd","filter-modal":"d7b9e613ec7ed2350311","invalid-verification-link-modal":"c8f6c10e8bfcd05b104c","leave-page-modal":"67a356044e790df4112a","loading-modal":"c33792b35573baeb626b","market-rate-change-error-modal":"3a078f675738ccf80e74","my-ads-delete-modal":"206209e1b6fbf6ac2796","my-ads-delete-error-modal":"a0cc7fac4757bed45102","my-ads-floating-rate-switch-modal":"5afe7efc64b567eaa392","my-profile-balance-modal":"42ed45c1861224c72f29","nickname-modal":"54076868fdc1a1f26b28","order-details-cancel-modal":"dde41c21517611a558a1","defaultVendors-node_modules_react-dropzone_dist_es_index_js-node_modules_react-transition-gro-6edbe2":"18776dd5ec20c76097f9","order-details-confirm-modal":"bb62a512e7a8c4b7d99c","order-time-tooltip-modal":"a9177c78eea7d7fd952e","preferred-countries-modal":"a4ff7b2ebca62bf445c9","quick-add-modal":"7401671422057f5dc445","rating-modal":"6893610b6ec47afeda07","recommended-modal":"ca07c89725e3604a1c1c","defaultVendors-node_modules_html2canvas_dist_html2canvas_js-node_modules_qrcode_react_lib_esm-c85f85":"11b7dc06d55758c1ca19","share-my-ads-modal":"46bd64ed70b9ba22eb81","src_components_routes_route-with-sub-routes_tsx":"93ba9142bd2c03597483","two-month-picker":"713e35508f6cc902c8b7"}[chunkId] + ".js";\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/global */\n/******/ \t(() => {\n/******/ \t\t__nested_webpack_require_111114__.g = (function() {\n/******/ \t\t\tif (typeof globalThis === \'object\') return globalThis;\n/******/ \t\t\ttry {\n/******/ \t\t\t\treturn this || new Function(\'return this\')();\n/******/ \t\t\t} catch (e) {\n/******/ \t\t\t\tif (typeof window === \'object\') return window;\n/******/ \t\t\t}\n/******/ \t\t})();\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\n/******/ \t(() => {\n/******/ \t\t__nested_webpack_require_111114__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/load script */\n/******/ \t(() => {\n/******/ \t\tvar inProgress = {};\n/******/ \t\tvar dataWebpackPrefix = "@deriv/p2p:";\n/******/ \t\t// loadScript function to load a script via script tag\n/******/ \t\t__nested_webpack_require_111114__.l = (url, done, key, chunkId) => {\n/******/ \t\t\tif(inProgress[url]) { inProgress[url].push(done); return; }\n/******/ \t\t\tvar script, needAttach;\n/******/ \t\t\tif(key !== undefined) {\n/******/ \t\t\t\tvar scripts = document.getElementsByTagName("script");\n/******/ \t\t\t\tfor(var i = 0; i < scripts.length; i++) {\n/******/ \t\t\t\t\tvar s = scripts[i];\n/******/ \t\t\t\t\tif(s.getAttribute("src") == url || s.getAttribute("data-webpack") == dataWebpackPrefix + key) { script = s; break; }\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t\tif(!script) {\n/******/ \t\t\t\tneedAttach = true;\n/******/ \t\t\t\tscript = document.createElement(\'script\');\n/******/ \t\t\n/******/ \t\t\t\tscript.charset = \'utf-8\';\n/******/ \t\t\t\tscript.timeout = 120;\n/******/ \t\t\t\tif (__nested_webpack_require_111114__.nc) {\n/******/ \t\t\t\t\tscript.setAttribute("nonce", __nested_webpack_require_111114__.nc);\n/******/ \t\t\t\t}\n/******/ \t\t\t\tscript.setAttribute("data-webpack", dataWebpackPrefix + key);\n/******/ \t\t\n/******/ \t\t\t\tscript.src = url;\n/******/ \t\t\t}\n/******/ \t\t\tinProgress[url] = [done];\n/******/ \t\t\tvar onScriptComplete = (prev, event) => {\n/******/ \t\t\t\t// avoid mem leaks in IE.\n/******/ \t\t\t\tscript.onerror = script.onload = null;\n/******/ \t\t\t\tclearTimeout(timeout);\n/******/ \t\t\t\tvar doneFns = inProgress[url];\n/******/ \t\t\t\tdelete inProgress[url];\n/******/ \t\t\t\tscript.parentNode && script.parentNode.removeChild(script);\n/******/ \t\t\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n/******/ \t\t\t\tif(prev) return prev(event);\n/******/ \t\t\t}\n/******/ \t\t\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: \'timeout\', target: script }), 120000);\n/******/ \t\t\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n/******/ \t\t\tscript.onload = onScriptComplete.bind(null, script.onload);\n/******/ \t\t\tneedAttach && document.head.appendChild(script);\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/make namespace object */\n/******/ \t(() => {\n/******/ \t\t// define __esModule on exports\n/******/ \t\t__nested_webpack_require_111114__.r = (exports) => {\n/******/ \t\t\tif(typeof Symbol !== \'undefined\' && Symbol.toStringTag) {\n/******/ \t\t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: \'Module\' });\n/******/ \t\t\t}\n/******/ \t\t\tObject.defineProperty(exports, \'__esModule\', { value: true });\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/node module decorator */\n/******/ \t(() => {\n/******/ \t\t__nested_webpack_require_111114__.nmd = (module) => {\n/******/ \t\t\tmodule.paths = [];\n/******/ \t\t\tif (!module.children) module.children = [];\n/******/ \t\t\treturn module;\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/publicPath */\n/******/ \t(() => {\n/******/ \t\t__nested_webpack_require_111114__.p = "/";\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/jsonp chunk loading */\n/******/ \t(() => {\n/******/ \t\t// no baseURI\n/******/ \t\t\n/******/ \t\t// object to store loaded and loading chunks\n/******/ \t\t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n/******/ \t\t// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\n/******/ \t\tvar installedChunks = {\n/******/ \t\t\t"index": 0\n/******/ \t\t};\n/******/ \t\t\n/******/ \t\t__nested_webpack_require_111114__.f.j = (chunkId, promises) => {\n/******/ \t\t\t\t// JSONP chunk loading for javascript\n/******/ \t\t\t\tvar installedChunkData = __nested_webpack_require_111114__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n/******/ \t\t\t\tif(installedChunkData !== 0) { // 0 means "already installed".\n/******/ \t\t\n/******/ \t\t\t\t\t// a Promise means "currently loading".\n/******/ \t\t\t\t\tif(installedChunkData) {\n/******/ \t\t\t\t\t\tpromises.push(installedChunkData[2]);\n/******/ \t\t\t\t\t} else {\n/******/ \t\t\t\t\t\tif(true) { // all chunks have JS\n/******/ \t\t\t\t\t\t\t// setup Promise in chunk cache\n/******/ \t\t\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n/******/ \t\t\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n/******/ \t\t\n/******/ \t\t\t\t\t\t\t// start chunk loading\n/******/ \t\t\t\t\t\t\tvar url = __nested_webpack_require_111114__.p + __nested_webpack_require_111114__.u(chunkId);\n/******/ \t\t\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n/******/ \t\t\t\t\t\t\tvar error = new Error();\n/******/ \t\t\t\t\t\t\tvar loadingEnded = (event) => {\n/******/ \t\t\t\t\t\t\t\tif(__nested_webpack_require_111114__.o(installedChunks, chunkId)) {\n/******/ \t\t\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n/******/ \t\t\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n/******/ \t\t\t\t\t\t\t\t\tif(installedChunkData) {\n/******/ \t\t\t\t\t\t\t\t\t\tvar errorType = event && (event.type === \'load\' ? \'missing\' : event.type);\n/******/ \t\t\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n/******/ \t\t\t\t\t\t\t\t\t\terror.message = \'Loading chunk \' + chunkId + \' failed.\\n(\' + errorType + \': \' + realSrc + \')\';\n/******/ \t\t\t\t\t\t\t\t\t\terror.name = \'ChunkLoadError\';\n/******/ \t\t\t\t\t\t\t\t\t\terror.type = errorType;\n/******/ \t\t\t\t\t\t\t\t\t\terror.request = realSrc;\n/******/ \t\t\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n/******/ \t\t\t\t\t\t\t\t\t}\n/******/ \t\t\t\t\t\t\t\t}\n/******/ \t\t\t\t\t\t\t};\n/******/ \t\t\t\t\t\t\t__nested_webpack_require_111114__.l(url, loadingEnded, "chunk-" + chunkId, chunkId);\n/******/ \t\t\t\t\t\t}\n/******/ \t\t\t\t\t}\n/******/ \t\t\t\t}\n/******/ \t\t};\n/******/ \t\t\n/******/ \t\t// no prefetching\n/******/ \t\t\n/******/ \t\t// no preloaded\n/******/ \t\t\n/******/ \t\t// no HMR\n/******/ \t\t\n/******/ \t\t// no HMR manifest\n/******/ \t\t\n/******/ \t\t// no on chunks loaded\n/******/ \t\t\n/******/ \t\t// install a JSONP callback for chunk loading\n/******/ \t\tvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n/******/ \t\t\tvar [chunkIds, moreModules, runtime] = data;\n/******/ \t\t\t// add "moreModules" to the modules object,\n/******/ \t\t\t// then flag all "chunkIds" as loaded and fire callback\n/******/ \t\t\tvar moduleId, chunkId, i = 0;\n/******/ \t\t\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n/******/ \t\t\t\tfor(moduleId in moreModules) {\n/******/ \t\t\t\t\tif(__nested_webpack_require_111114__.o(moreModules, moduleId)) {\n/******/ \t\t\t\t\t\t__nested_webpack_require_111114__.m[moduleId] = moreModules[moduleId];\n/******/ \t\t\t\t\t}\n/******/ \t\t\t\t}\n/******/ \t\t\t\tif(runtime) var result = runtime(__nested_webpack_require_111114__);\n/******/ \t\t\t}\n/******/ \t\t\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n/******/ \t\t\tfor(;i < chunkIds.length; i++) {\n/******/ \t\t\t\tchunkId = chunkIds[i];\n/******/ \t\t\t\tif(__nested_webpack_require_111114__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n/******/ \t\t\t\t\tinstalledChunks[chunkId][0]();\n/******/ \t\t\t\t}\n/******/ \t\t\t\tinstalledChunks[chunkId] = 0;\n/******/ \t\t\t}\n/******/ \t\t\n/******/ \t\t}\n/******/ \t\t\n/******/ \t\tvar chunkLoadingGlobal = self["webpackChunk_deriv_p2p"] = self["webpackChunk_deriv_p2p"] || [];\n/******/ \t\tchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\n/******/ \t\tchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/nonce */\n/******/ \t(() => {\n/******/ \t\t__nested_webpack_require_111114__.nc = undefined;\n/******/ \t})();\n/******/ \t\n/************************************************************************/\n/******/ \t\n/******/ \t// module factories are used so entry inlining is disabled\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \tvar __nested_webpack_exports__ = __nested_webpack_require_111114__("./src/pages/index.tsx");\n/******/ \t__nested_webpack_exports__ = __nested_webpack_exports__["default"];\n/******/ \t\n/******/ \treturn __nested_webpack_exports__;\n/******/ })()\n;\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../p2p/dist/p2p/js/index.js\n'
                );

                /***/
            },
    },
]);
