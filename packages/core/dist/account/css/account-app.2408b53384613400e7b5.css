/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/*RTL Language Mixin*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* status colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/* Wallet gradient background */
/* App Cards gradient background */
/* Wallets */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon-active;
        }
*/
/**
 * Define Breakpoints here.
 */
/** Need to add new breakpoints for mixins */
.poa-address-mismatch-hint-box--wrapper {
    max-width: 40rem;
}
/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/*RTL Language Mixin*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* status colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/* Wallet gradient background */
/* App Cards gradient background */
/* Wallets */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon-active;
        }
*/
/**
 * Define Breakpoints here.
 */
/** Need to add new breakpoints for mixins */
[dir='ltr'] .phone-verification-button {
    border-bottom-left-radius: 0;
}
[dir='rtl'] .phone-verification-button {
    border-bottom-right-radius: 0;
}
[dir='ltr'] .phone-verification-button {
    border-top-left-radius: 0;
}
[dir='rtl'] .phone-verification-button {
    border-top-right-radius: 0;
}
/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/*RTL Language Mixin*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* status colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/* Wallet gradient background */
/* App Cards gradient background */
/* Wallets */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon-active;
        }
*/
/**
 * Define Breakpoints here.
 */
/** Need to add new breakpoints for mixins */
.employment_tax_detail_field-checkbox {
    align-items: flex-start;
    margin: 1.6rem auto;
}
.employment_tax_detail_field-checkbox__box {
    align-self: baseline;
}
.employment_tax_detail_field-checkbox__label {
    text-align: justify;
}
[dir='ltr'] .employment_tax_detail_field-checkbox .dc-checkbox__box {
    margin-left: 0;
    margin-left: initial;
}
[dir='rtl'] .employment_tax_detail_field-checkbox .dc-checkbox__box {
    margin-right: 0;
    margin-right: initial;
}
/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/*RTL Language Mixin*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* status colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/* Wallet gradient background */
/* App Cards gradient background */
/* Wallets */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon-active;
        }
*/
/**
 * Define Breakpoints here.
 */
/** Need to add new breakpoints for mixins */
@media (min-width: 1280px) {
    .employment-tin-section {
        margin: 2.4rem 0;
    }
}
/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/*RTL Language Mixin*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* status colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/* Wallet gradient background */
/* App Cards gradient background */
/* Wallets */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon-active;
        }
*/
/**
 * Define Breakpoints here.
 */
/** Need to add new breakpoints for mixins */
.da-icon-with-message {
    margin-top: 8rem;
    padding: 3.2rem;
    display: flex;
    align-items: center;
    flex-direction: column;
}
.da-icon-with-message__text {
    margin-top: 1rem;
}
.da-icon-with-message-full-width {
    width: calc(100vw - 33rem);
}
@media (min-width: 320px) and (max-width: 767px) {
    .da-icon-with-message {
        width: 100vw;
    }
}
/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/*RTL Language Mixin*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* status colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/* Wallet gradient background */
/* App Cards gradient background */
/* Wallets */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon-active;
        }
*/
/**
 * Define Breakpoints here.
 */
/** Need to add new breakpoints for mixins */
.da-inline-note-with-icon {
    margin-top: 0.8rem;
    padding: 0.8rem;
    display: flex;
    background: var(--status-alert-background);
    border-radius: 4px;
    gap: 0.8rem;
    line-height: 1.4rem;
}
.da-inline-note-with-icon .dc-icon {
    margin-top: 0.2rem;
}
/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/*RTL Language Mixin*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* status colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/* Wallet gradient background */
/* App Cards gradient background */
/* Wallets */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon-active;
        }
*/
/**
 * Define Breakpoints here.
 */
/** Need to add new breakpoints for mixins */
.manual-poi-details {
    margin: 0 -1rem;
    height: 100%;
    display: flex;
}
.manual-poi-details--mobile {
    padding: 2.4rem;
}
.manual-poi-details h3 {
    margin-bottom: 2.5rem;
}
.manual-poi-details__form {
    flex: 1;
    display: flex;
    flex-direction: column;
}
.manual-poi-details__form .account-form__footer {
    max-width: 68rem;
}
@media (max-width: 1279px) {
    .manual-poi-details__form .account-form__footer {
        max-width: 100%;
        align-items: center;
    }
}
.manual-poi-details__fields-content {
    flex: auto;
}
.manual-poi-details__fields-wrap {
    display: flex;
    margin-bottom: 2rem;
}
.manual-poi-details--mobile .manual-poi-details__fields-wrap {
    flex-wrap: wrap;
}
.manual-poi-details__fields-wrap .dc-datepicker {
    margin-left: 2.4rem;
}
@media (max-width: 1279px) {
    .manual-poi-details__fields-wrap .dc-datepicker {
        margin-left: 0;
        margin-left: initial;
    }
}
@media (max-width: 1279px) {
    .manual-poi-details__fields-wrap .dc-input {
        margin-bottom: 2rem;
    }
}
.manual-poi-details__field {
    margin-bottom: 1.75rem;
}
.manual-poi-details__divider {
    height: 2px;
    background-color: var(--general-section-1);
    margin-bottom: 2.4rem;
}
.manual-poi-details__divider--m16 {
    margin-bottom: 1.6rem;
}
.manual-poi-details__uploaders-wrap {
    display: flex;
    flex-wrap: wrap;
}
@media (min-width: 601px) and (max-width: 1279px) {
    .manual-poi-details__uploaders-wrap {
        flex-wrap: nowrap;
    }
}
.manual-poi-details__uploaders-wrap .dc-file-dropzone__message {
    width: 100%;
    max-width: none;
    pointer-events: all;
}
.manual-poi-details__uploader {
    position: relative;
    width: 100%;
    max-width: 100%;
    height: 25rem;
    margin-bottom: 1.6rem;
}
.manual-poi-details--mobile .manual-poi-details__uploader {
    max-width: none;
}
.manual-poi-details__uploader--full {
    max-width: none;
}
.manual-poi-details__uploader-details {
    width: 100%;
    display: flex;
    align-items: center;
    flex-direction: column;
    justify-content: space-between;
    padding: 0 1.5rem;
    min-height: 19.2rem;
}
.manual-poi-details__uploader-details--preview {
    padding: 0 2.4rem;
    max-height: 20.3rem;
}
.manual-poi-details__uploader-details p {
    margin-bottom: 2.4rem;
}
.manual-poi-details__uploader-details--preview p {
    margin-bottom: 0;
}

.manual-poi-details__uploader-image {
    position: relative;
    width: 100%;
    max-width: 27.6rem;
    height: 16.6rem;
    border-radius: 0.8rem;
    background-size: cover;
    background-repeat: no-repeat;
    background-position: center center;
    margin-bottom: 1.6rem;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}
.manual-poi-details__uploader-image--has-frame {
    background-size: contain;
}
.manual-poi-details--mobile .manual-poi-details__uploader-image {
    height: 13.4rem;
}
.manual-poi-details__uploader-frame {
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    width: 100%;
    height: auto;
}
.manual-poi-details__uploader-remove {
    position: absolute;
    top: 0.8rem;
    right: 0.8rem;
    cursor: pointer;
    transition: transform 0.25s linear;
}
.manual-poi-details__uploader-remove:hover {
    transform: scale(1.25, 1.25);
}
.manual-poi-details__uploader-icon {
    width: 12.8rem;
    height: 7.9rem;
    margin-bottom: 1.5rem;
}
.manual-poi-details__icons {
    display: flex;
    flex-wrap: wrap;
    margin-bottom: 1.7rem;
    justify-content: center;
}
.manual-poi-details__icons-item {
    flex: 0.25;
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 0 1rem;
    min-height: 9.2rem;
}
.manual-poi-details--mobile .manual-poi-details__icons-item {
    flex: none;
    width: 50%;
    min-height: 7.6rem;
}
.manual-poi-details__icons-item p {
    max-width: 12.4rem;
}
.manual-poi-details--mobile .manual-poi-details__icons-item p {
    max-width: 13.2rem;
}
.manual-poi-details__icons-item svg {
    height: 4.8rem;
}
.manual-poi-details__btns {
    flex: none;
    display: flex;
    align-items: center;
    justify-content: flex-end;
}
.manual-poi-details__btns .dc-btn:not(:last-of-type) {
    margin-right: 0.8rem;
}
@media (max-width: 1279px) {
    .manual-poi-details__btns {
        height: auto;
        padding-bottom: 0;
        padding-bottom: initial;
    }
    .manual-poi-details__btns .dc-btn {
        width: 50%;
    }
}
@media (min-width: 601px) and (max-width: 1279px) {
    .manual-poi-details__btns {
        width: 56.8rem;
    }
}
@media (max-width: 600px) {
    .manual-poi-details__btns {
        width: 100%;
    }
}
/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/*RTL Language Mixin*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* status colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/* Wallet gradient background */
/* App Cards gradient background */
/* Wallets */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon-active;
        }
*/
/**
 * Define Breakpoints here.
 */
/** Need to add new breakpoints for mixins */
@media (min-width: 320px) and (max-width: 767px) {
    .manual-poi {
        margin: 3.2rem 0 1.6rem;
    }
}
.manual-poi__title {
    margin-left: 1.6rem;
    margin-right: 1.6rem;
    padding-top: 1.6rem;
}
.manual-poi .dc-card__wrapper {
    justify-content: center;
}
.manual-poi .dc-card__wrapper:last-of-type {
    margin-bottom: 4rem !important;
}
.manual-poi__card {
    align-items: center;
    cursor: pointer;
    display: flex;
    justify-content: flex-start;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
}
[dir='rtl'] .manual-poi__card svg:not(:first-child) {
    transform: rotate(180deg);
}
.manual-poi__card .dc-icon {
    flex: none;
}
.manual-poi__card-content {
    margin: 0 0 0 2.4rem;
    width: 100%;
}
.manual-poi--mobile .manual-poi__card-content {
    margin: 0 0 0 1.6rem;
}

.manual-poi__card-content p {
    max-width: 45.8rem;
}
.manual-poi--mobile .manual-poi__card-content p {
    max-width: 15.2rem;
}

.manual-poi__card-content p:first-of-type {
    margin-bottom: 0.8rem;
}
.manual-poi__card-icon {
    flex: none;
}
.manual-poi__detail-header {
    display: grid;
    grid-template-columns: auto 1fr;
    cursor: pointer;
    width: 100%;
    grid-column-gap: 1rem;
    align-content: start;
}
.manual-poi__upload-icons {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    height: 10rem;
    grid-gap: 1rem;
    margin: 1rem 0 0;
}
@media (min-width: 1024px) {
    .manual-poi__upload-icons {
        grid-template-columns: repeat(4, 1fr);
    }
}
.manual-poi__upload-icons--no-margin {
    margin: 0;
    text-align: center;
    align-items: center;
}
.manual-poi__upload-container {
    position: relative;
    width: 100%;
}
.manual-poi__image-preview {
    width: 28.8rem;
    height: 16rem;
    background-image: var(--poi-background-image-upload-preview);
    background-size: cover;
    border-radius: 4px;
}
.manual-poi__image-preview-container {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: center;
}
.manual-poi__confirm-buttons {
    display: grid;
    grid-gap: 1rem;
    grid-template-columns: repeat(2, 1fr);
}
/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/*RTL Language Mixin*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* status colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/* Wallet gradient background */
/* App Cards gradient background */
/* Wallets */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon-active;
        }
*/
/**
 * Define Breakpoints here.
 */
/** Need to add new breakpoints for mixins */
.common-mistake-examples__title {
    margin-top: 1.6rem;
    margin-bottom: 1.6rem;
}
.common-mistake-examples__content {
    display: grid;
    grid-row-gap: 1.6rem;
    row-gap: 1.6rem;
    margin-bottom: 2.4rem;
}
@media (min-width: 601px) and (max-width: 1279px) {
    .common-mistake-examples__content {
        grid-template-columns: repeat(2, 1fr);
        row-gap: 3.2rem;
    }
}
@media (min-width: 1280px) {
    .common-mistake-examples__content {
        grid-template-columns: repeat(3, 1fr);
        -moz-column-gap: calc((100% - 71.1rem) / 2);
        column-gap: calc((100% - 71.1rem) / 2);
        row-gap: 3.2rem;
    }
}
@media (min-width: 601px) and (max-width: 1279px) {
    .common-mistake-examples__content {
        grid-template-columns: repeat(2, 1fr);
    }
}
.common-mistake-examples__content-layout {
    background-color: var(--transparent-danger);
    gap: 1.6rem;
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 0.8rem;
    box-sizing: border-box;
    border: 1px solid var(--general-section-1);
    border-radius: 4px;
    width: 23.7rem;
    height: 21.8rem;
}
@media (max-width: 1279px) {
    .common-mistake-examples__content-layout {
        margin-left: auto;
        margin-right: auto;
    }
}
.common-mistake-examples__content-description {
    display: grid;
    grid-column-gap: 0.2rem;
    grid-template-columns: 1fr auto;
}
/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/*RTL Language Mixin*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* status colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/* Wallet gradient background */
/* App Cards gradient background */
/* Wallets */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon-active;
        }
*/
/**
 * Define Breakpoints here.
 */
/** Need to add new breakpoints for mixins */
.poa-mobile-layout {
    display: flex;
    flex-direction: column;
    width: 100%;
}

.poa-header {
    display: flex;
    flex-direction: column;
}
.poa-header--non-modal {
    margin-bottom: 1.6rem;
}

.timeline {
    background-color: var(--general-section-1);
    padding: 0.4rem 1.6rem;
    align-items: center;
    height: 5.2rem;
    -moz-column-gap: 1.6rem;
    column-gap: 1.6rem;
    display: flex;
}
.timeline-item {
    display: flex;
}

.poa-error-banner {
    margin-top: 2.4rem;
}

.progress-container {
    height: 0.2rem;
    width: 80%;
    background-color: var(--general-hover);
    border-radius: 96px;
    overflow: hidden;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
}

.progress-bar {
    width: 0;
    height: 100%;
    background-color: var(--brand-red-coral);
    border-radius: 96px;
}
.progress-bar--animate {
    animation: progressAnimation 0.8s ease-in-out forwards;
}

@keyframes progressAnimation {
    0% {
        width: 0;
    }
    100% {
        width: 100%;
    }
}
/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/*RTL Language Mixin*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* status colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/* Wallet gradient background */
/* App Cards gradient background */
/* Wallets */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon-active;
        }
*/
.account__inset_header-icon {
    /* postcss-bem-linter: ignore */
    /* postcss-bem-linter: ignore */
    /* postcss-bem-linter: ignore */
    /* postcss-bem-linter: ignore */
}
.account__inset_header-icon .color1-fill {
    fill: var(--text-general);
}
.account__inset_header-icon .color1-stroke {
    stroke: var(--text-general);
}
.account__inset_header-icon .color2-fill {
    fill: none;
}
.account__inset_header-icon .color2-stroke {
    stroke: none;
}
.active.account__inset_header-icon {
    /* postcss-bem-linter: ignore */
    /* postcss-bem-linter: ignore */
    /* postcss-bem-linter: ignore */
    /* postcss-bem-linter: ignore */
}
.active.account__inset_header-icon .color1-fill {
    fill: var(--text-prominent);
}
.active.account__inset_header-icon .color1-stroke {
    stroke: var(--text-prominent);
}
.active.account__inset_header-icon .color2-fill {
    fill: none;
}
.active.account__inset_header-icon .color2-stroke {
    stroke: none;
}
.disabled.account__inset_header-icon {
    /* postcss-bem-linter: ignore */
    /* postcss-bem-linter: ignore */
    /* postcss-bem-linter: ignore */
    /* postcss-bem-linter: ignore */
}
.disabled.account__inset_header-icon .color1-fill {
    fill: var(--text-disabled);
}
.disabled.account__inset_header-icon .color1-stroke {
    stroke: var(--text-disabled);
}
.disabled.account__inset_header-icon .color2-fill {
    fill: none;
}
.disabled.account__inset_header-icon .color2-stroke {
    stroke: none;
}
.white.account__inset_header-icon {
    /* postcss-bem-linter: ignore */
    /* postcss-bem-linter: ignore */
}
.white.account__inset_header-icon .color1-fill {
    fill: var(--text-prominent);
}
.white.account__inset_header-icon .color1-stroke {
    stroke: var(--text-prominent);
}
.border_hover_color.account__inset_header-icon {
    /* postcss-bem-linter: ignore */
    /* postcss-bem-linter: ignore */
}
.border_hover_color.account__inset_header-icon .color1-fill {
    fill: var(--text-prominent);
}
.border_hover_color.account__inset_header-icon .color1-stroke {
    stroke: var(--text-prominent);
}
.secondary.account__inset_header-icon {
    /* postcss-bem-linter: ignore */
    /* postcss-bem-linter: ignore */
}
.secondary.account__inset_header-icon .color1-fill {
    fill: var(--text-less-prominent);
}
.secondary.account__inset_header-icon .color1-stroke {
    stroke: var(--text-less-prominent);
}

/**
 * Define Breakpoints here.
 */
/** Need to add new breakpoints for mixins */
.account {
    margin: 0 16px;
}
@media (max-width: 1279px) {
    .account {
        height: 100%;
    }
}
@media (max-width: 1279px) {
    .account .dc-page-overlay__content {
        overflow-x: hidden;
        overflow-y: auto;
    }
}
@media (min-width: 601px) and (max-width: 1279px) {
    .account .dc-page-overlay__content {
        width: 60rem;
        height: 100%;
    }
}
.account .dc-vertical-tab__content {
    height: calc(100vh - 48px - 36px - 53px - 2.4rem);
}
[dir='ltr'] .account .dc-vertical-tab__header--active {
    border-left: 4px solid var(--brand-red-coral);
}
[dir='rtl'] .account .dc-vertical-tab__header--active {
    border-right: 4px solid var(--brand-red-coral);
}
[dir='ltr'] .account .dc-vertical-tab__header--active {
    padding-left: 4.4rem;
}
[dir='rtl'] .account .dc-vertical-tab__header--active {
    padding-right: 4.4rem;
}
.account .dc-vertical-tab__header--active {
    background-color: var(--general-main-1);
}
.account .dc-vertical-tab__header-account__logout {
    margin-top: 1rem;
    align-items: center;
    justify-content: center;
    display: flex;
    border: 2px solid var(--border-normal-1);
    padding: 1rem;
    border-radius: 0.5rem;
    cursor: pointer;
}
[dir='ltr'] .account .dc-vertical-tab__header-account__logout--icon {
    margin-right: 0.8rem;
}
[dir='rtl'] .account .dc-vertical-tab__header-account__logout--icon {
    margin-left: 0.8rem;
}
.account .dc-vertical-tab--dashboard {
    height: auto;
    height: initial;
}
[dir='ltr'] .account .dc-vertical-tab--dashboard .dc-vertical-tab__header {
    padding-left: 3.9rem;
}
[dir='rtl'] .account .dc-vertical-tab--dashboard .dc-vertical-tab__header {
    padding-right: 3.9rem;
}
.account .dc-vertical-tab--dashboard .dc-vertical-tab__header {
    font-size: 1.2rem;
}
[dir='ltr'] .account .dc-vertical-tab--dashboard .dc-vertical-tab__header__link {
    margin-left: 0;
    margin-left: initial;
}
[dir='rtl'] .account .dc-vertical-tab--dashboard .dc-vertical-tab__header__link {
    margin-right: 0;
    margin-right: initial;
}
[dir='ltr'] .account .dc-vertical-tab--dashboard .dc-vertical-tab__header--highlight {
    border-left: 0;
    border-left: initial;
}
[dir='rtl'] .account .dc-vertical-tab--dashboard .dc-vertical-tab__header--highlight {
    border-right: 0;
    border-right: initial;
}
.account .dc-vertical-tab--dashboard .dc-vertical-tab__header-group__icon {
    margin-right: 0.9rem;
}
[dir='ltr'] .account .dc-vertical-tab--dashboard .account-form__personal-details .account__scrollbars_container,
[dir='ltr'] .account .dc-vertical-tab--dashboard .account-form__trading-assessment .account__scrollbars_container,
[dir='ltr'] .account .dc-vertical-tab--dashboard .account-form__financial-assessment .account__scrollbars_container {
    margin-left: 6rem;
}
[dir='rtl'] .account .dc-vertical-tab--dashboard .account-form__personal-details .account__scrollbars_container,
[dir='rtl'] .account .dc-vertical-tab--dashboard .account-form__trading-assessment .account__scrollbars_container,
[dir='rtl'] .account .dc-vertical-tab--dashboard .account-form__financial-assessment .account__scrollbars_container {
    margin-right: 6rem;
}
.account .dc-vertical-tab--dashboard .account-form__personal-details .account__scrollbars_container,
.account .dc-vertical-tab--dashboard .account-form__trading-assessment .account__scrollbars_container,
.account .dc-vertical-tab--dashboard .account-form__financial-assessment .account__scrollbars_container {
    width: 68.5rem;
    height: 100%;
}
[dir='ltr'] .account .dc-vertical-tab--dashboard .account-form__password-wrapper {
    margin-left: 6rem;
}
[dir='rtl'] .account .dc-vertical-tab--dashboard .account-form__password-wrapper {
    margin-right: 6rem;
}
.account .dc-vertical-tab--dashboard .account-form__password-wrapper {
    width: 68.5rem;
}
.account .dc-vertical-tab--dashboard .dc-vertical-tab__title {
    position: sticky;
    top: 0;
    z-index: 2;
    background-color: var(--general-main-1);
    padding: 0.8rem 2.4rem;
    border-bottom: 1px solid var(--general-section-1);
    width: calc(100vw - 22.8rem);
}
[dir='ltr'] .account .dc-vertical-tab--dashboard .dc-vertical-tab__title-text {
    padding-left: 2rem;
}
[dir='rtl'] .account .dc-vertical-tab--dashboard .dc-vertical-tab__title-text {
    padding-right: 2rem;
}
.account .dc-vertical-tab--dashboard .dc-vertical-tab__title-text {
    flex: 1;
    text-align: center;
    font-size: var(--text-size-m);
    color: var(--text-prominent);
    font-weight: bold;
    line-height: 1.5;
    width: calc(100% - 2rem);
    float: left;
}
.account .dc-vertical-tab--dashboard .dc-vertical-tab__title-close {
    cursor: pointer;
    height: 1.6rem;
    position: absolute;
    right: 3.2rem;
    top: 1.6rem;
}
.account .dc-vertical-tab--dashboard .dc-vertical-tab__tab {
    height: auto;
    height: initial;
    background-color: transparent;
    background-color: initial;
    min-width: 0;
    min-width: initial;
}
.account .dc-vertical-tab--dashboard .dc-vertical-tab__tab-meta-wrapper {
    width: 22.8rem;
    height: calc(100vh - 4.8rem);
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    border-right: 1px solid var(--general-section-1);
}
.account .dc-vertical-tab--dashboard .dc-vertical-tab__tab-meta-wrapper--dashboard {
    padding-top: 3.5rem;
    top: auto;
    top: initial;
}
.account .dc-vertical-tab--dashboard .dc-vertical-tab__content {
    margin: 2rem 0 0 7rem;
    width: -moz-fit-content;
    width: fit-content;
    max-width: calc(100vw - 33rem);
}
.account .dc-vertical-tab--dashboard .dc-vertical-tab__content .dc-checkbox__box {
    margin-left: 0;
}
.account .dc-vertical-tab--dashboard .dc-vertical-tab__content .da-account-limits__wrapper {
    width: calc(100vw - 33rem);
}
.account .dc-vertical-tab--dashboard .dc-vertical-tab__content > div {
    height: calc(100vh - 14.5rem);
}
.account .dc-vertical-tab--dashboard .dc-vertical-tab__content .proof-of-identity {
    width: calc(100vw - 33rem);
}
.account .dc-vertical-tab--dashboard .dc-vertical-tab__header--active {
    border-left: 0;
    border-left: initial;
    border-radius: 0;
    border-radius: initial;
    border-right: 4px solid var(--brand-red-coral);
}
@media (min-width: 1280px) {
    .account .dc-vertical-tab--dashboard .da-self-exclusion__wrapper {
        width: calc(100vw - 33rem);
    }
    .account .dc-vertical-tab--dashboard .da-icon-with-message {
        margin-top: 0;
    }
}
@media (min-width: 1280px) {
    .account .dc-vertical-tab--dashboard {
        grid-template-rows: 5.2rem calc(100vh - 4.8rem - 3.6rem - 5.2rem);
        overflow: hidden;
    }
}
.account__inset_header {
    box-shadow: inset 0 -1px 0 0 var(--general-section-1);
}
.account__inset_header-subheading {
    margin-right: 8px;
}
.account__inset_header-icon {
    width: 24px;
    height: 24px;
}
.account__tab_container {
    padding: 0 8px;
    height: 100%;
    width: 100%;
    overflow: hidden;
}
.account-form {
    overflow: hidden;
    height: 100%;
    width: 100%;
}
@media (min-width: 1280px) {
    .account-form__financial-assessment .account-form__fieldset {
        margin-top: 0.8rem;
        margin-bottom: 2rem;
    }
    .account-form__financial-assessment .account-form__fieldset .dc-dropdown-container {
        margin-top: 0;
        margin-top: initial;
    }
}
@media (max-width: 1279px) {
    .account-form__financial-assessment .account-form__fieldset {
        margin-top: 0.8rem;
        margin-bottom: 2rem;
    }
}
@media (min-width: 601px) and (max-width: 1279px) {
    .account-form .account-form__fieldset {
        max-width: 100%;
    }
    .account-form .account-form__footer-note {
        width: auto;
        text-align: center;
        align-self: center;
    }
}
.account-form__header {
    font-size: var(--text-size-xs);
    font-weight: bold;
    margin-bottom: 1.6rem;
    position: relative;
    height: 1.6rem;
    white-space: nowrap;
}
.account-form__header-section {
    display: flex;
    align-items: center;
    justify-content: flex-start;
}
.account-form__header-section:after {
    border-top: 1px solid var(--general-section-1);
    content: '';
    height: 100%;
    width: 100%;
    margin-top: 0.3rem;
}
@media (max-width: 1279px) {
    .account-form__header-section:after {
        border-top-color: var(--general-disabled);
    }
}
.account-form__header--has-description {
    margin-bottom: 0.5rem;
}
.account-form__title {
    color: var(--text-prominent);
    padding-right: 0.8rem;
}
.account-form__subtitle {
    font-size: 1.2rem;
    color: var(--text-prominent);
    font-weight: normal;
    align-self: baseline;
    padding-right: 0.8rem;
    margin-top: 0.2rem;
}
.account-form__question {
    position: relative;
    max-width: 67.2rem;
    margin-top: 1.6rem;
    margin-bottom: 2rem;
}
.account-form__question--text {
    margin-bottom: 1.6rem;
    max-width: 67.2rem;
}
@media (max-width: 1279px) {
    .account-form__question--text {
        margin-bottom: 2.4rem;
    }
}
.account-form__question .dc-dropdown__display {
    max-width: 67.2rem;
}
.account-form__question:last-child .dc-list .dc-themed-scrollbars__autohide {
    top: 1px;
    height: 100%;
}
.account-form__fieldset {
    position: relative;
    max-width: 400px;
}
@media (max-width: 1279px) {
    .account-form__fieldset {
        max-width: 100%;
        width: 100%;
    }
}
.account-form__fieldset--phone-verification-livechat-link {
    color: var(--text-general);
}
[dir='rtl'] .account-form__fieldset--phone-number-input .dc-input__container .dc-input__field {
    text-align: right;
}
[dir='rtl'] .account-form__fieldset--phone-number-input .dc-input__container .dc-input__field[value] {
    direction: ltr;
}
.account-form__fieldset--2-cols {
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-gap: 8px;
}
.account-form__fieldset--tin {
    display: grid;
    grid-gap: 0.4rem;
    grid-template-rows: 1fr 1fr;
    max-width: 40rem;
    margin-bottom: 1rem;
}
.account-form__fieldset--phone_container {
    display: flex;
}
.account-form__fieldset--phone_input {
    width: 100%;
}
[dir='ltr'] .account-form__fieldset--phone_input .dc-input__container {
    border-top-right-radius: 0;
}
[dir='rtl'] .account-form__fieldset--phone_input .dc-input__container {
    border-top-left-radius: 0;
}
[dir='ltr'] .account-form__fieldset--phone_input .dc-input__container {
    border-bottom-right-radius: 0;
}
[dir='rtl'] .account-form__fieldset--phone_input .dc-input__container {
    border-bottom-left-radius: 0;
}
.account-form__fieldset .datepicker {
    max-width: none;
    max-width: initial;
}
.account-form__fieldset .datepicker__picker {
    margin-top: 8px;
}
.account-form__fieldset .datepicker .icon-datepicker {
    position: absolute;
    top: 1.2rem;
    right: 1rem;
}
.account-form__fieldset .datepicker .calendar__cell--disabled {
    color: var(--text-disabled) !important;
}
.account-form__fieldset .datepicker .calendar__cell--other:not(.calendar__cell--today) {
    color: var(--text-prominent);
}
.account-form__fieldset .dc-input__label {
    top: 1rem;
}
@media (max-width: 1279px) {
    .account-form__fieldset .dc-checkbox__box,
    .account-form__fieldset .dc-checkbox .dc-icon {
        width: 2.4rem;
        height: 2.4rem;
    }
}
.account-form__divider {
    height: 2px;
    margin: 1.6rem 0;
    width: 100%;
    max-width: 400px;
    border-top: 1px solid var(--general-active);
}
.account-form .pro-client h1 {
    color: var(--text-red);
}
.account-form .pro-client p {
    padding-bottom: 1.6rem;
}
.account-form .dc-checkbox__box {
    margin-left: 0;
}
.account-form__error-message {
    padding: 1rem 0;
    position: static;
    position: initial;
}
@media (min-width: 1280px) {
    .account-form__personal-details .account__scrollbars_container {
        padding-bottom: 2.4rem;
    }
}
@media (max-width: 1279px) {
    .account-form__personal-details .account__scrollbars_container--grid-layout {
        display: flex;
        flex-direction: column;
    }
    .account-form__personal-details .account-form__footer-note {
        height: auto;
        margin-bottom: 1.6rem;
    }
    .account-form__personal-details .dc-checkbox__label {
        font-size: 1.2rem;
    }
    .account-form__personal-details .dc-select-native__placeholder {
        background-color: var(--general-main-1);
    }
    .account-form__personal-details .date-of-birth-datepicker .datepicker-native__input {
        height: 3.8rem;
    }
}
.account-form__personal-details .account-form__fieldset .dropdown-field {
    margin-bottom: 3.2rem;
}
@media (min-width: 601px) and (max-width: 1279px) {
    .account-form__personal-details .dc-form-submit-error-message {
        width: 100%;
        justify-content: center;
    }
}
.account-form__trading-assessment .dc-select-native__placeholder,
.account-form__financial-assessment .dc-select-native__placeholder {
    background-color: var(--general-main-1);
}
@media (max-width: 1279px) {
    .account-form__trading-assessment .account__scrollbars_container--grid-layout,
    .account-form__financial-assessment .account__scrollbars_container--grid-layout {
        display: flex;
        flex-direction: column;
    }
}
@media (min-width: 1280px) {
    .account-form__trading-assessment .account__scrollbars_container,
    .account-form__financial-assessment .account__scrollbars_container {
        padding-bottom: 0;
    }
}
.account-form__occupation .dc-dropdown__display-text {
    line-height: 1.6rem;
    text-align: left;
    white-space: nowrap;
    text-overflow: ellipsis;
    overflow: hidden;
    display: inline-block;
    max-width: 40rem;
}
.account__initial-loader {
    height: calc(100vh - 240px);
}
.account__passwords {
    display: flex;
    flex-direction: column;
}
.account__passwords .email-password-title-wrapper {
    display: flex;
    align-items: center;
    gap: 0.8rem;
    margin-bottom: 1.8rem;
}
.account__passwords .account__divider {
    margin: 2.4rem 0;
}
@media (max-width: 1279px) {
    [dir='ltr'] .account__passwords {
        margin-right: 0;
        margin-right: initial;
    }
    [dir='rtl'] .account__passwords {
        margin-left: 0;
        margin-left: initial;
    }
    .account__passwords {
        width: 100%;
        margin-bottom: 2.4rem;
    }
}
.account__passwords-fieldset {
    max-width: 48.6rem;
}
.account__passwords-footer {
    display: flex;
    gap: 0.8rem;
    margin-top: 0.8rem;
    justify-content: flex-end;
}
.account__passwords-footer-btn {
    margin-top: 2.4rem;
    min-width: 14.9rem;
}
@media (min-width: 601px) and (max-width: 1279px) {
    .account__passwords-footer-btn {
        margin: 0;
    }
}
.account__passwords-linked {
    display: flex;
    align-items: center;
    justify-content: center;
    flex-wrap: wrap;
    gap: 0.8rem;
    padding: 0 1.6rem;
    border: 1px solid var(--border-normal);
    border-radius: 4px;
    width: -moz-fit-content;
    width: fit-content;
    height: 4rem;
    cursor: pointer;
}
.account__passwords-linked:hover {
    background-color: var(--general-active);
}
@media (max-width: 1279px) {
    .account__passwords {
        height: -moz-fit-content;
        height: fit-content;
        width: 100%;
        padding: 2.4rem 1.8rem 2rem;
    }
}
.account__email-wrapper__button-container {
    margin-top: 2.4rem;
}
.account__email-wrapper .email-platform__content {
    margin-top: 3.6rem;
    display: flex;
    grid-column-gap: 0.8rem;
}
@media (max-width: 1279px) {
    .account__email-wrapper .email-platform__content {
        margin-bottom: 2.4rem;
        flex-direction: column;
    }
}
.account__email-wrapper .email-platform__content__fieldset {
    width: 40rem;
}
@media (max-width: 1279px) {
    .account__email-wrapper .email-platform__content__fieldset {
        width: inherit;
        max-width: 40rem;
    }
    .account__email-wrapper .email-platform__content__fieldset .email-input {
        margin-bottom: 0.8rem;
    }
}
.account__email-wrapper .email-platform__content__fieldset .dc-input__label {
    color: var(--text-general) !important;
}
.account__email-wrapper .email-platform__content__fieldset input {
    text-overflow: ellipsis;
}
.account__email-wrapper .email-platform__content .email-change_button {
    max-width: 14.9rem;
}
@media (max-width: 1279px) {
    .account__password-wrapper .account__scrollbars_container--grid-layout {
        display: flex;
        flex-direction: column;
    }
}
[dir='ltr'] .account__text {
    text-align: left;
}
[dir='rtl'] .account__text {
    text-align: right;
}
.account__text {
    font-size: 1.4rem;
    color: var(--text-general);
    font-weight: 400;
    text-transform: none;
    line-height: 1.5;
    color: var(--text-general);
}
@media (max-width: 1279px) {
    .account .account-management__container {
        margin-left: auto;
        margin-right: auto;
    }
}
.account .account-management__list-container {
    margin-top: 1.6rem;
    width: 100%;
    display: flex;
    flex-direction: column;
    border-radius: 0.8rem;
    background: rgba(236, 63, 63, 0.16);
    padding: 0.8rem;
    align-items: flex-start;
    gap: 0.8rem;
}
.account .account-management__list-icon {
    margin-right: 1.2rem;
    margin-top: 0.2rem;
}
.account .account-management__list-message {
    display: flex;
    margin-bottom: 1.6rem;
}
.account .account-management__list-message:last-of-type {
    margin-bottom: 0;
}
.account .account-management__list-button.dc-btn {
    margin-top: 2.4rem;
    width: -moz-fit-content;
    width: fit-content;
    align-self: center;
}
.account .account-management__continue.dc-btn {
    margin-top: 1.6rem;
}
.account .account-management__message {
    margin-top: 1em;
}
.account .account-management__message-content {
    display: flex;
    width: 100%;
    height: 100%;
    margin: 0 16px;
    align-items: center;
    flex-direction: column;
}
.account .account-management__message-content .dc-btn {
    height: 4rem;
    margin-top: 3.2rem;
}
@media (max-width: 1279px) {
    .account .account-management__message-content .dc-btn {
        margin: 1.6rem 0;
        padding: 1.6rem;
    }
}
.account .account-management__message-icon {
    width: 12.8rem;
    height: 12.8rem;
}
@media (min-width: 1280px) {
    .account .account-management__message-icon {
        margin-top: 8rem;
    }
}
.account .account-management__message-title {
    font-size: var(--text-size-xs);
    margin-bottom: 1rem;
    text-align: center;
}
.account .account-management__message-subtitle {
    font-size: var(--text-size-xxs);
    font-weight: 400;
    text-align: center;
    line-height: 1.5;
}
.account .account-management__message-wrapper {
    display: flex;
    justify-content: center;
    width: 100%;
}
.account .account-management__message-wrapper-full-width {
    width: calc(100vw - 33rem);
}
@media (max-width: 1279px) {
    .account .account-management__message-wrapper-full-width {
        width: 100%;
    }
}
@media (max-width: 1279px) {
    .account .account-management__message-wrapper {
        overflow-x: hidden;
        overflow-y: auto;
    }
}
@media (max-width: 1279px) {
    .account .account-management__message {
        line-height: 2rem;
        text-align: center;
    }
}
.account .account-management-dashboard__message-icon {
    width: auto;
    width: initial;
}
.account .account-management__text-container {
    margin-top: 1rem;
    max-width: 67.2rem;
}
.account .account-management__button.dc-btn {
    margin-top: 3.2rem;
}
.account .account-management-flex-wrapper {
    display: flex;
}
.account .account-management-flex-wrapper--space-between {
    justify-content: space-between;
}
@media (min-width: 1280px) {
    .account .account-management-leave-confirm .dc-btn--primary,
    .account .account-management-submit-success .dc-btn--primary {
        width: 13rem;
        margin-left: 0.8rem;
    }
}
@media (max-width: 1279px) {
    .account .account-management-leave-confirm,
    .account .account-management-submit-success {
        flex-direction: column;
        width: 100%;
        margin-top: 1.2rem;
    }
    .account .account-management-leave-confirm .dc-btn,
    .account .account-management-submit-success .dc-btn {
        padding: 0;
        margin-bottom: 0;
    }
}
.account .account-management-table {
    width: 100%;
}
.account .account-management-table thead {
    position: relative;
}
.account .account-management-table thead tr {
    padding-bottom: 0.8rem;
}
[dir='ltr'] .account .account-management-table thead th {
    text-align: left;
}
[dir='rtl'] .account .account-management-table thead th {
    text-align: right;
}
.account .account-management-table thead th {
    font-size: 1.4rem;
    color: var(--text-general);
    font-weight: 700;
    text-transform: none;
    line-height: 1.5;
    color: var(--text-prominent);
}
@media (max-width: 1279px) {
    .account .account-management-table thead th {
        font-size: 1.2rem;
        color: var(--text-general);
    }
}
.account .account-management-table tbody tr td {
    border-bottom: 1px solid var(--general-section-1);
}
.account .account-management-table__total-withdraw .dc-btn__small {
    width: 5rem;
    margin: 0 0.6rem;
}
@media (max-width: 1279px) {
    .account .account-management-table__total-withdraw .dc-btn__small {
        margin: 1.1rem 0;
    }
}
.account .account-management-table__verify {
    margin-left: 0.6rem;
}
.account .account-management-table__verify-button {
    margin-left: 0.8rem;
}
@media (max-width: 1279px) {
    .account .account-management-table__verify {
        margin-left: 0;
        margin-left: initial;
    }
}
@media (min-width: 1280px) {
    .account .account-management-table {
        max-width: 54.6rem;
    }
}
.account .dashboard__message-content {
    margin-top: 8rem;
}
@media (max-width: 1279px) {
    .account .dashboard__message-content {
        margin-top: 4rem;
    }
}
.account .two-factor {
    height: 100%;
    width: 100%;
}
.account .two-factor .dc-timeline__container {
    width: 100%;
}
.account .two-factor .dc-dialog__content {
    max-width: 100%;
    width: 100%;
    height: 100%;
}
.account .two-factor .dc-popover__target {
    display: flex;
}
.account .two-factor__wrapper {
    display: flex;
    width: 100%;
    height: 100%;
}
.account .two-factor__wrapper--enabled {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: flex-start;
    height: 100%;
}
@media (max-width: 1279px) {
    .account .two-factor__wrapper {
        flex-direction: column;
        overflow-y: auto;
        overflow-x: hidden;
    }
}
[dir='ltr'] .account .two-factor__title {
    margin-left: 1.2rem;
}
[dir='rtl'] .account .two-factor__title {
    margin-right: 1.2rem;
}
.account .two-factor__title {
    margin-bottom: 1.5rem;
}
@media (max-width: 1279px) {
    [dir='ltr'] .account .two-factor__title {
        margin-right: 1.2rem;
    }
    [dir='rtl'] .account .two-factor__title {
        margin-left: 1.2rem;
    }
}
.account .two-factor__input-group {
    display: flex;
    width: 40rem;
    margin: 2.7rem auto 0;
}
@media (max-width: 1279px) {
    .account .two-factor__input-group {
        width: 100%;
        max-width: 40rem;
    }
}
.account .two-factor__input {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
    border-right: 0;
}
[dir='ltr'] .account .two-factor__button {
    margin-left: -1px;
}
[dir='rtl'] .account .two-factor__button {
    margin-right: -1px;
}
.account .two-factor__button {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
}
.account .two-factor__link {
    color: var(--text-general);
}
.account .two-factor__timeline {
    padding: 0 1.4rem;
}
@media (max-width: 1279px) {
    [dir='ltr'] .account .two-factor__timeline {
        margin-left: 1.2rem;
    }
    [dir='rtl'] .account .two-factor__timeline {
        margin-right: 1.2rem;
    }
}
.account .two-factor__scrollbars {
    height: 100%;
    width: 100%;
    flex: 1;
}
.account .two-factor__qr {
    display: flex;
    align-items: center;
    flex-direction: column;
    margin-bottom: 1.6rem;
}
.account .two-factor__qr--wrapper {
    background: var(--status-colored-background);
    padding: 0.4rem;
    width: auto;
}
.account .two-factor__qr--title {
    margin-top: 2.4rem;
}
.account .two-factor__qr--message {
    margin: 1.6rem 0 0;
}
[dir='ltr'] .account .two-factor__qr--code {
    text-align: left;
}
[dir='rtl'] .account .two-factor__qr--code {
    text-align: right;
}
.account .two-factor__qr--code {
    font-size: 1.4rem;
    color: var(--text-general);
    font-weight: 400;
    text-transform: none;
    line-height: 1.5;
    padding: 1rem 1.6rem;
    background: var(--general-section-1);
    display: flex;
    border-radius: 4px;
    margin-top: 1.6rem;
    align-items: center;
}
[dir='ltr'] .account .two-factor__qr--code span {
    margin-right: 0.8rem;
}
[dir='rtl'] .account .two-factor__qr--code span {
    margin-left: 0.8rem;
}
.account .two-factor__icon {
    width: 8.3rem;
    height: 12.3rem;
    margin-top: 6.4rem;
}
.account .login-history {
    height: 100%;
    width: 100%;
}
.account .login-history__table {
    height: calc(100% - 42px);
    flex: 1;
}
.account .login-history__table__row,
.account .login-history__table__header {
    /* Date-Action-Browser-IP-Status */
    grid-template-columns: 19rem minmax(max-content, 9.5rem) 24.8rem minmax(13.3rem, 30.8rem) 12rem;
    padding: 1rem;
    padding-left: 0;
    background-color: var(--general-main-1);
}
.account .login-history__table__row {
    border-bottom: 1px solid var(--border-disabled);
}
.account .login-history__table__row__cell--action {
    text-transform: capitalize;
}
@media (max-width: 1279px) {
    .account .login-history__list {
        width: 90%;
        margin: 1rem auto;
    }
    .account .login-history__list__wrapper {
        background-color: var(--general-main-2);
        margin-bottom: 1rem;
        padding: 1rem;
        box-shadow:
            0 0 20px rgba(0, 0, 0, 0.05),
            0 16px 20px rgba(0, 0, 0, 0.05);
        border-radius: 0.4rem;
    }
    .account .login-history__list__row {
        grid-template-columns: 3fr 1fr;
        border: none;
    }
    .account .login-history__list__row__cell {
        display: block;
    }
    .account .login-history__list__row__cell--title {
        font-stretch: normal;
        font-style: normal;
        letter-spacing: normal;
    }
    .account .login-history__list__row__cell--action {
        text-transform: capitalize;
    }
    .account .login-history__list__row__cell--right {
        float: right;
    }
    .account .login-history__list__row__cell--browser,
    .account .login-history__list__row__cell--ip-value {
        padding-right: 1.5rem;
    }
    .account .login-history__list__row--with-margin {
        margin-bottom: 1rem;
    }
}
@media (max-width: 1279px) {
    .account .leave-confirm__message-icon {
        width: 93px;
    }
    .account .leave-confirm__message {
        color: var(--text-prominent);
    }
    .account .leave-confirm__text {
        padding: 0 1.9rem;
    }
}
.account .submit-success {
    margin-top: 100px;
}
@media (max-width: 1279px) {
    .account .submit-success__message-icon {
        width: 96px;
        height: 90px;
    }
    .account .submit-success__message {
        font-size: 1.4rem;
        text-align: center;
        margin-top: 1.6rem;
    }
    .account .submit-success__text {
        padding: 0 1.9rem;
        font-size: 1rem;
    }
}
.account-address__details-section {
    margin-top: 0.5em;
}
.account-page-wrapper--dashboard {
    overflow-x: hidden;
    overflow-y: hidden;
}
@media (max-width: 1279px) {
    .account-page-wrapper {
        height: 100%;
    }
}
.account__confirmation-page {
    padding: 2.4rem 1.6rem 0;
}
.account__confirmation-page-title {
    height: 20px;
    margin-bottom: 0.8rem;
}
.account__confirmation-page-content {
    margin-top: 0.8rem;
    color: var(--text-general);
    line-height: 1.4rem;
}
.account__confirmation-page-footer {
    position: absolute;
    bottom: 0;
    left: 0;
    display: flex;
    flex-direction: column;
    width: 100%;
    padding: 1.6rem;
    z-index: 4;
    border-radius: 0 4px 4px 0;
    border-top: 2px solid var(--general-section-1);
}
.account__confirmation-page-footer .dc-btn:first-child {
    margin-bottom: 1.6rem;
}
@media (max-width: 1279px) {
    .account {
        height: 100%;
        margin: 0;
    }
}
.account__logout {
    margin: 0 0.8rem;
    padding: 0 1.2rem;
}
.account__logout-tab {
    padding-left: 0;
}
.account .dc-checkbox-blue .dc-checkbox__box {
    margin-left: 0;
}
.account .dc-checkbox-blue .dc-checkbox__box--active {
    padding-left: 0;
}
.account__demo-message-wrapper {
    display: flex;
    flex-direction: column;
    width: 100%;
    height: auto;
}
.account__demo-message-wrapper-dashboard {
    width: calc(100vw - 33rem);
}
@media (max-width: 1279px) {
    .account__demo-message-wrapper-dashboard {
        width: 100%;
    }
    .account__demo-message-wrapper-dashboard button {
        width: 100%;
    }
}
.account__demo-message-button {
    margin-top: 2.4rem;
    align-self: center;
}
@media (max-width: 1279px) {
    .account__demo-message-button {
        width: 100%;
    }
}

/** @define account-poa; weak */
.account-poa__details-section {
    margin-top: 1em;
    display: flex;
    flex-wrap: wrap;
}
.account-poa__details-description {
    width: 100%;
    margin-right: 0.5em;
    flex: 1;
}
@media (max-width: 1279px) {
    .account-poa__details-description {
        margin-bottom: 2.4rem;
    }
}
.account-poa__details-fields {
    width: 100%;
    min-width: 400px;
    flex: 1;
}
.account-poa__details-fields .account-form__fieldset {
    margin-bottom: 4em;
}
@media (max-width: 1279px) {
    .account-poa__details-fields {
        min-width: 100%;
    }
}

/** @define unlink-account; weak */
.unlink-account {
    display: grid;
    grid-template-rows: 1fr 1fr 1fr;
    grid-row-gap: 1.6rem;
    max-width: 40rem;
    margin: 2.4rem auto 0;
    color: var(--text-prominent);
    font-size: var(--text-size-xxs);
    line-height: 1.5;
}
.unlink-account__content {
    display: grid;
    grid-template-columns: 3.2rem auto;
    grid-gap: 8px;
}
.unlink-account__content .inline-icon {
    width: 3.2rem;
    height: 3.2rem;
    margin-right: 0.8rem;
}
.unlink-account__modal-content {
    display: grid;
    grid-gap: 8px;
}
.unlink-account__modal-close {
    display: flex;
    justify-content: flex-end;
    padding-bottom: 1.2rem;
    cursor: pointer;
}
.unlink-account__modal-title {
    margin: 0.8rem 2.4rem;
    text-align: center;
}
.unlink-account__modal-description {
    text-align: center;
}
.unlink-account__modal-icon {
    text-align: center;
    margin-top: 0;
    padding-top: 0;
    padding-bottom: 1.6rem;
}
.unlink-account__footer {
    justify-content: center !important;
}

/* @define reset-email */
.reset-email__email-selection {
    display: flex;
    justify-content: center;
    align-items: flex-start;
    flex-flow: nowrap column;
}
.reset-email__email-selection .reset-email__heading {
    margin-bottom: 1.6rem;
}
.reset-email__email-selection .reset-email__descripton {
    margin-bottom: 2rem;
}
.reset-email__heading {
    margin-bottom: 0.8rem;
}
.reset-email__text {
    text-align: center;
    margin-bottom: 3.3rem;
}
.reset-email__btn {
    margin: 0;
    background-color: var(--button-primary-default);
    font-weight: bold;
    align-self: flex-end;
    color: var(--text-colored-background);
    font-size: 1.2rem;
}
.reset-email__btn:hover {
    background-color: var(--button-primary-hover);
}
.reset-email__btn--disabled {
    cursor: not-allowed !important;
}
.reset-email__btn--disabled {
    opacity: 0.32;
}
.reset-email__fieldset {
    position: relative;
    width: 100%;
    margin-bottom: 1rem;
}
.reset-email__email-field {
    /* postcss-bem-linter: ignore */
}
.reset-email__email-field > label {
    top: 0.9rem;
    background-color: var(--general-main-2);
}

/** @define sent-email; weak */
.sent-email {
    display: grid;
    grid-template-rows: 1fr 1fr 1fr;
    grid-row-gap: 16px;
    max-width: 400px;
    margin: 24px auto 0;
    color: var(--text-prominent);
    font-size: var(--text-size-xxs);
    line-height: 1.5;
}
.sent-email__content {
    display: grid;
    grid-template-columns: 3.2rem auto;
    grid-gap: 8px;
}
.sent-email__content .inline-icon {
    width: 3.2rem;
    height: 3.2rem;
    margin-right: 0.8rem;
}
.sent-email__modal-close {
    display: flex;
    justify-content: flex-end;
    padding: 1rem 1rem 3.4rem;
    cursor: pointer;
}
.sent-email__modal-unlink-title {
    margin: 0.8rem 2.4rem;
}

/** @define initial-loader; weak */
.initial-loader--btn .initial-loader__barspinner--rect {
    background-color: var(--text-colored-background);
}
.initial-loader--btn .barspinner {
    margin: 0 4px 0 -4px;
}

/** @define poi-icon-row; weak */
.poi-icon-row {
    display: flex;
    margin-bottom: 16px;
}
.poi-icon-row__icon-container {
    align-items: center;
    display: flex;
    flex-direction: column;
    color: var(--text-less-prominent);
}
.poi-icon-row__icon-container:not(:first-child):not(:last-child) {
    margin: 0 40px;
}
.poi-icon-row__icon-container p {
    font-size: var(--text-size-xxs);
}
.poi-icon-row__icon-container p:first-of-type {
    line-height: 1.5;
    margin-top: 8px;
    font-weight: bold;
}
@media (max-width: 1279px) {
    .poi-icon-row__icon-container:not(:first-child):not(:last-child) {
        margin: 0;
    }
    .poi-icon-row__icon-container .dc-icon {
        width: 8.8rem;
        height: auto;
    }
    .poi-icon-row__icon-container p {
        line-height: 20px;
    }
}
@media (max-width: 1279px) {
    .poi-icon-row {
        display: grid;
        grid-gap: 2.4rem;
        grid-template-columns: 1fr 1fr 1fr;
    }
}

/* stylelint-disable */
.dc-modal__container_financial-assessment-confirmation {
    width: 440px;
}
.dc-modal__container_financial-assessment-confirmation .dc-modal-body {
    padding-top: 1.2rem;
}
.dc-modal .leave-confirm__message-content {
    text-align: center;
}
.dc-modal .leave-confirm__message-icon {
    display: flex;
    justify-content: center;
    margin-bottom: 2.4rem;
}
.dc-modal .leave-confirm__message {
    margin-bottom: 0.8rem;
    font-weight: bold;
}
.dc-modal .account-management-leave-confirm {
    display: flex;
    justify-content: center;
    margin-top: 2.4rem;
}
.dc-modal .account-management-leave-confirm .dc-btn {
    margin-right: 0.8rem;
}

@media (max-width: 1279px) {
    .dc-modal__container_sent-email__modal {
        height: 42rem !important;
        overflow-y: scroll !important;
    }
}

.dc-modal__container_success-dialog {
    align-items: center;
}
.dc-modal__container_success-dialog .success-dialog__body {
    display: flex;
    align-items: center;
    flex-direction: column;
    text-align: center;
    padding: 0 1rem;
}
.dc-modal__container_success-dialog .success-dialog__body-icon {
    margin-left: 3rem;
}
.dc-modal__container_success-dialog .success-dialog__body-close {
    position: absolute;
    right: 2.4rem;
    top: 2.4rem;
}

.dc-modal__container_api_token__modal .api-token__popup {
    display: flex;
    width: 440px;
    height: 312px;
    justify-content: center;
    flex-direction: column;
    align-items: center;
}
.dc-modal__container_api_token__modal .api-token__popup-header {
    margin: 1.6rem 0 2.4rem;
}
.dc-modal__container_api_token__modal .api-token__popup-image {
    width: 12.8rem;
    height: 12.8rem;
}
.dc-modal__container_api_token__modal .api-token__popup-buttons > button:first-child {
    margin-right: 1.6rem;
}
.dc-modal__container_api_token__modal .api-token__popup-error {
    margin-top: 1.6rem;
    font-size: 1.4rem;
    color: var(--text-loss-danger);
    font-weight: 700;
    text-transform: none;
    text-align: center;
    line-height: 1.5;
}
@media (max-width: 1279px) {
    .dc-modal__container_api_token__modal .api-token__popup {
        width: 300px;
        height: 272px;
    }
}

/* stylelint-enable */
.proof-of-income {
    width: 100%;
}
.proof-of-income .account-form__footer {
    max-width: 100%;
    align-items: center;
}
.proof-of-income .account__scrollbars_container {
    padding: 0;
}
.proof-of-income__form-field {
    margin-bottom: 3.2rem;
}
@media (max-width: 1279px) {
    .proof-of-income__form-field {
        margin-bottom: 2.4rem;
    }
}
.proof-of-income__form-field .account-form__header {
    margin-bottom: 2.4rem;
}

/** @define closing-account; weak */
.closing-account {
    max-width: 67.2rem;
    padding-bottom: 1.6rem;
}
[dir='ltr'] .closing-account__information {
    text-align: left;
}
[dir='rtl'] .closing-account__information {
    text-align: right;
}
.closing-account__information {
    font-size: 1.4rem;
    color: var(--text-prominent);
    font-weight: 400;
    text-transform: none;
    line-height: 1.5;
    line-height: 1.43;
    margin-bottom: 0.8rem;
}
.closing-account__information--bold {
    margin: 0.5rem 0 0.8rem;
}
@media (max-width: 1279px) {
    .closing-account__information:first-child > p {
        padding-top: 2.4rem;
    }
}
[dir='ltr'] .closing-account__steps {
    text-align: left;
}
[dir='rtl'] .closing-account__steps {
    text-align: right;
}
.closing-account__steps {
    margin-top: 1.6rem;
    font-size: 1.4rem;
    color: var(--text-prominent);
    font-weight: 400;
    text-transform: none;
    line-height: 1.5;
    line-height: 1.43;
}
[dir='ltr'] .closing-account__steps > ul {
    padding-left: 3%;
}
[dir='rtl'] .closing-account__steps > ul {
    padding-right: 3%;
}
.closing-account__steps > ul {
    list-style-type: disc;
}
@media (max-width: 1279px) {
    [dir='ltr'] .closing-account__steps > ul {
        padding-left: 5%;
    }
    [dir='rtl'] .closing-account__steps > ul {
        padding-right: 5%;
    }
}
[dir='rtl'] .closing-account__steps > ul > li {
    width: -moz-fit-content;
    width: fit-content;
}
@media (max-width: 1279px) {
    .closing-account__steps {
        margin-top: 0.8rem;
    }
}
.closing-account__title {
    margin-bottom: 0.8rem;
}
.closing-account__link {
    color: var(--text-loss-danger);
    font-weight: bold;
    text-decoration: none;
}
.closing-account__buttons-container {
    display: flex;
    align-items: center;
    justify-content: flex-end;
    align-self: flex-end;
    background-color: transparent;
}
@media (max-width: 1279px) {
    .closing-account__buttons-container {
        align-self: flex-start;
    }
}
[dir='ltr'] .closing-account__button--cancel {
    margin-right: 10px;
}
[dir='rtl'] .closing-account__button--cancel {
    margin-left: 10px;
}
[dir='ltr'] .closing-account__button--cancel {
    float: right;
}
[dir='rtl'] .closing-account__button--cancel {
    float: left;
}
.closing-account__button--cancel {
    margin-top: 2.4rem;
}
@media (max-width: 1279px) {
    [dir='ltr'] .closing-account__button--cancel {
        margin-right: 10px;
    }
    [dir='rtl'] .closing-account__button--cancel {
        margin-left: 10px;
    }
    [dir='ltr'] .closing-account__button--cancel {
        float: right;
    }
    [dir='rtl'] .closing-account__button--cancel {
        float: left;
    }
    .closing-account__button--cancel {
        margin-top: -8px;
    }
}
[dir='ltr'] .closing-account__button--close-account {
    float: right;
}
[dir='rtl'] .closing-account__button--close-account {
    float: left;
}
.closing-account__button--close-account {
    margin-top: 2.4rem;
}
@media (max-width: 1279px) {
    .closing-account__button--close-account {
        float: none;
        margin: 2.4rem auto 3.2rem;
    }
}
.closing-account .closing-account-reasons {
    color: var(--text-prominent);
    font-size: var(--text-size-xs);
    line-height: 1.43;
}
.closing-account .closing-account-reasons__title {
    margin-bottom: 18px;
}
.closing-account .closing-account-reasons__checkbox {
    margin-top: 10px;
    width: -moz-fit-content;
    width: fit-content;
}
.closing-account .closing-account-reasons__input {
    margin: 0.8rem 0 0;
    max-width: 400px;
    text-overflow: ellipsis;
}
.closing-account .closing-account-reasons__input .dc-input__container {
    height: 9.8rem;
    padding: 0.5rem 1rem;
}
.closing-account .closing-account-reasons__input .dc-input__field[type='textarea'] {
    height: 8rem;
}
.closing-account .closing-account-reasons__input > input {
    min-height: 96px;
}
.closing-account .closing-account-reasons__hint {
    margin-top: 0.8rem;
}
@media (max-width: 1279px) {
    .closing-account .closing-account-reasons__hint-wrapper {
        margin-bottom: 5.6rem;
    }
}
.closing-account .closing-account-reasons__footer {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
}
.closing-account .closing-account-reasons__footer .dc-form-submit-button {
    margin: 1.6rem 0;
}
@media (max-width: 1279px) {
    .closing-account {
        width: calc(100% - 3rem);
        margin: 0 auto;
    }
    .closing-account .closing-account-reasons__footer {
        display: flex;
        flex-direction: column;
    }
    .closing-account .closing-account-reasons__footer .dc-form-submit-button {
        position: fixed;
        bottom: 0;
        background: var(--general-main-1);
        width: 100vw;
        margin: 0;
        margin: initial;
        padding: 0.8rem 1.6rem;
        left: 0;
        right: 0;
    }
    .closing-account:first-child > div {
        display: flex;
        flex-direction: column;
    }
}

/* stylelint-disable */
@media (max-width: 1279px) {
    .dc-modal__container_closing-account-reasons {
        max-height: 70vh;
    }
}
.dc-modal__container_closing-account-reasons .dc-modal-header {
    border: none;
    margin-bottom: 0.8rem;
}
.dc-modal__container_closing-account-reasons .account-closure-warning-modal {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding: 3.2rem;
    width: 440px;
}
@media (max-width: 1279px) {
    .dc-modal__container_closing-account-reasons .account-closure-warning-modal {
        width: auto;
        width: initial;
    }
}
.dc-modal__container_closing-account-reasons .account-closure-warning-modal .dc-form-submit-button {
    align-self: center;
    padding: 1.6rem 0 0;
}
.dc-modal__container_closing-account-reasons .account-closure-warning-modal .dc-form-submit-button > button {
    width: 10.3rem;
}
@media (max-width: 1279px) {
    .dc-modal__container_closing-account-reasons .account-closure-warning-modal .dc-form-submit-button {
        background: transparent none repeat 0 0 / auto auto padding-box border-box scroll;
        background: initial;
    }
}
.dc-modal__container_closing-account-reasons .account-closure-warning-modal__warning-message {
    padding: 16px 0;
    line-height: 1.43;
}
[dir='ltr'] .dc-modal__container_closing-account-reasons .account-closure-warning-modal__content {
    text-align: left;
}
[dir='rtl'] .dc-modal__container_closing-account-reasons .account-closure-warning-modal__content {
    text-align: right;
}
.dc-modal__container_closing-account-reasons .account-closure-warning-modal__content {
    font-size: 1.4rem;
    color: var(--text-prominent);
    font-weight: 400;
    text-transform: none;
    line-height: 1.5;
    color: var(--text-general);
    line-height: 1.43;
    text-align: center;
}
.dc-modal__container_closing-account-reasons .account-closure-warning-modal__content-wrapper {
    display: flex;
    flex-direction: column;
    align-items: center;
    margin-top: 0.8rem;
}
.dc-modal__container_closing-account-reasons .account-closure-warning-modal__content-wrapper > :first-child {
    margin-bottom: 0.4rem;
}
.dc-modal__container_closing-account-reasons .account-closure-warning-modal__close-account-button .dc-btn--primary {
    padding: 1rem 6rem;
}
.dc-modal__container_closing-account-reasons .closing-account-error {
    padding: 0 2.4rem;
    margin-bottom: 2.4rem;
}
.dc-modal__container_closing-account-reasons .closing-account-error__description {
    margin-top: 0.8rem;
}
.dc-modal__container_closing-account-reasons .closing-account-error__account-details {
    display: flex;
    align-items: center;
}
.dc-modal__container_closing-account-reasons .closing-account-error__account {
    margin-left: 0.8rem;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
}
.dc-modal__container_closing-account-reasons .closing-account-error__wrapper {
    padding: 0 2.4rem;
    border: 1px solid var(--general-section-1);
    border-radius: 4px;
    margin-top: 1.6rem;
}
.dc-modal__container_closing-account-reasons .closing-account-error__container {
    display: flex;
    padding: 1.1rem 0;
    justify-content: space-between;
    align-items: center;
}
.dc-modal__container_closing-account-reasons .closing-account-error__container:not(:last-child) {
    border-bottom: 1px solid var(--general-section-1);
}
.dc-modal__container_closing-account-reasons .closing-account-error__details {
    max-width: 90%;
    margin-left: 2rem;
}
.dc-modal__container_closing-account-reasons .closing-account-error__button {
    height: 4rem;
    width: 7.7rem;
    float: right;
    margin: 1.6rem 2.4rem;
}
@media (max-width: 1279px) {
    .dc-modal__container_closing-account-reasons .closing-account-error__button {
        margin: 1.6rem;
    }
}

/** @define file uploader */
.poo-file-uploader {
    display: flex;
    position: relative;
}
.poo-file-uploader .hidden-input {
    height: 4rem;
    opacity: 0;
    z-index: 10;
    position: absolute;
    width: 87%;
}
@media (max-width: 1279px) {
    .poo-file-uploader .hidden-input {
        width: 70%;
    }
}

/** @define proof-of-ownership */
.proof-of-ownership {
    width: 100%;
    overflow: hidden;
}
@media (max-width: 1279px) {
    .proof-of-ownership {
        margin-top: 2.4rem;
    }
}
.proof-of-ownership__card {
    border: 2px solid var(--general-section-5);
    border-radius: 8px;
    margin-bottom: 1.6rem;
    display: flex;
    flex-direction: column;
}
@media (max-width: 1279px) {
    .proof-of-ownership__card {
        width: 100%;
        flex-direction: column;
        padding: 1.6rem;
        margin-bottom: 0.8rem;
    }
}
@media (min-width: 1280px) {
    .proof-of-ownership__card {
        width: 80%;
        padding: 2.4rem;
    }
}
.proof-of-ownership__card-open-desc-link {
    cursor: pointer;
}
.proof-of-ownership__card-item {
    display: flex;
    flex-direction: row;
    align-items: center;
    cursor: pointer;
}
[dir='ltr'] .proof-of-ownership__card-item-text {
    padding-left: 1.6rem;
}
[dir='rtl'] .proof-of-ownership__card-item-text {
    padding-right: 1.6rem;
}
.proof-of-ownership__card-item-text {
    line-height: 2.4rem;
}
[dir='ltr'] .proof-of-ownership__card-item-icon {
    margin-left: auto;
}
[dir='rtl'] .proof-of-ownership__card-item-icon {
    margin-right: auto;
}
.proof-of-ownership__card-item-icon {
    transition: transform 0.3s cubic-bezier(0.25, 0.1, 0.25, 1);
    padding: 0;
}
.proof-of-ownership__card-item-icon--invert {
    transform: rotate(180deg);
}
.proof-of-ownership__card-open {
    height: auto;
}
.proof-of-ownership__card-open-desc {
    line-height: 2rem;
    margin: 8px 0;
}
.proof-of-ownership__card-open-desc-link {
    color: var(--text-red);
}
.proof-of-ownership__card-open-inputs {
    display: grid;
    grid-template-columns: 1fr 3fr;
    align-items: center;
    margin-top: 3rem;
}
@media (max-width: 1279px) {
    .proof-of-ownership__card-open-inputs {
        display: flex;
    }
}
.proof-of-ownership__card-open-inputs-upload {
    display: flex;
    flex-direction: column;
    width: 100%;
    flex-grow: 4;
}
@media (max-width: 1279px) {
    .proof-of-ownership__card-open-inputs-upload {
        width: 100%;
    }
}
.proof-of-ownership__card-open-inputs-field {
    display: flex;
    flex-direction: column;
    align-self: flex-start;
    flex-grow: 1;
}
@media (max-width: 1279px) {
    .proof-of-ownership__card-open-inputs-field {
        width: 100%;
    }
}
.proof-of-ownership__card-open-inputs .dc-field.dc-field--error {
    color: var(--text-loss-danger);
    -webkit-text-fill-color: var(--text-loss-danger);
}
@media (min-width: 1280px) {
    .proof-of-ownership__card-open-inputs .dc-input {
        width: auto;
        width: initial;
    }
}
@media (max-width: 1279px) {
    .proof-of-ownership__card-open-inputs .dc-input {
        margin-bottom: 1rem;
    }
}
@media (max-width: 1279px) {
    .proof-of-ownership__card-open-inputs {
        flex-direction: column;
        padding-bottom: 1rem;
    }
}
[dir='ltr'] .proof-of-ownership__card-open-inputs-cardnumber {
    margin-right: 10px;
}
[dir='rtl'] .proof-of-ownership__card-open-inputs-cardnumber {
    margin-left: 10px;
}
.proof-of-ownership__card-open-inputs-cardnumber {
    border: 1px solid #d6dadb;
    box-sizing: border-box;
    border-radius: 4px;
    height: 4rem;
    color: var(--text-less-prominent);
    -webkit-text-fill-color: var(--text-less-prominent);
}
@media (max-width: 1279px) {
    .proof-of-ownership__card-open-inputs-cardnumber {
        width: 100%;
    }
}
.proof-of-ownership__card-open-inputs-photo {
    margin-bottom: 35px;
}
@media (max-width: 1279px) {
    [dir='ltr'] .proof-of-ownership__card-open-inputs-photo {
        margin-left: 0;
    }
    [dir='rtl'] .proof-of-ownership__card-open-inputs-photo {
        margin-right: 0;
    }
    .proof-of-ownership__card-open-inputs-photo {
        width: 100%;
        margin-top: 1.6rem;
    }
}
@media (min-width: 1280px) {
    .proof-of-ownership__card-open-inputs-photo .dc-input {
        flex-grow: 8;
    }
}
[dir='ltr'] .proof-of-ownership__card-open-inputs-photo-btn {
    margin-left: 1rem;
}
[dir='rtl'] .proof-of-ownership__card-open-inputs-photo-btn {
    margin-right: 1rem;
}
.proof-of-ownership__card-open-inputs-photo-btn {
    padding: 10px 16px;
    position: static;
    height: 40px;
}
.proof-of-ownership__form-container {
    padding-top: 16px;
}
.proof-of-ownership__form-content {
    display: flex;
    overflow: visible;
}
[dir='ltr'] .proof-of-ownership__progress {
    margin-right: 2.5rem;
}
[dir='rtl'] .proof-of-ownership__progress {
    margin-left: 2.5rem;
}
.proof-of-ownership__progress {
    display: flex;
    flex-direction: column;
    align-items: center;
    overflow: visible;
}
@media (max-width: 1279px) {
    [dir='ltr'] .proof-of-ownership__progress {
        margin-right: 0.8rem;
    }
    [dir='rtl'] .proof-of-ownership__progress {
        margin-left: 0.8rem;
    }
}
.proof-of-ownership__progress-number {
    min-width: 24px;
    max-width: 24px;
    min-height: 24px;
    max-height: 24px;
    border-radius: 50px;
    background-color: var(--brand-red-coral);
    color: var(--state-normal);
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 16px;
    font-weight: bold;
}
.proof-of-ownership__progress-bar {
    width: 2px;
    height: 120%;
    background-color: var(--brand-red-coral);
    position: relative;
}
.proof-of-ownership__container {
    padding: 2rem auto !important;
}
.proof-of-ownership__container {
    text-align: center;
    width: 72%;
}
@media (max-width: 1279px) {
    .proof-of-ownership__container {
        width: 100%;
    }
}
.proof-of-ownership__container--content {
    width: 100%;
    padding-top: 8rem;
}
.proof-of-ownership__container--content > * {
    text-align: center;
    display: block;
    margin: 2rem auto;
    text-align: center;
}
.proof-of-ownership-link {
    font-weight: 400;
    font-size: 1.4rem;
}
.proof-of-ownership-valid-identifier {
    -webkit-text-fill-color: #4bb4b3 !important;
    border-color: #4bb4b3 !important;
}
@media (max-width: 1279px) {
    .proof-of-ownership .account__scrollbars_container--grid-layout {
        display: flex;
        flex-direction: column;
    }
}

.sample-credit-card-modal-text {
    padding: 0 2.4rem;
}
.sample-credit-card-modal-img {
    padding: 2.4rem 0;
}
@media (max-width: 1279px) {
    .sample-credit-card-modal-img {
        width: 100%;
        height: auto;
    }
}

.expand {
    grid-column-start: 1;
    grid-column-end: 3;
}

.organise {
    grid-column: 2;
}

.stack-top {
    z-index: 12;
    background-color: var(--overlay-inside-dialog);
    padding-left: 0.5rem;
}

.remove-element {
    display: none;
}

/* stylelint-enable */
.financial-banner {
    width: 49.5rem;
    border-radius: 4px;
    position: relaitve;
    background-color: var(--status-warning-transparent);
}
@media (max-width: 1279px) {
    .financial-banner {
        width: 32.8rem;
        margin: 1rem;
    }
}
.financial-banner__frame {
    width: 100%;
    position: relative;
    padding: 0.8rem;
}
.financial-banner__container {
    display: flex;
    flex-direction: row;
    align-items: flex-start;
    justify-content: center;
    gap: 0.8rem;
}

.employment-tin-section .employment-status-field {
    margin-bottom: 3.2rem;
    max-width: 400px;
}
/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/*RTL Language Mixin*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* status colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/* Wallet gradient background */
/* App Cards gradient background */
/* Wallets */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon-active;
        }
*/
/**
 * Define Breakpoints here.
 */
/** Need to add new breakpoints for mixins */
.employment-tax-info__form {
    padding: 0 16rem;
}
.employment-tax-info__form .account-form__fieldset:first-child {
    margin-top: 1rem;
}
.employment-tax-info__layout {
    display: flex;
    flex-direction: column;
}
.employment-tax-info__layout .details-form {
    display: flex;
}
/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/*RTL Language Mixin*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* status colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/* Wallet gradient background */
/* App Cards gradient background */
/* Wallets */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon-active;
        }
*/
/**
 * Define Breakpoints here.
 */
/** Need to add new breakpoints for mixins */
/* @define reset-trading-password */
.reset-trading-password__details {
    margin-bottom: 1rem;
}
.reset-trading-password__description--is-centered {
    margin: 0 auto;
    max-width: 70%;
}
.reset-trading-password__confirm-button {
    margin-top: 2.4rem;
}
.reset-trading-password__dialog .dc-dialog__dialog {
    max-height: -moz-fit-content;
    max-height: fit-content;
}
.reset-trading-password__dialog .dc-dialog__dialog .dc-dialog__content {
    margin-bottom: 0;
}
@media (min-width: 320px) and (max-width: 767px) {
    .reset-trading-password__dialog {
        padding: 0 1.6rem;
    }
}
.reset-trading-password__error {
    max-width: 38.4rem;
    min-height: 28.4rem;
    padding-top: 2rem;
    text-align: center;
}
.reset-trading-password__lead {
    margin: 1.6rem 0 0;
}
.reset-trading-password__set-password {
    display: flex;
    justify-content: center;
    flex-flow: nowrap column;
}
.reset-trading-password__set-password .reset-trading-password__heading {
    margin-bottom: 2.4rem;
}
.reset-trading-password__password-success {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}
.reset-trading-password__password-success .reset-trading-password__icon {
    margin-bottom: 2.4rem;
}
.reset-trading-password__password-success .reset-trading-password__heading {
    margin-bottom: 0.8rem;
}
.reset-trading-password__password-success .reset-trading-password__subtext {
    margin-bottom: 2.4rem;
}
.reset-trading-password__residence-selection,
.reset-trading-password__password-selection {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-flow: nowrap column;
}
.reset-trading-password__password-selection .reset-trading-password__heading {
    margin-bottom: 3.3rem;
}
.reset-trading-password__heading {
    margin-bottom: 0.8rem;
}
.reset-trading-password__text {
    text-align: center;
    margin-bottom: 3.3rem;
}
.reset-trading-password__subtext {
    margin-bottom: 1.6rem;
}
.reset-trading-password__hint {
    margin-bottom: 2.4rem;
}
.reset-trading-password__fieldset {
    position: relative;
    width: 100%;
}
@media (min-width: 1024px) {
    .reset-trading-password__fieldset {
        max-width: 30rem;
    }
}
.reset-trading-password__input-field {
    margin-bottom: 1.2rem;
}
.reset-trading-password__password-field {
    /* postcss-bem-linter: ignore */
}
.reset-trading-password__password-field > label {
    top: 0.9rem;
    background-color: var(--general-main-2);
}
/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/*RTL Language Mixin*/
/* stylelint-disable color-no-hex */
/* COLOR PALETTE */
/* colors */
/* status colors */
/* alpha colors */
/* gradient colors */
/* Preserve legacy variables */
/* Primary */
/* stylelint-enable color-no-hex */
/* Wallet gradient background */
/* App Cards gradient background */
/* Wallets */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Convert Tooltip colors
 * @param $color - css color property
 * Usage example:
   @include convertTooltipColor(var(--status-default));
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/*
    to use styles without modifier class on .inline-icon
    use @extend

    e.g. style icon on parent hover:
        a:hover .inline-icon {
            @extend %inline-icon-active;
        }
*/
/**
 * Define Breakpoints here.
 */
/** Need to add new breakpoints for mixins */
.network-status__container .quill-snackbar {
    left: 50%;
    transform: translateX(-50%);
}
