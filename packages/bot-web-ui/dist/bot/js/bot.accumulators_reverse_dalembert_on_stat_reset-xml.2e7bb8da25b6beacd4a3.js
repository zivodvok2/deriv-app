'use strict';
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self['webpackChunk_deriv_bot_web_ui'] = self['webpackChunk_deriv_bot_web_ui'] || []).push([
    ['accumulators_reverse_dalembert_on_stat_reset-xml'],
    {
        /***/ './src/xml/accumulators_reverse_dalembert_on_stat_reset.xml':
            /*!******************************************************************!*\
  !*** ./src/xml/accumulators_reverse_dalembert_on_stat_reset.xml ***!
  \******************************************************************/
            /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                eval(
                    '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("<xml xmlns=\\"https://developers.google.com/blockly/xml\\" is_dbot=\\"true\\" collection=\\"false\\">\\n  <variables>\\n    <variable id=\\"M2a6~ns#)Z8]U2O_/=Fv\\">rdalembert:resultIsWin</variable>\\n    <variable id=\\"j0[Hkhp,O~7]V~x(ah?j\\">rdalembert:profit</variable>\\n    <variable id=\\"-I66u2{Be^-0[ru/L4Oi\\">Sell by \'Count Down\'? If false, sell by \'Take Profit\'</variable>\\n    <variable id=\\",UxSxFVZh5)xv-}/b:Zw\\">isBought</variable>\\n    <variable id=\\"?0M_SSy#Y!Fiuv/n=[b(\\">Current Tick Value</variable>\\n    <variable id=\\"p-4tlxIzq=3o=Q5:r@o;\\">Notification:currentStake</variable>\\n    <variable id=\\"4f|w2F((L4rk#3M-J;*A\\">rdalembert:totalProfit</variable>\\n    <variable id=\\"2xtNcEBX/uqj0ZB#eE9u\\">rdalembert:tradeAgain</variable>\\n    <variable id=\\"9G`jNX+atwDFAu]PjEwb\\">useMaxStake?</variable>\\n    <variable id=\\"LbJ%gBkQn8lHX-LuY;OE\\">rdalembert:profitThreshold</variable>\\n    <variable id=\\"u]E%rdqSO!DWc9s^8K]F\\">rdalembert:initialStake</variable>\\n    <variable id=\\"Xv=?/_{i5i7(YfFJqUM2\\">rdalembert:totalUnits</variable>\\n    <variable id=\\"_ry@=Pn~?k:OMsm69^mj\\">maxStake</variable>\\n    <variable id=\\"p:YOw{BN8)4wTUEgW?f;\\">rdalembert:lossThreshold</variable>\\n    <variable id=\\"zd*r1aTHU,XoZt+m9A%.\\">Notification:totalProfit</variable>\\n    <variable id=\\"Dk!NwMtW(6N{{Kvtd(|L\\">Tick Count</variable>\\n    <variable id=\\"Q(1ip|EGmQ1J@hSU(!DC\\">rdalembert:changeInUnit</variable>\\n    <variable id=\\"J$E%~31mmrWttoKAlv=m\\">Notification:profitThresholdReached</variable>\\n    <variable id=\\"whzbmV.W]q3$46WdmwF5\\">Notification:lossThresholdReached</variable>\\n  </variables>\\n  <block type=\\"trade_definition\\" id=\\"c.;ChR[G?2/lu[`shalQ\\" deletable=\\"false\\" x=\\"0\\" y=\\"0\\">\\n    <statement name=\\"TRADE_OPTIONS\\">\\n      <block type=\\"trade_definition_market\\" id=\\"*z5eSR~mt#(|upx(NCB6\\" deletable=\\"false\\" movable=\\"false\\">\\n        <field name=\\"MARKET_LIST\\">synthetic_index</field>\\n        <field name=\\"SUBMARKET_LIST\\">random_index</field>\\n        <field name=\\"SYMBOL_LIST\\">1HZ10V</field>\\n        <next>\\n          <block type=\\"trade_definition_tradetype\\" id=\\"{[R6A=sR8$3%rXWv#y@D\\" deletable=\\"false\\" movable=\\"false\\">\\n            <field name=\\"TRADETYPECAT_LIST\\">accumulator</field>\\n            <field name=\\"TRADETYPE_LIST\\">accumulator</field>\\n            <next>\\n              <block type=\\"trade_definition_contracttype\\" id=\\"Vth2LmJ3vEn:@uJbf(Ka\\" deletable=\\"false\\" movable=\\"false\\">\\n                <field name=\\"TYPE_LIST\\">ACCU</field>\\n                <next>\\n                  <block type=\\"trade_definition_candleinterval\\" id=\\"TH^O28R0h2qoojurz[]N\\" deletable=\\"false\\" movable=\\"false\\">\\n                    <field name=\\"CANDLEINTERVAL_LIST\\">60</field>\\n                    <next>\\n                      <block type=\\"trade_definition_restartbuysell\\" id=\\"W|MoD#65cn(MgU*3MheP\\" deletable=\\"false\\" movable=\\"false\\">\\n                        <field name=\\"TIME_MACHINE_ENABLED\\">FALSE</field>\\n                        <next>\\n                          <block type=\\"trade_definition_restartonerror\\" id=\\"Aq/Ox_p+%#OBJkc@vAcu\\" deletable=\\"false\\" movable=\\"false\\">\\n                            <field name=\\"RESTARTONERROR\\">TRUE</field>\\n                          </block>\\n                        </next>\\n                      </block>\\n                    </next>\\n                  </block>\\n                </next>\\n              </block>\\n            </next>\\n          </block>\\n        </next>\\n      </block>\\n    </statement>\\n    <statement name=\\"INITIALIZATION\\">\\n      <block type=\\"variables_set\\" id=\\"V3%N-sre|m;V|0*3WE4b\\">\\n        <field name=\\"VAR\\" id=\\"-I66u2{Be^-0[ru/L4Oi\\">Sell by \'Count Down\'? If false, sell by \'Take Profit\'</field>\\n        <value name=\\"VALUE\\" strategy_value=\\"boolean_tick_count\\">\\n          <block type=\\"logic_boolean\\" id=\\",qc`c+u4dkdOsOWZ^x{g\\">\\n            <field name=\\"BOOL\\">TRUE</field>\\n          </block>\\n        </value>\\n        <next>\\n          <block type=\\"variables_set\\" id=\\"3TlyeuH4#I`36K:;)tho\\">\\n            <field name=\\"VAR\\" id=\\"9G`jNX+atwDFAu]PjEwb\\">useMaxStake?</field>\\n            <value name=\\"VALUE\\" strategy_value=\\"boolean_max_stake\\">\\n              <block type=\\"logic_boolean\\" id=\\"/Lrko!zsB`y:?w$Ovk$x\\">\\n                <field name=\\"BOOL\\">TRUE</field>\\n              </block>\\n            </value>\\n            <next>\\n              <block type=\\"variables_set\\" id=\\"{1+n32AGU]3`2N+$@-D;\\">\\n                <field name=\\"VAR\\" id=\\"_ry@=Pn~?k:OMsm69^mj\\">maxStake</field>\\n                <value name=\\"VALUE\\" strategy_value=\\"max_stake\\">\\n                  <block type=\\"math_number\\" id=\\"v{NTT:eda8z$4ljl_#,7\\">\\n                    <field name=\\"NUM\\">1000</field>\\n                  </block>\\n                </value>\\n                <next>\\n                  <block type=\\"variables_set\\" id=\\"b+;3zEM]f^6z35o?Mo[u\\">\\n                    <field name=\\"VAR\\" id=\\"Dk!NwMtW(6N{{Kvtd(|L\\">Tick Count</field>\\n                    <value name=\\"VALUE\\" strategy_value=\\"tick_count\\">\\n                      <block type=\\"math_number\\" id=\\"7(m@7W1[Y3X75S2F8hg~\\">\\n                        <field name=\\"NUM\\">5</field>\\n                      </block>\\n                    </value>\\n                    <next>\\n                      <block type=\\"variables_set\\" id=\\"H1^_M`|/^P}}B;4k{u3t\\">\\n                        <field name=\\"VAR\\" id=\\",UxSxFVZh5)xv-}/b:Zw\\">isBought</field>\\n                        <value name=\\"VALUE\\">\\n                          <block type=\\"logic_boolean\\" id=\\"e0=$Pnaws1#Uk$a{4@jA\\">\\n                            <field name=\\"BOOL\\">FALSE</field>\\n                          </block>\\n                        </value>\\n                      </block>\\n                    </next>\\n                  </block>\\n                </next>\\n              </block>\\n            </next>\\n          </block>\\n        </next>\\n      </block>\\n    </statement>\\n    <statement name=\\"SUBMARKET\\">\\n      <block type=\\"trade_definition_accumulator\\" id=\\"U#%#3]+rr4#nLj+Vj0?R\\">\\n        <field name=\\"GROWTHRATE_LIST\\" strategy_value=\\"growth_rate\\">0.01</field>\\n        <value name=\\"AMOUNT\\">\\n          <shadow type=\\"math_number_positive\\" id=\\"/hW0=zuQ-S?RS~Slpf)k\\">\\n            <field name=\\"NUM\\">1</field>\\n          </shadow>\\n          <block type=\\"procedures_callreturn\\" id=\\"uW5=Z}@dCBs|Ta+@`vpw\\">\\n            <mutation xmlns=\\"http://www.w3.org/1999/xhtml\\" name=\\"Reverse D\'Alembert Trade Amount\\"></mutation>\\n            <data>CI@IiTlr,.O=:m#QLq`M</data>\\n          </block>\\n        </value>\\n        <statement name=\\"ACCUMULATOR_PARAMS\\">\\n          <block type=\\"accumulator_take_profit\\" id=\\"6f=$F/a-)2b[*qLGL0nD\\" disabled=\\"true\\">\\n            <value name=\\"AMOUNT\\" strategy_value=\\"take_profit\\">\\n              <shadow type=\\"math_number_positive\\" id=\\"7S}!8[,},2t]-ol0kjtF\\">\\n                <field name=\\"NUM\\">0</field>\\n              </shadow>\\n            </value>\\n          </block>\\n        </statement>\\n      </block>\\n    </statement>\\n  </block>\\n  <block type=\\"during_purchase\\" id=\\"B4QJeQ67q*@XdH*O8w?.\\" x=\\"714\\" y=\\"0\\">\\n    <statement name=\\"DURING_PURCHASE_STACK\\">\\n      <block type=\\"variables_set\\" id=\\"ji!F.rQ;qP1h4?;wK`e_\\">\\n        <field name=\\"VAR\\" id=\\",UxSxFVZh5)xv-}/b:Zw\\">isBought</field>\\n        <value name=\\"VALUE\\">\\n          <block type=\\"logic_boolean\\" id=\\"GYb^T1r(Rqzq?%H[b:$I\\">\\n            <field name=\\"BOOL\\">TRUE</field>\\n          </block>\\n        </value>\\n        <next>\\n          <block type=\\"controls_if\\" id=\\"7Yw:KO?*U{_c%Ze;DbzF\\">\\n            <value name=\\"IF0\\">\\n              <block type=\\"logic_operation\\" id=\\"hw^,GI*}KClrCt(T:^;Y\\">\\n                <field name=\\"OP\\">AND</field>\\n                <value name=\\"A\\">\\n                  <block type=\\"check_sell\\" id=\\"SnAI$DK,RlPWMbd6v)7#\\"></block>\\n                </value>\\n                <value name=\\"B\\">\\n                  <block type=\\"logic_compare\\" id=\\"JRwh-xk55WN5ha.,*Qx1\\">\\n                    <field name=\\"OP\\">EQ</field>\\n                    <value name=\\"A\\">\\n                      <block type=\\"variables_get\\" id=\\"%!Z.!WX^26UjGRAoqz?}\\">\\n                        <field name=\\"VAR\\" id=\\"-I66u2{Be^-0[ru/L4Oi\\">Sell by \'Count Down\'? If false, sell by \'Take Profit\'</field>\\n                      </block>\\n                    </value>\\n                    <value name=\\"B\\">\\n                      <block type=\\"logic_boolean\\" id=\\"k#d9_MOnx,AqR[P*cO$E\\">\\n                        <field name=\\"BOOL\\">TRUE</field>\\n                      </block>\\n                    </value>\\n                  </block>\\n                </value>\\n              </block>\\n            </value>\\n            <statement name=\\"DO0\\">\\n              <block type=\\"controls_if\\" id=\\"VoZV!|z`hM0Ht:}kw_*p\\">\\n                <value name=\\"IF0\\">\\n                  <block type=\\"logic_compare\\" id=\\"2rxD941).5_(8i|a-N:n\\">\\n                    <field name=\\"OP\\">GT</field>\\n                    <value name=\\"A\\">\\n                      <block type=\\"variables_get\\" id=\\"Mg`55#c*qLtRXe/o0*s:\\">\\n                        <field name=\\"VAR\\" id=\\"?0M_SSy#Y!Fiuv/n=[b(\\">Current Tick Value</field>\\n                      </block>\\n                    </value>\\n                    <value name=\\"B\\">\\n                      <block type=\\"variables_get\\" id=\\"KJAf,8hn:{*W@4j,Ie;?\\">\\n                        <field name=\\"VAR\\" id=\\"Dk!NwMtW(6N{{Kvtd(|L\\">Tick Count</field>\\n                      </block>\\n                    </value>\\n                  </block>\\n                </value>\\n                <statement name=\\"DO0\\">\\n                  <block type=\\"sell_at_market\\" id=\\"7t$aIkKh6HP1aueF0SR-\\"></block>\\n                </statement>\\n              </block>\\n            </statement>\\n          </block>\\n        </next>\\n      </block>\\n    </statement>\\n  </block>\\n  <block type=\\"after_purchase\\" id=\\"M7YXS![uB[Cn%DivgF8~\\" x=\\"714\\" y=\\"410\\">\\n    <statement name=\\"AFTERPURCHASE_STACK\\">\\n      <block type=\\"controls_if\\" id=\\"pV`yFK.@h(+bNusQ^~Ok\\">\\n        <value name=\\"IF0\\">\\n          <block type=\\"procedures_callreturn\\" id=\\"@4jXYJ~}af#2GO[x%=ja\\">\\n            <mutation xmlns=\\"http://www.w3.org/1999/xhtml\\" name=\\"Reverse D\'Alembert Trade Again After Purchase\\">\\n              <arg name=\\"rdalembert:profit\\"></arg>\\n              <arg name=\\"rdalembert:resultIsWin\\"></arg>\\n            </mutation>\\n            <data>-9(QN`Sc2$IvQPr6M9QP</data>\\n            <value name=\\"ARG0\\">\\n              <block type=\\"read_details\\" id=\\"7GaHFo)Sgv0{-mwj(|iq\\">\\n                <field name=\\"DETAIL_INDEX\\">4</field>\\n              </block>\\n            </value>\\n            <value name=\\"ARG1\\">\\n              <block type=\\"contract_check_result\\" id=\\"G+Qj59`gOqZ+0tQ80mEX\\">\\n                <field name=\\"CHECK_RESULT\\">win</field>\\n              </block>\\n            </value>\\n          </block>\\n        </value>\\n        <statement name=\\"DO0\\">\\n          <block type=\\"trade_again\\" id=\\"+RyH36(_8o:%1qmIr-X{\\"></block>\\n        </statement>\\n      </block>\\n    </statement>\\n  </block>\\n  <block type=\\"before_purchase\\" id=\\"27txn/aPf2v^$qc((-t$\\" deletable=\\"false\\" x=\\"0\\" y=\\"889\\">\\n    <statement name=\\"BEFOREPURCHASE_STACK\\">\\n      <block type=\\"variables_set\\" id=\\"[Lnw#bH1uDOi4NOx_.-`\\">\\n        <field name=\\"VAR\\" id=\\"?0M_SSy#Y!Fiuv/n=[b(\\">Current Tick Value</field>\\n        <value name=\\"VALUE\\">\\n          <block type=\\"math_number\\" id=\\"zI)v]RF#V7Y64f73`Ady\\">\\n            <field name=\\"NUM\\">0</field>\\n          </block>\\n        </value>\\n        <next>\\n          <block type=\\"variables_set\\" id=\\"]vPm@Ip}49o:}(ASn28A\\">\\n            <field name=\\"VAR\\" id=\\",UxSxFVZh5)xv-}/b:Zw\\">isBought</field>\\n            <value name=\\"VALUE\\">\\n              <block type=\\"logic_boolean\\" id=\\"Ki-4no]gye1V|Q5XBcw?\\">\\n                <field name=\\"BOOL\\">FALSE</field>\\n              </block>\\n            </value>\\n            <next>\\n              <block type=\\"notify\\" id=\\"M(`gZ)-p}|aY(Aj2111K\\">\\n                <field name=\\"NOTIFICATION_TYPE\\">success</field>\\n                <field name=\\"NOTIFICATION_SOUND\\">silent</field>\\n                <value name=\\"MESSAGE\\">\\n                  <shadow type=\\"text\\" id=\\"ET$@^Fhcz)EPqJ}{g@C[\\">\\n                    <field name=\\"TEXT\\">abc</field>\\n                  </shadow>\\n                  <block type=\\"stat\\" id=\\"(/9+WRe:mmJ+#+[=Vjo*\\"></block>\\n                </value>\\n                <next>\\n                  <block type=\\"controls_if\\" id=\\";|BB6gx}y+T7Y4~)O|EH\\">\\n                    <value name=\\"IF0\\">\\n                      <block type=\\"logic_compare\\" id=\\"?F8CxD$4i#=(*k4~K5h9\\">\\n                        <field name=\\"OP\\">LTE</field>\\n                        <value name=\\"A\\">\\n                          <block type=\\"stat\\" id=\\"%,:?K+#@N]=-[aF7xI0*\\"></block>\\n                        </value>\\n                        <value name=\\"B\\">\\n                          <block type=\\"math_number\\" id=\\";.A8=pu,YFG^.~o8y(G$\\">\\n                            <field name=\\"NUM\\">5</field>\\n                          </block>\\n                        </value>\\n                      </block>\\n                    </value>\\n                    <statement name=\\"DO0\\">\\n                      <block type=\\"purchase\\" id=\\"C!gx+VRJwug.A8Z-yn+m\\">\\n                        <field name=\\"PURCHASE_LIST\\">ACCU</field>\\n                      </block>\\n                    </statement>\\n                  </block>\\n                </next>\\n              </block>\\n            </next>\\n          </block>\\n        </next>\\n      </block>\\n    </statement>\\n  </block>\\n  <block type=\\"tick_analysis\\" id=\\"]#n-C*zh}4^(LAQ;oqnh\\" x=\\"0\\" y=\\"1299\\">\\n    <statement name=\\"TICKANALYSIS_STACK\\">\\n      <block type=\\"controls_if\\" id=\\"V#[$GJ7ndr;`Z_lIIZ8U\\">\\n        <value name=\\"IF0\\">\\n          <block type=\\"variables_get\\" id=\\"{TJ+(:LF}4I@?FN=Aa,@\\">\\n            <field name=\\"VAR\\" id=\\",UxSxFVZh5)xv-}/b:Zw\\">isBought</field>\\n          </block>\\n        </value>\\n        <statement name=\\"DO0\\">\\n          <block type=\\"variables_set\\" id=\\"=)CJLfvyH.IPp,1;;Rd^\\">\\n            <field name=\\"VAR\\" id=\\"?0M_SSy#Y!Fiuv/n=[b(\\">Current Tick Value</field>\\n            <value name=\\"VALUE\\">\\n              <block type=\\"math_arithmetic\\" id=\\"+W*oc$*!_~8#oB].9a^_\\">\\n                <field name=\\"OP\\">ADD</field>\\n                <value name=\\"A\\">\\n                  <shadow type=\\"math_number\\" id=\\"a2$n@v^s)Wd$=w+)MO#3\\">\\n                    <field name=\\"NUM\\">1</field>\\n                  </shadow>\\n                  <block type=\\"variables_get\\" id=\\";zrGR|cZg*|9SQGtJ^17\\">\\n                    <field name=\\"VAR\\" id=\\"?0M_SSy#Y!Fiuv/n=[b(\\">Current Tick Value</field>\\n                  </block>\\n                </value>\\n                <value name=\\"B\\">\\n                  <shadow type=\\"math_number\\" id=\\"HDaiA)cs;in?Km3#Ekj-\\">\\n                    <field name=\\"NUM\\">1</field>\\n                  </shadow>\\n                </value>\\n              </block>\\n            </value>\\n          </block>\\n        </statement>\\n      </block>\\n    </statement>\\n  </block>\\n  <block type=\\"procedures_defnoreturn\\" id=\\"y?vDuuwfiR,*DqC],*C:\\" collapsed=\\"true\\" x=\\"0\\" y=\\"1563\\">\\n    <mutation xmlns=\\"http://www.w3.org/1999/xhtml\\">\\n      <arg name=\\"rdalembert:resultIsWin\\" varid=\\"M2a6~ns#)Z8]U2O_/=Fv\\"></arg>\\n    </mutation>\\n    <field name=\\"NAME\\">Reverse D\'Alembert Core Functionality</field>\\n    <comment pinned=\\"false\\" h=\\"80\\" w=\\"160\\">Describe this function...</comment>\\n    <statement name=\\"STACK\\">\\n      <block type=\\"text_join\\" id=\\"oLUTp~masVJX7AE-mE?!\\">\\n        <field name=\\"VARIABLE\\" id=\\"p-4tlxIzq=3o=Q5:r@o;\\">Notification:currentStake</field>\\n        <statement name=\\"STACK\\">\\n          <block type=\\"text_statement\\" id=\\"5KQsPlP^=`$a+V79bH(D\\">\\n            <value name=\\"TEXT\\">\\n              <shadow type=\\"text\\" id=\\"iZc_1BGK~B{{S_wu1k{|\\">\\n                <field name=\\"TEXT\\">Current stake:</field>\\n              </shadow>\\n            </value>\\n            <next>\\n              <block type=\\"text_statement\\" id=\\"a)Rd!x[,~09ks#DN=ct4\\">\\n                <value name=\\"TEXT\\">\\n                  <shadow type=\\"text\\" id=\\"#HGQQ5`ny#~y(bCzZ4Hz\\">\\n                    <field name=\\"TEXT\\"></field>\\n                  </shadow>\\n                  <block type=\\"procedures_callreturn\\" id=\\"sC/|b=Ka3f@sc,n5E#Se\\">\\n                    <mutation xmlns=\\"http://www.w3.org/1999/xhtml\\" name=\\"Reverse D\'Alembert Trade Amount\\"></mutation>\\n                    <data>CI@IiTlr,.O=:m#QLq`M</data>\\n                  </block>\\n                </value>\\n              </block>\\n            </next>\\n          </block>\\n        </statement>\\n        <next>\\n          <block type=\\"notify\\" id=\\"Ab4cjM^4HWm1CW,k(p}9\\">\\n            <field name=\\"NOTIFICATION_TYPE\\">warn</field>\\n            <field name=\\"NOTIFICATION_SOUND\\">silent</field>\\n            <value name=\\"MESSAGE\\">\\n              <shadow type=\\"text\\" id=\\"-=h[cdJgA;D)1Uo#^Y#Y\\">\\n                <field name=\\"TEXT\\">abc</field>\\n              </shadow>\\n              <block type=\\"variables_get\\" id=\\"fnGpE$X2n$yDTDa0q9.s\\">\\n                <field name=\\"VAR\\" id=\\"p-4tlxIzq=3o=Q5:r@o;\\">Notification:currentStake</field>\\n              </block>\\n            </value>\\n            <next>\\n              <block type=\\"controls_if\\" id=\\"JUc+BA3JLx0uOFo3*qff\\">\\n                <mutation xmlns=\\"http://www.w3.org/1999/xhtml\\" else=\\"1\\"></mutation>\\n                <value name=\\"IF0\\">\\n                  <block type=\\"variables_get\\" id=\\"qzk`17RzUO1/gEuR8qKa\\">\\n                    <field name=\\"VAR\\" id=\\"M2a6~ns#)Z8]U2O_/=Fv\\">rdalembert:resultIsWin</field>\\n                  </block>\\n                </value>\\n                <statement name=\\"DO0\\">\\n                  <block type=\\"variables_set\\" id=\\"vx8@hV*T_0mxJLSD;QVG\\">\\n                    <field name=\\"VAR\\" id=\\"Xv=?/_{i5i7(YfFJqUM2\\">rdalembert:totalUnits</field>\\n                    <value name=\\"VALUE\\">\\n                      <block type=\\"math_arithmetic\\" id=\\"P;iBVC+gO#n5aq,1d%Ha\\">\\n                        <field name=\\"OP\\">ADD</field>\\n                        <value name=\\"A\\">\\n                          <shadow type=\\"math_number\\" id=\\"Ymq(9~1+Mt%^t8f1AYx5\\">\\n                            <field name=\\"NUM\\">1</field>\\n                          </shadow>\\n                          <block type=\\"variables_get\\" id=\\"7t)C%Qt3yTJO*/Qa.=o*\\">\\n                            <field name=\\"VAR\\" id=\\"Xv=?/_{i5i7(YfFJqUM2\\">rdalembert:totalUnits</field>\\n                          </block>\\n                        </value>\\n                        <value name=\\"B\\">\\n                          <shadow type=\\"math_number\\" id=\\"6e,DOnsg3g$+s~8H#@SI\\">\\n                            <field name=\\"NUM\\">1</field>\\n                          </shadow>\\n                          <block type=\\"variables_get\\" id=\\"^=yc;(gAa@B!`MjSFOgl\\">\\n                            <field name=\\"VAR\\" id=\\"Q(1ip|EGmQ1J@hSU(!DC\\">rdalembert:changeInUnit</field>\\n                          </block>\\n                        </value>\\n                      </block>\\n                    </value>\\n                    <next>\\n                      <block type=\\"controls_if\\" id=\\"eXPD}]$wX7GE?,ASz,SI\\">\\n                        <value name=\\"IF0\\">\\n                          <block type=\\"logic_compare\\" id=\\"^Y4N@F1moEN+E$i-,mK)\\">\\n                            <field name=\\"OP\\">GT</field>\\n                            <value name=\\"A\\">\\n                              <block type=\\"logic_operation\\" id=\\"iY-O3I!Mydl6Xg%0R2w1\\">\\n                                <field name=\\"OP\\">AND</field>\\n                                <value name=\\"A\\">\\n                                  <block type=\\"variables_get\\" id=\\"s!BT6QF*0%T5Zr9%qIFF\\">\\n                                    <field name=\\"VAR\\" id=\\"9G`jNX+atwDFAu]PjEwb\\">useMaxStake?</field>\\n                                  </block>\\n                                </value>\\n                                <value name=\\"B\\">\\n                                  <block type=\\"procedures_callreturn\\" id=\\"/}}AFM(o(#y9gDuVuO*A\\">\\n                                    <mutation xmlns=\\"http://www.w3.org/1999/xhtml\\" name=\\"Reverse D\'Alembert Trade Amount\\"></mutation>\\n                                    <data>CI@IiTlr,.O=:m#QLq`M</data>\\n                                  </block>\\n                                </value>\\n                              </block>\\n                            </value>\\n                            <value name=\\"B\\">\\n                              <block type=\\"variables_get\\" id=\\"meE5*j6ZI:rjdnHzcs}h\\">\\n                                <field name=\\"VAR\\" id=\\"_ry@=Pn~?k:OMsm69^mj\\">maxStake</field>\\n                              </block>\\n                            </value>\\n                          </block>\\n                        </value>\\n                        <statement name=\\"DO0\\">\\n                          <block type=\\"variables_set\\" id=\\"a=SZD.HxD6oYf9JT8cEp\\">\\n                            <field name=\\"VAR\\" id=\\"Xv=?/_{i5i7(YfFJqUM2\\">rdalembert:totalUnits</field>\\n                            <value name=\\"VALUE\\">\\n                              <block type=\\"math_number\\" id=\\".QX]_02a=qU2w?wnTTu*\\">\\n                                <field name=\\"NUM\\">1</field>\\n                              </block>\\n                            </value>\\n                            <next>\\n                              <block type=\\"notify\\" id=\\"MO4H$pAJi!jw$3R=LFv}\\">\\n                                <field name=\\"NOTIFICATION_TYPE\\">error</field>\\n                                <field name=\\"NOTIFICATION_SOUND\\">silent</field>\\n                                <value name=\\"MESSAGE\\">\\n                                  <shadow type=\\"text\\" id=\\"W%^I-cCV,7Ax@ItM`3Nm\\">\\n                                    <field name=\\"TEXT\\">Stake resets for the next trade (reason: exceeds max stake amount)</field>\\n                                  </shadow>\\n                                </value>\\n                              </block>\\n                            </next>\\n                          </block>\\n                        </statement>\\n                      </block>\\n                    </next>\\n                  </block>\\n                </statement>\\n                <statement name=\\"ELSE\\">\\n                  <block type=\\"variables_set\\" id=\\"*LMk..l::;hO,]0XF0O1\\">\\n                    <field name=\\"VAR\\" id=\\"Xv=?/_{i5i7(YfFJqUM2\\">rdalembert:totalUnits</field>\\n                    <value name=\\"VALUE\\">\\n                      <block type=\\"math_arithmetic\\" id=\\"Y?)JVZf6OXttPIY{h;qf\\">\\n                        <field name=\\"OP\\">MINUS</field>\\n                        <value name=\\"A\\">\\n                          <shadow type=\\"math_number\\" id=\\"rg[zWt@O:ZTSaiXtXmYN\\">\\n                            <field name=\\"NUM\\">1</field>\\n                          </shadow>\\n                          <block type=\\"variables_get\\" id=\\"a-y,HW*U?8}b_MH-,ZMa\\">\\n                            <field name=\\"VAR\\" id=\\"Xv=?/_{i5i7(YfFJqUM2\\">rdalembert:totalUnits</field>\\n                          </block>\\n                        </value>\\n                        <value name=\\"B\\">\\n                          <shadow type=\\"math_number\\" id=\\"5``5[knjcuR!5cCVJvcC\\">\\n                            <field name=\\"NUM\\">1</field>\\n                          </shadow>\\n                          <block type=\\"variables_get\\" id=\\"Nl#f|l%1jK!iO4CO+_+T\\">\\n                            <field name=\\"VAR\\" id=\\"Q(1ip|EGmQ1J@hSU(!DC\\">rdalembert:changeInUnit</field>\\n                          </block>\\n                        </value>\\n                      </block>\\n                    </value>\\n                    <next>\\n                      <block type=\\"controls_if\\" id=\\"}4ErbWVODZKZTLD%ao{Q\\">\\n                        <value name=\\"IF0\\">\\n                          <block type=\\"logic_compare\\" id=\\"cv`.A:eab4yZ.PdZ_8#-\\">\\n                            <field name=\\"OP\\">LT</field>\\n                            <value name=\\"A\\">\\n                              <block type=\\"variables_get\\" id=\\"!{:rLKX/YP`K9kpiMy_H\\">\\n                                <field name=\\"VAR\\" id=\\"Xv=?/_{i5i7(YfFJqUM2\\">rdalembert:totalUnits</field>\\n                              </block>\\n                            </value>\\n                            <value name=\\"B\\">\\n                              <block type=\\"math_number\\" id=\\",a^QBRQ%o%:dWMs,19|2\\">\\n                                <field name=\\"NUM\\">1</field>\\n                              </block>\\n                            </value>\\n                          </block>\\n                        </value>\\n                        <statement name=\\"DO0\\">\\n                          <block type=\\"variables_set\\" id=\\"S@SVN;pkz`i@sq%$D+|,\\">\\n                            <field name=\\"VAR\\" id=\\"Xv=?/_{i5i7(YfFJqUM2\\">rdalembert:totalUnits</field>\\n                            <value name=\\"VALUE\\">\\n                              <block type=\\"math_number\\" id=\\"1[RPFKC~vu)B9l;^B0.i\\">\\n                                <field name=\\"NUM\\">1</field>\\n                              </block>\\n                            </value>\\n                          </block>\\n                        </statement>\\n                      </block>\\n                    </next>\\n                  </block>\\n                </statement>\\n              </block>\\n            </next>\\n          </block>\\n        </next>\\n      </block>\\n    </statement>\\n  </block>\\n  <block type=\\"procedures_defreturn\\" id=\\"CI@IiTlr,.O=:m#QLq`M\\" collapsed=\\"true\\" x=\\"0\\" y=\\"1659\\">\\n    <field name=\\"NAME\\">Reverse D\'Alembert Trade Amount</field>\\n    <comment pinned=\\"false\\" h=\\"80\\" w=\\"160\\">Describe this function...</comment>\\n    <statement name=\\"STACK\\">\\n      <block type=\\"controls_if\\" id=\\"UWcPhV8Xr`MF]`,ySDA-\\">\\n        <value name=\\"IF0\\">\\n          <block type=\\"logic_compare\\" id=\\"f3!O#5Pt(oL95S-{x?/)\\">\\n            <field name=\\"OP\\">EQ</field>\\n            <value name=\\"A\\">\\n              <block type=\\"variables_get\\" id=\\"Y.:;w`CZQG46jDmtihnH\\">\\n                <field name=\\"VAR\\" id=\\"LbJ%gBkQn8lHX-LuY;OE\\">rdalembert:profitThreshold</field>\\n              </block>\\n            </value>\\n            <value name=\\"B\\">\\n              <block type=\\"logic_null\\" id=\\"k@iq5;z7:r|M3wg,~_ZO\\"></block>\\n            </value>\\n          </block>\\n        </value>\\n        <statement name=\\"DO0\\">\\n          <block type=\\"variables_set\\" id=\\"K4R{b+ZaO,JZxcsU9J]S\\">\\n            <field name=\\"VAR\\" id=\\"LbJ%gBkQn8lHX-LuY;OE\\">rdalembert:profitThreshold</field>\\n            <value name=\\"VALUE\\" strategy_value=\\"profit\\">\\n              <block type=\\"math_number\\" id=\\"P3u(,a#bi4E7K[0U}?TM\\">\\n                <field name=\\"NUM\\">5000</field>\\n              </block>\\n            </value>\\n          </block>\\n        </statement>\\n        <next>\\n          <block type=\\"controls_if\\" id=\\"H)x+%(VELA^l;qKh62j-\\">\\n            <value name=\\"IF0\\">\\n              <block type=\\"logic_compare\\" id=\\"u918q@ojSu_fV+Zp6?W/\\">\\n                <field name=\\"OP\\">EQ</field>\\n                <value name=\\"A\\">\\n                  <block type=\\"variables_get\\" id=\\")r9P,fG8.YL]hI~^eL$I\\">\\n                    <field name=\\"VAR\\" id=\\"p:YOw{BN8)4wTUEgW?f;\\">rdalembert:lossThreshold</field>\\n                  </block>\\n                </value>\\n                <value name=\\"B\\">\\n                  <block type=\\"logic_null\\" id=\\"{Y?q6%ve:xcz7XcH=fTJ\\"></block>\\n                </value>\\n              </block>\\n            </value>\\n            <statement name=\\"DO0\\">\\n              <block type=\\"variables_set\\" id=\\"L#5|WAef%~z/9E6+vyLd\\">\\n                <field name=\\"VAR\\" id=\\"p:YOw{BN8)4wTUEgW?f;\\">rdalembert:lossThreshold</field>\\n                <value name=\\"VALUE\\" strategy_value=\\"loss\\">\\n                  <block type=\\"math_number\\" id=\\"T~22dY=F^Z]UWbgq*Uy7\\">\\n                    <field name=\\"NUM\\">3000</field>\\n                  </block>\\n                </value>\\n              </block>\\n            </statement>\\n            <next>\\n              <block type=\\"controls_if\\" id=\\"cl#a)gqg65UP8P-rG6+c\\">\\n                <value name=\\"IF0\\">\\n                  <block type=\\"logic_compare\\" id=\\"UJ^!MKaDxY*%tAQcz.Y1\\">\\n                    <field name=\\"OP\\">EQ</field>\\n                    <value name=\\"A\\">\\n                      <block type=\\"variables_get\\" id=\\"4n.juX[B4H1nc!%M5}-7\\">\\n                        <field name=\\"VAR\\" id=\\"u]E%rdqSO!DWc9s^8K]F\\">rdalembert:initialStake</field>\\n                      </block>\\n                    </value>\\n                    <value name=\\"B\\">\\n                      <block type=\\"logic_null\\" id=\\"aSa8Gen**!7~-ihLt{R}\\"></block>\\n                    </value>\\n                  </block>\\n                </value>\\n                <statement name=\\"DO0\\">\\n                  <block type=\\"variables_set\\" id=\\"#Kbi)1,y[[e|L2o;h7t%\\">\\n                    <field name=\\"VAR\\" id=\\"u]E%rdqSO!DWc9s^8K]F\\">rdalembert:initialStake</field>\\n                    <value name=\\"VALUE\\" strategy_value=\\"stake\\">\\n                      <block type=\\"math_number\\" id=\\"U|VbQIoj9;rS77#$|Sh}\\">\\n                        <field name=\\"NUM\\">100</field>\\n                      </block>\\n                    </value>\\n                  </block>\\n                </statement>\\n                <next>\\n                  <block type=\\"controls_if\\" id=\\"-=b[k+579nmzLfi]Hke^\\">\\n                    <value name=\\"IF0\\">\\n                      <block type=\\"logic_compare\\" id=\\"85KATA:in?}%Q7P]wM*1\\">\\n                        <field name=\\"OP\\">EQ</field>\\n                        <value name=\\"A\\">\\n                          <block type=\\"variables_get\\" id=\\".-tmE8~0;|[$/dO,]vc2\\">\\n                            <field name=\\"VAR\\" id=\\"Q(1ip|EGmQ1J@hSU(!DC\\">rdalembert:changeInUnit</field>\\n                          </block>\\n                        </value>\\n                        <value name=\\"B\\">\\n                          <block type=\\"logic_null\\" id=\\"Y_Wvw2iB8-6bx(fK6JN|\\"></block>\\n                        </value>\\n                      </block>\\n                    </value>\\n                    <statement name=\\"DO0\\">\\n                      <block type=\\"variables_set\\" id=\\"%Zt*u!]KSr~G6^jY)L^J\\">\\n                        <field name=\\"VAR\\" id=\\"Q(1ip|EGmQ1J@hSU(!DC\\">rdalembert:changeInUnit</field>\\n                        <value name=\\"VALUE\\" strategy_value=\\"dalembert_unit\\">\\n                          <block type=\\"math_number\\" id=\\"]2#fkK(JjP)SFm,_,WCs\\">\\n                            <field name=\\"NUM\\">1</field>\\n                          </block>\\n                        </value>\\n                      </block>\\n                    </statement>\\n                    <next>\\n                      <block type=\\"controls_if\\" id=\\"x^RJZV`Fn@|1wxfD2.-W\\">\\n                        <value name=\\"IF0\\">\\n                          <block type=\\"logic_compare\\" id=\\"Miut.v]o}Zi-8fFRf57?\\">\\n                            <field name=\\"OP\\">EQ</field>\\n                            <value name=\\"A\\">\\n                              <block type=\\"variables_get\\" id=\\"5uXMk):nkRB`e@[vR^MU\\">\\n                                <field name=\\"VAR\\" id=\\"Xv=?/_{i5i7(YfFJqUM2\\">rdalembert:totalUnits</field>\\n                              </block>\\n                            </value>\\n                            <value name=\\"B\\">\\n                              <block type=\\"logic_null\\" id=\\"sI,pe-V}g7%UrD}yaO]-\\"></block>\\n                            </value>\\n                          </block>\\n                        </value>\\n                        <statement name=\\"DO0\\">\\n                          <block type=\\"variables_set\\" id=\\"KfzolhEa4be[WC/cujS2\\">\\n                            <field name=\\"VAR\\" id=\\"Xv=?/_{i5i7(YfFJqUM2\\">rdalembert:totalUnits</field>\\n                            <value name=\\"VALUE\\">\\n                              <block type=\\"math_number\\" id=\\"I,lR9n;:Y@y4TDYsvILR\\">\\n                                <field name=\\"NUM\\">1</field>\\n                              </block>\\n                            </value>\\n                            <next>\\n                              <block type=\\"controls_if\\" id=\\"yOIJoEDK(]tm@p`4rs:K\\">\\n                                <value name=\\"IF0\\">\\n                                  <block type=\\"logic_compare\\" id=\\"%q^=wHdJI?ECS;iirm/=\\">\\n                                    <field name=\\"OP\\">EQ</field>\\n                                    <value name=\\"A\\">\\n                                      <block type=\\"variables_get\\" id=\\"u5S~=$X$$};VNrd7p`mk\\">\\n                                        <field name=\\"VAR\\" id=\\"4f|w2F((L4rk#3M-J;*A\\">rdalembert:totalProfit</field>\\n                                      </block>\\n                                    </value>\\n                                    <value name=\\"B\\">\\n                                      <block type=\\"logic_null\\" id=\\"2KhgAMKR;]Si!PF2otdt\\"></block>\\n                                    </value>\\n                                  </block>\\n                                </value>\\n                                <statement name=\\"DO0\\">\\n                                  <block type=\\"variables_set\\" id=\\"6,Kd2yJ/{;K!r{:]-OK%\\">\\n                                    <field name=\\"VAR\\" id=\\"4f|w2F((L4rk#3M-J;*A\\">rdalembert:totalProfit</field>\\n                                    <value name=\\"VALUE\\">\\n                                      <block type=\\"math_number\\" id=\\"m|p$tf]DUn)k3gtSqz@l\\">\\n                                        <field name=\\"NUM\\">0</field>\\n                                      </block>\\n                                    </value>\\n                                  </block>\\n                                </statement>\\n                              </block>\\n                            </next>\\n                          </block>\\n                        </statement>\\n                      </block>\\n                    </next>\\n                  </block>\\n                </next>\\n              </block>\\n            </next>\\n          </block>\\n        </next>\\n      </block>\\n    </statement>\\n    <value name=\\"RETURN\\">\\n      <block type=\\"math_arithmetic\\" id=\\"`sWTo)BFtM,_]P-gH0|A\\">\\n        <field name=\\"OP\\">MULTIPLY</field>\\n        <value name=\\"A\\">\\n          <shadow type=\\"math_number\\" id=\\"Nak1]_9j!DR5z:b`xkC:\\">\\n            <field name=\\"NUM\\">1</field>\\n          </shadow>\\n          <block type=\\"variables_get\\" id=\\"]`_XoChi[MQC1e_53ka1\\">\\n            <field name=\\"VAR\\" id=\\"u]E%rdqSO!DWc9s^8K]F\\">rdalembert:initialStake</field>\\n          </block>\\n        </value>\\n        <value name=\\"B\\">\\n          <shadow type=\\"math_number\\" id=\\"dtC4wKzE%D!LJlbIG3bF\\">\\n            <field name=\\"NUM\\">1</field>\\n          </shadow>\\n          <block type=\\"variables_get\\" id=\\"k[mRUqP,RdGS%LV.E1Ow\\">\\n            <field name=\\"VAR\\" id=\\"Xv=?/_{i5i7(YfFJqUM2\\">rdalembert:totalUnits</field>\\n          </block>\\n        </value>\\n      </block>\\n    </value>\\n  </block>\\n  <block type=\\"procedures_defreturn\\" id=\\"-9(QN`Sc2$IvQPr6M9QP\\" collapsed=\\"true\\" x=\\"0\\" y=\\"1755\\">\\n    <mutation xmlns=\\"http://www.w3.org/1999/xhtml\\">\\n      <arg name=\\"rdalembert:profit\\" varid=\\"j0[Hkhp,O~7]V~x(ah?j\\"></arg>\\n      <arg name=\\"rdalembert:resultIsWin\\" varid=\\"M2a6~ns#)Z8]U2O_/=Fv\\"></arg>\\n    </mutation>\\n    <field name=\\"NAME\\">Reverse D\'Alembert Trade Again After Purchase</field>\\n    <comment pinned=\\"false\\" h=\\"80\\" w=\\"160\\">Describe this function...</comment>\\n    <statement name=\\"STACK\\">\\n      <block type=\\"math_change\\" id=\\"u!a+KVi$vW/tDNlv}d8*\\">\\n        <field name=\\"VAR\\" id=\\"4f|w2F((L4rk#3M-J;*A\\">rdalembert:totalProfit</field>\\n        <value name=\\"DELTA\\">\\n          <shadow type=\\"math_number\\" id=\\"mNE`B^fM,w$z/tQrMjDK\\">\\n            <field name=\\"NUM\\">1</field>\\n          </shadow>\\n          <block type=\\"variables_get\\" id=\\"^;zE+8`|E~Z)yX}4jz[Q\\">\\n            <field name=\\"VAR\\" id=\\"j0[Hkhp,O~7]V~x(ah?j\\">rdalembert:profit</field>\\n          </block>\\n        </value>\\n        <next>\\n          <block type=\\"procedures_callnoreturn\\" id=\\"^peloVjG((*T3f4z`#T]\\">\\n            <mutation xmlns=\\"http://www.w3.org/1999/xhtml\\" name=\\"Reverse D\'Alembert Core Functionality\\">\\n              <arg name=\\"rdalembert:resultIsWin\\"></arg>\\n            </mutation>\\n            <data>y?vDuuwfiR,*DqC],*C:</data>\\n            <value name=\\"ARG0\\">\\n              <block type=\\"variables_get\\" id=\\"mEU~Lwa[4vtvc-BVeL=v\\">\\n                <field name=\\"VAR\\" id=\\"M2a6~ns#)Z8]U2O_/=Fv\\">rdalembert:resultIsWin</field>\\n              </block>\\n            </value>\\n            <next>\\n              <block type=\\"text_join\\" id=\\"u*Tuu$wzn+`g9718nKB,\\">\\n                <field name=\\"VARIABLE\\" id=\\"zd*r1aTHU,XoZt+m9A%.\\">Notification:totalProfit</field>\\n                <statement name=\\"STACK\\">\\n                  <block type=\\"text_statement\\" id=\\",Y._6wDiTPO/?!l$)J[]\\">\\n                    <value name=\\"TEXT\\">\\n                      <shadow type=\\"text\\" id=\\"#.AA]/=#Z{};UfbDEbD8\\">\\n                        <field name=\\"TEXT\\">Total Profit:</field>\\n                      </shadow>\\n                    </value>\\n                    <next>\\n                      <block type=\\"text_statement\\" id=\\"11t]yzL?doP]1o:S7b])\\">\\n                        <value name=\\"TEXT\\">\\n                          <shadow type=\\"text\\" id=\\"E=(s;6xAAx.E+xE8[vk.\\">\\n                            <field name=\\"TEXT\\"></field>\\n                          </shadow>\\n                          <block type=\\"variables_get\\" id=\\"nTwMdgmK7%bAW?D2$G@]\\">\\n                            <field name=\\"VAR\\" id=\\"4f|w2F((L4rk#3M-J;*A\\">rdalembert:totalProfit</field>\\n                          </block>\\n                        </value>\\n                      </block>\\n                    </next>\\n                  </block>\\n                </statement>\\n                <next>\\n                  <block type=\\"notify\\" id=\\"=`wDN,OSphaB,!K(.=oD\\">\\n                    <field name=\\"NOTIFICATION_TYPE\\">info</field>\\n                    <field name=\\"NOTIFICATION_SOUND\\">silent</field>\\n                    <value name=\\"MESSAGE\\">\\n                      <shadow type=\\"text\\" id=\\"S9XOkhv]?BgxFZugFU[S\\">\\n                        <field name=\\"TEXT\\">abc</field>\\n                      </shadow>\\n                      <block type=\\"variables_get\\" id=\\"nkmb6tEG(FJ4qciWuPj8\\">\\n                        <field name=\\"VAR\\" id=\\"zd*r1aTHU,XoZt+m9A%.\\">Notification:totalProfit</field>\\n                      </block>\\n                    </value>\\n                    <next>\\n                      <block type=\\"variables_set\\" id=\\"kLH22t@Ph%Q25LQFNC36\\">\\n                        <field name=\\"VAR\\" id=\\"2xtNcEBX/uqj0ZB#eE9u\\">rdalembert:tradeAgain</field>\\n                        <value name=\\"VALUE\\">\\n                          <block type=\\"logic_boolean\\" id=\\"UtfABuU}O=/87R8/(5l1\\">\\n                            <field name=\\"BOOL\\">FALSE</field>\\n                          </block>\\n                        </value>\\n                        <next>\\n                          <block type=\\"controls_if\\" id=\\"K2bGdJ|6.NE+}rp#fFUl\\">\\n                            <mutation xmlns=\\"http://www.w3.org/1999/xhtml\\" else=\\"1\\"></mutation>\\n                            <value name=\\"IF0\\">\\n                              <block type=\\"logic_compare\\" id=\\"?;)b,([^(0vx;n8!?{|j\\">\\n                                <field name=\\"OP\\">LT</field>\\n                                <value name=\\"A\\">\\n                                  <block type=\\"variables_get\\" id=\\"wGn8!7Nfjb|I~2uiX9jj\\">\\n                                    <field name=\\"VAR\\" id=\\"4f|w2F((L4rk#3M-J;*A\\">rdalembert:totalProfit</field>\\n                                  </block>\\n                                </value>\\n                                <value name=\\"B\\">\\n                                  <block type=\\"variables_get\\" id=\\"p0)5_HrMZJg2+mBoRir8\\">\\n                                    <field name=\\"VAR\\" id=\\"LbJ%gBkQn8lHX-LuY;OE\\">rdalembert:profitThreshold</field>\\n                                  </block>\\n                                </value>\\n                              </block>\\n                            </value>\\n                            <statement name=\\"DO0\\">\\n                              <block type=\\"controls_if\\" id=\\"CIyFhSh~?ef^q9bRU}Rf\\">\\n                                <mutation xmlns=\\"http://www.w3.org/1999/xhtml\\" else=\\"1\\"></mutation>\\n                                <value name=\\"IF0\\">\\n                                  <block type=\\"logic_compare\\" id=\\"WLLp,pGmFbhgdlO)!0!w\\">\\n                                    <field name=\\"OP\\">GT</field>\\n                                    <value name=\\"A\\">\\n                                      <block type=\\"variables_get\\" id=\\"n*.|[JyZ|H;G9Em*tn2s\\">\\n                                        <field name=\\"VAR\\" id=\\"4f|w2F((L4rk#3M-J;*A\\">rdalembert:totalProfit</field>\\n                                      </block>\\n                                    </value>\\n                                    <value name=\\"B\\">\\n                                      <block type=\\"math_single\\" id=\\"a;7.k@NhQ,Q1`Td:y.mW\\">\\n                                        <field name=\\"OP\\">NEG</field>\\n                                        <value name=\\"NUM\\">\\n                                          <shadow type=\\"math_number\\" id=\\"OYZ;-ngF4GDXc/A]4/e2\\">\\n                                            <field name=\\"NUM\\">9</field>\\n                                          </shadow>\\n                                          <block type=\\"variables_get\\" id=\\"OX{f55as#`nu`/bsrOgo\\">\\n                                            <field name=\\"VAR\\" id=\\"p:YOw{BN8)4wTUEgW?f;\\">rdalembert:lossThreshold</field>\\n                                          </block>\\n                                        </value>\\n                                      </block>\\n                                    </value>\\n                                  </block>\\n                                </value>\\n                                <statement name=\\"DO0\\">\\n                                  <block type=\\"variables_set\\" id=\\"L1m~{yYK:0@oxGk.m7gN\\">\\n                                    <field name=\\"VAR\\" id=\\"2xtNcEBX/uqj0ZB#eE9u\\">rdalembert:tradeAgain</field>\\n                                    <value name=\\"VALUE\\">\\n                                      <block type=\\"logic_boolean\\" id=\\"Wvp+F#9HQ#Ge|dK*qn-j\\">\\n                                        <field name=\\"BOOL\\">TRUE</field>\\n                                      </block>\\n                                    </value>\\n                                  </block>\\n                                </statement>\\n                                <statement name=\\"ELSE\\">\\n                                  <block type=\\"text_join\\" id=\\"ReFm_H*L+!_UOv$Gb*TP\\">\\n                                    <field name=\\"VARIABLE\\" id=\\"whzbmV.W]q3$46WdmwF5\\">Notification:lossThresholdReached</field>\\n                                    <statement name=\\"STACK\\">\\n                                      <block type=\\"text_statement\\" id=\\"d#WkjF)%,@WFhr4,,GV}\\">\\n                                        <value name=\\"TEXT\\">\\n                                          <shadow type=\\"text\\" id=\\"pxno~(^Pk2Gh}{C%=kZ;\\">\\n                                            <field name=\\"TEXT\\">Loss threshold triggered. Total Loss:</field>\\n                                          </shadow>\\n                                        </value>\\n                                        <next>\\n                                          <block type=\\"text_statement\\" id=\\"Nz.%TL#{Wcvlf8ceRhn8\\">\\n                                            <value name=\\"TEXT\\">\\n                                              <shadow type=\\"text\\" id=\\"7x`Xcr.cErL7al;.iW{9\\">\\n                                                <field name=\\"TEXT\\"></field>\\n                                              </shadow>\\n                                              <block type=\\"math_single\\" id=\\"cpQ#f,}RhOh+R4jMXRFb\\">\\n                                                <field name=\\"OP\\">NEG</field>\\n                                                <value name=\\"NUM\\">\\n                                                  <shadow type=\\"math_number\\" id=\\"u2qp6myUl(O~j:TxnlTd\\">\\n                                                    <field name=\\"NUM\\">9</field>\\n                                                  </shadow>\\n                                                  <block type=\\"variables_get\\" id=\\"Pg!,*K)D3hlFvN/Xb(1S\\">\\n                                                    <field name=\\"VAR\\" id=\\"4f|w2F((L4rk#3M-J;*A\\">rdalembert:totalProfit</field>\\n                                                  </block>\\n                                                </value>\\n                                              </block>\\n                                            </value>\\n                                          </block>\\n                                        </next>\\n                                      </block>\\n                                    </statement>\\n                                    <next>\\n                                      <block type=\\"notify\\" id=\\"7C;Ck+=5?J1h^XlGG~:~\\">\\n                                        <field name=\\"NOTIFICATION_TYPE\\">error</field>\\n                                        <field name=\\"NOTIFICATION_SOUND\\">silent</field>\\n                                        <value name=\\"MESSAGE\\">\\n                                          <shadow type=\\"text\\" id=\\"jdr-8]d@8^:Nu1g6z2m~\\">\\n                                            <field name=\\"TEXT\\">abc</field>\\n                                          </shadow>\\n                                          <block type=\\"variables_get\\" id=\\"bO?{JEDrVv;@LTwmEAHO\\">\\n                                            <field name=\\"VAR\\" id=\\"whzbmV.W]q3$46WdmwF5\\">Notification:lossThresholdReached</field>\\n                                          </block>\\n                                        </value>\\n                                        <next>\\n                                          <block type=\\"text_print\\" id=\\"wI]YH_.XpaEROR}k)0g|\\">\\n                                            <value name=\\"TEXT\\">\\n                                              <shadow type=\\"text\\" id=\\"j9:63Xcpx`5kj4M.1Q|Y\\">\\n                                                <field name=\\"TEXT\\">abc</field>\\n                                              </shadow>\\n                                              <block type=\\"variables_get\\" id=\\"ng1HrQ!?Y8G8PvEg;ws4\\">\\n                                                <field name=\\"VAR\\" id=\\"whzbmV.W]q3$46WdmwF5\\">Notification:lossThresholdReached</field>\\n                                              </block>\\n                                            </value>\\n                                          </block>\\n                                        </next>\\n                                      </block>\\n                                    </next>\\n                                  </block>\\n                                </statement>\\n                              </block>\\n                            </statement>\\n                            <statement name=\\"ELSE\\">\\n                              <block type=\\"text_join\\" id=\\"(@BE@:V.qU.M9c}8L]!;\\">\\n                                <field name=\\"VARIABLE\\" id=\\"J$E%~31mmrWttoKAlv=m\\">Notification:profitThresholdReached</field>\\n                                <statement name=\\"STACK\\">\\n                                  <block type=\\"text_statement\\" id=\\"#=ZLv7Cbd*I=`oZ[T3]r\\">\\n                                    <value name=\\"TEXT\\">\\n                                      <shadow type=\\"text\\" id=\\"Sjx%^QbYJA{``QU)]{[1\\">\\n                                        <field name=\\"TEXT\\">Profit threshold triggered. Total Profit:</field>\\n                                      </shadow>\\n                                    </value>\\n                                    <next>\\n                                      <block type=\\"text_statement\\" id=\\"VJ8B,YCYzR0[irM(=vt~\\">\\n                                        <value name=\\"TEXT\\">\\n                                          <shadow type=\\"text\\" id=\\"$]qQ.r9UL]qXT,(O9:Uz\\">\\n                                            <field name=\\"TEXT\\"></field>\\n                                          </shadow>\\n                                          <block type=\\"variables_get\\" id=\\"j.EBQQU^}ed{1/4Wj7cu\\">\\n                                            <field name=\\"VAR\\" id=\\"4f|w2F((L4rk#3M-J;*A\\">rdalembert:totalProfit</field>\\n                                          </block>\\n                                        </value>\\n                                      </block>\\n                                    </next>\\n                                  </block>\\n                                </statement>\\n                                <next>\\n                                  <block type=\\"notify\\" id=\\"_3)VMU8~kR[X(yu%SlDc\\">\\n                                    <field name=\\"NOTIFICATION_TYPE\\">success</field>\\n                                    <field name=\\"NOTIFICATION_SOUND\\">silent</field>\\n                                    <value name=\\"MESSAGE\\">\\n                                      <shadow type=\\"text\\" id=\\"c0P9:T*}4G/WL.zETK*9\\">\\n                                        <field name=\\"TEXT\\">abc</field>\\n                                      </shadow>\\n                                      <block type=\\"variables_get\\" id=\\"_9MC46%1Hrho2H$G_Pto\\">\\n                                        <field name=\\"VAR\\" id=\\"J$E%~31mmrWttoKAlv=m\\">Notification:profitThresholdReached</field>\\n                                      </block>\\n                                    </value>\\n                                    <next>\\n                                      <block type=\\"text_print\\" id=\\")KWOJSuc5;he}BJl7_aR\\">\\n                                        <value name=\\"TEXT\\">\\n                                          <shadow type=\\"text\\" id=\\"(%uJ4o%#R.I(zl/VdVhK\\">\\n                                            <field name=\\"TEXT\\">abc</field>\\n                                          </shadow>\\n                                          <block type=\\"variables_get\\" id=\\"4}J$wZt/W)]RU:u`:8r8\\">\\n                                            <field name=\\"VAR\\" id=\\"J$E%~31mmrWttoKAlv=m\\">Notification:profitThresholdReached</field>\\n                                          </block>\\n                                        </value>\\n                                      </block>\\n                                    </next>\\n                                  </block>\\n                                </next>\\n                              </block>\\n                            </statement>\\n                          </block>\\n                        </next>\\n                      </block>\\n                    </next>\\n                  </block>\\n                </next>\\n              </block>\\n            </next>\\n          </block>\\n        </next>\\n      </block>\\n    </statement>\\n    <value name=\\"RETURN\\">\\n      <block type=\\"variables_get\\" id=\\"eL/`A-rq|tz%h[CcAM|;\\">\\n        <field name=\\"VAR\\" id=\\"2xtNcEBX/uqj0ZB#eE9u\\">rdalembert:tradeAgain</field>\\n      </block>\\n    </value>\\n  </block>\\n</xml>");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/xml/accumulators_reverse_dalembert_on_stat_reset.xml\n'
                );

                /***/
            },
    },
]);
